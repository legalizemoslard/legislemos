{"version":3,"sources":["webpack:///./app/services/ideaCustomFieldsSchemas.ts","webpack:///./app/services/ideaImages.ts","webpack:///./app/components/UI/TopicsPicker/index.tsx","webpack:///./app/components/UI/FormComponents/WithIcons.tsx","webpack:///./app/components/IdeaForm/messages.ts","webpack:///./app/components/UI/UserSelect/index.tsx","webpack:///./app/components/IdeaForm/index.tsx","webpack:///./app/components/UI/TopicsPicker/messages.ts","webpack:///./app/utils/locationTools.ts"],"names":["projectId","streamParams","apiEndpoint","API_PATH","streams","get","ideaId","imageId","delete","base64","ordering","bodyData","image","add","ideaImage","ideaByIdStream","fetch","TopicsContainer","styled","div","isRtl","TopicSwitch","button","colors","label","fontSizes","small","separationDark","theme","colorSecondary","darken","lighten","TopicsPicker","memo","onChange","onBlur","selectedTopicIds","localize","availableTopics","className","setRef","selectedTopics","topicIds","removeFocus","useCallback","event","preventDefault","isNilOrError","numberOfSelectedTopics","length","selectedTopicNames","filter","topic","map","attributes","title_multiloc","join","index","topicId","isSelected","includes","id","key","onClick","stopPropagation","newTopics","i","lastIndexOf","push","splice","item","onMouseDown","ref","undefined","disabled","value","ScreenReaderOnly","FormattedMessage","messages","values","LabelContainer","StyledIcon","Icon","FormLabelWithIcon","labelMessage","labelMessageValues","subtextMessage","subtextMessageValues","htmlFor","children","hidden","noSpace","iconName","iconAriaHidden","FormLabelStyled","name","ariaHidden","FormSubtextStyled","Spacer","defineMessages","titleEmptyError","defaultMessage","titleLengthError","descriptionEmptyError","descriptionLengthError","title","descriptionTitle","topicsTitle","locationTitle","locationPlaceholder","imageUploadTitle","budgetLabel","noBudgetError","budgetIsZeroError","budgetIsTooBig","proposedBudgetLabel","noproposedBudgetError","fileAttachmentsTitle","formGeneralSectionTitle","optionFormGeneralSectionTitle","projectFormGeneralSectionTitle","questionFormGeneralSectionTitle","issueFormGeneralSectionTitle","contributionFormGeneralSectionTitle","formDetailsSectionTitle","noTopicsError","noLocationError","noImageError","noAttachmentsError","otherFilesTitle","profanityError","guidelinesLinkText","author","authorPlaceholder","AvatarImage","img","AvatarIcon","UserOption","UserSelect","users","placeholder","inputId","canLoadMore","lastPage","currentPage","selectedUser","userId","usersList","Array","isArray","handleInputChange","debounce","searchTerm","onChangeSearchTerm","handleLoadMore","onLoadMore","Avatar","user","find","avatarSrc","avatar","medium","src","alt","handleClear","options","isSearchable","blurInputOnSelect","backspaceRemovesValue","menuShouldScrollIntoView","isClearable","filterOption","getOptionValue","option","getOptionLabel","processing","isLoading","icon","buttonStyle","padding","last_name","first_name","email","action","onInputChange","isDisabled","menuPlacement","styles","selectStyles","onMenuScrollToBottom","onMenuOpen","Data","adopt","pageSize","sort","props","dataProps","Form","form","StyledFormSection","FormSection","media","smallerThanMinTablet","largePhone","FormElement","IdeaForm","description","address","budget","proposedBudget","imageFile","remoteIdeaFiles","authUser","authorId","ideaFiles","setState","titleError","onTitleChange","isDescriptionEmpty","descriptionError","onDescriptionChange","Number","budgetError","proposedBudgetError","element","titleInputElement","descriptionElement","intl","formatMessage","state","ideaCustomFieldsSchemas","locale","isFieldRequired","imageFiles","pbContext","validateTitle","validateDescription","topicsError","validateTopics","locationError","validateLocation","imageError","validateImage","attachmentsError","validateAttachments","validateproposedBudget","pbMaxBudget","max_budget","type","pastPresentOrFuture","start_at","end_at","align","offset","duration","setTimeout","focus","ideaFileToAdd","ideaFileToRemove","ideaFilesToRemove","ideaFile","validate","output","onSubmit","fieldCode","json_schema_multiloc","required","properties","ui_schema_multiloc","tenant","projects","subscriptions","this","locale$","localeStream","observable","tenant$","currentAppConfigurationStream","project$","projectByIdStream","ideaCustomFieldsSchemas$","ideaFormSchemaStream","pbContext$","pipe","switchMap","project","data","participation_method","of","process_type","phasesStream","phases","phase","mapPropsToState","combineLatest","subscribe","eventEmitter","observeEvent","handleOnSubmit","prevProps","forEach","subscription","unsubscribe","pbEnabled","topics","hasTitleProfanityError","hasDescriptionProfanityError","ideaAuthorChangeEnabled","mapsLoaded","window","googleMaps","tenantCurrency","settings","core","currency","topicsEnabled","isFieldEnabled","locationEnabled","attachmentsEnabled","proposedBudgetEnabled","showPBBudget","showTopics","showLocation","showproposedBudget","filteredTopics","inputTerm","getInputTerm","FormSectionTitle","message","getInputTermMessage","idea","question","issue","contribution","FormLabel","optional","subtext","subtextSupportsHtml","Input","error","handleTitleOnChange","handleTitleInputSetRef","autoFocus","bowser","mobile","maxCharCount","autocomplete","text","guidelinesLink","to","target","isAdmin","handleAuthorChange","body","handleDescriptionOnChange","handleDescriptionSetRef","hasError","withCTAButton","context","maxBudget","String","handleBudgetOnChange","proposed_budget","min","handleproposedBudgetOnChange","topic_ids","handleTopicsOnChange","location","LocationInput","handleLocationOnChange","images","imagePreviewRatio","acceptedFileTypes","onAdd","handleUploadOnAdd","onRemove","handleUploadOnRemove","attachments","onFileAdd","handleIdeaFileOnAdd","onFileRemove","handleIdeaFileOnRemove","files","PureComponent","render","IdeaFormWitHOCs","withRouter","injectIntl","inputProps","Promise","resolve","google","maps","Geocoder","geocode","results","status","response","GeocoderStatus","OK","lat","geometry","lng","isNumber","coordinates","formattedAddress","formatted_address"],"mappings":"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","file":"14.28e10e999faf80304d64.chunk.js","sourcesContent":["import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\n\nexport type CustomFieldCodes =\n  | 'title'\n  | 'body'\n  | 'topic_ids'\n  | 'location'\n  | 'images'\n  | 'attachments'\n  | 'proposed_budget';\n\nexport interface JSONSchemaObject {\n  title: string;\n  description: string;\n  type: 'string' | 'array';\n  uniqueItems?: boolean;\n  minItems?: number;\n  items?: {\n    type: 'string' | 'array';\n    format?: 'data-url' | 'string';\n  };\n}\n\nexport interface UISchemaObject {\n  'ui:widget'?: string;\n}\n\nexport interface IIdeaFormSchemas {\n  json_schema_multiloc: {\n    [locale: string]: {\n      type: 'object';\n      additionalProperties: boolean;\n      properties: {\n        title: JSONSchemaObject;\n        body: JSONSchemaObject;\n        topic_ids: JSONSchemaObject;\n        proposed_budget: JSONSchemaObject;\n        location: JSONSchemaObject;\n        images: JSONSchemaObject;\n        attachments: JSONSchemaObject;\n      };\n      required: string[];\n    };\n  };\n  ui_schema_multiloc: {\n    [locale: string]: {\n      title: UISchemaObject;\n      body: UISchemaObject;\n      topic_ids: UISchemaObject;\n      proposed_budget: UISchemaObject;\n      location: UISchemaObject;\n      images: UISchemaObject;\n      attachments: UISchemaObject;\n      'ui:order': string[];\n    };\n  };\n}\n\nexport function ideaFormSchemaStream(\n  projectId: string,\n  streamParams: IStreamParams | null = null\n) {\n  const apiEndpoint = `${API_PATH}/projects/${projectId}/custom_fields/schema`;\n  return streams.get<IIdeaFormSchemas>({\n    apiEndpoint,\n    ...streamParams,\n  });\n}\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { ideaByIdStream } from 'services/ideas';\nimport { ImageSizes } from 'typings';\n\nexport interface IIdeaImageData {\n  id: string;\n  type: string;\n  attributes: {\n    versions: ImageSizes;\n    ordering: number;\n    created_at: string;\n    updated_at: string;\n  };\n}\n\nexport interface IIdeaImage {\n  data: IIdeaImageData;\n}\n\nexport interface IIdeaImages {\n  data: IIdeaImageData[];\n}\n\nexport function ideaImageStream(ideaId: string, imageId: string) {\n  const apiEndpoint = `${API_PATH}/ideas/${ideaId}/images/${imageId}`;\n  return streams.get<IIdeaImage>({ apiEndpoint });\n}\n\nexport function ideaImagesStream(\n  ideaId: string,\n  streamParams: IStreamParams | null = null\n) {\n  const apiEndpoint = `${API_PATH}/ideas/${ideaId}/images`;\n  return streams.get<IIdeaImages>({ apiEndpoint, ...streamParams });\n}\n\nexport function deleteIdeaImage(ideaId: string, imageId: string) {\n  return streams.delete(\n    `${API_PATH}/ideas/${ideaId}/images/${imageId}`,\n    imageId\n  );\n}\n\nexport async function addIdeaImage(\n  ideaId: string,\n  base64: string,\n  ordering: number | null = null\n) {\n  const apiEndpoint = `${API_PATH}/ideas/${ideaId}/images`;\n  const bodyData = {\n    image: {\n      ordering,\n      image: base64,\n    },\n  };\n\n  const ideaImage = await streams.add<IIdeaImage>(apiEndpoint, bodyData);\n  await ideaByIdStream(ideaId).fetch();\n  return ideaImage;\n}\n","import React, { memo, useCallback, MouseEvent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n// styles\nimport styled from 'styled-components';\nimport { colors, fontSizes, isRtl } from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { darken, lighten } from 'polished';\n\n// types\nimport { ITopicData } from 'services/topics';\n\n// intl\nimport T from 'components/T';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// hooks\nimport useTopics from 'hooks/useTopics';\n\nconst TopicsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n\n  ${isRtl`\n    justify-content: flex-end;\n  `}\n`;\n\nconst TopicSwitch = styled.button`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  line-height: normal;\n  text-align: left;\n  display: inline-block;\n  padding-left: 18px;\n  padding-right: 18px;\n  padding-top: 11px;\n  padding-bottom: 11px;\n  margin: 0px;\n  margin-right: 6px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  user-select: none;\n  border: solid 1px ${colors.separationDark};\n  border-radius: 5px;\n  transition: all 80ms ease-out;\n\n  &:not(.selected):not(:disabled) {\n    &:hover {\n      color: ${({ theme }) => theme.colorSecondary};\n      border-color: ${({ theme }) => theme.colorSecondary};\n    }\n  }\n\n  &.selected {\n    color: #fff;\n    background: ${({ theme }) => theme.colorSecondary};\n    border-color: ${({ theme }) => theme.colorSecondary};\n\n    &:hover {\n      background: ${({ theme }) => darken(0.15, theme.colorSecondary)};\n      border-color: ${({ theme }) => darken(0.15, theme.colorSecondary)};\n    }\n  }\n\n  &:disabled {\n    color: ${({ theme }) => lighten(0.4, theme.colors.label)};\n    border-color: ${({ theme }) => lighten(0.45, theme.colors.label)};\n    cursor: not-allowed;\n  }\n`;\n\nexport interface InputProps {\n  onChange: (tocisIds: string[]) => void;\n  onBlur?: () => void;\n  selectedTopicIds: string[];\n  id?: string;\n  className?: string;\n  setRef?: (element: HTMLButtonElement) => void;\n  availableTopics: ITopicData[];\n}\n\ninterface Props extends InputProps {}\n\nconst TopicsPicker = memo(\n  ({\n    onChange,\n    onBlur,\n    selectedTopicIds,\n    localize,\n    availableTopics,\n    className,\n    setRef,\n  }: Props & InjectedLocalized) => {\n    const selectedTopics = useTopics({ topicIds: selectedTopicIds });\n\n    const handleOnChange = (topicId: string) => (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      const newTopics = [...selectedTopicIds];\n\n      if (!selectedTopicIds) {\n        onChange([topicId]);\n      } else {\n        const i = newTopics.lastIndexOf(topicId);\n        const topicNotSelectedYet = i === -1;\n\n        if (topicNotSelectedYet) {\n          newTopics.push(topicId);\n        } else {\n          newTopics.splice(i, 1);\n        }\n\n        onChange(newTopics);\n      }\n    };\n\n    const removeFocus = useCallback((event: MouseEvent<HTMLElement>) => {\n      event.preventDefault();\n    }, []);\n\n    if (!isNilOrError(availableTopics)) {\n      const numberOfSelectedTopics = selectedTopicIds.length;\n      const selectedTopicNames = !isNilOrError(selectedTopics)\n        ? selectedTopics\n            .filter((topic) => !isNilOrError(topic))\n            .map((topic: ITopicData) =>\n              localize(topic.attributes.title_multiloc)\n            )\n            .join(', ')\n        : '';\n      return (\n        <>\n          <TopicsContainer\n            onBlur={onBlur}\n            className={`${className} e2e-topics-picker`}\n          >\n            {availableTopics.map((topic, index) => {\n              const isSelected = selectedTopicIds.includes(topic.id);\n\n              return (\n                <TopicSwitch\n                  key={topic.id}\n                  onClick={handleOnChange(topic.id)}\n                  className={[\n                    'e2e-topics-picker-item',\n                    isSelected ? 'selected' : null,\n                  ]\n                    .filter((item) => item)\n                    .join(' ')}\n                  onMouseDown={removeFocus}\n                  ref={index === 0 ? setRef : undefined}\n                  disabled={false}\n                >\n                  <T value={topic.attributes.title_multiloc} />\n                </TopicSwitch>\n              );\n            })}\n          </TopicsContainer>\n          <ScreenReaderOnly aria-live=\"polite\">\n            <FormattedMessage\n              {...messages.selectedTopics}\n              values={{ numberOfSelectedTopics, selectedTopicNames }}\n            />\n          </ScreenReaderOnly>\n        </>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectLocalize(TopicsPicker);\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport { Icon, IconNames } from 'cl2-component-library';\nimport { FormLabelProps, FormLabelStyled, FormSubtextStyled, Spacer } from '.';\n\ninterface FormLabelWithIconProps extends FormLabelProps {\n  iconName: IconNames;\n  iconAriaHidden?: boolean;\n}\n\nconst LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  margin-left: 10px;\n`;\n\nexport const FormLabelWithIcon = memo(\n  ({\n    labelMessage,\n    labelMessageValues,\n    subtextMessage,\n    subtextMessageValues,\n    id,\n    htmlFor,\n    children,\n    className,\n    hidden,\n    noSpace,\n    iconName,\n    iconAriaHidden,\n  }: FormLabelWithIconProps) => (\n    <FormLabelStyled\n      id={id}\n      className={[className, hidden ? 'invisible' : null]\n        .filter((item) => item)\n        .join(' ')}\n      htmlFor={htmlFor}\n    >\n      <LabelContainer>\n        <FormattedMessage {...labelMessage} values={labelMessageValues} />\n        <StyledIcon name={iconName} ariaHidden={iconAriaHidden} />\n      </LabelContainer>\n      {subtextMessage && (\n        <FormSubtextStyled>\n          <FormattedMessage {...subtextMessage} values={subtextMessageValues} />\n        </FormSubtextStyled>\n      )}\n      {!noSpace && <Spacer />}\n      {children}\n    </FormLabelStyled>\n  )\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  titleEmptyError: {\n    id: 'app.components.IdeaForm.titleEmptyError',\n    defaultMessage: 'Please provide a title',\n  },\n  titleLengthError: {\n    id: 'app.components.IdeaForm.titleLengthError',\n    defaultMessage: 'The idea title must be at least 10 characters long',\n  },\n  descriptionEmptyError: {\n    id: 'app.components.IdeaForm.descriptionEmptyError',\n    defaultMessage: 'Please provide a description',\n  },\n  descriptionLengthError: {\n    id: 'app.components.IdeaForm.descriptionLengthError',\n    defaultMessage: 'The idea description must be at least 30 characters long',\n  },\n  title: {\n    id: 'app.components.IdeaForm.title',\n    defaultMessage: 'Title',\n  },\n  descriptionTitle: {\n    id: 'app.components.IdeaForm.descriptionTitle',\n    defaultMessage: 'Description',\n  },\n  topicsTitle: {\n    id: 'app.components.IdeaForm.topicsTitle',\n    defaultMessage: 'Topics',\n  },\n  locationTitle: {\n    id: 'app.components.IdeaForm.locationTitle',\n    defaultMessage: 'Location',\n  },\n  locationPlaceholder: {\n    id: 'app.components.IdeaForm.locationPlaceholder',\n    defaultMessage: 'Enter a location for your idea',\n  },\n  imageUploadTitle: {\n    id: 'app.components.IdeaForm.imageUploadTitle',\n    defaultMessage: 'Image',\n  },\n  budgetLabel: {\n    id: 'app.container.IdeaForm.budgetLabel',\n    defaultMessage: 'Budget (in {currency}, max. {maxBudget})',\n  },\n  noBudgetError: {\n    id: 'app.container.IdeaForm.noBudgetError',\n    defaultMessage: 'Please provide a budget',\n  },\n  budgetIsZeroError: {\n    id: 'app.container.IdeaForm.budgetIsZeroError',\n    defaultMessage: 'Please provide a budget larger than 0',\n  },\n  budgetIsTooBig: {\n    id: 'app.container.IdeaForm.budgetIsTooBig',\n    defaultMessage: 'The provided budget is too big',\n  },\n  proposedBudgetLabel: {\n    id: 'app.container.IdeaForm.proposedBudgetLabel',\n    defaultMessage: 'Proposed budget in {currency}',\n  },\n  noproposedBudgetError: {\n    id: 'app.container.IdeaForm.noproposedBudgetError',\n    defaultMessage: 'Please provide a budget estimation',\n  },\n  fileAttachmentsTitle: {\n    id: 'app.container.IdeaForm.fileAttachmentsTitle',\n    defaultMessage: 'Attachments',\n  },\n  formGeneralSectionTitle: {\n    id: 'app.components.IdeaForm.formGeneralSectionTitle',\n    defaultMessage: 'What is your idea?',\n  },\n  optionFormGeneralSectionTitle: {\n    id: 'app.components.IdeaForm.optionFormGeneralSectionTitle',\n    defaultMessage: 'What is your option?',\n  },\n  projectFormGeneralSectionTitle: {\n    id: 'app.components.IdeaForm.projectFormGeneralSectionTitle',\n    defaultMessage: 'What is your project?',\n  },\n  questionFormGeneralSectionTitle: {\n    id: 'app.components.IdeaForm.questionFormGeneralSectionTitle',\n    defaultMessage: 'What is your question?',\n  },\n  issueFormGeneralSectionTitle: {\n    id: 'app.components.IdeaForm.issueFormGeneralSectionTitle',\n    defaultMessage: 'What is your issue?',\n  },\n  contributionFormGeneralSectionTitle: {\n    id: 'app.components.IdeaForm.contributionFormGeneralSectionTitle',\n    defaultMessage: 'What is your contribution?',\n  },\n  formDetailsSectionTitle: {\n    id: 'app.components.IdeaForm.formDetailsSectionTitle',\n    defaultMessage: 'Details',\n  },\n  noTopicsError: {\n    id: 'app.components.IdeaForm.noTopicsError',\n    defaultMessage: 'Please select a topic',\n  },\n  noLocationError: {\n    id: 'app.components.IdeaForm.noLocationError',\n    defaultMessage: 'Please enter a location',\n  },\n  noImageError: {\n    id: 'app.components.IdeaForm.noImageError',\n    defaultMessage: 'Please add an image',\n  },\n  noAttachmentsError: {\n    id: 'app.components.IdeaForm.noAttachmentsError',\n    defaultMessage: 'Please add an attachment',\n  },\n  otherFilesTitle: {\n    id: 'app.components.IdeaForm.otherFilesTitle',\n    defaultMessage: 'Other files',\n  },\n  profanityError: {\n    id: 'app.components.IdeaForm.profanityError',\n    defaultMessage:\n      'You may have used one or more words that are considered profanity by {guidelinesLink}. Please alter your text to remove any profanities that might be present.',\n  },\n  guidelinesLinkText: {\n    id: 'app.components.IdeaForm.guidelinesLinkText',\n    defaultMessage: 'our guidelines',\n  },\n  author: {\n    id: 'app.components.IdeaForm.author',\n    defaultMessage: 'Author',\n  },\n  authorPlaceholder: {\n    id: 'app.components.IdeaForm.authorPlaceholder',\n    defaultMessage: 'Start typing to search by user email or name...',\n  },\n});\n","import React, { ReactElement } from 'react';\nimport { adopt } from 'react-adopt';\nimport GetUsers, { GetUsersChildProps } from 'resources/GetUsers';\nimport ReactSelect, { OptionTypeBase } from 'react-select';\nimport selectStyles from 'components/UI/MultipleSelect/styles';\nimport { Icon } from 'cl2-component-library';\nimport { debounce } from 'lodash-es';\nimport styled from 'styled-components';\nimport { IUserData } from 'services/users';\nimport useUser from 'hooks/useUser';\nimport Button from 'components/UI/Button';\n\ninterface DataProps {\n  users: GetUsersChildProps;\n}\n\ninterface Props {\n  onChange: (id?: string) => void;\n  value: string;\n  placeholder?: string;\n  disabled?: boolean;\n  className?: string;\n  id: string;\n  inputId: string;\n}\n\nexport const AvatarImage = styled.img`\n  flex: 0 0 30px;\n  width: 30px;\n  height: 30px;\n  fill: #596b7a;\n  padding: 15px;\n  border-radius: 50%;\n  background: white;\n  margin-right: 0.5rem;\n`;\n\nconst AvatarIcon = styled(Icon)`\n  flex: 0 0 30px;\n  width: 30px;\n  height: 30px;\n  background: white;\n  border-radius: 50%;\n  fill: #596b7a;\n  margin-right: 0.5rem;\n`;\n\nconst UserOption = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst UserSelect = ({\n  users,\n  onChange,\n  value,\n  placeholder,\n  disabled = false,\n  className,\n  id,\n  inputId,\n}: DataProps & Props): ReactElement => {\n  const canLoadMore = users.lastPage !== users.currentPage;\n  const selectedUser = useUser({ userId: value });\n  const usersList: IUserData[] = Array.isArray(users.usersList)\n    ? users.usersList\n    : [];\n\n  const handleChange = (option: OptionTypeBase, { action }) => {\n    if (action === 'clear') {\n      handleClear();\n    } else if (action === 'select-option' && option.value !== 'loadMore') {\n      onChange(option.id);\n    } else if (action === 'select-option' && option.value === 'loadMore') {\n      handleLoadMore();\n    }\n  };\n\n  const handleInputChange = debounce((searchTerm) => {\n    users.onChangeSearchTerm(searchTerm);\n  }, 500);\n\n  const handleMenuScrollToBottom = () => {\n    handleLoadMore();\n  };\n\n  const handleLoadMore = () => {\n    users.onLoadMore();\n  };\n\n  const Avatar = ({ userId }) => {\n    const user = usersList.find((user) => user.id === userId);\n    const avatarSrc =\n      user?.attributes?.avatar?.medium || user?.attributes?.avatar?.small;\n    return (\n      <>\n        {avatarSrc ? (\n          <AvatarImage className=\"avatarImage\" src={avatarSrc} alt=\"\" />\n        ) : (\n          <AvatarIcon className=\"avatarIcon\" name=\"user\" />\n        )}\n      </>\n    );\n  };\n\n  const getOptionLabel = (option: OptionTypeBase): any => {\n    if (option.value === 'loadMore' && canLoadMore) {\n      return (\n        <Button\n          onClick={handleLoadMore}\n          processing={users.isLoading}\n          icon=\"showMore\"\n          buttonStyle=\"text\"\n          padding=\"0px\"\n        />\n      );\n    } else if (option.attributes) {\n      return (\n        <UserOption>\n          <Avatar userId={option.value} />\n          {option.attributes.last_name}, {option.attributes.first_name} (\n          {option.attributes.email})\n        </UserOption>\n      );\n    }\n  };\n\n  const handleClear = () => {\n    onChange();\n  };\n\n  const getOptionId = (option: OptionTypeBase) => option.id;\n\n  const filterOption = () => true;\n\n  const options = canLoadMore\n    ? [...usersList, { value: 'loadMore' }]\n    : usersList;\n\n  return (\n    <ReactSelect\n      id={id}\n      inputId={inputId}\n      className={className}\n      isSearchable\n      blurInputOnSelect\n      backspaceRemovesValue={false}\n      menuShouldScrollIntoView={false}\n      isClearable\n      filterOption={filterOption}\n      value={selectedUser}\n      placeholder={placeholder as string}\n      options={options}\n      getOptionValue={getOptionId}\n      getOptionLabel={getOptionLabel}\n      onChange={handleChange}\n      onInputChange={handleInputChange}\n      isDisabled={disabled}\n      menuPlacement=\"auto\"\n      styles={selectStyles}\n      onMenuScrollToBottom={handleMenuScrollToBottom}\n      onMenuOpen={handleClear}\n    />\n  );\n};\n\nconst Data = adopt<DataProps>({\n  users: <GetUsers pageSize={5} sort=\"last_name\" />,\n});\n\nexport default (props) => (\n  <Data>{(dataProps) => <UserSelect {...dataProps} {...props} />}</Data>\n);\n","import React, { PureComponent } from 'react';\nimport { Subscription, combineLatest, of, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport shallowCompare from 'utils/shallowCompare';\nimport { adopt } from 'react-adopt';\n\n// libraries\nimport scrollToComponent from 'react-scroll-to-component';\nimport bowser from 'bowser';\n\n// components\nimport { Input, LocationInput } from 'cl2-component-library';\nimport QuillEditor from 'components/UI/QuillEditor';\nimport ImagesDropzone from 'components/UI/ImagesDropzone';\nimport UserSelect from 'components/UI/UserSelect';\nimport Error from 'components/UI/Error';\nimport HasPermission from 'components/HasPermission';\nimport FileUploader from 'components/UI/FileUploader';\nimport {\n  FormSection,\n  FormSectionTitle,\n  FormLabel,\n} from 'components/UI/FormComponents';\nimport Link from 'utils/cl-router/Link';\n\n// services\nimport { localeStream } from 'services/locale';\nimport {\n  currentAppConfigurationStream,\n  IAppConfiguration,\n} from 'services/appConfiguration';\nimport { ITopicData } from 'services/topics';\nimport { projectByIdStream, IProject, IProjectData } from 'services/projects';\nimport { phasesStream, IPhaseData } from 'services/phases';\nimport {\n  ideaFormSchemaStream,\n  IIdeaFormSchemas,\n  CustomFieldCodes,\n} from 'services/ideaCustomFieldsSchemas';\n\n// resources\nimport GetFeatureFlag, {\n  GetFeatureFlagChildProps,\n} from 'resources/GetFeatureFlag';\nimport GetTopics, { GetTopicsChildProps } from 'resources/GetTopics';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhases, { GetPhasesChildProps } from 'resources/GetPhases';\n\n// utils\nimport eventEmitter from 'utils/eventEmitter';\nimport { pastPresentOrFuture } from 'utils/dateUtils';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport messages from './messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// typings\nimport { IOption, UploadFile, Locale } from 'typings';\n\n// style\nimport styled from 'styled-components';\nimport TopicsPicker from 'components/UI/TopicsPicker';\nimport { FormLabelWithIcon } from 'components/UI/FormComponents/WithIcons';\nimport { media } from 'utils/styleUtils';\nimport { getInputTerm } from 'services/participationContexts';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport { isAdmin } from 'services/permissions/roles';\nimport { IUserData } from 'services/users';\n\nconst Form = styled.form`\n  width: 100%;\n  display: 'flex';\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledFormSection = styled(FormSection)`\n  max-width: 100%;\n\n  ${media.smallerThanMinTablet`\n    padding-left: 25px;\n    padding-right: 25px;\n  `}\n\n  ${media.largePhone`\n    padding-left: 18px;\n    padding-right: 18px;\n  `}\n`;\n\nconst FormElement = styled.div`\n  width: 100%;\n  margin-bottom: 40px;\n`;\n\nexport interface IIdeaFormOutput {\n  title: string;\n  description: string;\n  selectedTopics: string[];\n  address: string;\n  budget: number | null;\n  proposedBudget: number | null;\n  imageFile: UploadFile[];\n  ideaFiles: UploadFile[];\n  ideaFilesToRemove: UploadFile[];\n  authorId: string | null;\n}\n\ninterface InputProps {\n  projectId: string;\n  title: string | null;\n  description: string | null;\n  selectedTopics: string[];\n  budget: number | null;\n  proposedBudget: number | null;\n  address: string;\n  imageFile: UploadFile[];\n  onSubmit: (arg: IIdeaFormOutput) => void;\n  remoteIdeaFiles?: UploadFile[] | null;\n  hasTitleProfanityError: boolean;\n  hasDescriptionProfanityError: boolean;\n  onTitleChange: (title: string) => void;\n  onDescriptionChange: (description: string) => void;\n  authorId: string | null;\n}\n\ninterface DataProps {\n  pbEnabled: GetFeatureFlagChildProps;\n  ideaAuthorChangeEnabled: GetFeatureFlagChildProps;\n  topics: GetTopicsChildProps;\n  project: GetProjectChildProps;\n  phases: GetPhasesChildProps;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  locale: Locale | null;\n  tenant: IAppConfiguration | null;\n  pbContext: IProjectData | IPhaseData | null;\n  projects: IOption[] | null;\n  title: string;\n  titleError: string | null;\n  description: string;\n  descriptionError: string | null;\n  selectedTopics: string[];\n  topicsError: string | null;\n  locationError: string | null;\n  imageError: string | null;\n  attachmentsError: string | null;\n  budget: number | null;\n  budgetError: string | null;\n  proposedBudget: number | null;\n  proposedBudgetError: string | null;\n  address: string;\n  imageFile: UploadFile[];\n  ideaFiles: UploadFile[];\n  ideaFilesToRemove: UploadFile[];\n  ideaCustomFieldsSchemas: IIdeaFormSchemas | null;\n  authorId: string | null;\n}\n\nclass IdeaForm extends PureComponent<\n  Props & InjectedIntlProps & WithRouterProps,\n  State\n> {\n  subscriptions: Subscription[];\n  titleInputElement: HTMLInputElement | null;\n  descriptionElement: HTMLDivElement | null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      locale: null,\n      tenant: null,\n      pbContext: null,\n      projects: null,\n      title: '',\n      titleError: null,\n      description: '',\n      descriptionError: null,\n      selectedTopics: [],\n      topicsError: null,\n      address: '',\n      imageFile: [],\n      budget: null,\n      budgetError: null,\n      proposedBudget: null,\n      proposedBudgetError: null,\n      ideaFiles: [],\n      ideaFilesToRemove: [],\n      ideaCustomFieldsSchemas: null,\n      locationError: null,\n      imageError: null,\n      attachmentsError: null,\n      authorId: null,\n    };\n    this.subscriptions = [];\n    this.titleInputElement = null;\n    this.descriptionElement = null;\n  }\n\n  componentDidMount() {\n    const { projectId } = this.props;\n    const locale$ = localeStream().observable;\n    const tenant$ = currentAppConfigurationStream().observable;\n    const project$: Observable<IProject | null> = projectByIdStream(projectId)\n      .observable;\n    const ideaCustomFieldsSchemas$ = ideaFormSchemaStream(projectId as string)\n      .observable;\n    const pbContext$: Observable<\n      IProjectData | IPhaseData | null\n    > = project$.pipe(\n      switchMap((project) => {\n        if (project) {\n          if (project.data.attributes.participation_method === 'budgeting') {\n            return of(project.data);\n          }\n\n          if (project.data.attributes.process_type === 'timeline') {\n            return phasesStream(project.data.id).observable.pipe(\n              map((phases) => {\n                const pbPhase = phases.data.find(\n                  (phase) =>\n                    phase.attributes.participation_method === 'budgeting'\n                );\n                return pbPhase || null;\n              })\n            );\n          }\n        }\n\n        return of(null) as Observable<any>;\n      })\n    );\n\n    this.mapPropsToState();\n\n    this.subscriptions = [\n      combineLatest(locale$, tenant$).subscribe(([locale, tenant]) => {\n        this.setState({\n          locale,\n          tenant,\n        });\n      }),\n\n      pbContext$.subscribe((pbContext) => this.setState({ pbContext })),\n\n      ideaCustomFieldsSchemas$.subscribe((ideaCustomFieldsSchemas) =>\n        this.setState({ ideaCustomFieldsSchemas })\n      ),\n\n      eventEmitter\n        .observeEvent('IdeaFormSubmitEvent')\n        .subscribe(this.handleOnSubmit),\n    ];\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!shallowCompare(prevProps, this.props)) {\n      this.mapPropsToState();\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  mapPropsToState = () => {\n    const {\n      title,\n      description,\n      selectedTopics,\n      address,\n      budget,\n      proposedBudget,\n      imageFile,\n      remoteIdeaFiles,\n      authUser,\n      authorId,\n    } = this.props;\n    const ideaFiles = Array.isArray(remoteIdeaFiles) ? remoteIdeaFiles : [];\n\n    this.setState({\n      selectedTopics,\n      budget,\n      proposedBudget,\n      imageFile,\n      ideaFiles,\n      address,\n      authorId: authorId || authUser?.id || null,\n      title: title || '',\n      description: description || '',\n    });\n  };\n\n  handleTitleOnChange = (title: string) => {\n    this.setState({\n      title,\n      titleError: null,\n    });\n\n    this.props.onTitleChange(title);\n  };\n\n  handleDescriptionOnChange = async (description: string) => {\n    const isDescriptionEmpty = !description || description === '';\n\n    this.setState(({ descriptionError }) => ({\n      description,\n      descriptionError: isDescriptionEmpty ? descriptionError : null,\n    }));\n\n    this.props.onDescriptionChange(description);\n  };\n\n  handleTopicsOnChange = (selectedTopics: string[]) => {\n    this.setState({ selectedTopics });\n  };\n\n  handleLocationOnChange = (address: string) => {\n    this.setState({ address });\n  };\n\n  handleUploadOnAdd = (imageFile: UploadFile[]) => {\n    this.setState({\n      imageFile: [imageFile[0]],\n    });\n  };\n\n  handleUploadOnRemove = () => {\n    this.setState({\n      imageFile: [],\n    });\n  };\n\n  handleBudgetOnChange = (budget: string) => {\n    this.setState({\n      budget: budget === '' ? null : Number(budget),\n      budgetError: null,\n    });\n  };\n\n  handleproposedBudgetOnChange = (proposedBudget: string) => {\n    this.setState({\n      proposedBudget: proposedBudget === '' ? null : Number(proposedBudget),\n      proposedBudgetError: null,\n    });\n  };\n\n  handleTitleInputSetRef = (element: HTMLInputElement) => {\n    this.titleInputElement = element;\n  };\n\n  handleDescriptionSetRef = (element: HTMLDivElement) => {\n    this.descriptionElement = element;\n  };\n\n  validateTitle = (title: string | null) => {\n    if (!title) {\n      return this.props.intl.formatMessage(messages.titleEmptyError);\n    } else if (title && title.length < 10) {\n      return this.props.intl.formatMessage(messages.titleLengthError);\n    }\n\n    return null;\n  };\n\n  validateDescription = (description: string | null) => {\n    if (!description) {\n      return this.props.intl.formatMessage(messages.descriptionEmptyError);\n    } else if (description && description.length < 30) {\n      return this.props.intl.formatMessage(messages.descriptionLengthError);\n    }\n\n    return null;\n  };\n\n  validateTopics = (selectedTopics: string[]) => {\n    const { ideaCustomFieldsSchemas, locale } = this.state;\n\n    if (!isNilOrError(ideaCustomFieldsSchemas) && !isNilOrError(locale)) {\n      const topicsRequired = this.isFieldRequired(\n        'topic_ids',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n\n      if (topicsRequired && selectedTopics.length === 0) {\n        return this.props.intl.formatMessage(messages.noTopicsError);\n      }\n    }\n\n    return null;\n  };\n\n  validateLocation = (address: string) => {\n    const { ideaCustomFieldsSchemas, locale } = this.state;\n\n    if (!isNilOrError(ideaCustomFieldsSchemas) && !isNilOrError(locale)) {\n      const locationRequired = this.isFieldRequired(\n        'location',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n\n      if (locationRequired && !address) {\n        return this.props.intl.formatMessage(messages.noLocationError);\n      }\n    }\n\n    return null;\n  };\n\n  validateImage = (imageFiles: UploadFile[]) => {\n    const { ideaCustomFieldsSchemas, locale } = this.state;\n\n    if (!isNilOrError(ideaCustomFieldsSchemas) && !isNilOrError(locale)) {\n      const imagesRequired = this.isFieldRequired(\n        'images',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n\n      if (imagesRequired && imageFiles.length === 0) {\n        return this.props.intl.formatMessage(messages.noImageError);\n      }\n    }\n\n    return null;\n  };\n\n  validateAttachments = (ideaFiles: UploadFile[]) => {\n    const { ideaCustomFieldsSchemas, locale } = this.state;\n\n    if (!isNilOrError(ideaCustomFieldsSchemas) && !isNilOrError(locale)) {\n      const attachmentsRequired = this.isFieldRequired(\n        'attachments',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n\n      if (attachmentsRequired && ideaFiles.length === 0) {\n        return this.props.intl.formatMessage(messages.noAttachmentsError);\n      }\n    }\n\n    return null;\n  };\n\n  validateproposedBudget = (proposedBudget: number | null) => {\n    const { ideaCustomFieldsSchemas, locale } = this.state;\n\n    if (!isNilOrError(ideaCustomFieldsSchemas) && !isNilOrError(locale)) {\n      const proposedBudgetRequired = this.isFieldRequired(\n        'proposed_budget',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n\n      if (proposedBudgetRequired && proposedBudget === null) {\n        return this.props.intl.formatMessage(messages.noproposedBudgetError);\n      }\n    }\n\n    return null;\n  };\n\n  validate = (\n    title: string | null,\n    description: string | null,\n    budget: number | null,\n    proposedBudget: number | null,\n    selectedTopics: string[],\n    address: string,\n    imageFiles: UploadFile[],\n    ideaFiles: UploadFile[]\n  ) => {\n    const { pbContext } = this.state;\n    const titleError = this.validateTitle(title);\n    const descriptionError = this.validateDescription(description);\n    const topicsError = this.validateTopics(selectedTopics);\n    const locationError = this.validateLocation(address);\n    const imageError = this.validateImage(imageFiles);\n    const attachmentsError = this.validateAttachments(ideaFiles);\n    const proposedBudgetError = this.validateproposedBudget(proposedBudget);\n    const pbMaxBudget =\n      pbContext && pbContext.attributes.max_budget\n        ? pbContext.attributes.max_budget\n        : null;\n    let budgetError: string | null = null;\n\n    if (pbContext) {\n      if (\n        budget === null &&\n        (pbContext.type === 'project' ||\n          (pbContext.type === 'phase' &&\n            pastPresentOrFuture([\n              (pbContext as IPhaseData).attributes.start_at,\n              (pbContext as IPhaseData).attributes.end_at,\n            ]) === 'present'))\n      ) {\n        budgetError = this.props.intl.formatMessage(messages.noBudgetError);\n      } else if (budget === 0) {\n        budgetError = this.props.intl.formatMessage(messages.budgetIsZeroError);\n      } else if (pbMaxBudget && budget && budget > pbMaxBudget) {\n        budgetError = this.props.intl.formatMessage(messages.budgetIsTooBig);\n      }\n    }\n\n    this.setState({\n      titleError,\n      descriptionError,\n      budgetError,\n      proposedBudgetError,\n      topicsError,\n      locationError,\n      imageError,\n      attachmentsError,\n    });\n\n    // scroll to erroneous title/description fields\n    if (titleError && this.titleInputElement) {\n      scrollToComponent(this.titleInputElement, {\n        align: 'top',\n        offset: -240,\n        duration: 300,\n      });\n      setTimeout(\n        () => this.titleInputElement && this.titleInputElement.focus(),\n        300\n      );\n    } else if (descriptionError && this.descriptionElement) {\n      scrollToComponent(this.descriptionElement, {\n        align: 'top',\n        offset: -200,\n        duration: 300,\n      });\n      setTimeout(\n        () => this.descriptionElement && this.descriptionElement.focus(),\n        300\n      );\n    }\n\n    const hasError =\n      !titleError &&\n      !descriptionError &&\n      !budgetError &&\n      !proposedBudgetError &&\n      !topicsError &&\n      !locationError &&\n      !imageError &&\n      !attachmentsError;\n\n    return hasError;\n  };\n\n  handleIdeaFileOnAdd = (ideaFileToAdd: UploadFile) => {\n    this.setState(({ ideaFiles }) => ({\n      ideaFiles: [...ideaFiles, ideaFileToAdd],\n    }));\n  };\n\n  handleIdeaFileOnRemove = (ideaFileToRemove: UploadFile) => {\n    this.setState(({ ideaFiles, ideaFilesToRemove }) => ({\n      ideaFiles: ideaFiles.filter(\n        (ideaFile) => ideaFile.base64 !== ideaFileToRemove.base64\n      ),\n      ideaFilesToRemove: [...ideaFilesToRemove, ideaFileToRemove],\n    }));\n  };\n\n  handleOnSubmit = () => {\n    const {\n      title,\n      description,\n      selectedTopics,\n      address,\n      budget,\n      proposedBudget,\n      imageFile,\n      ideaFiles,\n      ideaFilesToRemove,\n      authorId,\n    } = this.state;\n    const formClientSideIsValid = this.validate(\n      title,\n      description,\n      budget,\n      proposedBudget,\n      selectedTopics,\n      address,\n      imageFile,\n      ideaFiles\n    );\n\n    if (formClientSideIsValid) {\n      const output: IIdeaFormOutput = {\n        title,\n        selectedTopics,\n        address,\n        imageFile,\n        budget,\n        proposedBudget,\n        description,\n        ideaFiles,\n        ideaFilesToRemove,\n        authorId,\n      };\n      this.props.onSubmit(output);\n    }\n  };\n\n  isFieldRequired = (\n    fieldCode: CustomFieldCodes,\n    ideaCustomFieldsSchemas: IIdeaFormSchemas,\n    locale: Locale\n  ) => {\n    return ideaCustomFieldsSchemas.json_schema_multiloc[\n      locale\n    ].required.includes(fieldCode);\n  };\n\n  isFieldEnabled = (\n    fieldCode: CustomFieldCodes,\n    ideaCustomFieldsSchemas: IIdeaFormSchemas,\n    locale: Locale\n  ) => {\n    return (\n      ideaCustomFieldsSchemas.json_schema_multiloc?.[locale]?.properties?.[\n        fieldCode\n      ] &&\n      ideaCustomFieldsSchemas.ui_schema_multiloc?.[locale]?.[fieldCode]?.[\n        'ui:widget'\n      ] !== 'hidden'\n    );\n  };\n\n  handleAuthorChange = (authorId?: string) => {\n    this.setState({ authorId: authorId ? authorId : null });\n  };\n\n  render() {\n    const className = this.props['className'];\n    const {\n      projectId,\n      pbEnabled,\n      topics,\n      project,\n      phases,\n      hasTitleProfanityError,\n      hasDescriptionProfanityError,\n      authUser,\n      ideaAuthorChangeEnabled,\n    } = this.props;\n    const { formatMessage } = this.props.intl;\n    const {\n      locale,\n      tenant,\n      pbContext,\n      title,\n      description,\n      selectedTopics,\n      address,\n      budget,\n      proposedBudget,\n      imageFile,\n      titleError,\n      descriptionError,\n      budgetError,\n      proposedBudgetError,\n      ideaFiles,\n      ideaCustomFieldsSchemas,\n      topicsError,\n      locationError,\n      imageError,\n      attachmentsError,\n    } = this.state;\n\n    const mapsLoaded = window.googleMaps;\n\n    const tenantCurrency = tenant\n      ? tenant.data.attributes.settings.core.currency\n      : '';\n\n    if (\n      !isNilOrError(ideaCustomFieldsSchemas) &&\n      !isNilOrError(locale) &&\n      !isNilOrError(topics) &&\n      !isNilOrError(project)\n    ) {\n      const topicsEnabled = this.isFieldEnabled(\n        'topic_ids',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n      const locationEnabled = this.isFieldEnabled(\n        'location',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n      const attachmentsEnabled = this.isFieldEnabled(\n        'attachments',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n      const proposedBudgetEnabled = this.isFieldEnabled(\n        'proposed_budget',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n      const showPBBudget = pbContext && pbEnabled;\n      const showTopics = topicsEnabled && topics && topics.length > 0;\n      const showLocation = locationEnabled;\n      const showproposedBudget = proposedBudgetEnabled;\n      const filteredTopics = topics.filter(\n        (topic) => !isNilOrError(topic)\n      ) as ITopicData[];\n      const inputTerm = getInputTerm(\n        project.attributes.process_type,\n        project,\n        phases\n      );\n\n      return (\n        <Form id=\"idea-form\" className={className}>\n          <StyledFormSection>\n            <FormSectionTitle\n              message={getInputTermMessage(inputTerm, {\n                idea: messages.formGeneralSectionTitle,\n                option: messages.optionFormGeneralSectionTitle,\n                project: messages.projectFormGeneralSectionTitle,\n                question: messages.questionFormGeneralSectionTitle,\n                issue: messages.issueFormGeneralSectionTitle,\n                contribution: messages.contributionFormGeneralSectionTitle,\n              })}\n            />\n            <FormElement id=\"e2e-idea-title-input\">\n              <FormLabel\n                htmlFor=\"title\"\n                labelMessage={messages.title}\n                optional={\n                  !this.isFieldRequired(\n                    'title',\n                    ideaCustomFieldsSchemas,\n                    locale\n                  )\n                }\n                subtext={\n                  ideaCustomFieldsSchemas?.json_schema_multiloc?.[locale || '']\n                    ?.properties?.title?.description\n                }\n                subtextSupportsHtml={true}\n              />\n              <Input\n                id=\"title\"\n                type=\"text\"\n                value={title}\n                error={titleError}\n                onChange={this.handleTitleOnChange}\n                setRef={this.handleTitleInputSetRef}\n                autoFocus={!bowser.mobile}\n                maxCharCount={80}\n                autocomplete=\"off\"\n              />\n              {hasTitleProfanityError && (\n                <Error\n                  text={\n                    <FormattedMessage\n                      {...messages.profanityError}\n                      values={{\n                        guidelinesLink: (\n                          <Link to=\"/pages/faq\" target=\"_blank\">\n                            {formatMessage(messages.guidelinesLinkText)}\n                          </Link>\n                        ),\n                      }}\n                    />\n                  }\n                />\n              )}\n            </FormElement>\n            {ideaAuthorChangeEnabled &&\n              isAdmin({ data: authUser as IUserData }) && (\n                <FormElement id=\"e2e-idea-author-input\">\n                  <FormLabel htmlFor=\"author\" labelMessage={messages.author} />\n                  <UserSelect\n                    id=\"author\"\n                    inputId=\"author-select\"\n                    value={this.state.authorId}\n                    onChange={this.handleAuthorChange}\n                    placeholder={formatMessage(messages.authorPlaceholder)}\n                  />\n                </FormElement>\n              )}\n\n            <FormElement id=\"e2e-idea-description-input\">\n              <FormLabel\n                id=\"editor-label\"\n                htmlFor=\"editor\"\n                labelMessage={messages.descriptionTitle}\n                optional={\n                  !this.isFieldRequired('body', ideaCustomFieldsSchemas, locale)\n                }\n                subtext={\n                  ideaCustomFieldsSchemas?.json_schema_multiloc?.[locale || '']\n                    ?.properties?.body?.description\n                }\n                subtextSupportsHtml={true}\n              />\n              <QuillEditor\n                id=\"editor\"\n                value={description}\n                onChange={this.handleDescriptionOnChange}\n                setRef={this.handleDescriptionSetRef}\n                hasError={!!descriptionError || hasDescriptionProfanityError}\n                withCTAButton\n              />\n              {descriptionError && <Error text={descriptionError} />}\n              {hasDescriptionProfanityError && (\n                <Error\n                  text={\n                    <FormattedMessage\n                      {...messages.profanityError}\n                      values={{\n                        guidelinesLink: (\n                          <Link to=\"/pages/faq\" target=\"_blank\">\n                            {formatMessage(messages.guidelinesLinkText)}\n                          </Link>\n                        ),\n                      }}\n                    />\n                  }\n                />\n              )}\n            </FormElement>\n          </StyledFormSection>\n\n          {(showPBBudget || showTopics || showLocation) && (\n            <StyledFormSection>\n              <FormSectionTitle message={messages.formDetailsSectionTitle} />\n              {showPBBudget && (\n                <HasPermission\n                  item=\"idea\"\n                  action=\"assignBudget\"\n                  context={{ projectId }}\n                >\n                  <FormElement>\n                    <FormLabelWithIcon\n                      labelMessage={messages.budgetLabel}\n                      labelMessageValues={{\n                        currency: tenantCurrency,\n                        maxBudget: pbContext?.attributes.max_budget,\n                      }}\n                      htmlFor=\"budget\"\n                      iconName=\"admin\"\n                      iconAriaHidden\n                    />\n                    <Input\n                      id=\"budget\"\n                      error={budgetError}\n                      value={budget !== null ? String(budget) : ''}\n                      type=\"number\"\n                      onChange={this.handleBudgetOnChange}\n                    />\n                  </FormElement>\n                </HasPermission>\n              )}\n\n              {showproposedBudget && (\n                <FormElement>\n                  <FormLabel\n                    htmlFor=\"estimated-budget\"\n                    labelMessage={messages.proposedBudgetLabel}\n                    labelMessageValues={{\n                      currency: tenantCurrency,\n                    }}\n                    optional={\n                      !this.isFieldRequired(\n                        'proposed_budget',\n                        ideaCustomFieldsSchemas,\n                        locale\n                      )\n                    }\n                    subtext={\n                      ideaCustomFieldsSchemas?.json_schema_multiloc?.[\n                        locale || ''\n                      ]?.properties?.proposed_budget?.description\n                    }\n                    subtextSupportsHtml={true}\n                  />\n                  <Input\n                    id=\"estimated-budget\"\n                    error={proposedBudgetError}\n                    value={\n                      proposedBudget !== null ? String(proposedBudget) : ''\n                    }\n                    type=\"number\"\n                    min=\"0\"\n                    onChange={this.handleproposedBudgetOnChange}\n                  />\n                </FormElement>\n              )}\n\n              {showTopics && (\n                <FormElement>\n                  <FormLabel\n                    htmlFor=\"topics\"\n                    labelMessage={messages.topicsTitle}\n                    optional={\n                      !this.isFieldRequired(\n                        'topic_ids',\n                        ideaCustomFieldsSchemas,\n                        locale\n                      )\n                    }\n                    subtext={\n                      ideaCustomFieldsSchemas?.json_schema_multiloc?.[\n                        locale || ''\n                      ]?.properties?.topic_ids?.description\n                    }\n                    subtextSupportsHtml={true}\n                  />\n                  <TopicsPicker\n                    selectedTopicIds={selectedTopics}\n                    onChange={this.handleTopicsOnChange}\n                    availableTopics={filteredTopics}\n                  />\n                  {topicsError && (\n                    <Error id=\"e2e-new-idea-topics-error\" text={topicsError} />\n                  )}\n                </FormElement>\n              )}\n\n              {showLocation && mapsLoaded && (\n                <FormElement>\n                  <FormLabel\n                    labelMessage={messages.locationTitle}\n                    optional={\n                      !this.isFieldRequired(\n                        'location',\n                        ideaCustomFieldsSchemas,\n                        locale\n                      )\n                    }\n                    subtext={\n                      ideaCustomFieldsSchemas?.json_schema_multiloc?.[\n                        locale || ''\n                      ]?.properties?.location?.description\n                    }\n                    subtextSupportsHtml={true}\n                  >\n                    <LocationInput\n                      className=\"e2e-idea-form-location-input-field\"\n                      value={address}\n                      placeholder={formatMessage(messages.locationPlaceholder)}\n                      onChange={this.handleLocationOnChange}\n                    />\n                  </FormLabel>\n                  {locationError && <Error text={locationError} />}\n                </FormElement>\n              )}\n            </StyledFormSection>\n          )}\n\n          <StyledFormSection>\n            <FormSectionTitle message={messages.fileAttachmentsTitle} />\n            <FormElement id=\"e2e-idea-image-upload\">\n              <FormLabel\n                htmlFor=\"idea-image-dropzone\"\n                labelMessage={messages.imageUploadTitle}\n                optional={\n                  !this.isFieldRequired(\n                    'images',\n                    ideaCustomFieldsSchemas,\n                    locale\n                  )\n                }\n                subtext={\n                  ideaCustomFieldsSchemas?.json_schema_multiloc?.[locale || '']\n                    ?.properties?.images?.description\n                }\n                subtextSupportsHtml={true}\n              />\n              <ImagesDropzone\n                id=\"idea-image-dropzone\"\n                images={imageFile}\n                imagePreviewRatio={135 / 298}\n                acceptedFileTypes=\"image/jpg, image/jpeg, image/png, image/gif\"\n                onAdd={this.handleUploadOnAdd}\n                onRemove={this.handleUploadOnRemove}\n              />\n              {imageError && <Error text={imageError} />}\n            </FormElement>\n\n            {attachmentsEnabled && (\n              <FormElement id=\"e2e-idea-file-upload\">\n                <FormLabel\n                  labelMessage={messages.otherFilesTitle}\n                  optional={\n                    !this.isFieldRequired(\n                      'attachments',\n                      ideaCustomFieldsSchemas,\n                      locale\n                    )\n                  }\n                  subtext={\n                    ideaCustomFieldsSchemas?.json_schema_multiloc?.[\n                      locale || ''\n                    ]?.properties?.attachments?.description\n                  }\n                  subtextSupportsHtml={true}\n                >\n                  <FileUploader\n                    onFileAdd={this.handleIdeaFileOnAdd}\n                    onFileRemove={this.handleIdeaFileOnRemove}\n                    files={ideaFiles}\n                  />\n                </FormLabel>\n                {attachmentsError && <Error text={attachmentsError} />}\n              </FormElement>\n            )}\n          </StyledFormSection>\n        </Form>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  pbEnabled: <GetFeatureFlag name=\"participatory_budgeting\" />,\n  ideaAuthorChangeEnabled: <GetFeatureFlag name=\"idea_author_change\" />,\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n  phases: ({ projectId, render }) => (\n    <GetPhases projectId={projectId}>{render}</GetPhases>\n  ),\n  topics: ({ projectId, render }) => {\n    return <GetTopics projectId={projectId}>{render}</GetTopics>;\n  },\n  authUser: ({ render }) => {\n    return <GetAuthUser>{render}</GetAuthUser>;\n  },\n});\n\nconst IdeaFormWitHOCs = withRouter<Props>(injectIntl(IdeaForm));\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeaFormWitHOCs {...dataProps} {...inputProps} />}\n  </Data>\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  selectedTopics: {\n    id: 'app.components.TopicsPicker.numberOfSelectedTopics',\n    defaultMessage:\n      'Selected {numberOfSelectedTopics, plural, =0 {zero topics} one {one topic} other {# topics}}. {selectedTopicNames}',\n  },\n});\n","import { isNumber } from 'lodash-es';\n\nexport const geocode = (address: string | null | undefined) => {\n  return new Promise((resolve: (value: GeoJSON.Point | null) => void) => {\n    if (address && window?.google?.maps?.Geocoder) {\n      const geocoder = new google.maps.Geocoder();\n      geocoder.geocode({ address }, (results, status) => {\n        let response: GeoJSON.Point | null = null;\n\n        if (status === google.maps.GeocoderStatus.OK) {\n          const lat = results?.[0]?.geometry?.location?.lat();\n          const lng = results?.[0]?.geometry?.location?.lng();\n\n          if (isNumber(lat) && isNumber(lng)) {\n            response = {\n              type: 'Point',\n              coordinates: [lng, lat],\n            };\n          }\n        }\n\n        resolve(response);\n      });\n    } else {\n      resolve(null);\n    }\n  });\n};\n\nexport const reverseGeocode = (lat: number, lng: number) => {\n  return new Promise((resolve: (value: string | undefined) => void) => {\n    if (window?.google?.maps?.Geocoder) {\n      const geocoder = new google.maps.Geocoder();\n      geocoder.geocode(\n        {\n          location: {\n            lat,\n            lng,\n          },\n        },\n        (results, status) => {\n          let response: string | undefined = undefined;\n          const formattedAddress = results?.[0]?.formatted_address;\n\n          if (status === google.maps.GeocoderStatus.OK && formattedAddress) {\n            response = formattedAddress;\n          }\n\n          resolve(response);\n        }\n      );\n    } else {\n      resolve(undefined);\n    }\n  });\n};\n"],"sourceRoot":""}