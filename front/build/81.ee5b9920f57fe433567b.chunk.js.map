{"version":3,"sources":["webpack:///./app/modules/commercial/project_folders/citizen/components/ProjectFolderShareButton/messages.ts","webpack:///./app/components/AvatarBubbles/index.tsx","webpack:///./app/modules/commercial/project_folders/citizen/containers/ProjectFolderShowPage/styles.ts","webpack:///./app/modules/commercial/project_folders/citizen/containers/ProjectFolderShowPage/ProjectFolderDescription.tsx","webpack:///./app/modules/commercial/project_folders/citizen/containers/ProjectFolderShowPage/ProjectFolderProjectCards.tsx","webpack:///./app/resources/GetRandomAvatars.tsx","webpack:///./app/modules/commercial/project_folders/citizen/components/ProjectFolderSharingModal/index.tsx","webpack:///./app/modules/commercial/project_folders/citizen/containers/ProjectFolderShowPage/ProjectFolderShowPageMeta.tsx","webpack:///./app/modules/commercial/project_folders/citizen/containers/ProjectFolderShowPage/index.tsx","webpack:///./app/modules/commercial/project_folders/citizen/containers/ProjectFolderShowPage/ProjectFolderHeader.tsx","webpack:///./app/modules/commercial/project_folders/citizen/components/ProjectFolderSharingModal/messages.ts","webpack:///./app/components/AvatarBubbles/messages.ts","webpack:///./app/modules/commercial/project_folders/citizen/components/ProjectFolderShareButton/index.tsx","webpack:///./app/resources/GetAvatars.tsx","webpack:///./app/modules/commercial/project_folders/citizen/containers/ProjectFolderShowPage/messages.ts","webpack:///./app/services/avatars.ts"],"names":["defineMessages","share","id","defaultMessage","EmptyContainer","styled","div","Container","props","width","height","AvatarImageBubble","img","size","index","overlap","UserCountBubble","bgColor","UserCountBubbleInner","digits","getFontSize","AvatarBubblesWithHoCs","avatarIds","context","className","userCountBgColor","colors","label","formatMessage","intl","avatars","userCount","isNilOrError","isNumber","bubbleSize","bubbleOverlap","imageSize","avatarsWithImage","filter","avatar","isError","attributes","avatarImagesCount","length","remainingUsers","remainingUsersDigits","toString","containerHeight","containerWidth","map","key","src","alt","ScreenReaderOnly","messages","numberOfUsers","undefined","inputProps","ids","limit","data","meta","total","Title","h1","theme","colorText","fontSizes","xxxl","isRtl","media","smallerThan1100px","Description","maxHeight","ReadMoreOuterWrapper","ReadMoreInnerWrapper","ReadMoreButton","Button","CollapseButtonWrapper","CollapseButton","ProjectFolderDescription","memo","projectFolder","projectFolderFiles","windowWidth","useTheme","useState","expanded","setExpanded","descriptionHeight","setDescriptionHeight","collapsedDescriptionMaxHeight","useEffect","toggleExpandCollapse","useCallback","event","preventDefault","invisibleTitleMainContent","value","title_multiloc","handleWidth","handleHeight","onResize","_width","textColor","fontSize","description_multiloc","supportHtml","files","buttonStyle","onClick","textDecoration","textDecorationHover","textHoverColor","fontWeight","medium","padding","FormattedMessage","readMore","seeLess","injectIntl","StyledProjectCard","ProjectCard","isEven","smallerThanMinTablet","list","filteredList","item","publicationType","hideDescriptionPreview","every","isEmpty","publication_description_preview_multiloc","publicationId","projectId","GetRandomAvatars","state","this","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","isEqual","switchMap","randomAvatarsStream","queryParameters","context_type","type","context_id","observable","subscribe","setState","forEach","subscription","unsubscribe","children","React","Component","ProjectFolderSharingModal","projectFolderId","opened","close","authUser","folderUrl","location","href","utmParams","source","campaign","content","onClose","closeOnClickOutside","noClose","header","maxLength","projectFolderName","url","twitterMessage","whatsAppMessage","layout","Meta","locale","tenantLocales","metaTitle","title","getLocalized","description","stripHtml","image","header_bg","large","window","Helmet","unread_notifications","name","property","imageSizes","projectBg","main","menuHeight","footerHeight","background","smallerThanMaxTablet","mobileMenuHeight","mobileTopBarHeight","Loading","StyledContentContainer","ContentContainer","ButtonBar","EditButton","StyledProjectFolderHeader","ProjectFolderHeader","Content","StyledProjectFolderDescription","StyledProjectFolderProjectCards","ProjectFolderProjectCards","borderRadius","NotFoundWrapper","CardsWrapper","ProjectFolderShowPage","tenant","publicationStatusFilter","adminPublicationChildrenOf","childrenOf","adminPublicationsList","folderNotFound","childProjects","useMemo","relationships","admin_publication","loading","isUndefined","userCanEditFolder","moderatesFolder","noFolderFoundHere","linkTo","text","goBackToList","icon","Spinner","maxWidth","maxPageWidth","editFolder","ProjectFolderShowPageWrapper","slug","params","projectFolderSlug","withRouter","HeaderImage","Image","StyledProjectFolderShareButton","ProjectFolderShareButton","cover","fadeIn","isLazy","placeholderBg","ShareButton","buttonContainerProps","shareModalOpened","setShareModalOpened","openShareModal","closeShareModal","GetAvatars","combineLatest","avatarByIdStream","projectFolderTwitterMessage","projectFolderWhatsAppMessage","avatarId","streams","get","apiEndpoint","API_PATH","cacheStream","streamParams"],"mappings":"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","file":"81.ee5b9920f57fe433567b.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  share: {\n    id:\n      'app.modules.project_folder.citizen.components.ProjectFolderShareButton.share',\n    defaultMessage: `Share`,\n  },\n});\n","import React from 'react';\nimport { isNumber, isError } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// services\nimport { IAvatarData } from 'services/avatars';\n\n// resources\nimport GetRandomAvatars from 'resources/GetRandomAvatars';\nimport GetAvatars from 'resources/GetAvatars';\n\n// i18n\nimport injectIntl from 'utils/cl-intl/injectIntl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\nconst getFontSize = (size: number, digits: number) => {\n  if (size >= 34) {\n    if (digits <= 2) {\n      return 14;\n    }\n\n    if (digits === 3) {\n      return 12;\n    }\n\n    if (digits >= 4) {\n      return 11;\n    }\n  } else {\n    if (digits <= 2) {\n      return 12;\n    }\n\n    if (digits === 3) {\n      return 11;\n    }\n\n    if (digits >= 4) {\n      return 10;\n    }\n  }\n\n  return 14;\n};\n\nconst EmptyContainer = styled.div``;\n\nconst Container = styled.div<{ width: number; height: number }>`\n  flex-shrink: 0;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  position: relative;\n`;\n\nconst AvatarImageBubble = styled.img<{\n  overlap: number;\n  index: number;\n  size: number;\n}>`\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  border-radius: 50%;\n  border: solid 2px #fff;\n  text-indent: -9999px;\n  position: absolute;\n  z-index: ${(props) => props.index + 1};\n  left: ${(props) => props.index * (props.size - props.overlap)}px;\n  object-fit: cover;\n  object-position: center;\n`;\n\nconst UserCountBubble = styled.div<{\n  overlap: number;\n  index: number;\n  size: number;\n  bgColor: string;\n}>`\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 0;\n  border-radius: 50%;\n  border: solid 2px #fff;\n  background: ${(props: any) => props.bgColor};\n  position: absolute;\n  z-index: ${(props) => props.index + 1};\n  left: ${(props) => props.index * (props.size - props.overlap)}px;\n`;\n\nconst UserCountBubbleInner = styled.div<{ size: number; digits: number }>`\n  color: #fff;\n  font-size: ${({ size, digits }) => getFontSize(size, digits)}px;\n  font-weight: 500;\n  display: flex;\n`;\n\n/* InputProps\n * limit: the number of avatars you need, you'll get one extra bubble with the remaining count, defaults to 3\n * context: extra info if you use the component in a specific context, defaults to platform-wide\n * size: image size, each bubble will be 4px bigger because of margins, defaults to 30px\n * overlap: the number of pixel the bubbles overlap, defaults to 7\n */\ninterface InputProps {\n  limit?: number;\n  context?: {\n    type: 'project' | 'group';\n    id: string;\n  };\n  size?: number;\n  overlap?: number;\n  userCountBgColor?: string;\n  avatarIds?: string[];\n  className?: string;\n  userCount?: number;\n}\n\ninterface DataProps {\n  avatars: (IAvatarData | Error)[] | null;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst defaultLimit = 4;\n\nconst AvatarBubbles = ({\n  avatarIds,\n  context,\n  size = 34,\n  overlap,\n  className,\n  userCountBgColor = colors.label,\n  intl: { formatMessage },\n  avatars,\n  userCount,\n}: Props & InjectedIntlProps) => {\n  if (!isNilOrError(avatars) && isNumber(userCount) && userCount > 0) {\n    const bubbleSize = size + 4;\n    const bubbleOverlap = overlap || 10;\n    const imageSize = bubbleSize > 160 ? 'large' : 'medium';\n    const avatarsWithImage = avatars.filter(\n      (avatar) =>\n        !isError(avatar) &&\n        avatar.attributes.avatar &&\n        avatar.attributes.avatar[imageSize]\n    ) as IAvatarData[];\n    const avatarImagesCount = avatarsWithImage.length;\n    const remainingUsers = userCount - avatarImagesCount;\n    const remainingUsersDigits = remainingUsers.toString().length;\n    const bubblesCount = avatarImagesCount + (remainingUsers > 0 ? 1 : 0);\n    const containerHeight = bubbleSize + 2;\n    const containerWidth =\n      bubblesCount * (bubbleSize - bubbleOverlap) + bubbleOverlap + 2;\n\n    if (avatarIds || context || avatarImagesCount > 0) {\n      return (\n        <Container\n          className={className}\n          width={containerWidth}\n          height={containerHeight}\n        >\n          {avatarsWithImage.map((avatar, index) => (\n            <AvatarImageBubble\n              key={index}\n              index={index}\n              overlap={bubbleOverlap}\n              size={bubbleSize}\n              src={avatar.attributes.avatar[imageSize]}\n              alt=\"\"\n            />\n          ))}\n          {remainingUsers > 0 && (\n            <UserCountBubble\n              index={avatarsWithImage.length}\n              overlap={bubbleOverlap}\n              size={bubbleSize}\n              bgColor={userCountBgColor}\n            >\n              <UserCountBubbleInner\n                size={bubbleSize}\n                digits={remainingUsersDigits}\n                aria-hidden\n              >\n                +{remainingUsers}\n              </UserCountBubbleInner>\n              <ScreenReaderOnly>\n                {formatMessage(messages.numberOfUsers, {\n                  numberOfUsers: userCount,\n                })}\n              </ScreenReaderOnly>\n            </UserCountBubble>\n          )}\n        </Container>\n      );\n    }\n  } else if (avatars !== undefined) {\n    return <EmptyContainer className={className} />;\n  }\n\n  return null;\n};\n\nconst AvatarBubblesWithHoCs = injectIntl(AvatarBubbles);\n\nexport default (inputProps: InputProps) => {\n  if (inputProps.avatarIds) {\n    return (\n      <GetAvatars ids={inputProps.avatarIds}>\n        {(avatars) => (\n          <AvatarBubblesWithHoCs\n            {...inputProps}\n            avatars={!isNilOrError(avatars) ? avatars : null}\n          />\n        )}\n      </GetAvatars>\n    );\n  }\n\n  return (\n    <GetRandomAvatars\n      limit={inputProps.limit || defaultLimit}\n      context={inputProps.context}\n    >\n      {(avatars) => (\n        <AvatarBubblesWithHoCs\n          {...inputProps}\n          avatars={!isNilOrError(avatars) ? avatars.data : null}\n          userCount={!isNilOrError(avatars) ? avatars.meta.total : undefined}\n        />\n      )}\n    </GetRandomAvatars>\n  );\n};\n","export const maxPageWidth = 1480;\n","import React, {\n  memo,\n  useState,\n  useEffect,\n  useCallback,\n  FormEvent,\n} from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport FileAttachments from 'components/UI/FileAttachments';\nimport QuillEditedContent from 'components/UI/QuillEditedContent';\nimport ReactResizeDetector from 'react-resize-detector/build/withPolyfill';\nimport Button from 'components/UI/Button';\n\n// services\nimport useProjectFolderFiles from '../../../hooks/useProjectFolderFiles';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// i18n\nimport T from 'components/T';\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\n\n// style\nimport styled, { useTheme } from 'styled-components';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { media, fontSizes, isRtl, colors } from 'utils/styleUtils';\n\n// typings\nimport { IProjectFolderData } from '../../../services/projectFolders';\n\nconst desktopCollapsedDescriptionMaxHeight = 99999;\nconst mobileCollapsedDescriptionMaxHeight = 180;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst Title = styled.h1`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.xxxl}px;\n  line-height: normal;\n  font-weight: 600;\n  text-align: left;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  margin: 0;\n  margin-bottom: 25px;\n  padding: 0;\n\n  ${isRtl`\n    text-align: right;\n  `}\n\n  ${media.smallerThan1100px`\n    margin-bottom: 20px;\n  `}\n`;\n\nconst Description = styled.div<{ maxHeight: number }>`\n  position: relative;\n  max-height: ${(props) => props.maxHeight}px;\n  overflow: hidden;\n\n  &.expanded {\n    max-height: none;\n    overflow: visible;\n  }\n`;\n\nconst ReadMoreOuterWrapper = styled.div`\n  height: 130px;\n  content: '';\n  display: flex;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgb(255, 255, 255);\n  background: linear-gradient(\n    0deg,\n    rgba(255, 255, 255, 1) 30%,\n    rgba(255, 255, 255, 0) 100%\n  );\n`;\n\nconst ReadMoreInnerWrapper = styled.div`\n  position: relative;\n  flex: 1;\n`;\n\nconst ReadMoreButton = styled(Button)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n`;\n\nconst CollapseButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  margin-top: 20px;\n`;\n\nconst CollapseButton = styled(Button)``;\n\ninterface Props {\n  projectFolder: IProjectFolderData;\n  className?: string;\n}\n\nconst ProjectFolderDescription = memo<Props & InjectedIntlProps>(\n  ({ projectFolder, className, intl: { formatMessage } }) => {\n    const projectFolderFiles = useProjectFolderFiles(projectFolder.id);\n    const { windowWidth } = useWindowSize();\n    const theme: any = useTheme();\n\n    const [expanded, setExpanded] = useState(false);\n    const [descriptionHeight, setDescriptionHeight] = useState<number | null>(\n      null\n    );\n\n    const smallerThan1100px = windowWidth ? windowWidth <= 1100 : false;\n\n    const collapsedDescriptionMaxHeight = smallerThan1100px\n      ? mobileCollapsedDescriptionMaxHeight\n      : desktopCollapsedDescriptionMaxHeight;\n\n    useEffect(() => {\n      setExpanded(false);\n    }, [projectFolder, descriptionHeight]);\n\n    const toggleExpandCollapse = useCallback(\n      (event: FormEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        setExpanded((expanded) => !expanded);\n      },\n      []\n    );\n\n    const onResize = (\n      _width: number | undefined,\n      height: number | undefined\n    ) => {\n      if (height) {\n        setDescriptionHeight(height);\n      }\n    };\n\n    if (!isNilOrError(projectFolder)) {\n      return (\n        <Container className={className || ''}>\n          <ScreenReaderOnly>\n            <h2>{formatMessage(messages.invisibleTitleMainContent)}</h2>\n          </ScreenReaderOnly>\n          <Title id=\"e2e-folder-title\">\n            <T value={projectFolder.attributes.title_multiloc} />\n          </Title>\n          <Description\n            className={expanded ? 'expanded' : ''}\n            maxHeight={collapsedDescriptionMaxHeight}\n          >\n            <ReactResizeDetector handleWidth handleHeight onResize={onResize}>\n              <div>\n                <QuillEditedContent\n                  textColor={theme.colorText}\n                  fontSize={windowWidth <= 1439 ? 'base' : 'medium'}\n                  className=\"e2e-folder-description\"\n                >\n                  <T\n                    value={projectFolder.attributes.description_multiloc}\n                    supportHtml={true}\n                  />\n                </QuillEditedContent>\n                {!isNilOrError(projectFolderFiles) &&\n                  projectFolderFiles &&\n                  projectFolderFiles.data.length > 0 && (\n                    <FileAttachments files={projectFolderFiles.data} />\n                  )}\n              </div>\n            </ReactResizeDetector>\n            {descriptionHeight &&\n              descriptionHeight > collapsedDescriptionMaxHeight &&\n              !expanded && (\n                <ReadMoreOuterWrapper>\n                  <ReadMoreInnerWrapper>\n                    <ReadMoreButton\n                      id=\"e2e-project-description-read-more-button\"\n                      buttonStyle=\"text\"\n                      onClick={toggleExpandCollapse}\n                      textDecoration=\"underline\"\n                      textDecorationHover=\"underline\"\n                      textColor={colors.label}\n                      textHoverColor={theme.colorText}\n                      fontWeight=\"500\"\n                      fontSize={`${fontSizes.medium}px`}\n                      padding=\"0\"\n                    >\n                      <FormattedMessage {...messages.readMore} />\n                    </ReadMoreButton>\n                  </ReadMoreInnerWrapper>\n                </ReadMoreOuterWrapper>\n              )}\n            {descriptionHeight &&\n              descriptionHeight > collapsedDescriptionMaxHeight &&\n              expanded && (\n                <CollapseButtonWrapper>\n                  <CollapseButton\n                    id=\"e2e-project-description-see-less-button\"\n                    buttonStyle=\"text\"\n                    onClick={toggleExpandCollapse}\n                    textDecoration=\"underline\"\n                    textDecorationHover=\"underline\"\n                    textColor={colors.label}\n                    textHoverColor={theme.colorText}\n                    fontWeight=\"500\"\n                    fontSize={`${fontSizes.medium}px`}\n                    padding=\"0\"\n                  >\n                    <FormattedMessage {...messages.seeLess} />\n                  </CollapseButton>\n                </CollapseButtonWrapper>\n              )}\n          </Description>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(ProjectFolderDescription);\n","import React, { memo } from 'react';\nimport { isEmpty } from 'lodash-es';\n\n// components\nimport ProjectCard from 'components/ProjectCard';\n\n// hooks\nimport useWindowSize from 'hooks/useWindowSize';\n\n// style\nimport styled from 'styled-components';\nimport { media } from 'utils/styleUtils';\n\n// typins\nimport { IAdminPublicationContent } from 'hooks/useAdminPublications';\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst StyledProjectCard = styled(ProjectCard)<{ isEven: boolean }>`\n  flex-grow: 0;\n  width: calc(100% * (1 / 2) - 10px);\n  margin: 0px;\n  margin-right: ${(props) => (props.isEven ? '20px' : '0px')};\n  margin-bottom: 20px;\n\n  &.oneCardPerRow {\n    width: 100%;\n    margin-right: 0px;\n  }\n\n  ${media.smallerThanMinTablet`\n    width: 100%;\n    margin: 0;\n    margin-bottom: 20px;\n  `};\n`;\n\nconst ProjectFolderProjectCards = memo<{\n  list: IAdminPublicationContent[] | undefined | null;\n  className?: string;\n}>(({ list, className }) => {\n  const { windowWidth } = useWindowSize();\n\n  const filteredList = list?.filter(\n    (item) => item.publicationType === 'project'\n  );\n  const hasNoDescriptionPreviews = filteredList?.every((item) =>\n    isEmpty(item.attributes.publication_description_preview_multiloc)\n  );\n  const hideDescriptionPreview = hasNoDescriptionPreviews;\n\n  if (filteredList && filteredList?.length > 0) {\n    return (\n      <Container className={className || ''}>\n        {filteredList.map((item, index) => (\n          <StyledProjectCard\n            key={item.publicationId}\n            projectId={item.publicationId}\n            size=\"small\"\n            isEven={index % 2 !== 1}\n            hideDescriptionPreview={hideDescriptionPreview}\n            className={\n              filteredList.length === 1 ||\n              (windowWidth > 1000 && windowWidth < 1350)\n                ? 'oneCardPerRow'\n                : ''\n            }\n          />\n        ))}\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default ProjectFolderProjectCards;\n","import React from 'react';\nimport { isEqual } from 'lodash-es';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { IAvatars, randomAvatarsStream } from 'services/avatars';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\n\ninterface InputProps {\n  limit?: number;\n  context?: {\n    type: 'project' | 'group' | 'idea' | 'initiative';\n    id: string;\n  };\n}\n\ntype children = (renderProps: GetRandomAvatarsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  avatars: IAvatars | undefined | null;\n}\n\nexport type GetRandomAvatarsChildProps = IAvatars | undefined | null;\n\nexport default class GetRandomAvatars extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      avatars: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { limit, context } = this.props;\n    this.inputProps$ = new BehaviorSubject({ limit, context });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => isEqual(prev, next)),\n          switchMap(({ limit, context }) => {\n            if (context) {\n              return randomAvatarsStream({\n                queryParameters: {\n                  limit,\n                  context_type: context.type,\n                  context_id: context.id,\n                },\n              }).observable;\n            }\n\n            return randomAvatarsStream({\n              queryParameters: {\n                limit,\n              },\n            }).observable;\n          })\n        )\n        .subscribe((avatars) =>\n          this.setState({ avatars: !isNilOrError(avatars) ? avatars : null })\n        ),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { limit, context } = this.props;\n    this.inputProps$.next({ limit, context });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { avatars } = this.state;\n    return (children as children)(avatars);\n  }\n}\n","import React, { memo, useCallback } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Modal from 'components/UI/Modal';\nimport SharingButtons from 'components/Sharing/SharingButtons';\n\n// hooks\nimport useAuthUser from 'hooks/useAuthUser';\nimport useProjectFolder from '../../../hooks/useProjectFolder';\n\n// i18n\nimport T from 'components/T';\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\n\n// style\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 400px;\n  padding: 40px 25px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ninterface Props {\n  projectFolderId: string;\n  opened: boolean;\n  className?: string;\n  close: () => void;\n}\n\nconst ProjectFolderSharingModal = memo<\n  Props & InjectedIntlProps & InjectedLocalized\n>(({ projectFolderId, className, opened, close, intl: { formatMessage } }) => {\n  const authUser = useAuthUser();\n  const projectFolder = useProjectFolder({ projectFolderId });\n\n  const folderUrl = location.href;\n  const utmParams = !isNilOrError(authUser)\n    ? {\n        source: 'share_folder',\n        campaign: 'share_content',\n        content: authUser.id,\n      }\n    : {\n        source: 'share_folder',\n        campaign: 'share_content',\n      };\n\n  const onClose = useCallback(() => {\n    close();\n  }, [close]);\n\n  if (!isNilOrError(projectFolder)) {\n    return (\n      <Modal\n        width={550}\n        opened={opened}\n        close={onClose}\n        closeOnClickOutside={true}\n        noClose={false}\n        header={<T value={projectFolder.attributes.title_multiloc} />}\n      >\n        <Container className={className || ''}>\n          {opened && (\n            <>\n              <T value={projectFolder.attributes.title_multiloc} maxLength={50}>\n                {(projectFolderName) => {\n                  return (\n                    <SharingButtons\n                      context=\"folder\"\n                      url={folderUrl}\n                      twitterMessage={formatMessage(messages.twitterMessage, {\n                        projectFolderName,\n                      })}\n                      whatsAppMessage={formatMessage(messages.whatsAppMessage, {\n                        projectFolderName,\n                      })}\n                      utmParams={utmParams}\n                      layout=\"columnLayout\"\n                    />\n                  );\n                }}\n              </T>\n            </>\n          )}\n        </Container>\n      </Modal>\n    );\n  }\n\n  return null;\n});\n\nexport default injectIntl(injectLocalize(ProjectFolderSharingModal));\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport { Helmet } from 'react-helmet';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useAuthUser from 'hooks/useAuthUser';\nimport useAppConfigurationLocales from 'hooks/useAppConfigurationLocales';\n\n// utils\nimport { stripHtml } from 'utils/textUtils';\nimport { imageSizes } from 'utils/fileTools';\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\n// i18n\nimport { getLocalized } from 'utils/i18n';\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// typings\nimport { IProjectFolderData } from '../../../services/projectFolders';\n\ninterface Props {\n  projectFolder: IProjectFolderData;\n}\n\nconst Meta = memo<Props & InjectedIntlProps>(({ projectFolder, intl }) => {\n  const locale = useLocale();\n  const tenantLocales = useAppConfigurationLocales();\n  const authUser = useAuthUser();\n\n  if (\n    !isNilOrError(locale) &&\n    !isNilOrError(tenantLocales) &&\n    !isNilOrError(projectFolder) &&\n    projectFolder.attributes\n  ) {\n    const { formatMessage } = intl;\n    const metaTitle = formatMessage(messages.metaTitle, {\n      title: getLocalized(\n        projectFolder.attributes.title_multiloc,\n        locale,\n        tenantLocales,\n        50\n      ),\n    });\n    const description = stripHtml(\n      getLocalized(\n        projectFolder.attributes.description_multiloc,\n        locale,\n        tenantLocales\n      ),\n      250\n    );\n    const image = projectFolder.attributes.header_bg?.large;\n    const { location } = window;\n\n    return (\n      <Helmet>\n        <title>\n          {`${\n            !isNilOrError(authUser) && authUser.attributes.unread_notifications\n              ? `(${authUser.attributes.unread_notifications}) `\n              : ''\n          }\n            ${metaTitle}`}\n        </title>\n        {getCanonicalLink()}\n        {getAlternateLinks(tenantLocales)}\n        <meta name=\"title\" content={metaTitle} />\n        <meta name=\"description\" content={description} />\n        <meta property=\"og:title\" content={metaTitle} />\n        <meta property=\"og:description\" content={description} />\n        {image && <meta property=\"og:image\" content={image} />}\n        <meta\n          property=\"og:image:width\"\n          content={`${imageSizes.projectBg.large[0]}`}\n        />\n        <meta\n          property=\"og:image:height\"\n          content={`${imageSizes.projectBg.large[1]}`}\n        />\n        <meta property=\"og:url\" content={location.href} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      </Helmet>\n    );\n  }\n\n  return null;\n});\n\nexport default injectIntl(Meta);\n","import React, { memo, useMemo } from 'react';\nimport { isError, isUndefined } from 'lodash-es';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { moderatesFolder } from '../../../permissions/roles';\n\n// components\nimport ProjectFolderShowPageMeta from './ProjectFolderShowPageMeta';\nimport ProjectFolderHeader from './ProjectFolderHeader';\nimport ProjectFolderDescription from './ProjectFolderDescription';\nimport ProjectFolderProjectCards from './ProjectFolderProjectCards';\nimport Button from 'components/UI/Button';\nimport { Spinner } from 'cl2-component-library';\nimport ContentContainer from 'components/ContentContainer';\n\n// hooks\nimport useAuthUser from 'hooks/useAuthUser';\nimport useLocale from 'hooks/useLocale';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport useProjectFolder from '../../../hooks/useProjectFolder';\nimport useAdminPublicationPrefetchProjects from 'hooks/useAdminPublicationPrefetchProjects';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// style\nimport styled from 'styled-components';\nimport { maxPageWidth } from './styles';\nimport { media, fontSizes, colors } from 'utils/styleUtils';\n\n// typings\nimport { IProjectFolderData } from '../../../services/projectFolders';\n\nconst Container = styled.main`\n  flex: 1 0 auto;\n  height: 100%;\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n\n  ${media.smallerThan1100px`\n    background: ${colors.background};\n  `}\n\n  ${media.smallerThanMaxTablet`\n    min-height: calc(100vh - ${(props) => props.theme.mobileMenuHeight}px - ${(\n    props\n  ) => props.theme.mobileTopBarHeight}px);\n  `}\n`;\n\nconst Loading = styled.div`\n  flex: 1 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledContentContainer = styled(ContentContainer)`\n  padding-top: 30px;\n  background: #fff;\n\n  @media (min-width: 1100px) {\n    padding-left: 60px;\n    padding-right: 60px;\n  }\n`;\n\nconst ButtonBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-bottom: 10px;\n`;\n\nconst EditButton = styled(Button)`\n  margin-left: 30px;\n`;\n\nconst StyledProjectFolderHeader = styled(ProjectFolderHeader)`\n  flex: 1;\n  height: 240px;\n  margin-bottom: 30px;\n\n  ${media.smallerThanMinTablet`\n    height: 140px;\n  `};\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  margin-bottom: 110px;\n\n  ${media.smallerThan1100px`\n    flex-direction: column;\n    align-items: stretch;\n  `};\n`;\n\nconst StyledProjectFolderDescription = styled(ProjectFolderDescription)`\n  flex: 1;\n\n  ${media.smallerThan1100px`\n    margin-bottom: 40px;\n  `};\n`;\n\nconst StyledProjectFolderProjectCards = styled(ProjectFolderProjectCards)`\n  flex: 0 0 800px;\n  width: 800px;\n  padding: 20px;\n  padding-bottom: 0px;\n  margin-left: 80px;\n  margin-top: 4px;\n  background: ${colors.background};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  &.oneCardPerRow {\n    flex: 0 0 500px;\n    width: 500px;\n  }\n\n  ${media.smallerThan1100px`\n    flex: 1;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    border-radius: 0;\n  `};\n`;\n\nconst NotFoundWrapper = styled.div`\n  height: 100%;\n  flex: 1 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 4rem;\n  font-size: ${fontSizes.large}px;\n  color: ${colors.label};\n`;\n\nconst CardsWrapper = styled.div`\n  padding-top: 40px;\n  padding-bottom: 40px;\n  background: ${colors.background};\n`;\n\nconst ProjectFolderShowPage = memo<{\n  projectFolder: IProjectFolderData;\n}>(({ projectFolder }) => {\n  const authUser = useAuthUser();\n  const locale = useLocale();\n  const tenant = useAppConfiguration();\n  const {\n    childrenOf: adminPublicationChildrenOf,\n    list: adminPublicationsList,\n  } = useAdminPublicationPrefetchProjects({\n    publicationStatusFilter: ['published', 'archived'],\n  });\n  const { windowWidth } = useWindowSize();\n\n  const smallerThan1100px = windowWidth ? windowWidth <= 1100 : false;\n  const folderNotFound = isError(projectFolder);\n\n  const childProjects = useMemo(() => {\n    if (isNilOrError(projectFolder.relationships.admin_publication)) {\n      return;\n    }\n\n    return adminPublicationChildrenOf({\n      id: projectFolder.relationships.admin_publication?.data?.id,\n    });\n  }, [adminPublicationChildrenOf, projectFolder]);\n\n  const loading =\n    isUndefined(locale) ||\n    isUndefined(tenant) ||\n    isUndefined(projectFolder) ||\n    isUndefined(adminPublicationsList);\n\n  const userCanEditFolder =\n    !isNilOrError(authUser) && moderatesFolder(authUser, projectFolder.id);\n\n  return (\n    <>\n      <ProjectFolderShowPageMeta projectFolder={projectFolder} />\n      <Container id=\"e2e-folder-page\">\n        {folderNotFound ? (\n          <NotFoundWrapper>\n            <p>\n              <FormattedMessage {...messages.noFolderFoundHere} />\n            </p>\n            <Button\n              linkTo=\"/projects\"\n              text={<FormattedMessage {...messages.goBackToList} />}\n              icon=\"arrow-back\"\n            />\n          </NotFoundWrapper>\n        ) : loading ? (\n          <Loading>\n            <Spinner />\n          </Loading>\n        ) : !isNilOrError(projectFolder) && !isNilOrError(locale) ? (\n          <>\n            {!smallerThan1100px ? (\n              <StyledContentContainer maxWidth={maxPageWidth}>\n                {userCanEditFolder && (\n                  <ButtonBar>\n                    <EditButton\n                      icon=\"edit\"\n                      linkTo={`/admin/projects/folders/${projectFolder.id}/settings`}\n                      buttonStyle=\"secondary\"\n                      padding=\"5px 8px\"\n                    >\n                      <FormattedMessage {...messages.editFolder} />\n                    </EditButton>\n                  </ButtonBar>\n                )}\n                <StyledProjectFolderHeader projectFolder={projectFolder} />\n                <Content>\n                  <StyledProjectFolderDescription\n                    projectFolder={projectFolder}\n                  />\n                  <StyledProjectFolderProjectCards\n                    list={childProjects}\n                    className={\n                      childProjects?.filter(\n                        (item) => item.publicationType === 'project'\n                      )?.length === 1 ||\n                      (windowWidth > 1000 && windowWidth < 1350)\n                        ? 'oneCardPerRow'\n                        : ''\n                    }\n                  />\n                </Content>\n              </StyledContentContainer>\n            ) : (\n              <>\n                <StyledContentContainer maxWidth={maxPageWidth}>\n                  <StyledProjectFolderHeader projectFolder={projectFolder} />\n                  <StyledProjectFolderDescription\n                    projectFolder={projectFolder}\n                  />\n                </StyledContentContainer>\n                <CardsWrapper>\n                  <ContentContainer maxWidth={maxPageWidth}>\n                    <StyledProjectFolderProjectCards list={childProjects} />\n                  </ContentContainer>\n                </CardsWrapper>\n              </>\n            )}\n          </>\n        ) : null}\n      </Container>\n    </>\n  );\n});\n\nconst ProjectFolderShowPageWrapper = memo<WithRouterProps>(\n  ({ params: { slug } }) => {\n    const projectFolder = useProjectFolder({ projectFolderSlug: slug });\n\n    if (!isNilOrError(projectFolder)) {\n      return <ProjectFolderShowPage projectFolder={projectFolder} />;\n    }\n\n    return null;\n  }\n);\n\nexport default withRouter(ProjectFolderShowPageWrapper);\n","import React, { memo } from 'react';\n\n// components\nimport Image from 'components/UI/Image';\nimport ProjectFolderShareButton from '../../../citizen/components/ProjectFolderShareButton';\n\n// hooks\nimport useWindowSize from 'hooks/useWindowSize';\n\n// style\nimport styled from 'styled-components';\nimport { media } from 'utils/styleUtils';\n\n// typings\nimport { IProjectFolderData } from '../../../services/projectFolders';\n\nconst Container = styled.div`\n  width: 100%;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  overflow: hidden;\n  display: flex;\n  align-items: stretch;\n  position: relative;\n`;\n\nconst HeaderImage = styled(Image)`\n  flex: 1;\n  width: 100%;\n`;\n\nconst StyledProjectFolderShareButton = styled(ProjectFolderShareButton)`\n  position: absolute;\n  right: 25px;\n  bottom: 20px;\n\n  ${media.smallerThan1100px`\n    right: 10px;\n    top: 10px;\n  `};\n`;\n\ninterface Props {\n  projectFolder: IProjectFolderData;\n  className?: string;\n}\n\nconst ProjectFolderHeader = memo<Props>(({ projectFolder, className }) => {\n  const { windowWidth } = useWindowSize();\n\n  const smallerThan1100px = windowWidth ? windowWidth <= 1100 : false;\n\n  if (projectFolder.attributes?.header_bg?.large) {\n    return (\n      <Container className={`${className || ''} e2e-header-folder`}>\n        <HeaderImage\n          src={projectFolder.attributes?.header_bg.large}\n          cover={true}\n          fadeIn={false}\n          isLazy={false}\n          placeholderBg=\"transparent\"\n          alt=\"\"\n        />\n        <StyledProjectFolderShareButton\n          projectFolder={projectFolder}\n          buttonStyle=\"white\"\n          padding={smallerThan1100px ? '4px 10px' : '6px 13px'}\n        />\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default ProjectFolderHeader;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  twitterMessage: {\n    id:\n      'app.modules.project_folder.citizen.components.ProjectFolderSharingModal.twitterMessage',\n    defaultMessage: '{projectFolderName}',\n  },\n  whatsAppMessage: {\n    id:\n      'app.modules.project_folder.citizen.components.ProjectFolderSharingModal.whatsAppMessage',\n    defaultMessage:\n      '{projectFolderName} | from the participation platform of {orgName}',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  numberOfUsers: {\n    id: 'app.components.AvatarBubbles.numberOfUsers',\n    defaultMessage: '{numberOfUsers} users',\n  },\n});\n","import React, { memo, useState, useCallback, FormEvent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Button, { Props as ButtonProps } from 'components/UI/Button';\nimport ProjectFolderSharingModal from '../../../citizen/components/ProjectFolderSharingModal';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// style\nimport styled from 'styled-components';\n\n// typings\nimport { IProjectFolderData } from '../../../services/projectFolders';\n\nconst Container = styled.div``;\n\nconst ShareButton = styled(Button)``;\n\ninterface Props extends Omit<ButtonProps, 'onClick'> {\n  projectFolder: IProjectFolderData;\n  className?: string;\n}\n\nconst ProjectFolderShareButton = memo<Props>(\n  ({ projectFolder, className, ...buttonContainerProps }) => {\n    const [shareModalOpened, setShareModalOpened] = useState(false);\n\n    const openShareModal = useCallback((event: FormEvent) => {\n      event.preventDefault();\n      setShareModalOpened(true);\n    }, []);\n\n    const closeShareModal = useCallback(() => {\n      setShareModalOpened(false);\n    }, []);\n\n    if (!isNilOrError(projectFolder)) {\n      return (\n        <>\n          <Container className={className || ''}>\n            <ShareButton\n              icon=\"share\"\n              onClick={openShareModal}\n              {...buttonContainerProps}\n            >\n              <FormattedMessage {...messages.share} />\n            </ShareButton>\n          </Container>\n          <ProjectFolderSharingModal\n            projectFolderId={projectFolder.id}\n            opened={shareModalOpened}\n            close={closeShareModal}\n          />\n        </>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default ProjectFolderShareButton;\n","import React from 'react';\nimport { isEqual } from 'lodash-es';\nimport { Subscription, BehaviorSubject, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, map, filter } from 'rxjs/operators';\nimport { IAvatarData, avatarByIdStream } from 'services/avatars';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  ids?: string[];\n}\n\ntype children = (renderProps: GetAvatarsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  avatars: (IAvatarData | Error)[] | undefined | null | Error;\n}\n\nexport type GetAvatarsChildProps =\n  | (IAvatarData | Error)[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetAvatars extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      avatars: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { ids } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ ids });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => isEqual(prev, next)),\n          filter(({ ids }) => !!(ids && ids.length > 0)),\n          switchMap(({ ids }: { ids: string[] }) => {\n            return combineLatest(\n              ids.map((id) =>\n                avatarByIdStream(id).observable.pipe(\n                  map((avatar) =>\n                    !isNilOrError(avatar) ? avatar.data : avatar\n                  )\n                )\n              )\n            );\n          })\n        )\n        .subscribe((avatars) => {\n          this.setState({ avatars });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    this.inputProps$.next({ ids: this.props.ids });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { avatars } = this.state;\n    return (children as children)(avatars);\n  }\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  projectFolderTwitterMessage: {\n    id: 'app.containers.ProjectFolderShowPage.projectFolderTwitterMessage',\n    defaultMessage: '{title} | {orgName}',\n  },\n  projectFolderWhatsAppMessage: {\n    id: 'app.containers.ProjectFolderShowPage.projectFolderWhatsAppMessage',\n    defaultMessage: '{title} | {orgName}',\n  },\n  metaTitle: {\n    id: 'app.containers.ProjectFolderShowPage.metaTitle',\n    defaultMessage: '{title}',\n  },\n  invisibleTitleMainContent: {\n    id: 'app.containers.ProjectFolderShowPage.invisibleTitleMainContent',\n    defaultMessage: 'Information about this folder',\n  },\n  noFolderFoundHere: {\n    id: 'app.containers.ProjectFolderShowPage.noFolderFoundHere',\n    defaultMessage:\n      '{tenantName, select, CQC {Log in to view this folder.} other {There is no folder here.}}',\n  },\n  goBackToList: {\n    id: 'app.containers.ProjectFolderShowPage.goBackToList',\n    defaultMessage: 'Go back to the list',\n  },\n  share: {\n    id: 'app.containers.ProjectFolderShowPage.share',\n    defaultMessage: 'Share',\n  },\n  readMore: {\n    id: 'app.containers.ProjectFolderShowPage.readMore',\n    defaultMessage: 'Read more',\n  },\n  seeLess: {\n    id: 'app.containers.ProjectFolderShowPage.seeLess',\n    defaultMessage: 'See less',\n  },\n  editFolder: {\n    id: 'app.containers.ProjectFolderShowPage.editFolder',\n    defaultMessage: 'Edit folder',\n  },\n});\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\n\nconst apiEndpoint = `${API_PATH}/avatars`;\n\nexport interface IAvatarData {\n  id: string;\n  type: string;\n  attributes: {\n    avatar: {\n      small: string;\n      medium: string;\n      large: string;\n    };\n  };\n}\n\nexport interface IAvatar {\n  data: IAvatarData;\n}\n\nexport interface IAvatars {\n  data: IAvatarData[];\n  meta: {\n    total: number;\n  };\n}\n\n/*\n * cf http://developers.citizenlab.co/api-docs/frontweb_api/epic/CL2-2838-landing-page-i1/avatars/list_random_user_avatars.html\n * limit: number of avaters returned, defaults to 5, max 10.\n * context_type: when null, context is the whole platform.\n */\ninterface IAvatarsQueryParams {\n  limit?: number | null;\n  context_type?: 'group' | 'project' | 'idea' | 'initiative' | null;\n  context_id?: string | null;\n}\n\ninterface IStreamAvatarsParams extends IStreamParams {\n  queryParameters?: IAvatarsQueryParams;\n}\n\nexport function avatarByIdStream(avatarId: string) {\n  return streams.get<IAvatar>({\n    apiEndpoint: `${API_PATH}/avatars/${avatarId}`,\n    cacheStream: false,\n  });\n}\n\nexport function randomAvatarsStream(\n  streamParams: IStreamAvatarsParams | null = null\n) {\n  return streams.get<IAvatars>({\n    apiEndpoint,\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n"],"sourceRoot":""}