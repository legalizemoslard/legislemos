{"version":3,"sources":["webpack:///./app/components/Sharing/SharingDropdownButton/index.tsx","webpack:///./app/components/PostShowComponents/Comments/LoadingComments.tsx","webpack:///./app/components/VoteControl/VotingDisabled.tsx","webpack:///./app/components/PostShowComponents/SharingModalContent/index.tsx","webpack:///./app/containers/ProjectsShowPage/styles.ts","webpack:///./app/components/UI/PopContainer/index.tsx","webpack:///./app/components/IdeaButton/index.tsx","webpack:///./app/components/PostShowComponents/SharingModalContent/rocket.png","webpack:///./app/components/PostShowComponents/Image.tsx","webpack:///./app/containers/IdeasShow/MetaInformation/messages.ts","webpack:///./app/containers/IdeasShow/MetaInformation/IdeaTopics.tsx","webpack:///./app/resources/GetIdeaImages.tsx","webpack:///./app/components/IdeasMap/messages.ts","webpack:///./app/containers/IdeasShow/MetaInformation/Status.tsx","webpack:///./app/resources/GetInitiative.tsx","webpack:///./app/components/IdeasMap/desktop/IdeaMapOverlay.tsx","webpack:///./app/containers/IdeasShow/index.tsx","webpack:///./app/containers/IdeasShow/Buttons/IdeaSharingButton.tsx","webpack:///./app/containers/IdeasShow/RightColumnDesktop/index.tsx","webpack:///./app/containers/IdeasShow/IdeaProposedBudget.tsx","webpack:///./app/containers/IdeasShow/Buttons/GoToCommentsButton.tsx","webpack:///./app/containers/IdeasShow/Buttons/MobileSharingButtonComponent.tsx","webpack:///./app/components/Map/index.tsx","webpack:///./app/containers/IdeasShow/Buttons/SharingButtonComponent.tsx","webpack:///./app/components/IdeasMap/desktop/IdeasList.tsx","webpack:///./app/containers/IdeasShow/MetaInformation/Location.tsx","webpack:///./app/components/Sharing/SharingDropdownButton/SharingDropdownContent.tsx","webpack:///./app/containers/IdeasShow/IdeaMoreActions.tsx","webpack:///./app/containers/IdeasShow/MetaInformation/Attachment.tsx","webpack:///./app/containers/IdeasShowPage/IdeaShowPageTopBar.tsx","webpack:///./app/components/UI/LeafletMap/events.ts","webpack:///./app/containers/IdeasShow/MetaInformation/PostedBy.tsx","webpack:///./app/components/IdeaButton/tracks.ts","webpack:///./app/containers/IdeasShow/CTABox/VotingCTABox/Voting.tsx","webpack:///./app/hooks/useIdeaMarkers.ts","webpack:///./app/containers/IdeasShow/messages.ts","webpack:///./app/components/PostShowComponents/Topics.tsx","webpack:///./app/components/IdeasMap/events.ts","webpack:///./app/containers/IdeasShow/Buttons/IdeaCTAButton.tsx","webpack:///./app/containers/IdeasShow/IdeaMeta.tsx","webpack:///./app/components/PostShowComponents/SharingModalContent/messages.ts","webpack:///./app/components/PostShowComponents/SharingModalContent/tracks.ts","webpack:///./app/services/initiatives.ts","webpack:///./app/containers/IdeasShow/CTABox/Buttons/index.tsx","webpack:///./app/containers/IdeasShowPage/messages.ts","webpack:///./app/components/IdeasMap/index.tsx","webpack:///./app/containers/IdeasShow/tracks.ts","webpack:///./app/resources/GetPermission.tsx","webpack:///./app/containers/IdeasShow/styleConstants.ts","webpack:///./app/containers/IdeasShow/MetaInformation/index.tsx","webpack:///./app/containers/IdeasShow/MetaInformation/Attachments.tsx","webpack:///./app/services/actionTakingRules.ts","webpack:///./app/containers/IdeasShow/GoBackButton.tsx","webpack:///./app/components/IdeaButton/messages.ts","webpack:///./app/containers/IdeasShow/isFieldEnabled.ts","webpack:///./app/resources/GetComments.tsx","webpack:///./app/components/IdeasMap/IdeaMapCard.tsx"],"names":["className","url","twitterMessage","whatsAppMessage","emailSubject","emailBody","utmParams","buttonComponent","dropdownContent","Container","styled","div","LoadingMessage","colors","label","fontSizes","medium","props","FormattedMessage","messages","loadingComments","small","StyledLink","Link","clBlueDark","darken","StyledButton","button","memo","projectTitle","disabled_reason","future_enabled","projectId","votingDescriptor","project","authUser","stopPropagation","event","isNilOrError","message","votingPossibleLater","votingDisabledProjectInactive","votingDisabledMaxReached","votingDisabledFutureEnabled","votingDisabledPhaseOver","votingNotPermitted","votingNotVerified","votingNotEnabled","enabledFromDate","FormattedDate","value","year","month","day","projectName","attributes","title_multiloc","to","slug","onClick","pcType","process_type","pcId","id","relationships","current_phase","data","verificationLink","preventDefault","openVerificationModal","context","action","type","onVerify","onMouseDown","linkToVerificationText","values","Loading","Rocket","img","media","smallerThanMaxTablet","Title","h1","theme","colorText","xxxxl","xxxl","Description","p","large","base","SharingWrapper","SharingModalContent","postType","idea","initiative","localize","locale","postTitle","postUrl","location","origin","phases","emailSharingSubject","emailSharingBody","inputTerm","getInputTerm","getInputTermMessage","ideaEmailSharingSubjectText","option","optionEmailSharingSubject","projectEmailSharingSubject","question","questionEmailSharingSubject","issue","issueEmailSharingSubject","contribution","contributionEmailSharingSubject","ideaEmailSharingBody","optionEmailSharingBody","projectEmailSharingBody","questionEmailSharingModalContentBody","issueEmailSharingBody","contributionEmailSharingBody","ideaWhatsAppMessage","optionWhatsAppMessage","projectWhatsAppMessage","questionWhatsAppMessage","issueWhatsAppMessage","contributionWhatsAppMessage","initiativeEmailSharingSubject","initiativeEmailSharingBody","whatsAppMessageProposal","getIdeaMessages","getInitiativeMessages","this","postId","trackEventByName","tracks","sharingModalOpened","name","title","subtitle","formatMessage","intl","getPostValues","getMessages","src","rocket","alt","isInModal","source","campaign","content","Spinner","PureComponent","SharingModalContentWithHoCs","Data","adopt","tenant","render","ideaId","inputProps","dataProps","ProjectPageSectionTitle","h2","xxl","isRtl","enterAnimation","keyframes","borderRadius","separation","css","IconWrapper","StyledIcon","Icon","icon","children","ButtonWrapper","TooltipContent","inMap","TooltipContentIcon","TooltipContentText","IdeaButton","phase","participationContextType","phaseId","latLng","buttonContainerProps","disabledMessages","notPermitted","postingNoPermission","postingDisabled","projectInactive","postingInactive","futureEnabled","postingNotYetPossible","notActivePhase","postingInNonActivePhases","maybeNotPermitted","postingMayNotBePermitted","getIdeaPostingRules","show","enabled","disabledReason","redirectToIdeaForm","redirectedToIdeaFrom","clHistory","push","pathname","search","stringify","lat","lng","addQueryPrefix","undefined","verify","verificationModalOpened","signUp","signUpIn","flow","shouldVerify","signUpInModalOpened","openSignUpInModal","verification","verificationContext","verificationLinkText","signUpLink","signUpLinkText","signInLink","signInLinkText","tippyContent","ariaHidden","disabled","interactive","placement","hideOnClick","tabIndex","postYourIdeaButtonClicked","ariaDisabled","submitYourIdea","addAnOption","addAProject","addAQuestion","submitAnIssue","addAContribution","IdeaButtonWithHoC","injectIntl","Image","defineMessages","postedBy","defaultMessage","currentStatus","topics","attachments","byUserOnDate","compact","topicIds","map","item","length","Item","Header","GetIdeaImages","state","ideaImages","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","switchMap","isString","ideaImagesStream","observable","of","subscribe","setState","forEach","subscription","unsubscribe","React","Component","ideaOnMapReadMore","nothingOnMapWarning","postingHereImpossible","postingNotPermitted","postingMaybeNotPermitted","postingProjectInactive","postingNotActivePhase","a11y_mapTitle","or","noResults","noFilteredResults","clickOnMapToAdd","tapOnMapToAdd","statusId","ideaStatus","GetInitiative","resetOnChange","tap","initiativeByIdStream","initiativeBySlugStream","defaultCardStyle","InnerOverlay","right","StyledIdeaShowPageTopBar","IdeaShowPageTopBar","StyledIdeasShow","IdeasShow","StyledIdeasList","IdeasList","projectIds","windowWidth","smallerThan1440px","useState","selectedIdeaId","setSelectedIdeaId","scrollContainerElement","setScrollContainerElement","useEffect","ideaMapCardSelected$","setIdeaMapCardSelected","scrollTop","classNames","in","timeout","mounOnEnter","unmountOnExit","enter","exit","goBackAction","insideModal","setRef","element","LazyComments","lazy","main","pageContentMaxWidth","Content","LeftColumn","StyledRightColumnDesktop","RightColumnDesktop","columnsGapDesktop","IdeaHeader","MobileIdeaMoreActions","IdeaMoreActions","TopBar","StyledGoBackButton","GoBackButton","BodySectionTitle","StyledBody","Body","StyledIdeaProposedBudget","IdeaProposedBudget","MobileMetaInformation","MetaInformation","StyledAssignBudgetControl","AssignBudgetControl","MobileIdeaSharingButton","IdeaSharingButton","StyledOfficialFeedback","OfficialFeedback","Comments","loaded","officialFeedbacks","isUndefined","officialFeedbacksList","ideaIdForSocialSharing","prevState","translateButtonClicked","trackEvent","clickGoBackToOriginalIdeaCopyButton","clickTranslateIdeaButton","ideaPhaseIds","ideaPhases","filter","includes","getLatestRelevantPhase","spamModalVisible","newIdeaId","query","setLoaded","setTimeout","window","history","replaceState","windowSize","postOfficialFeedbackPermission","ideaCustomFieldsSchemas","authorId","author","ideaTitle","idea_status","ideaImageLarge","versions","proposedBudget","proposed_budget","ideaBody","body_multiloc","isCompactView","viewportWidths","largeTablet","proposedBudgetEnabled","onTranslateIdea","proposedBudgetTitle","bodyTitle","body","view","permissionToPost","Suspense","fallback","contentFadeInDuration","ref","handleContainerRef","opened","close","closeIdeaSocialSharingModal","hasSkipButton","skipText","skipSharing","sharingModalTitle","optionSharingModalTitle","projectSharingModalTitle","questionSharingModalTitle","issueSharingModalTitle","contributionSharingModalTitle","sharingModalSubtitle","IdeasShowWithHOCs","withRouter","comments","href","ideaTwitterMessage","optionTwitterMessage","projectTwitterMessage","questionTwitterMessage","issueTwitterMessage","contributionTwitterMessage","ideaEmailSharingSubject","questionEmailSharingBody","ideaUrl","rightColumnWidthDesktop","InnerContainer","Box","backgroundLightGrey","StyledVoting","Voting","StyledMetaInformation","smallerThanMinTablet","GoToCommentsButton","useCallback","commentInputElementAnchor","document","getElementById","commentInputElement","focus","preventScroll","scrollIntoView","behavior","block","buttonText","commentCTA","iconName","ariaExpanded","buttonStyle","borderColor","iconAriaHidden","share","LeafletMap","MapWrapper","BoxContainer","CloseButton","defaultOutline","CloseIcon","centerLatLng","zoomLevel","mapHeight","points","noMarkerClustering","zoomControlPosition","layersControlPosition","boxContent","onInit","onBoxClose","hideLegend","appConfig","additionalLeafletConfig","setAdditionalLeafletConfig","center","useMemo","getCenter","zoom","getZoomLevel","tileProvider","getTileProvider","tileOptions","getTileOptions","leafletConfig","handleLeafletConfigChange","onLeafletConfigChange","DropdownFilters","StyledSearchInput","SearchInput","IdeaMapCards","StyledIdeaMapCard","IdeaMapCard","EmptyContainer","IdeaIcon","EmptyMessage","EmptyMessageLine","fieldCode","setSearch","setTopics","ideas_order","ideaDefaultSortMethodFallback","sort","setSort","ideaMarkers","isFiltered","isPBProject","participation_method","isPBPhase","isPBIdea","topicsEnabled","ui_schema_multiloc","ideasSearch$","ideasSort$","ideasTopics$","onChange","newSort","setIdeasSort","alignment","defaultSortingMethod","newTopics","setIdeasTopics","newSearchValue","setIdeasSearch","ideaMarker","key","OpenMapModalButton","Address","MapContainer","Location","isOpened","setIsOpened","point","location_point_geojson","coordinates","address","getAddressOrFallbackDMS","location_description","isNil","header","width","biggerThanMaxTablet","FacebookIcon","MessengerIcon","WhatsAppIcon","TwitterIcon","EmailIcon","secondaryText","getUrl","getUrlWithUtm","handleClick","shareButtonClicked","network","facebook","messenger","whatsapp","twitter","email","MoreActionsMenuWrapper","isSpamModalVisible","setIsSpamModalVisible","openSpamModal","processType","ariaLabel","moreOptions","actions","reportAsSpam","handler","editPost","deletePost","deleteConfirmationMessage","continuous","deleteInputConfirmation","timeline","deleteInputInTimelineConfirmation","confirm","deleteIdea","goBack","onDeleteIdea","No","reportAsSpamModalTitle","resourceId","resourceType","FileDownloadLink","a","PaperclipIcon","file","download","target","rel","mobileTopBarHeight","lighten","TopBarInner","biggerThanMinTablet","Left","Right","GoBackIcon","GoBackLabel","phone","onGoBack","eventEmitter","emit","onDisabledVoteClick","styleType","size","disabledVoteClick","events","leafletMapCenterChange","leafletMapZoomChange","markerId","leafletMapHoveredMarkerChange","leafletMapSelectedMarkerChange","leafletMapClicked","leafletMapCenter$","observeEvent","eventValue","x","y","isEqual","publishReplay","refCount","leafletMapZoom$","leafletMapHoveredMarker$","leafletMapSelectedMarker$","leafletMapClicked$","debounceTime","UserWrapper","StyledAvatar","Avatar","PostedBy","ideaPublishedAtDate","published_at","userName","userId","isLinkToProfile","underline","color","fontSize","date","redirectedToSignUpForm","VoteControlWrapper","VoteWrapper","error","isContainerVisible","prevProps","action_descriptor","voting_idea","voteControlComponent","setVoteControlRef","setIdeaMarkers","ideasMarkersStream","queryParameters","location_required","projects","response","deletedUser","send","createdTimeAgo","Topic","colorSecondary","transparentize","Topics","topic","ideaMapCardSelectedChange","ideasSortChange","searchValue","ideasSearchChange","ideasTopicsChange","fontWeight","IdeaMeta","tenantLocales","settings","core","locales","localizedTitle","ideaDescription","stripHtml","ideaImage","fb","projectSlug","articleJson","image","headline","first_name","last_name","mainEntityOfPage","datePublished","json","itemListElement","position","host","logo","Helmet","unread_notifications","property","imageSizes","ideaImg","JSON","get","IdeaMetaWithHoc","initiativeSlug","streams","apiEndpoint","API_PATH","streamParams","cacheStream","initiativeId","object","add","update","fetchAllWith","Promise","all","first","toPromise","delete","StyledGoToCommentsButton","commentingEnabled","commenting_idea","noResultsFound","goBackToList","mapHeightDesktop","mapHeightMobile","leftMargin","mapMarginDesktop","maxPageWidth","isPostingEnabled","InfoOverlay","InfoOverlayInner","InfoOverlayIcon","clBlueDarker","InfoOverlayText","text","IdeaButtonWrapper","StyledDesktopIdeaMapOverlay","DesktopIdeaMapOverlay","isClickable","getInnerContainerLeftMargin","containerWidth","Math","round","initialWindowWidth","max","documentElement","clientWidth","innerWidth","initialContainerWidth","offsetWidth","initialInnerContainerLeftMargin","containerRef","useRef","ideaButtonWrapperRef","setMap","selectedLatLng","setSelectedLatLng","selectedIdeaMarkerId","setSelectedIdeaMarkerId","setPoints","setContainerWidth","innerContainerLeftMargin","setInnerContainerLeftMargin","isCardClickable","setIsCardClickable","defaultIdeasSort","defaultIdeasTopics","ideaPostingRules","isIdeaPostingEnabled","useLayoutEffect","current","getBoundingClientRect","toJSON","setLeafletMapSelectedMarker","_prevIdeaIdideaId","popup","closeButton","setLatLng","setContent","openOn","ideaPoints","selectedIdeaMarker","find","ScreenReaderOnly","CSSTransition","onClose","setLeafletMapHoveredMarker","clickUpvote","clickDownvote","GetPermission","permission","hasPermission","locationEnabled","attachmentsEnabled","StyledAttachment","Attachment","isLastItem","files","Array","isArray","index","signedIn","posting_idea","isAdmin","isProjectModerator","posting_enabled","pastPresentOrFuture","start_at","end_at","backendReason","ideaPostingDisabledReason","pollTakingDisabledReason","phaseContext","taking_poll","surveyTakingDisabledReason","inCurrentPhase","taking_survey","Button","iconSize","padding","textDecorationHover","GetComments","pageNumber","pageSize","hasMore","loadMore$","sort$","commentsList","loadingInital","loadingMore","postId$","postType$","initialQueryParameters","combineLatest","mergeScan","commentsForIdeaStream","commentsForInitiativeStream","selfLink","lastLink","unionBy","onLoadMore","loadMore","onChangeSort","changeSort","CloseButtonWrapper","h3","Footer","FooterItem","MoneybagIcon","DownvoteIcon","UpvoteIcon","CommentIcon","FooterValue","hovered","setHovered","hoverredIdeaId","handleOnClick","tenantCurrency","currency","ideaBudget","budget","onKeyPress","onMouseEnter","onMouseLeave","role","height","upvotes_count","downvotes_count","comments_count"],"mappings":"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","file":"69.3a87e3621c8ae9022e60.chunk.js","sourcesContent":["import React from 'react';\nimport ButtonWithDropdown from 'components/UI/ButtonWithDropdown';\nimport SharingDropdownContent from './SharingDropdownContent';\nimport { UtmParams } from '../utils';\n\ninterface Props {\n  className?: string;\n  twitterMessage: string;\n  whatsAppMessage: string;\n  emailSubject: string;\n  emailBody: string;\n  utmParams: UtmParams;\n  url: string;\n  buttonComponent: JSX.Element;\n}\n\nconst SharingDropdownButton = ({\n  className,\n  url,\n  twitterMessage,\n  whatsAppMessage,\n  emailSubject,\n  emailBody,\n  utmParams,\n  buttonComponent,\n}: Props) => {\n  return (\n    <ButtonWithDropdown\n      className={className}\n      buttonComponent={buttonComponent}\n      dropdownContent={\n        <SharingDropdownContent\n          url={url}\n          twitterMessage={twitterMessage}\n          whatsAppMessage={whatsAppMessage}\n          emailSubject={emailSubject}\n          emailBody={emailBody}\n          utmParams={utmParams}\n        />\n      }\n    />\n  );\n};\n\nexport default SharingDropdownButton;\n","import React from 'react';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst LoadingMessage = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.medium}px;\n  font-weight: 400;\n`;\n\ninterface Props {\n  className?: string;\n}\n\nexport default (props: Props) => (\n  <Container className={props.className}>\n    <LoadingMessage>\n      <FormattedMessage {...messages.loadingComments} />\n    </LoadingMessage>\n  </Container>\n);\n","import React, { MouseEvent, memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Link from 'utils/cl-router/Link';\n\n// services\nimport { IIdeaData } from 'services/ideas';\nimport { IParticipationContextType } from 'typings';\n\n// hooks\nimport useProject from 'hooks/useProject';\nimport useAuthUser from 'hooks/useAuthUser';\n\n// i18n\nimport messages from './messages';\nimport T from 'components/T';\nimport { FormattedDate } from 'react-intl';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// utils\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\n\n// styling\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\nconst Container = styled.div`\n  width: 100%;\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  font-weight: 300;\n  line-height: 20px;\n\n  > span {\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    word-break: break-word;\n    hyphens: auto;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${colors.clBlueDark};\n  text-decoration: underline;\n\n  &:hover {\n    color: ${darken(0.15, colors.clBlueDark)};\n    text-decoration: underline;\n  }\n`;\n\nconst StyledButton = styled.button`\n  color: ${colors.clBlueDark};\n  text-decoration: underline;\n  transition: all 80ms ease-out;\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n\n  &:hover {\n    color: ${darken(0.15, colors.clBlueDark)};\n    text-decoration: underline;\n  }\n`;\n\ninterface Props {\n  projectId: string;\n  votingDescriptor: IIdeaData['attributes']['action_descriptor']['voting_idea'];\n}\n\nconst VotingDisabled = memo(({ projectId, votingDescriptor }: Props) => {\n  const project = useProject({ projectId });\n  const authUser = useAuthUser();\n\n  const onVerify = (\n    pcType: IParticipationContextType,\n    // it's theoretically possible to have a timeline project\n    // with no phases, in which case we would have no phase id\n    pcId: string | undefined\n  ) => (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    if (pcId && pcType) {\n      openVerificationModal({\n        context: {\n          action: 'voting_idea',\n          id: pcId,\n          type: pcType,\n        },\n      });\n    }\n  };\n\n  const removeFocus = (event: React.MouseEvent) => {\n    event.preventDefault();\n  };\n\n  const reasonToMessage = () => {\n    const { disabled_reason, future_enabled } = votingDescriptor;\n\n    if (disabled_reason === 'project_inactive') {\n      return future_enabled\n        ? messages.votingPossibleLater\n        : messages.votingDisabledProjectInactive;\n    } else if (disabled_reason === 'voting_disabled' && future_enabled) {\n      return messages.votingPossibleLater;\n    } else if (disabled_reason === 'voting_limited_max_reached') {\n      return messages.votingDisabledMaxReached;\n    } else if (disabled_reason === 'idea_not_in_current_phase') {\n      return future_enabled\n        ? messages.votingDisabledFutureEnabled\n        : messages.votingDisabledPhaseOver;\n    } else if (disabled_reason === 'not_permitted') {\n      return messages.votingNotPermitted;\n    } else if (authUser && disabled_reason === 'not_verified') {\n      return messages.votingNotVerified;\n    } else {\n      return messages.votingNotEnabled;\n    }\n  };\n\n  const stopPropagation = (event: MouseEvent | KeyboardEvent) => {\n    event.stopPropagation();\n  };\n\n  if (!isNilOrError(project)) {\n    const getProjectLink = () => {\n      const projectTitle = project.attributes.title_multiloc;\n\n      return (\n        <StyledLink\n          to={`/projects/${project.attributes.slug}`}\n          onClick={stopPropagation}\n        >\n          <T value={projectTitle} />\n        </StyledLink>\n      );\n    };\n    const message = reasonToMessage();\n    const enabledFromDate = votingDescriptor.future_enabled ? (\n      <FormattedDate\n        value={votingDescriptor.future_enabled}\n        year=\"numeric\"\n        month=\"long\"\n        day=\"numeric\"\n      />\n    ) : null;\n    const projectName = getProjectLink();\n    const pcType =\n      project.attributes.process_type === 'continuous' ? 'project' : 'phase';\n    const pcId =\n      pcType === 'project'\n        ? project.id\n        : project.relationships?.current_phase?.data?.id;\n    const verificationLink = (\n      <StyledButton\n        className=\"e2e-verify-button\"\n        onClick={onVerify(pcType, pcId)}\n        onMouseDown={removeFocus}\n      >\n        <FormattedMessage {...messages.linkToVerificationText} />\n      </StyledButton>\n    );\n\n    return (\n      <Container data-testid=\"votingDisabled_Container\">\n        <FormattedMessage\n          {...message}\n          values={{\n            enabledFromDate,\n            projectName,\n            verificationLink,\n          }}\n        />\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default VotingDisabled;\n","import React, { PureComponent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\nimport { getInputTerm } from 'services/participationContexts';\n\n// components\nimport SharingButtons from 'components/Sharing/SharingButtons';\nimport { Spinner } from 'cl2-component-library';\n\n// resources\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport GetInitiative, {\n  GetInitiativeChildProps,\n} from 'resources/GetInitiative';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhases, { GetPhasesChildProps } from 'resources/GetPhases';\nimport { PostType } from 'resources/GetPost';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport injectIntl from 'utils/cl-intl/injectIntl';\nimport localize, { InjectedLocalized } from 'utils/localize';\nimport messages from './messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// style\nimport styled from 'styled-components';\nimport { fontSizes, media } from 'utils/styleUtils';\nimport rocket from './rocket.png';\n\nconst Loading = styled.div`\n  width: 100%;\n  height: 460px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Rocket = styled.img`\n  width: 40px;\n  height: 40px;\n\n  ${media.smallerThanMaxTablet`\n    width: 35px;\n    height: 35px;\n  `}\n`;\n\nconst Title = styled.h1`\n  flex-shrink: 0;\n  width: 100%;\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.xxxxl}px;\n  line-height: 40px;\n  font-weight: 500;\n  text-align: center;\n  margin: 0;\n  margin-top: 20px;\n  margin-bottom: 10px;\n  padding: 0;\n\n  ${media.smallerThanMaxTablet`\n    max-width: auto;\n    font-size: ${fontSizes.xxxl}px;\n    line-height: 36px;\n  `}\n`;\n\nconst Description = styled.p`\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 500px;\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.large}px;\n  line-height: 25px;\n  font-weight: 300;\n  text-align: center;\n  margin: 0;\n  margin-top: 10px;\n  margin-bottom: 50px;\n  padding: 0;\n\n  ${media.smallerThanMaxTablet`\n    font-size: ${fontSizes.base}px;\n    line-height: 21px;\n  `}\n`;\n\nconst SharingWrapper = styled.div`\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n\ninterface InputProps {\n  postType: PostType;\n  postId: string | null;\n  className?: string;\n  title: string;\n  subtitle: string;\n}\n\ninterface DataProps {\n  locale: GetLocaleChildProps;\n  tenant: GetAppConfigurationChildProps;\n  authUser: GetAuthUserChildProps;\n  idea: GetIdeaChildProps;\n  initiative: GetInitiativeChildProps;\n  project: GetProjectChildProps;\n  phases: GetPhasesChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass SharingModalContent extends PureComponent<\n  Props & InjectedIntlProps & InjectedLocalized,\n  State\n> {\n  componentDidMount() {\n    const { postId, postType } = this.props;\n\n    trackEventByName(tracks.sharingModalOpened.name, {\n      postId,\n      postType,\n    });\n  }\n\n  getPostValues = () => {\n    const { postType, idea, initiative, localize, locale } = this.props;\n    let postTitle: string | null = null;\n    let postUrl: string | null = null;\n\n    if (postType === 'idea' && !isNilOrError(idea)) {\n      postTitle = localize(idea.attributes.title_multiloc);\n      postUrl = `${location.origin}/${locale}/${postType}s/${idea.attributes.slug}`;\n    }\n\n    if (postType === 'initiative' && !isNilOrError(initiative)) {\n      postTitle = localize(initiative.attributes.title_multiloc);\n      postUrl = `${location.origin}/${locale}/${postType}s/${initiative.attributes.slug}`;\n    }\n\n    return { postTitle, postUrl };\n  };\n\n  getIdeaMessages = () => {\n    const { project, phases } = this.props;\n    let emailSharingSubject: ReactIntl.FormattedMessage.MessageDescriptor | null = null;\n    let emailSharingBody: ReactIntl.FormattedMessage.MessageDescriptor | null = null;\n    let whatsAppMessage: ReactIntl.FormattedMessage.MessageDescriptor | null = null;\n\n    if (!isNilOrError(project)) {\n      const inputTerm = getInputTerm(\n        project.attributes.process_type,\n        project,\n        phases\n      );\n\n      emailSharingSubject = getInputTermMessage(inputTerm, {\n        idea: messages.ideaEmailSharingSubjectText,\n        option: messages.optionEmailSharingSubject,\n        project: messages.projectEmailSharingSubject,\n        question: messages.questionEmailSharingSubject,\n        issue: messages.issueEmailSharingSubject,\n        contribution: messages.contributionEmailSharingSubject,\n      });\n      emailSharingBody = getInputTermMessage(inputTerm, {\n        idea: messages.ideaEmailSharingBody,\n        option: messages.optionEmailSharingBody,\n        project: messages.projectEmailSharingBody,\n        question: messages.questionEmailSharingModalContentBody,\n        issue: messages.issueEmailSharingBody,\n        contribution: messages.contributionEmailSharingBody,\n      });\n      whatsAppMessage = getInputTermMessage(inputTerm, {\n        idea: messages.ideaWhatsAppMessage,\n        option: messages.optionWhatsAppMessage,\n        project: messages.projectWhatsAppMessage,\n        question: messages.questionWhatsAppMessage,\n        issue: messages.issueWhatsAppMessage,\n        contribution: messages.contributionWhatsAppMessage,\n      });\n    }\n\n    return { emailSharingSubject, emailSharingBody, whatsAppMessage };\n  };\n\n  getInitiativeMessages = () => {\n    const emailSharingSubject = messages.initiativeEmailSharingSubject;\n    const emailSharingBody = messages.initiativeEmailSharingBody;\n    const whatsAppMessage = messages.whatsAppMessageProposal;\n\n    return { emailSharingSubject, emailSharingBody, whatsAppMessage };\n  };\n\n  getMessages = () => {\n    const { postType } = this.props;\n\n    if (postType === 'idea') {\n      return this.getIdeaMessages();\n    } else {\n      return this.getInitiativeMessages();\n    }\n  };\n\n  render() {\n    const { postType, authUser, className, title, subtitle } = this.props;\n    const { formatMessage } = this.props.intl;\n\n    const { postTitle, postUrl } = this.getPostValues();\n    const {\n      emailSharingBody,\n      emailSharingSubject,\n      whatsAppMessage,\n    } = this.getMessages();\n\n    if (\n      !isNilOrError(authUser) &&\n      postUrl &&\n      emailSharingBody &&\n      emailSharingSubject &&\n      whatsAppMessage\n    ) {\n      return (\n        <Container className={className}>\n          <Rocket src={rocket} alt=\"rocket\" />\n          <Title className={`e2e-${postType}-social-sharing-modal-title`}>\n            {title}\n          </Title>\n          <Description>{subtitle}</Description>\n          <SharingWrapper>\n            <SharingButtons\n              context={postType}\n              isInModal\n              url={postUrl}\n              twitterMessage={formatMessage(messages.twitterMessage, {\n                postTitle,\n              })}\n              whatsAppMessage={formatMessage(whatsAppMessage, {\n                postTitle,\n              })}\n              emailSubject={formatMessage(emailSharingSubject, { postTitle })}\n              emailBody={formatMessage(emailSharingBody, {\n                postTitle,\n                postUrl,\n              })}\n              utmParams={{\n                source: `share_${postType}`,\n                campaign: `${postType}flow`,\n                content: authUser.id,\n              }}\n            />\n          </SharingWrapper>\n        </Container>\n      );\n    }\n\n    return (\n      <Loading>\n        <Spinner />\n      </Loading>\n    );\n  }\n}\n\nconst SharingModalContentWithHoCs = injectIntl<Props>(\n  localize(SharingModalContent)\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  locale: <GetLocale />,\n  tenant: <GetAppConfiguration />,\n  authUser: <GetAuthUser />,\n  idea: ({ postId, postType, render }) => (\n    <GetIdea ideaId={postId && postType === 'idea' ? postId : null}>\n      {render}\n    </GetIdea>\n  ),\n  initiative: ({ postId, postType, render }) => (\n    <GetInitiative id={postId && postType === 'initiative' ? postId : null}>\n      {render}\n    </GetInitiative>\n  ),\n  project: ({ idea, render }) => (\n    <GetProject\n      projectId={\n        !isNilOrError(idea) ? idea.relationships.project.data.id : null\n      }\n    >\n      {render}\n    </GetProject>\n  ),\n  phases: ({ idea, render }) => (\n    <GetPhases\n      projectId={\n        !isNilOrError(idea) ? idea.relationships.project.data.id : null\n      }\n    >\n      {render}\n    </GetPhases>\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <SharingModalContentWithHoCs {...inputProps} {...dataProps} />\n    )}\n  </Data>\n);\n","import styled from 'styled-components';\nimport { fontSizes, isRtl } from 'utils/styleUtils';\n\nexport const maxPageWidth = 1166;\n\nexport const ProjectPageSectionTitle = styled.h2`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.xxl}px;\n  line-height: normal;\n  font-weight: 500;\n  text-align: left;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  margin: 0;\n  margin-bottom: 25px;\n  padding: 0;\n\n  ${isRtl`\n    text-align: right;\n  `}\n`;\n","import React, { FC } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Icon, IconNames } from 'cl2-component-library';\nimport { colors } from 'utils/styleUtils';\n\nconst enterAnimation = keyframes`\n  0% {\n    transform: scale(1, 0);\n    opacity: 0;\n  }\n  5% { transform: scale(1,0.17942745647835484); }\n  10% { transform: scale(1,0.5453767165955569); }\n  15% { transform: scale(1,0.894404964443162); }\n  20% { transform: scale(1,1.1203760160160154); }\n  25% { transform: scale(1,1.2051533263082377); }\n  30% { transform: scale(1,1.1848074616294655); }\n  35% { transform: scale(1,1.1134007773010595); }\n  40% { transform: scale(1,1.037247338664745); }\n  45% { transform: scale(1,0.9833121263387835); }\n  50% { transform: scale(1,0.9591514931191875); opacity: 1; }\n  55% { transform: scale(1,0.9592070055589312); }\n  60% { transform: scale(1,0.9725345308087797); }\n  65% { transform: scale(1,0.9888015967917715); }\n  70% { transform: scale(1,1.0013794350134355); }\n  75% { transform: scale(1,1.0078326552211365); }\n  80% { transform: scale(1,1.008821093113004); }\n  85% { transform: scale(1,1.0064881982177143); }\n  90% { transform: scale(1,1.0030929569279976); }\n  95% { transform: scale(1,1.00022141474777); }\n  100% {\n    transform: scale(1, 1);\n  }\n`;\n\nconst Container = styled.div`\n  background-color: #fff;\n  position: relative;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  border: solid 1px ${colors.separation};\n  margin-top: 0px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #fff;\n  animation: ${css`\n    ${enterAnimation} 450ms linear\n  `};\n  transform-origin: center center;\n`;\n\nconst IconWrapper = styled.div`\n  width: 42px;\n  height: 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background: #f0f0f0;\n  margin-bottom: 15px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  height: 20px;\n  fill: #333;\n`;\n\ninterface Props {\n  icon?: IconNames;\n  children: React.ReactNode;\n}\n\n/** A bordered container with an icon that animates in with a bouncy animation */\nconst PopContainer: FC<Props> = ({ icon, children }) => {\n  return (\n    <Container>\n      {icon && (\n        <IconWrapper>\n          <StyledIcon name={icon} />\n        </IconWrapper>\n      )}\n      {children}\n    </Container>\n  );\n};\n\nexport default PopContainer;\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\nimport clHistory from 'utils/cl-router/history';\nimport { stringify } from 'qs';\n\n// typings\nimport { IParticipationContextType } from 'typings';\n\n// services\nimport {\n  getIdeaPostingRules,\n  IIdeaPostingDisabledReason,\n} from 'services/actionTakingRules';\nimport { getInputTerm } from 'services/participationContexts';\n\n// resources\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhase, { GetPhaseChildProps } from 'resources/GetPhase';\nimport GetPhases, { GetPhasesChildProps } from 'resources/GetPhases';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// components\nimport Button, { Props as ButtonProps } from 'components/UI/Button';\nimport Tippy from '@tippyjs/react';\nimport { Icon } from 'cl2-component-library';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// utils\nimport { openSignUpInModal } from 'components/SignUpIn/events';\n\n// events\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\n\n// tracks\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// styling\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\n// typings\nimport { LatLng } from 'leaflet';\n\nconst Container = styled.div``;\n\nconst ButtonWrapper = styled.div``;\n\nconst TooltipContent = styled.div<{ inMap?: boolean }>`\n  display: flex;\n  align-items: center;\n  padding: ${(props) => (props.inMap ? '0px' : '15px')};\n`;\n\nconst TooltipContentIcon = styled(Icon)`\n  flex: 0 0 25px;\n  width: 20px;\n  height: 25px;\n  margin-right: 1rem;\n`;\n\nconst TooltipContentText = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  font-weight: 400;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n\n  a,\n  button {\n    color: ${colors.clBlueDark};\n    font-size: ${fontSizes.base}px;\n    line-height: normal;\n    font-weight: 400;\n    text-align: left;\n    text-decoration: underline;\n    white-space: normal;\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    word-break: break-all;\n    word-break: break-word;\n    hyphens: auto;\n    display: inline;\n    padding: 0px;\n    margin: 0px;\n    cursor: pointer;\n    transition: all 100ms ease-out;\n\n    &:hover {\n      color: ${darken(0.15, colors.clBlueDark)};\n      text-decoration: underline;\n    }\n  }\n`;\n\ninterface DataProps {\n  project: GetProjectChildProps;\n  phase: GetPhaseChildProps;\n  phases: GetPhasesChildProps;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface InputProps extends Omit<ButtonProps, 'onClick'> {\n  id?: string;\n  projectId: string;\n  phaseId?: string | undefined | null;\n  latLng?: LatLng | null;\n  inMap?: boolean;\n  className?: string;\n  participationContextType: IParticipationContextType;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst IdeaButton = memo<Props & InjectedIntlProps>(\n  ({\n    id,\n    project,\n    phase,\n    phases,\n    authUser,\n    participationContextType,\n    phaseId,\n    projectId,\n    inMap,\n    className,\n    latLng,\n    intl: { formatMessage },\n    ...buttonContainerProps\n  }) => {\n    const disabledMessages: {\n      [key in IIdeaPostingDisabledReason]: ReactIntl.FormattedMessage.MessageDescriptor;\n    } = {\n      notPermitted: messages.postingNoPermission,\n      postingDisabled: messages.postingDisabled,\n      projectInactive: messages.postingInactive,\n      futureEnabled: messages.postingNotYetPossible,\n      notActivePhase: messages.postingInNonActivePhases,\n      maybeNotPermitted: messages.postingMayNotBePermitted,\n    };\n    const { show, enabled, disabledReason, action } = getIdeaPostingRules({\n      project,\n      phase,\n      authUser,\n    });\n\n    const onClick = (event: React.FormEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n\n      trackEventByName(tracks.postYourIdeaButtonClicked);\n\n      // if not logged in\n      if (action === 'sign_in_up' || action === 'sign_in_up_and_verify') {\n        signUp();\n      }\n\n      // if logged in but not verified and verification required\n      if (action === 'verify') {\n        verify();\n      }\n\n      // if logegd in and posting allowed\n      if (enabled === true) {\n        redirectToIdeaForm();\n      }\n    };\n\n    const redirectToIdeaForm = () => {\n      if (!isNilOrError(project)) {\n        trackEventByName(tracks.redirectedToIdeaFrom);\n\n        clHistory.push({\n          pathname: `/projects/${project.attributes.slug}/ideas/new`,\n          search: latLng\n            ? stringify(\n                { lat: latLng.lat, lng: latLng.lng },\n                { addQueryPrefix: true }\n              )\n            : undefined,\n        });\n      }\n    };\n\n    const verify = (event?: React.MouseEvent) => {\n      event?.preventDefault();\n\n      const pcType = participationContextType;\n      const pcId = pcType === 'phase' ? phaseId : projectId;\n\n      if (pcId && pcType) {\n        trackEventByName(tracks.verificationModalOpened);\n        openVerificationModal({\n          context: {\n            action: 'posting_idea',\n            id: pcId,\n            type: pcType,\n          },\n        });\n      }\n    };\n\n    const signIn = (event?: React.MouseEvent) => {\n      signUpIn('signin')(event);\n    };\n\n    const signUp = (event?: React.MouseEvent) => {\n      signUpIn('signup')(event);\n    };\n\n    const signUpIn = (flow: 'signup' | 'signin') => (\n      event?: React.MouseEvent\n    ) => {\n      event?.preventDefault();\n\n      const pcType = participationContextType;\n      const pcId = pcType === 'phase' ? phaseId : projectId;\n      const shouldVerify = action === 'sign_in_up_and_verify';\n\n      if (isNilOrError(authUser) && !isNilOrError(project)) {\n        trackEventByName(tracks.signUpInModalOpened);\n        openSignUpInModal({\n          flow,\n          verification: shouldVerify,\n          verificationContext:\n            shouldVerify && pcId && pcType\n              ? {\n                  action: 'posting_idea',\n                  id: pcId,\n                  type: pcType,\n                }\n              : undefined,\n          action: () => redirectToIdeaForm(),\n        });\n      }\n    };\n\n    const verificationLink = (\n      <button onClick={verify}>\n        {formatMessage(messages.verificationLinkText)}\n      </button>\n    );\n\n    const signUpLink = (\n      <button onClick={signUp}>{formatMessage(messages.signUpLinkText)}</button>\n    );\n\n    const signInLink = (\n      <button onClick={signIn}>{formatMessage(messages.signInLinkText)}</button>\n    );\n\n    if (show) {\n      const tippyContent =\n        !enabled && !!disabledReason ? (\n          <TooltipContent\n            id=\"tooltip-content\"\n            className=\"e2e-disabled-tooltip\"\n            inMap={inMap}\n          >\n            <TooltipContentIcon name=\"lock-outlined\" ariaHidden />\n            <TooltipContentText>\n              <FormattedMessage\n                {...disabledMessages[disabledReason]}\n                values={{ verificationLink, signUpLink, signInLink }}\n              />\n            </TooltipContentText>\n          </TooltipContent>\n        ) : null;\n\n      if (inMap && !enabled && !!disabledReason) {\n        return (\n          <TooltipContent\n            id=\"tooltip-content\"\n            className=\"e2e-disabled-tooltip\"\n            inMap={inMap}\n          >\n            <TooltipContentIcon name=\"lock-outlined\" ariaHidden />\n            <TooltipContentText>\n              <FormattedMessage\n                {...disabledMessages[disabledReason]}\n                values={{ verificationLink, signUpLink, signInLink }}\n              />\n            </TooltipContentText>\n          </TooltipContent>\n        );\n      }\n\n      if (!isNilOrError(project)) {\n        const inputTerm = getInputTerm(\n          project.attributes.process_type,\n          project,\n          phases\n        );\n\n        return (\n          <Container id={id || ''} className={className || ''}>\n            <Tippy\n              disabled={!tippyContent}\n              interactive={true}\n              placement=\"bottom\"\n              content={tippyContent || <></>}\n              theme=\"light\"\n              hideOnClick={false}\n            >\n              <ButtonWrapper\n                tabIndex={!enabled ? 0 : -1}\n                className={`e2e-idea-button ${!enabled ? 'disabled' : ''} ${\n                  disabledReason ? disabledReason : ''\n                }`}\n              >\n                <Button\n                  {...buttonContainerProps}\n                  aria-describedby=\"tooltip-content\"\n                  onClick={onClick}\n                  disabled={!enabled}\n                  ariaDisabled={false}\n                >\n                  <FormattedMessage\n                    {...getInputTermMessage(inputTerm, {\n                      idea: messages.submitYourIdea,\n                      option: messages.addAnOption,\n                      project: messages.addAProject,\n                      question: messages.addAQuestion,\n                      issue: messages.submitAnIssue,\n                      contribution: messages.addAContribution,\n                    })}\n                  />\n                </Button>\n              </ButtonWrapper>\n            </Tippy>\n          </Container>\n        );\n      }\n    }\n\n    return null;\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n  phases: ({ projectId, render }) => (\n    <GetPhases projectId={projectId}>{render}</GetPhases>\n  ),\n  phase: ({ phaseId, render }) => <GetPhase id={phaseId}>{render}</GetPhase>,\n});\n\nconst IdeaButtonWithHoC = injectIntl(IdeaButton);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeaButtonWithHoC {...inputProps} {...dataProps} />}\n  </Data>\n);\n","export default __webpack_public_path__ + \"aaae759b408aa34fd8afbcefb716a1ab.png\";","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\n\nconst Image = styled.img`\n  width: 100%;\n  margin-bottom: 25px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  border: 1px solid ${colors.separation};\n`;\n\ninterface Props {\n  src: string;\n  alt: string;\n  id?: string;\n}\n\nexport default memo<Props>(({ src, alt, id }) => (\n  <Image src={src} alt={alt} id={id} />\n));\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  postedBy: {\n    id: 'app.containers.IdeasShow.MetaInformation.postedBy',\n    defaultMessage: 'Posted by',\n  },\n  currentStatus: {\n    id: 'app.containers.IdeasShow.MetaInformation.currentStatus',\n    defaultMessage: 'Current status',\n  },\n  topics: {\n    id: 'app.containers.IdeasShow.MetaInformation.topics',\n    defaultMessage: 'Topics',\n  },\n  location: {\n    id: 'app.containers.IdeasShow.MetaInformation.location',\n    defaultMessage: 'Location',\n  },\n  attachments: {\n    id: 'app.containers.IdeasShow.MetaInformation.attachments',\n    defaultMessage: 'Attachments',\n  },\n  byUserOnDate: {\n    id: 'app.containers.IdeasShow.MetaInformation.byUserOnDate',\n    defaultMessage: '{userName} on {date}',\n  },\n});\n","import React from 'react';\nimport { Header, Item } from 'components/IdeasShowComponents/MetaInfoStyles';\nimport Topics from 'components/PostShowComponents/Topics';\nimport useIdea from 'hooks/useIdea';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\ninterface Props {\n  ideaId: string;\n  compact?: boolean;\n  className?: string;\n}\n\nconst IdeaTopics = ({\n  ideaId,\n  compact,\n  className,\n  intl: { formatMessage },\n}: Props & InjectedIntlProps) => {\n  const idea = useIdea({ ideaId });\n\n  if (!isNilOrError(idea)) {\n    const topicIds =\n      idea.relationships.topics?.data.map((item) => item.id) || [];\n\n    if (topicIds.length > 0) {\n      return (\n        <Item className={className || ''} compact={compact}>\n          <Header>{formatMessage(messages.topics)}</Header>\n          <Topics postType=\"idea\" topicIds={topicIds} />\n        </Item>\n      );\n    }\n  }\n\n  return null;\n};\n\nexport default injectIntl(IdeaTopics);\n","import React from 'react';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { IIdeaImageData, ideaImagesStream } from 'services/ideaImages';\nimport { isString } from 'lodash-es';\n\ninterface InputProps {\n  ideaId: string | null;\n}\n\ntype children = (renderProps: GetIdeaImagesChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  ideaImages: IIdeaImageData[] | undefined | null;\n}\n\nexport type GetIdeaImagesChildProps = IIdeaImageData[] | undefined | null;\n\nexport default class GetIdeaImages extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ideaImages: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { ideaId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ ideaId });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          switchMap(({ ideaId }) => {\n            if (isString(ideaId)) {\n              return ideaImagesStream(ideaId).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((ideaImages) => {\n          this.setState({ ideaImages: ideaImages ? ideaImages.data : null });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { ideaId } = this.props;\n    this.inputProps$.next({ ideaId });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { ideaImages } = this.state;\n    return (children as children)(ideaImages);\n  }\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  ideaOnMapReadMore: {\n    id: 'app.components.IdeasMap.ideaOnMapReadMore',\n    defaultMessage: 'Read more',\n  },\n  nothingOnMapWarning: {\n    id: 'app.components.IdeasMap.nothingOnMapWarning',\n    defaultMessage:\n      'Nothing to be seen here here! There might be more to see in the list view.',\n  },\n  postingHereImpossible: {\n    id: 'app.components.IdeasMap.postingHereImpossible',\n    defaultMessage: 'Posting an idea here is currently impossible.',\n  },\n  postingNotPermitted: {\n    id: 'app.components.IdeasMap.postingNotPermitted',\n    defaultMessage:\n      \"Unfortunately, You don't have the rights to post ideas here.\",\n  },\n  postingMaybeNotPermitted: {\n    id: 'app.components.IdeasMap.postingMaybeNotPermitted',\n    defaultMessage:\n      'Only certain users can post ideas here. Please {signUpLink} or {signInLink} first.',\n  },\n  signUpLinkText: {\n    id: 'app.components.IdeasMap.signUpLinkText',\n    defaultMessage: 'sign up',\n  },\n  signInLinkText: {\n    id: 'app.components.IdeasMap.signInLinkText',\n    defaultMessage: 'sign in',\n  },\n  postingProjectInactive: {\n    id: 'app.components.IdeasMap.postingProjectInactive',\n    defaultMessage: 'This project is not yet or no longer accepting new ideas.',\n  },\n  postingNotActivePhase: {\n    id: 'app.components.IdeasMap.postingNotActivePhase',\n    defaultMessage: \"You can't post ideas in a past or future phase.\",\n  },\n  a11y_mapTitle: {\n    id: 'app.components.IdeasMap.a11y_mapTitle',\n    defaultMessage: 'Map overview',\n  },\n  or: {\n    id: 'app.components.IdeasMap.or',\n    defaultMessage: 'or',\n  },\n  noResults: {\n    id: 'app.components.IdeasMap.noResults',\n    defaultMessage: 'No results found',\n  },\n  noFilteredResults: {\n    id: 'app.components.IdeasMap.noFilteredResults',\n    defaultMessage: 'The filters you selected did not return any results',\n  },\n  clickOnMapToAdd: {\n    id: 'app.components.IdeasMap.clickOnMapToAdd',\n    defaultMessage: 'Click on the map to add your input',\n  },\n  tapOnMapToAdd: {\n    id: 'app.components.IdeasMap.tapOnMapToAdd',\n    defaultMessage: 'Tap on the map to add your input',\n  },\n});\n","import React from 'react';\nimport { Header, Item } from 'components/IdeasShowComponents/MetaInfoStyles';\n\n// hooks\nimport useIdeaStatus from 'hooks/useIdeaStatus';\n\n// components\nimport StatusBadge from 'components/StatusBadge';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface Props {\n  statusId: string;\n  compact?: boolean;\n  className?: string;\n}\n\nconst Status = ({ statusId, compact, className }: Props) => {\n  const ideaStatus = useIdeaStatus({ statusId });\n\n  if (!isNilOrError(ideaStatus)) {\n    return (\n      <Item className={className || ''} compact={compact}>\n        <Header>\n          <FormattedMessage {...messages.currentStatus} />\n        </Header>\n        <StatusBadge id=\"e2e-idea-status-badge\" statusId={statusId} />\n      </Item>\n    );\n  }\n\n  return null;\n};\n\nexport default Status;\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { Subscription, BehaviorSubject, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport {\n  IInitiativeData,\n  initiativeByIdStream,\n  initiativeBySlugStream,\n} from 'services/initiatives';\n\ninterface InputProps {\n  id?: string | null;\n  slug?: string | null;\n  resetOnChange?: boolean;\n}\n\ntype children = (renderProps: GetInitiativeChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  initiative: IInitiativeData | undefined | null | Error;\n}\n\nexport type GetInitiativeChildProps =\n  | IInitiativeData\n  | undefined\n  | null\n  | Error;\n\nexport default class GetInitiative extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      initiative: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id, slug, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id, slug });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ initiative: undefined })),\n          switchMap(({ id, slug }) => {\n            if (isString(id)) {\n              return initiativeByIdStream(id).observable;\n            } else if (isString(slug)) {\n              return initiativeBySlugStream(slug).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((initiative) => {\n          this.setState({\n            initiative: !isNilOrError(initiative)\n              ? initiative.data\n              : initiative,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id, slug } = this.props;\n    this.inputProps$.next({ id, slug });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { initiative } = this.state;\n    return (children as children)(initiative);\n  }\n}\n","import React, { memo, useState, useEffect } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\n// events\nimport { ideaMapCardSelected$, setIdeaMapCardSelected } from '../events';\n\n// hooks\nimport useProject from 'hooks/useProject';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// components\nimport IdeasList from './IdeasList';\nimport IdeasShow from 'containers/IdeasShow';\nimport IdeaShowPageTopBar from 'containers/IdeasShowPage/IdeaShowPageTopBar';\n\n// styling\nimport styled from 'styled-components';\nimport { defaultCardStyle } from 'utils/styleUtils';\n\nconst timeout = 200;\n\nconst Container = styled.div`\n  width: 100%;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  position: relative;\n  ${defaultCardStyle};\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst InnerOverlay = styled.div<{ right: string }>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: ${(props) => props.right};\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  overflow: hidden;\n  ${defaultCardStyle};\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.15);\n  transition: all ${timeout}ms cubic-bezier(0.19, 1, 0.22, 1);\n\n  &.animation-enter {\n    opacity: 0;\n    right: 0px;\n\n    &.animation-enter-active {\n      opacity: 1;\n      right: ${(props) => props.right};\n    }\n  }\n\n  &.animation-enter-done {\n    opacity: 1;\n    right: ${(props) => props.right};\n  }\n\n  &.animation-exit {\n    opacity: 1;\n    right: ${(props) => props.right};\n\n    &.animation-exit-active {\n      opacity: 0;\n      right: 0px;\n    }\n  }\n\n  &.animation-exit-done {\n    display: none;\n  }\n`;\n\nconst StyledIdeaShowPageTopBar = styled(IdeaShowPageTopBar)``;\n\nconst StyledIdeasShow = styled(IdeasShow)`\n  flex: 1;\n  overflow-x: hidden;\n  overflow-y: auto;\n  padding: 30px;\n`;\n\nconst StyledIdeasList = styled(IdeasList)`\n  flex: 1;\n  overflow: hidden;\n`;\n\ninterface Props {\n  projectIds: string[];\n  projectId: string;\n  phaseId?: string | null;\n  className?: string;\n}\n\nconst IdeaMapOverlay = memo<Props>(\n  ({ projectIds, projectId, phaseId, className }) => {\n    const project = useProject({ projectId });\n    const { windowWidth } = useWindowSize();\n    const smallerThan1440px = !!(windowWidth && windowWidth <= 1440);\n\n    const [selectedIdeaId, setSelectedIdeaId] = useState<string | null>(null);\n    const [\n      scrollContainerElement,\n      setScrollContainerElement,\n    ] = useState<HTMLDivElement | null>(null);\n\n    useEffect(() => {\n      const subscription = ideaMapCardSelected$.subscribe((ideaId) => {\n        setSelectedIdeaId(ideaId);\n      });\n\n      return () => {\n        setIdeaMapCardSelected(null);\n        subscription.unsubscribe();\n      };\n    }, [projectIds, projectId]);\n\n    useEffect(() => {\n      if (scrollContainerElement && selectedIdeaId) {\n        scrollContainerElement.scrollTop = 0;\n      }\n    }, [scrollContainerElement, selectedIdeaId]);\n\n    const goBack = () => {\n      setIdeaMapCardSelected(null);\n    };\n\n    const handleIdeasShowSetRef = (element: HTMLDivElement) => {\n      setScrollContainerElement(element);\n    };\n\n    if (!isNilOrError(project)) {\n      return (\n        <Container className={className || ''}>\n          <StyledIdeasList\n            projectIds={projectIds}\n            projectId={projectId}\n            phaseId={phaseId}\n          />\n          <CSSTransition\n            classNames=\"animation\"\n            in={!!selectedIdeaId}\n            timeout={timeout}\n            mounOnEnter={true}\n            unmountOnExit={true}\n            enter={true}\n            exit={true}\n          >\n            <InnerOverlay right={smallerThan1440px ? '-100px' : '-150px'}>\n              <StyledIdeaShowPageTopBar\n                ideaId={selectedIdeaId as string}\n                goBackAction={goBack}\n              />\n              <StyledIdeasShow\n                ideaId={selectedIdeaId as string}\n                projectId={projectId}\n                insideModal={false}\n                compact={true}\n                setRef={handleIdeasShowSetRef}\n              />\n            </InnerOverlay>\n          </CSSTransition>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default IdeaMapOverlay;\n","import React, { PureComponent, lazy, Suspense } from 'react';\nimport { isUndefined, isString, includes } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\n\n// services\nimport { getInputTerm } from 'services/participationContexts';\nimport { getLatestRelevantPhase } from 'services/phases';\n\n// analytics\nimport { trackEvent } from 'utils/analytics';\nimport tracks from './tracks';\n\n// router\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// components\nimport IdeaSharingButton from './Buttons/IdeaSharingButton';\nimport IdeaMeta from './IdeaMeta';\nimport Title from 'components/PostShowComponents/Title';\nimport IdeaProposedBudget from './IdeaProposedBudget';\nimport Body from 'components/PostShowComponents/Body';\nimport Image from 'components/PostShowComponents/Image';\nimport OfficialFeedback from 'components/PostShowComponents/OfficialFeedback';\nimport Modal from 'components/UI/Modal';\nimport AssignBudgetControl from 'components/AssignBudgetControl';\nimport SharingModalContent from 'components/PostShowComponents/SharingModalContent';\nimport FeatureFlag from 'components/FeatureFlag';\nimport IdeaMoreActions from './IdeaMoreActions';\nimport { Spinner } from 'cl2-component-library';\nimport GoBackButton from './GoBackButton';\nconst LazyComments = lazy(() =>\n  import('components/PostShowComponents/Comments')\n);\nimport LoadingComments from 'components/PostShowComponents/Comments/LoadingComments';\nimport MetaInformation from './MetaInformation';\nimport MobileSharingButtonComponent from './Buttons/MobileSharingButtonComponent';\nimport RightColumnDesktop from './RightColumnDesktop';\n\n// utils\nimport isFieldEnabled from './isFieldEnabled';\n\n// resources\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetIdeaImages, {\n  GetIdeaImagesChildProps,\n} from 'resources/GetIdeaImages';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport GetPhases, { GetPhasesChildProps } from 'resources/GetPhases';\nimport GetWindowSize, {\n  GetWindowSizeChildProps,\n} from 'resources/GetWindowSize';\nimport GetOfficialFeedbacks, {\n  GetOfficialFeedbacksChildProps,\n} from 'resources/GetOfficialFeedbacks';\nimport GetPermission, {\n  GetPermissionChildProps,\n} from 'resources/GetPermission';\nimport GetIdeaCustomFieldsSchemas, {\n  GetIdeaCustomFieldsSchemasChildProps,\n} from 'resources/GetIdeaCustomFieldsSchemas';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetComments, { GetCommentsChildProps } from 'resources/GetComments';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport injectIntl from 'utils/cl-intl/injectIntl';\nimport messages from './messages';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// animations\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\n// style\nimport styled from 'styled-components';\nimport { media, viewportWidths, isRtl } from 'utils/styleUtils';\nimport { columnsGapDesktop, pageContentMaxWidth } from './styleConstants';\nimport Outlet from 'components/Outlet';\n\nconst contentFadeInDuration = 250;\nconst contentFadeInEasing = 'cubic-bezier(0.19, 1, 0.22, 1)';\nconst contentFadeInDelay = 150;\n\nconst Container = styled.main`\n  width: 100%;\n  max-width: ${pageContentMaxWidth}px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-left: auto;\n  margin-right: auto;\n  background: #fff;\n\n  &.loading {\n    flex: 1;\n    justify-content: center;\n  }\n\n  &.loaded {\n    opacity: 0;\n\n    &.content-enter {\n      opacity: 0;\n\n      &.content-enter-active {\n        opacity: 1;\n        transition: opacity ${contentFadeInDuration}ms ${contentFadeInEasing}\n          ${contentFadeInDelay}ms;\n      }\n    }\n\n    &.content-enter-done {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n`;\n\nconst LeftColumn = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst StyledRightColumnDesktop = styled(RightColumnDesktop)`\n  margin-left: ${columnsGapDesktop}px;\n`;\n\nconst IdeaHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: -5px;\n  margin-bottom: 25px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n\n  ${media.smallerThanMaxTablet`\n    margin-top: 0px;\n  `}\n`;\n\nconst MobileIdeaMoreActions = styled(IdeaMoreActions)`\n  margin-left: 30px;\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst StyledGoBackButton = styled(GoBackButton)`\n  margin-bottom: 40px;\n`;\n\nconst BodySectionTitle = styled.h2`\n  font-size: ${(props) => props.theme.fontSizes.large}px;\n  font-weight: 500;\n  line-height: 28px;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 15px;\n`;\n\nconst StyledBody = styled(Body)`\n  margin-bottom: 40px;\n`;\n\nconst StyledIdeaProposedBudget = styled(IdeaProposedBudget)`\n  margin-bottom: 20px;\n`;\n\nconst MobileMetaInformation = styled(MetaInformation)`\n  margin-bottom: 30px;\n`;\n\nconst StyledAssignBudgetControl = styled(AssignBudgetControl)`\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nconst MobileIdeaSharingButton = styled(IdeaSharingButton)``;\n\nconst StyledOfficialFeedback = styled(OfficialFeedback)`\n  margin-top: 80px;\n  margin-bottom: 80px;\n`;\n\nconst Comments = styled.div`\n  margin-bottom: 100px;\n`;\n\ninterface DataProps {\n  idea: GetIdeaChildProps;\n  locale: GetLocaleChildProps;\n  authUser: GetAuthUserChildProps;\n  project: GetProjectChildProps;\n  phases: GetPhasesChildProps;\n  ideaImages: GetIdeaImagesChildProps;\n  windowSize: GetWindowSizeChildProps;\n  officialFeedbacks: GetOfficialFeedbacksChildProps;\n  postOfficialFeedbackPermission: GetPermissionChildProps;\n  ideaCustomFieldsSchemas: GetIdeaCustomFieldsSchemasChildProps;\n  comments: GetCommentsChildProps;\n}\n\ninterface InputProps {\n  ideaId: string;\n  projectId: string;\n  insideModal: boolean;\n  setRef?: (element: HTMLDivElement) => void;\n  compact?: boolean;\n  className?: string;\n}\n\ninterface Props extends DataProps, InputProps {}\n\ninterface State {\n  loaded: boolean;\n  spamModalVisible: boolean;\n  ideaIdForSocialSharing: string | null;\n  translateButtonClicked: boolean;\n}\n\nexport class IdeasShow extends PureComponent<\n  Props & InjectedIntlProps & InjectedLocalized & WithRouterProps,\n  State\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      spamModalVisible: false,\n      ideaIdForSocialSharing: null,\n      translateButtonClicked: false,\n    };\n  }\n\n  componentDidMount() {\n    const newIdeaId = this.props.location.query?.['new_idea_id'];\n\n    this.setLoaded();\n\n    if (isString(newIdeaId)) {\n      setTimeout(() => {\n        this.setState({ ideaIdForSocialSharing: newIdeaId });\n      }, 1500);\n\n      window.history.replaceState(null, '', window.location.pathname);\n    }\n  }\n\n  componentDidUpdate() {\n    this.setLoaded();\n  }\n\n  setLoaded = () => {\n    const { loaded } = this.state;\n    const { idea, ideaImages, project, officialFeedbacks } = this.props;\n\n    if (\n      !loaded &&\n      !isNilOrError(idea) &&\n      !isUndefined(ideaImages) &&\n      !isNilOrError(project) &&\n      !isUndefined(officialFeedbacks.officialFeedbacksList)\n    ) {\n      this.setState({ loaded: true });\n    }\n  };\n\n  closeIdeaSocialSharingModal = () => {\n    this.setState({ ideaIdForSocialSharing: null });\n  };\n\n  onTranslateIdea = () => {\n    this.setState((prevState) => {\n      // analytics\n      if (prevState.translateButtonClicked === true) {\n        trackEvent(tracks.clickGoBackToOriginalIdeaCopyButton);\n      } else if (prevState.translateButtonClicked === false) {\n        trackEvent(tracks.clickTranslateIdeaButton);\n      }\n\n      return {\n        translateButtonClicked: !prevState.translateButtonClicked,\n      };\n    });\n  };\n\n  handleContainerRef = (element: HTMLDivElement) => {\n    this.props.setRef?.(element);\n  };\n\n  getLatestRelevantPhaseId = () => {\n    const { idea, phases } = this.props;\n\n    if (!isNilOrError(idea) && !isNilOrError(phases)) {\n      const ideaPhaseIds = idea?.relationships?.phases?.data?.map(\n        (item) => item.id\n      );\n      const ideaPhases = phases.filter((phase) =>\n        includes(ideaPhaseIds, phase.id)\n      );\n      return getLatestRelevantPhase(ideaPhases)?.id;\n    }\n\n    return undefined;\n  };\n\n  render() {\n    const {\n      locale,\n      idea,\n      localize,\n      ideaImages,\n      windowSize,\n      className,\n      postOfficialFeedbackPermission,\n      projectId,\n      ideaCustomFieldsSchemas,\n      insideModal,\n      project,\n      phases,\n      compact,\n    } = this.props;\n    const {\n      loaded,\n      ideaIdForSocialSharing,\n      translateButtonClicked,\n    } = this.state;\n    const { formatMessage } = this.props.intl;\n    let content: JSX.Element | null = null;\n\n    if (\n      !isNilOrError(project) &&\n      !isNilOrError(idea) &&\n      !isNilOrError(locale) &&\n      !isNilOrError(ideaCustomFieldsSchemas) &&\n      loaded\n    ) {\n      // If the user deletes their profile, authorId can be null\n      const authorId = idea.relationships?.author?.data?.id || null;\n      const titleMultiloc = idea.attributes.title_multiloc;\n      const ideaTitle = localize(titleMultiloc);\n      const statusId = idea?.relationships?.idea_status?.data?.id;\n      const ideaImageLarge =\n        ideaImages?.[0]?.attributes?.versions?.large || null;\n      const ideaId = idea.id;\n      const proposedBudget = idea.attributes?.proposed_budget;\n      const ideaBody = localize(idea?.attributes?.body_multiloc);\n      const isCompactView =\n        compact === true ||\n        (windowSize ? windowSize <= viewportWidths.largeTablet : false);\n      const proposedBudgetEnabled = isFieldEnabled(\n        'proposed_budget',\n        ideaCustomFieldsSchemas,\n        locale\n      );\n\n      content = (\n        <>\n          <IdeaMeta ideaId={ideaId} />\n\n          {!isCompactView && (\n            <TopBar>\n              <StyledGoBackButton\n                projectId={projectId}\n                insideModal={insideModal}\n              />\n              <IdeaMoreActions idea={idea} projectId={projectId} />\n            </TopBar>\n          )}\n\n          <Content id=\"e2e-idea-show-page-content\">\n            <LeftColumn>\n              <IdeaHeader>\n                <Title\n                  postType=\"idea\"\n                  postId={ideaId}\n                  title={ideaTitle}\n                  locale={locale}\n                  translateButtonClicked={translateButtonClicked}\n                />\n                {isCompactView && (\n                  <MobileIdeaMoreActions idea={idea} projectId={projectId} />\n                )}\n              </IdeaHeader>\n\n              {ideaImageLarge && (\n                <Image src={ideaImageLarge} alt=\"\" id=\"e2e-idea-image\" />\n              )}\n\n              <Outlet\n                id=\"app.containers.IdeasShow.left\"\n                idea={idea}\n                locale={locale}\n                onClick={this.onTranslateIdea}\n                translateButtonClicked={translateButtonClicked}\n              />\n\n              {proposedBudgetEnabled && proposedBudget && (\n                <>\n                  <BodySectionTitle>\n                    <FormattedMessage {...messages.proposedBudgetTitle} />\n                  </BodySectionTitle>\n                  <StyledIdeaProposedBudget proposedBudget={proposedBudget} />\n                  <BodySectionTitle>\n                    <FormattedMessage {...messages.bodyTitle} />\n                  </BodySectionTitle>\n                </>\n              )}\n\n              <StyledBody\n                postType=\"idea\"\n                postId={ideaId}\n                locale={locale}\n                body={ideaBody}\n                translateButtonClicked={translateButtonClicked}\n              />\n\n              {isCompactView && (\n                <StyledAssignBudgetControl\n                  view=\"ideaPage\"\n                  ideaId={ideaId}\n                  projectId={projectId}\n                />\n              )}\n\n              {isCompactView && (\n                <MobileMetaInformation\n                  ideaId={ideaId}\n                  projectId={projectId}\n                  statusId={statusId}\n                  authorId={authorId}\n                  compact={isCompactView}\n                />\n              )}\n\n              {isCompactView && (\n                <MobileIdeaSharingButton\n                  ideaId={ideaId}\n                  buttonComponent={<MobileSharingButtonComponent />}\n                />\n              )}\n\n              <StyledOfficialFeedback\n                postId={ideaId}\n                postType=\"idea\"\n                permissionToPost={postOfficialFeedbackPermission}\n              />\n\n              <Comments>\n                <Suspense fallback={<LoadingComments />}>\n                  <LazyComments postId={ideaId} postType=\"idea\" />\n                </Suspense>\n              </Comments>\n            </LeftColumn>\n\n            {!isCompactView && projectId && (\n              <StyledRightColumnDesktop\n                ideaId={ideaId}\n                projectId={projectId}\n                statusId={statusId}\n                authorId={authorId}\n                insideModal={insideModal}\n              />\n            )}\n          </Content>\n        </>\n      );\n    }\n\n    if (!isNilOrError(project)) {\n      const inputTerm = getInputTerm(\n        project.attributes.process_type,\n        project,\n        phases\n      );\n\n      return (\n        <>\n          {!loaded && (\n            <Container className={`loading ${className || ''}`}>\n              <Spinner />\n            </Container>\n          )}\n          <CSSTransition\n            classNames=\"content\"\n            in={loaded}\n            timeout={{\n              enter: contentFadeInDuration + contentFadeInDelay,\n              exit: 0,\n            }}\n            enter={true}\n            exit={false}\n          >\n            <Container\n              id=\"e2e-idea-show\"\n              className={`loaded ${className || ''}`}\n              ref={this.handleContainerRef}\n            >\n              {content}\n            </Container>\n          </CSSTransition>\n\n          <FeatureFlag name=\"ideaflow_social_sharing\">\n            <Modal\n              opened={!!ideaIdForSocialSharing}\n              close={this.closeIdeaSocialSharingModal}\n              hasSkipButton={true}\n              skipText={<FormattedMessage {...messages.skipSharing} />}\n            >\n              {ideaIdForSocialSharing && (\n                <SharingModalContent\n                  postType=\"idea\"\n                  postId={ideaIdForSocialSharing}\n                  title={formatMessage(\n                    getInputTermMessage(inputTerm, {\n                      idea: messages.sharingModalTitle,\n                      option: messages.optionSharingModalTitle,\n                      project: messages.projectSharingModalTitle,\n                      question: messages.questionSharingModalTitle,\n                      issue: messages.issueSharingModalTitle,\n                      contribution: messages.contributionSharingModalTitle,\n                    })\n                  )}\n                  subtitle={formatMessage(messages.sharingModalSubtitle)}\n                />\n              )}\n            </Modal>\n          </FeatureFlag>\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst IdeasShowWithHOCs = injectLocalize<Props>(\n  injectIntl(withRouter(IdeasShow))\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  locale: <GetLocale />,\n  authUser: <GetAuthUser />,\n  windowSize: <GetWindowSize />,\n  idea: ({ ideaId, render }) => <GetIdea ideaId={ideaId}>{render}</GetIdea>,\n  ideaImages: ({ ideaId, render }) => (\n    <GetIdeaImages ideaId={ideaId}>{render}</GetIdeaImages>\n  ),\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n  phases: ({ projectId, render }) => (\n    <GetPhases projectId={projectId}>{render}</GetPhases>\n  ),\n  officialFeedbacks: ({ ideaId, render }) => (\n    <GetOfficialFeedbacks postId={ideaId} postType=\"idea\">\n      {render}\n    </GetOfficialFeedbacks>\n  ),\n  postOfficialFeedbackPermission: ({ project, render }) => (\n    <GetPermission\n      item={!isNilOrError(project) ? project : null}\n      action=\"moderate\"\n    >\n      {render}\n    </GetPermission>\n  ),\n  ideaCustomFieldsSchemas: ({ projectId, render }) => (\n    <GetIdeaCustomFieldsSchemas projectId={projectId}>\n      {render}\n    </GetIdeaCustomFieldsSchemas>\n  ),\n  comments: ({ ideaId, render }) => (\n    <GetComments postId={ideaId} postType=\"idea\">\n      {render}\n    </GetComments>\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeasShowWithHOCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React from 'react';\nimport SharingDropdownButton from 'components/Sharing/SharingDropdownButton';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { getInputTerm } from 'services/participationContexts';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// hooks\nimport useIdea from 'hooks/useIdea';\nimport useLocalize from 'hooks/useLocalize';\nimport useAuthUser from 'hooks/useAuthUser';\nimport useProject from 'hooks/useProject';\nimport usePhases from 'hooks/usePhases';\n\ninterface Props {\n  className?: string;\n  ideaId: string;\n  buttonComponent: JSX.Element;\n}\n\nconst Component = ({\n  className,\n  ideaId,\n  buttonComponent,\n  intl: { formatMessage },\n}: Props & InjectedIntlProps) => {\n  const idea = useIdea({ ideaId });\n  const projectId = !isNilOrError(idea)\n    ? idea.relationships.project.data.id\n    : null;\n  const project = useProject({ projectId });\n  const phases = usePhases(projectId);\n  const authUser = useAuthUser();\n  const localize = useLocalize();\n\n  if (!isNilOrError(idea) && !isNilOrError(project)) {\n    const postUrl = location.href;\n    const titleMultiloc = idea.attributes.title_multiloc;\n    const postTitle = localize(titleMultiloc);\n    const inputTerm = getInputTerm(\n      project.attributes.process_type,\n      project,\n      phases\n    );\n\n    const utmParams = !isNilOrError(authUser)\n      ? {\n          source: 'share_idea',\n          campaign: 'share_content',\n          content: authUser.id,\n        }\n      : {\n          source: 'share_idea',\n          campaign: 'share_content',\n        };\n\n    return (\n      <SharingDropdownButton\n        className={className}\n        url={postUrl}\n        whatsAppMessage={formatMessage(\n          getInputTermMessage(inputTerm, {\n            idea: messages.ideaWhatsAppMessage,\n            option: messages.optionWhatsAppMessage,\n            project: messages.projectWhatsAppMessage,\n            question: messages.questionWhatsAppMessage,\n            issue: messages.issueWhatsAppMessage,\n            contribution: messages.contributionWhatsAppMessage,\n          }),\n          {\n            postTitle,\n          }\n        )}\n        twitterMessage={formatMessage(\n          getInputTermMessage(inputTerm, {\n            idea: messages.ideaTwitterMessage,\n            option: messages.optionTwitterMessage,\n            project: messages.projectTwitterMessage,\n            question: messages.questionTwitterMessage,\n            issue: messages.issueTwitterMessage,\n            contribution: messages.contributionTwitterMessage,\n          }),\n          {\n            postTitle,\n          }\n        )}\n        emailSubject={formatMessage(\n          getInputTermMessage(inputTerm, {\n            idea: messages.ideaEmailSharingSubject,\n            option: messages.optionEmailSharingSubject,\n            project: messages.projectEmailSharingSubject,\n            question: messages.questionEmailSharingSubject,\n            issue: messages.issueEmailSharingSubject,\n            contribution: messages.contributionEmailSharingSubject,\n          }),\n          {\n            ideaTitle: postTitle,\n          }\n        )}\n        emailBody={formatMessage(\n          getInputTermMessage(inputTerm, {\n            idea: messages.ideaEmailSharingBody,\n            option: messages.optionEmailSharingBody,\n            project: messages.projectEmailSharingBody,\n            question: messages.questionEmailSharingBody,\n            issue: messages.issueEmailSharingBody,\n            contribution: messages.contributionEmailSharingBody,\n          }),\n          {\n            ideaUrl: postUrl,\n            ideaTitle: postTitle,\n          }\n        )}\n        utmParams={utmParams}\n        buttonComponent={buttonComponent}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport default injectIntl(Component);\n","import React from 'react';\n\n// components\nimport MetaInformation from '../MetaInformation';\nimport Voting from 'containers/IdeasShow/CTABox/VotingCTABox/Voting';\nimport Buttons from 'containers/IdeasShow/CTABox/Buttons';\nimport AssignBudgetControl from 'components/AssignBudgetControl';\n\n// styling\nimport styled from 'styled-components';\nimport { rightColumnWidthDesktop } from '../styleConstants';\nimport { colors } from 'utils/styleUtils';\n\nconst Container = styled.div<{ insideModal: boolean }>`\n  flex: 0 0 ${rightColumnWidthDesktop}px;\n  width: ${rightColumnWidthDesktop}px;\n  position: sticky;\n  top: ${(props) => (props.insideModal ? '30px' : '110px')};\n  align-self: flex-start;\n`;\n\nconst InnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Box = styled.div`\n  padding: 20px;\n  border-radius: ${(props) => props.theme.borderRadius};\n  background: ${colors.backgroundLightGrey};\n  margin-bottom: 30px;\n`;\n\nconst StyledVoting = styled(Voting)`\n  padding-bottom: 23px;\n  margin-bottom: 23px;\n`;\n\nconst StyledAssignBudgetControl = styled(AssignBudgetControl)`\n  padding-bottom: 23px;\n  margin-bottom: 23px;\n  border-bottom: solid 1px #ccc;\n`;\n\nconst StyledMetaInformation = styled(MetaInformation)`\n  margin-bottom: 40px;\n`;\n\ninterface Props {\n  ideaId: string;\n  projectId: string;\n  statusId: string;\n  authorId: string | null;\n  insideModal: boolean;\n  className?: string;\n}\n\nconst RightColumnDesktop = ({\n  ideaId,\n  projectId,\n  statusId,\n  authorId,\n  insideModal,\n  className,\n}: Props) => {\n  return (\n    <Container insideModal={insideModal} className={className || ''}>\n      <InnerContainer>\n        <Box>\n          <StyledVoting ideaId={ideaId} projectId={projectId} />\n          <StyledAssignBudgetControl\n            view=\"ideaPage\"\n            ideaId={ideaId}\n            projectId={projectId}\n          />\n          <Buttons ideaId={ideaId} />\n        </Box>\n        <StyledMetaInformation\n          ideaId={ideaId}\n          projectId={projectId}\n          statusId={statusId}\n          authorId={authorId}\n        />\n      </InnerContainer>\n    </Container>\n  );\n};\n\nexport default RightColumnDesktop;\n","import React, { memo } from 'react';\nimport FormattedBudget from 'utils/currency/FormattedBudget';\n\n// styling\nimport styled from 'styled-components';\nimport { media } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  color: ${(props) => props.theme.colorText};\n  font-size: ${(props) => props.theme.fontSizes.large}px;\n  line-height: 29px; // same line-height as Body's content\n  font-weight: 300;\n\n  ${media.smallerThanMinTablet`\n    font-size: ${(props) => props.theme.fontSizes.base}px;\n  `}\n`;\n\ninterface Props {\n  className?: string;\n  proposedBudget: number;\n}\n\nconst IdeaProposedBudget = memo<Props>(({ className, proposedBudget }) => {\n  return (\n    <Container className={className}>\n      <FormattedBudget value={proposedBudget} />\n    </Container>\n  );\n});\n\nexport default IdeaProposedBudget;\n","import React, { memo, useCallback } from 'react';\nimport IdeaCTAButton from './IdeaCTAButton';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\n\ninterface Props {\n  className?: string;\n}\n\nconst GoToCommentsButton = memo<Props & InjectedIntlProps>(\n  ({ className, intl: { formatMessage } }) => {\n    const onClick = useCallback(() => {\n      const commentInputElementAnchor = document.getElementById(\n        'submit-comment-anchor'\n      );\n      const commentInputElement = document.getElementById('submit-comment');\n\n      if (commentInputElementAnchor && commentInputElement) {\n        commentInputElement.focus({ preventScroll: true });\n        setTimeout(() => {\n          commentInputElementAnchor.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start',\n          });\n        }, 200);\n      }\n    }, []);\n\n    return (\n      <IdeaCTAButton\n        onClick={onClick}\n        className={className}\n        buttonText={formatMessage(messages.commentCTA)}\n        iconName=\"comments\"\n      />\n    );\n  }\n);\n\nexport default injectIntl(GoToCommentsButton);\n","import React from 'react';\nimport Button from 'components/UI/Button';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\n\ninterface Props {\n  onClick?: () => void;\n  ariaExpanded?: boolean;\n}\n\nconst MobileSharingButtonComponent = ({\n  onClick,\n  ariaExpanded,\n  intl: { formatMessage },\n}: Props & InjectedIntlProps) => {\n  return (\n    <Button\n      buttonStyle=\"white\"\n      borderColor=\"#ccc\"\n      icon=\"share-arrow\"\n      onClick={onClick}\n      iconAriaHidden={true}\n      ariaExpanded={ariaExpanded}\n    >\n      {formatMessage(messages.share)}\n    </Button>\n  );\n};\n\nexport default injectIntl(MobileSharingButtonComponent);\n","import React, {\n  memo,\n  useMemo,\n  useState,\n  lazy,\n  Suspense,\n  useCallback,\n} from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport Outlet from 'components/Outlet';\nconst LeafletMap = lazy(() => import('components/UI/LeafletMap'));\n\n// hooks\nimport useAppConfiguration from 'hooks/useAppConfiguration';\n\n// utils\nimport {\n  getCenter,\n  getZoomLevel,\n  getTileProvider,\n  getTileOptions,\n} from 'utils/map';\nimport { ILeafletMapConfig } from 'components/UI/LeafletMap/useLeaflet';\n\n// styling\nimport styled from 'styled-components';\nimport { media, defaultOutline, defaultCardStyle } from 'utils/styleUtils';\n\n// typings\nimport { LatLngTuple, Map as ILeafletMap } from 'leaflet';\n\nexport interface Point extends GeoJSON.Point {\n  data?: any;\n  id: string;\n  title?: string;\n}\n\nconst Container = styled.div`\n  ${defaultCardStyle};\n  background: transparent;\n  border: solid 1px #ccc;\n`;\n\nconst MapWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  position: relative;\n`;\n\nconst BoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  position: absolute;\n  top: 0;\n  z-index: 1001;\n  background: #fff;\n  width: 100%;\n  height: 80%;\n  max-height: 550px;\n`;\n\nconst CloseButton = styled.button`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n  border-radius: 50%;\n  border: solid 1px transparent;\n  background: #fff;\n  transition: all 100ms ease-out;\n  outline: none !important;\n\n  &:hover {\n    background: #ececec;\n  }\n\n  &.focus-visible {\n    ${defaultOutline};\n  }\n\n  ${media.smallerThanMinTablet`\n    top: 4px;\n    right: 4px;\n  `}\n`;\n\nconst CloseIcon = styled(Icon)`\n  width: 12px;\n  height: 12px;\n  fill: #000;\n`;\n\nexport interface IMapConfigProps {\n  centerLatLng?: LatLngTuple;\n  points?: Point[];\n  zoomLevel?: number;\n  areas?: GeoJSON.Polygon[];\n  mapHeight?: string;\n  noMarkerClustering?: boolean;\n  zoomControlPosition?: 'topleft' | 'topright' | 'bottomleft' | 'bottomright';\n  layersControlPosition?: 'topleft' | 'topright' | 'bottomleft' | 'bottomright';\n}\n\nexport interface IMapProps {\n  onInit?: (map: ILeafletMap) => void;\n  onBoxClose?: (event: React.FormEvent) => void;\n  className?: string;\n  projectId?: string | null;\n  hideLegend?: boolean;\n  boxContent?: JSX.Element | null;\n}\n\nconst Map = memo<IMapProps & IMapConfigProps>(\n  ({\n    projectId,\n    centerLatLng,\n    zoomLevel,\n    mapHeight,\n    points,\n    noMarkerClustering,\n    zoomControlPosition,\n    layersControlPosition,\n    boxContent,\n    onInit,\n    onBoxClose,\n    className,\n    hideLegend,\n  }) => {\n    const appConfig = useAppConfiguration();\n\n    const [\n      additionalLeafletConfig,\n      setAdditionalLeafletConfig,\n    ] = useState<ILeafletMapConfig | null>(null);\n\n    const center = useMemo(() => {\n      return getCenter(centerLatLng, appConfig);\n    }, [centerLatLng, appConfig]);\n\n    const zoom = useMemo(() => {\n      return getZoomLevel(zoomLevel, appConfig);\n    }, [zoomLevel, appConfig]);\n\n    const tileProvider = useMemo(() => {\n      return getTileProvider(appConfig);\n    }, [appConfig]);\n\n    const tileOptions = useMemo(() => {\n      return getTileOptions();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tileProvider]);\n\n    const leafletConfig = useMemo(() => {\n      return {\n        points,\n        noMarkerClustering,\n        zoom,\n        center,\n        tileProvider,\n        tileOptions,\n        zoomControlPosition,\n        layersControlPosition,\n        ...additionalLeafletConfig,\n      };\n    }, [\n      points,\n      noMarkerClustering,\n      zoom,\n      center,\n      tileProvider,\n      tileOptions,\n      zoomControlPosition,\n      layersControlPosition,\n      additionalLeafletConfig,\n    ]);\n\n    const handleLeafletConfigChange = useCallback(\n      (leafletConfig: ILeafletMapConfig) => {\n        setAdditionalLeafletConfig(leafletConfig);\n      },\n      []\n    );\n\n    const handleBoxOnClose = (event: React.FormEvent) => {\n      event.preventDefault();\n      onBoxClose?.(event);\n    };\n\n    const handleOnInit = (map: L.Map) => {\n      onInit?.(map);\n    };\n\n    return (\n      <Container className={className || ''}>\n        <MapWrapper>\n          {!isNilOrError(boxContent) && (\n            <BoxContainer>\n              <CloseButton onClick={handleBoxOnClose}>\n                <CloseIcon name=\"close\" />\n              </CloseButton>\n\n              {boxContent}\n            </BoxContainer>\n          )}\n\n          <Suspense fallback={false}>\n            <LeafletMap\n              id=\"mapid\"\n              className=\"e2e-leafletmap\"\n              mapHeight={mapHeight}\n              onInit={handleOnInit}\n              {...leafletConfig}\n            />\n          </Suspense>\n          <Outlet\n            id=\"app.components.Map.leafletConfig\"\n            projectId={projectId}\n            onLeafletConfigChange={handleLeafletConfigChange}\n            centerLatLng={centerLatLng}\n            zoomLevel={zoomLevel}\n            points={points}\n          />\n        </MapWrapper>\n\n        {!hideLegend && (\n          <Outlet id=\"app.components.Map.Legend\" projectId={projectId} />\n        )}\n      </Container>\n    );\n  }\n);\n\nexport default Map;\n","import React from 'react';\nimport IdeaCTAButton from './IdeaCTAButton';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\n\ninterface Props {\n  onClick?: () => void;\n  ariaExpanded?: boolean;\n}\n\nconst SharingButtonComponent = ({\n  intl: { formatMessage },\n  onClick,\n  ariaExpanded,\n}: Props & InjectedIntlProps) => {\n  return (\n    <IdeaCTAButton\n      iconName=\"share-arrow\"\n      buttonText={formatMessage(messages.share)}\n      onClick={onClick}\n      ariaExpanded={ariaExpanded}\n    />\n  );\n};\n\nexport default injectIntl(SharingButtonComponent);\n","import React, { memo, useState, useEffect } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport { Icon, Spinner } from 'cl2-component-library';\nimport TopicFilterDropdown from 'components/IdeaCards/TopicFilterDropdown';\nimport SelectSort from 'components/IdeaCards/SortFilterDropdown';\nimport SearchInput from 'components/UI/SearchInput';\nimport IdeaMapCard from '../IdeaMapCard';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useIdeaMarkers from 'hooks/useIdeaMarkers';\nimport useProject from 'hooks/useProject';\nimport usePhase from 'hooks/usePhase';\nimport useIdeaCustomFieldsSchemas from 'hooks/useIdeaCustomFieldsSchemas';\n\n// events\nimport {\n  setIdeasSearch,\n  setIdeasSort,\n  setIdeasTopics,\n  ideasSort$,\n  ideasSearch$,\n  ideasTopics$,\n} from '../events';\n\n// services\nimport { ideaDefaultSortMethodFallback } from 'services/participationContexts';\n\n// i18n\nimport messages from '../messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// typings\nimport { Sort } from 'resources/GetIdeas';\nimport { CustomFieldCodes } from 'services/ideaCustomFieldsSchemas';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst Loading = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 20px;\n  border-bottom: solid 1px #ccc;\n`;\n\nconst DropdownFilters = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst StyledSearchInput = styled(SearchInput)`\n  width: 100%;\n`;\n\nconst IdeaMapCards = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding-top: 20px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst StyledIdeaMapCard = styled(IdeaMapCard)`\n  margin-left: 20px;\n  margin-right: 20px;\n`;\n\nconst EmptyContainer = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 100px;\n  margin-bottom: 100px;\n`;\n\nconst IdeaIcon = styled(Icon)`\n  flex: 0 0 26px;\n  width: 26px;\n  height: 26px;\n  fill: ${colors.label};\n`;\n\nconst EmptyMessage = styled.div`\n  padding-left: 50px;\n  padding-right: 50px;\n  margin-top: 12px;\n  margin-bottom: 30px;\n`;\n\nconst EmptyMessageLine = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: normal;\n  text-align: center;\n`;\n\ninterface Props {\n  projectIds: string[];\n  projectId: string;\n  phaseId?: string | null;\n  className?: string;\n}\n\nconst IdeasList = memo<Props>(\n  ({ projectIds, projectId, phaseId, className }) => {\n    const locale = useLocale();\n    const ideaCustomFieldsSchemas = useIdeaCustomFieldsSchemas({ projectId });\n    const project = useProject({ projectId });\n    const phase = usePhase(phaseId || null);\n\n    // ideaMarkers\n    const [search, setSearch] = useState<string | null>(null);\n    const [topics, setTopics] = useState<string[]>([]);\n    const [sort, setSort] = useState<Sort>(\n      project?.attributes.ideas_order || ideaDefaultSortMethodFallback\n    );\n    const ideaMarkers = useIdeaMarkers({\n      projectIds,\n      phaseId,\n      sort,\n      search,\n      topics,\n    });\n\n    const isFiltered = (search && search.length > 0) || topics.length > 0;\n    const isPBProject =\n      phase === null &&\n      !isNilOrError(project) &&\n      project.attributes.participation_method === 'budgeting';\n    const isPBPhase =\n      !isNilOrError(phase) &&\n      phase.attributes.participation_method === 'budgeting';\n    const isPBIdea = isNilOrError(phase) ? isPBProject : isPBPhase;\n\n    const isFieldEnabled = (fieldCode: CustomFieldCodes) => {\n      if (!isNilOrError(ideaCustomFieldsSchemas) && !isNilOrError(locale)) {\n        return (\n          ideaCustomFieldsSchemas.ui_schema_multiloc?.[locale]?.[fieldCode]?.[\n            'ui:widget'\n          ] !== 'hidden'\n        );\n      }\n\n      return true;\n    };\n\n    const topicsEnabled = isFieldEnabled('topic_ids');\n\n    useEffect(() => {\n      const subscriptions = [\n        ideasSearch$.subscribe((search) => {\n          setSearch(search);\n        }),\n        ideasSort$.subscribe((sort) => {\n          setSort(sort);\n        }),\n        ideasTopics$.subscribe((topics) => {\n          setTopics(topics);\n        }),\n      ];\n\n      return () => {\n        subscriptions.forEach((subscription) => subscription.unsubscribe());\n      };\n    }, []);\n\n    const handleSearchOnChange = (newSearchValue: string) => {\n      setIdeasSearch(newSearchValue || null);\n    };\n\n    const handleSortOnChange = (newSort: Sort) => {\n      setIdeasSort(newSort);\n    };\n\n    const handleTopicsOnChange = (newTopics: string[]) => {\n      setIdeasTopics(newTopics);\n    };\n\n    return (\n      <Container className={className || ''}>\n        <Header>\n          <DropdownFilters>\n            <SelectSort\n              onChange={handleSortOnChange}\n              alignment=\"left\"\n              defaultSortingMethod={\n                project?.attributes.ideas_order || ideaDefaultSortMethodFallback\n              }\n            />\n            {topicsEnabled && (\n              <TopicFilterDropdown\n                onChange={handleTopicsOnChange}\n                alignment=\"left\"\n                projectId={!isNilOrError(project) ? project.id : null}\n              />\n            )}\n          </DropdownFilters>\n\n          <StyledSearchInput onChange={handleSearchOnChange} />\n        </Header>\n\n        <IdeaMapCards>\n          {ideaMarkers === undefined && (\n            <Loading>\n              <Spinner />\n            </Loading>\n          )}\n\n          {ideaMarkers &&\n            ideaMarkers.length > 0 &&\n            ideaMarkers.map((ideaMarker) => (\n              <StyledIdeaMapCard\n                ideaMarker={ideaMarker}\n                key={ideaMarker.id}\n                isPBIdea={isPBIdea}\n              />\n            ))}\n\n          {(ideaMarkers === null || ideaMarkers?.length === 0) && (\n            <EmptyContainer>\n              <IdeaIcon ariaHidden name=\"idea\" />\n              <EmptyMessage>\n                <EmptyMessageLine>\n                  <FormattedMessage\n                    {...(isFiltered\n                      ? messages.noFilteredResults\n                      : messages.noResults)}\n                  />\n                </EmptyMessageLine>\n              </EmptyMessage>\n            </EmptyContainer>\n          )}\n        </IdeaMapCards>\n      </Container>\n    );\n  }\n);\n\nexport default IdeasList;\n","import React, { memo, useState, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { darken } from 'polished';\nimport useIdea from 'hooks/useIdea';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isNil } from 'lodash-es';\n\n// components\nimport { Icon, colors } from 'cl2-component-library';\nimport Modal from 'components/UI/Modal';\nimport Map, { Point } from 'components/Map';\nimport { Header, Item } from 'components/IdeasShowComponents/MetaInfoStyles';\n\n// utils\nimport { getAddressOrFallbackDMS } from 'utils/map';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// styling\nimport { isRtl, fontSizes, media } from 'utils/styleUtils';\n\n// typings\nimport { LatLngTuple } from 'leaflet';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst StyledIcon = styled(Icon)`\n  flex: 0 0 16px;\n  width: 16px;\n  fill: ${colors.label};\n  margin-right: 8px;\n\n  ${isRtl`\n    margin-right: 0;\n    margin-left: 8px;\n  `}\n`;\n\nconst OpenMapModalButton = styled.button`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  line-height: 22px;\n  text-decoration: underline;\n  text-align: left;\n  margin: 0;\n  padding: 0;\n  border: none;\n  appearance: none;\n  cursor: pointer;\n\n  &:hover {\n    color: ${darken(0.2, colors.label)};\n  }\n`;\n\nconst Address = styled.div`\n  width: calc(100% - 35px);\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n`;\n\nconst MapContainer = styled.div`\n  padding: 30px;\n\n  ${media.smallerThanMinTablet`\n    padding: 20px;\n  `}\n`;\n\nexport interface Props {\n  projectId: string;\n  ideaId: string;\n  compact?: boolean;\n  className?: string;\n}\n\nconst Location = memo<Props & InjectedIntlProps>(\n  ({ intl: { formatMessage }, projectId, ideaId, compact, className }) => {\n    const [isOpened, setIsOpened] = useState(false);\n    const idea = useIdea({ ideaId });\n\n    const point =\n      (!isNilOrError(idea) && idea.attributes?.location_point_geojson) || null;\n    const lat = point?.coordinates?.[1] || null;\n    const lng = point?.coordinates?.[0] || null;\n    const address = !isNilOrError(idea)\n      ? getAddressOrFallbackDMS(\n          idea.attributes.location_description,\n          idea.attributes.location_point_geojson\n        )\n      : null;\n\n    const points = useMemo(() => {\n      return point ? ([point] as Point[]) : undefined;\n    }, [point]);\n\n    const centerLatLng = useMemo(() => {\n      if (!isNil(lat) && !isNil(lng)) {\n        return [lat, lng] as LatLngTuple;\n      }\n      return;\n    }, [lat, lng]);\n\n    const closeModal = () => {\n      setIsOpened(false);\n    };\n\n    const openModal = () => {\n      setIsOpened(true);\n    };\n\n    if (address && points) {\n      return (\n        <Item className={className || ''} compact={compact}>\n          <Header>{formatMessage(messages.location)}</Header>\n          <Container>\n            <StyledIcon name=\"position\" ariaHidden />\n            <OpenMapModalButton id=\"e2e-map-popup\" onClick={openModal}>\n              {address}\n            </OpenMapModalButton>\n          </Container>\n          <Modal\n            opened={isOpened}\n            close={closeModal}\n            header={<Address>{address}</Address>}\n            width={1150}\n          >\n            <MapContainer>\n              <Map\n                projectId={projectId}\n                points={points}\n                centerLatLng={centerLatLng}\n                zoomLevel={15}\n              />\n            </MapContainer>\n          </Modal>\n        </Item>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(Location);\n","import React from 'react';\nimport tracks from '../tracks';\nimport { getUrlWithUtm, UtmParams, Medium } from '../utils';\n\n// style\nimport styled from 'styled-components';\nimport { fontSizes, colors, media } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport Facebook from '../buttons/Facebook';\nimport Twitter from '../buttons/Twitter';\nimport Messenger from '../buttons/Messenger';\nimport WhatsApp from '../buttons/WhatsApp';\nimport Email from '../buttons/Email';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .sharingButton {\n    display: flex;\n    align-items: center;\n    padding: 10px 12px;\n    border-radius: ${(props: any) => props.theme.borderRadius};\n    cursor: pointer;\n    transition: all 100ms ease-out;\n    text-align: left;\n    color: ${colors.label};\n    font-size: ${fontSizes.base}px;\n\n    &:hover {\n      background-color: ${darken(0.06, 'white')};\n    }\n\n    &.messenger {\n      ${media.biggerThanMaxTablet`\n        display: none;\n      `}\n    }\n  }\n`;\n\nconst FacebookIcon = styled(Icon)`\n  width: 22px;\n  height: 18px;\n  margin-right: 10px;\n  fill: #3c5a99;\n`;\n\nconst MessengerIcon = styled(Icon)`\n  width: 22px;\n  height: 18px;\n  margin-right: 10px;\n  fill: rgba(0, 120, 255, 1);\n`;\n\nconst WhatsAppIcon = styled(Icon)`\n  width: 22px;\n  height: 22px;\n  fill: #23b43a;\n  margin-right: 10px;\n`;\n\nconst TwitterIcon = styled(Icon)`\n  width: 22px;\n  height: 17px;\n  fill: #1da1f2;\n  margin-right: 10px;\n`;\n\nconst EmailIcon = styled(Icon)`\n  margin-right: 10px;\n  width: 22px;\n  height: 17px;\n  fill: ${colors.secondaryText};\n`;\n\ninterface Props {\n  className?: string;\n  url: string;\n  twitterMessage: string;\n  whatsAppMessage: string;\n  emailSubject: string;\n  emailBody: string;\n  utmParams: UtmParams;\n  id?: string;\n}\n\nconst SharingDropdownContent = ({\n  id,\n  url,\n  className,\n  utmParams,\n  emailBody,\n  emailSubject,\n  twitterMessage,\n  whatsAppMessage,\n}: Props) => {\n  const getUrl = (medium: Medium) => {\n    return getUrlWithUtm(medium, url, utmParams);\n  };\n\n  const handleClick = (medium: Medium) => () => {\n    trackEventByName(tracks.shareButtonClicked.name, { network: medium });\n  };\n\n  const facebook = (\n    <Facebook\n      url={getUrl('facebook')}\n      className=\"sharingButton facebook\"\n      onClick={handleClick('facebook')}\n    >\n      {/*\n        For all sharing components, both children are aria-hidden.\n        The reasons are that (1) there's an aria-label for the text in all the components themselves\n        so we don't need to rely on the person who uses the component to think of adding text.\n        and (2) the icon needs to be hidden by default.\n      */}\n      <FacebookIcon ariaHidden name=\"facebook\" />\n      <span aria-hidden>{'Facebook'}</span>\n    </Facebook>\n  );\n\n  const messenger = (\n    <Messenger\n      className=\"sharingButton messenger\"\n      onClick={handleClick('messenger')}\n      url={getUrl('messenger')}\n    >\n      <MessengerIcon ariaHidden name=\"messenger\" />\n      <span aria-hidden>{'Messenger'}</span>\n    </Messenger>\n  );\n\n  const whatsapp = (\n    <WhatsApp\n      className=\"sharingButton whatsapp\"\n      onClick={handleClick('whatsapp')}\n      url={getUrl('whatsapp')}\n      whatsAppMessage={whatsAppMessage}\n    >\n      <WhatsAppIcon ariaHidden name=\"whatsapp\" />\n      <span aria-hidden>{'WhatsApp'}</span>\n    </WhatsApp>\n  );\n\n  const twitter = (\n    <Twitter\n      twitterMessage={twitterMessage}\n      url={getUrl('twitter')}\n      className={'sharingButton twitter'}\n      onClick={handleClick('twitter')}\n    >\n      <TwitterIcon ariaHidden name=\"twitter\" />\n      <span aria-hidden>{'Twitter'}</span>\n    </Twitter>\n  );\n\n  const email = (\n    <Email\n      className=\"sharingButton email\"\n      onClick={handleClick('email')}\n      emailBody={emailBody}\n      emailSubject={emailSubject}\n    >\n      <EmailIcon ariaHidden name=\"email\" />\n      <span aria-hidden>{'Email'}</span>\n    </Email>\n  );\n\n  return (\n    <Container id={id || ''} className={className || ''}>\n      {facebook}\n      {messenger}\n      {whatsapp}\n      {twitter}\n      {email}\n    </Container>\n  );\n};\n\nexport default SharingDropdownContent;\n","import React, { memo, useState } from 'react';\nimport clHistory from 'utils/cl-router/history';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport HasPermission from 'components/HasPermission';\nimport MoreActionsMenu from 'components/UI/MoreActionsMenu';\nimport Modal from 'components/UI/Modal';\nimport SpamReportForm from 'containers/SpamReport';\n\n// hooks\nimport useAuthUser from 'hooks/useAuthUser';\nimport useProject from 'hooks/useProject';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\nimport injectIntl from 'utils/cl-intl/injectIntl';\n\n// services\nimport { deleteIdea, IIdeaData } from 'services/ideas';\nimport { ProcessType } from 'services/projects';\n\n// styling\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\nconst MoreActionsMenuWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\ninterface Props {\n  idea: IIdeaData;\n  className?: string;\n  projectId: string;\n}\n\nconst IdeaMoreActions = memo(\n  ({\n    idea,\n    className,\n    projectId,\n    intl: { formatMessage },\n  }: Props & InjectedIntlProps) => {\n    const [isSpamModalVisible, setIsSpamModalVisible] = useState<boolean>(\n      false\n    );\n    const authUser = useAuthUser();\n    const project = useProject({ projectId });\n\n    const openSpamModal = () => {\n      setIsSpamModalVisible(true);\n    };\n\n    const closeSpamModal = () => {\n      setIsSpamModalVisible(false);\n    };\n\n    const onEditIdea = () => {\n      clHistory.push(`/ideas/edit/${idea.id}`);\n    };\n\n    const onDeleteIdea = (ideaId: string, processType: ProcessType) => () => {\n      const deleteConfirmationMessage = {\n        continuous: messages.deleteInputConfirmation,\n        timeline: messages.deleteInputInTimelineConfirmation,\n      }[processType];\n\n      if (window.confirm(formatMessage(deleteConfirmationMessage))) {\n        deleteIdea(ideaId);\n        clHistory.goBack();\n      }\n    };\n\n    if (\n      !isNilOrError(authUser) &&\n      !isNilOrError(idea) &&\n      !isNilOrError(project)\n    ) {\n      const ideaId = idea.id;\n      const processType = project.attributes.process_type;\n\n      return (\n        <Container className={className}>\n          <MoreActionsMenuWrapper>\n            <HasPermission item={idea} action=\"edit\" context={idea}>\n              <MoreActionsMenu\n                ariaLabel={<FormattedMessage {...messages.moreOptions} />}\n                id=\"e2e-idea-more-actions\"\n                actions={[\n                  {\n                    label: <FormattedMessage {...messages.reportAsSpam} />,\n                    handler: openSpamModal,\n                  },\n                  {\n                    label: <FormattedMessage {...messages.editPost} />,\n                    handler: onEditIdea,\n                  },\n                  {\n                    label: <FormattedMessage {...messages.deletePost} />,\n                    handler: onDeleteIdea(ideaId, processType),\n                  },\n                ]}\n              />\n              <HasPermission.No>\n                <MoreActionsMenu\n                  id=\"e2e-idea-more-actions\"\n                  actions={[\n                    {\n                      label: <FormattedMessage {...messages.reportAsSpam} />,\n                      handler: openSpamModal,\n                    },\n                  ]}\n                  ariaLabel={<FormattedMessage {...messages.moreOptions} />}\n                />\n              </HasPermission.No>\n            </HasPermission>\n          </MoreActionsMenuWrapper>\n          <Modal\n            opened={isSpamModalVisible}\n            close={closeSpamModal}\n            header={<FormattedMessage {...messages.reportAsSpamModalTitle} />}\n          >\n            <SpamReportForm resourceId={idea.id} resourceType=\"ideas\" />\n          </Modal>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(IdeaMoreActions);\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { IPhaseFileData } from 'services/phaseFiles';\nimport { IEventFileData } from 'services/eventFiles';\nimport { IIdeaFileData } from 'services/ideaFiles';\nimport { darken } from 'polished';\n\n// components\nimport { Icon, colors, media } from 'cl2-component-library';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst FileDownloadLink = styled.a`\n  color: ${colors.label};\n  display: inline-block;\n  margin-right: 10px;\n  hyphens: auto;\n  text-decoration: underline;\n\n  &:hover {\n    color: ${darken(0.2, colors.label)};\n    text-decoration: underline;\n  }\n\n  ${media.smallerThanMinTablet`\n    margin-right: 0;\n  `}\n`;\n\nconst PaperclipIcon = styled(Icon)`\n  width: 12px;\n  height: 20px;\n  fill: ${colors.label};\n  margin-right: 10px;\n`;\n\nexport interface Props {\n  className?: string;\n  file: IPhaseFileData | IIdeaFileData | IEventFileData;\n}\n\nconst Attachment = memo<Props>(({ className, file }) => {\n  return (\n    <Container className={className}>\n      <PaperclipIcon name=\"paperclip\" ariaHidden />\n      <FileDownloadLink\n        href={file.attributes.file.url}\n        download={file.attributes.name}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {file.attributes.name}\n      </FileDownloadLink>\n    </Container>\n  );\n});\n\nexport default Attachment;\n","import React, { memo, useCallback, MouseEvent } from 'react';\nimport clHistory from 'utils/cl-router/history';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// hooks\nimport useIdea from 'hooks/useIdea';\nimport useProject from 'hooks/useProject';\nimport useAuthUser from 'hooks/useAuthUser';\n\n// components\nimport VoteControl from 'components/VoteControl';\nimport { Icon } from 'cl2-component-library';\n\n// utils\nimport eventEmitter from 'utils/eventEmitter';\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\nimport { media, colors, fontSizes } from 'utils/styleUtils';\nimport { lighten } from 'polished';\n\n// typings\nimport { IdeaVotingDisabledReason } from 'services/ideas';\n\nconst Container = styled.div`\n  flex: 0 0 ${(props) => props.theme.mobileTopBarHeight}px;\n  height: ${(props) => props.theme.mobileTopBarHeight}px;\n  background-color: #fff;\n  border-bottom: solid 1px ${lighten(0.3, colors.label)};\n`;\n\nconst TopBarInner = styled.div`\n  height: 100%;\n  padding-left: 15px;\n  padding-right: 15px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  ${media.biggerThanMinTablet`\n    padding-left: 30px;\n    padding-right: 30px;\n  `}\n`;\n\nconst Left = styled.div`\n  height: 48px;\n  align-items: center;\n  display: flex;\n`;\n\nconst Right = styled.div``;\n\nconst GoBackIcon = styled(Icon)`\n  height: 22px;\n  fill: ${colors.label};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: fill 100ms ease-out;\n`;\n\nconst GoBackButton = styled.button`\n  width: 45px;\n  height: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  margin-right: 6px;\n  margin-left: -2px;\n  cursor: pointer;\n  background: #fff;\n  border-radius: 50%;\n  transition: all 100ms ease-out;\n  border: solid 1px ${lighten(0.2, colors.label)};\n\n  &:hover {\n    border-color: #000;\n\n    ${GoBackIcon} {\n      fill: #000;\n    }\n  }\n`;\n\nconst GoBackLabel = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  transition: fill 100ms ease-out;\n\n  ${media.phone`\n    display: none;\n  `}\n`;\n\ninterface Props {\n  ideaId: string;\n  insideModal?: boolean;\n  goBackAction?: () => void;\n  className?: string;\n}\n\nconst IdeaShowPageTopBar = memo<Props>(\n  ({ ideaId, insideModal, goBackAction, className }) => {\n    const authUser = useAuthUser();\n    const idea = useIdea({ ideaId });\n    const project = useProject({\n      projectId: !isNilOrError(idea)\n        ? idea.relationships.project.data.id\n        : null,\n    });\n\n    const onGoBack = useCallback(\n      (event: MouseEvent<HTMLElement>) => {\n        event.preventDefault();\n\n        if (goBackAction) {\n          goBackAction?.();\n        } else if (insideModal) {\n          eventEmitter.emit('closeIdeaModal');\n        } else if (!isNilOrError(project)) {\n          clHistory.push(`/projects/${project.attributes.slug}`);\n        } else {\n          clHistory.push('/');\n        }\n      },\n      [insideModal, project, goBackAction]\n    );\n\n    const onDisabledVoteClick = useCallback(\n      (disabled_reason: IdeaVotingDisabledReason) => {\n        if (\n          !isNilOrError(authUser) &&\n          !isNilOrError(project) &&\n          disabled_reason === 'not_verified'\n        ) {\n          const pcType =\n            project.attributes.process_type === 'continuous'\n              ? 'project'\n              : 'phase';\n          const pcId =\n            project.relationships?.current_phase?.data?.id || project.id;\n\n          if (pcId && pcType) {\n            openVerificationModal({\n              context: {\n                action: 'voting_idea',\n                id: pcId,\n                type: pcType,\n              },\n            });\n          }\n        }\n      },\n      [authUser, project]\n    );\n\n    return (\n      <Container className={className || ''}>\n        <TopBarInner>\n          <Left>\n            <GoBackButton onClick={onGoBack}>\n              <GoBackIcon ariaHidden name=\"arrow-back\" />\n            </GoBackButton>\n            <GoBackLabel>\n              <FormattedMessage {...messages.goBack} />\n            </GoBackLabel>\n          </Left>\n          <Right>\n            <VoteControl\n              styleType=\"border\"\n              size=\"2\"\n              ideaId={ideaId}\n              disabledVoteClick={onDisabledVoteClick}\n            />\n          </Right>\n        </TopBarInner>\n      </Container>\n    );\n  }\n);\n\nexport default IdeaShowPageTopBar;\n","import {\n  distinctUntilChanged,\n  map,\n  publishReplay,\n  refCount,\n  debounceTime,\n} from 'rxjs/operators';\nimport { isEqual } from 'lodash-es';\nimport eventEmitter from 'utils/eventEmitter';\nimport { LatLngTuple } from 'leaflet';\n\nenum events {\n  leafletMapCenterChange = 'leafletMapCenterChange',\n  leafletMapZoomChange = 'leafletMapZoomChange',\n  leafletMapLatLngZoomChange = 'leafletMapLatLngZoomChange',\n  leafletMapHoveredMarkerChange = 'leafletMapHoveredMarkerChange',\n  leafletMapSelectedMarkerChange = 'leafletMapSelectedMarkerChange',\n  leafletMapClicked = 'leafletMapClicked',\n}\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapCenter(center: LatLngTuple | null) {\n  eventEmitter.emit<LatLngTuple | null>(events.leafletMapCenterChange, center);\n}\n\nexport const leafletMapCenter$ = eventEmitter\n  .observeEvent<LatLngTuple | null>(events.leafletMapCenterChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y)),\n    publishReplay(1),\n    refCount()\n  );\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapZoom(zoom: number | null) {\n  eventEmitter.emit<number | null>(events.leafletMapZoomChange, zoom);\n}\n\nexport const leafletMapZoom$ = eventEmitter\n  .observeEvent<number | null>(events.leafletMapZoomChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y)),\n    publishReplay(1),\n    refCount()\n  );\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapHoveredMarker(markerId: string | null) {\n  eventEmitter.emit<string | null>(\n    events.leafletMapHoveredMarkerChange,\n    markerId\n  );\n}\n\nexport const leafletMapHoveredMarker$ = eventEmitter\n  .observeEvent<string | null>(events.leafletMapHoveredMarkerChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y))\n  );\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapSelectedMarker(markerId: string | null) {\n  eventEmitter.emit<string | null>(\n    events.leafletMapSelectedMarkerChange,\n    markerId\n  );\n}\n\nexport const leafletMapSelectedMarker$ = eventEmitter\n  .observeEvent<string | null>(events.leafletMapSelectedMarkerChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y))\n  );\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapClicked(latLng: L.LatLng) {\n  eventEmitter.emit<L.LatLng>(events.leafletMapClicked, latLng);\n}\n\nexport const leafletMapClicked$ = eventEmitter\n  .observeEvent<L.LatLng>(events.leafletMapClicked)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y)),\n    debounceTime(50)\n  );\n\n// ----------------------------------------------------------------------------------------------\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Avatar from 'components/Avatar';\nimport UserName from 'components/UI/UserName';\nimport { Header, Item } from 'components/IdeasShowComponents/MetaInfoStyles';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps, FormattedDate } from 'react-intl';\nimport messages from './messages';\n\n// hooks\nimport useIdea from 'hooks/useIdea';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes, isRtl } from 'utils/styleUtils';\n\nconst UserWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  margin-top: -4px;\n  margin-bottom: -6px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin-right: 5px;\n  margin-left: -4px;\n\n  ${isRtl`\n    margin-right: -4px;\n    margin-left: 5px;\n  `}\n`;\n\nexport interface Props {\n  authorId: string | null;\n  ideaId: string;\n  compact?: boolean;\n  className?: string;\n}\n\nconst PostedBy = memo<Props & InjectedIntlProps>(\n  ({ authorId, ideaId, compact, className, intl: { formatMessage } }) => {\n    const idea = useIdea({ ideaId });\n\n    if (!isNilOrError(idea)) {\n      const ideaPublishedAtDate = idea.attributes.published_at;\n      const userName = (\n        <UserName\n          userId={authorId}\n          isLinkToProfile={true}\n          underline={true}\n          color={colors.label}\n          fontSize={fontSizes.small}\n        />\n      );\n      const date = (\n        <FormattedDate\n          value={ideaPublishedAtDate}\n          year=\"numeric\"\n          month=\"long\"\n          day=\"numeric\"\n        />\n      );\n\n      return (\n        <Item className={`first ${className || ''}`} compact={compact}>\n          <Header>{formatMessage(messages.postedBy)}</Header>\n          <UserWrapper className=\"e2e-idea-author\">\n            <StyledAvatar\n              userId={authorId}\n              size={30}\n              isLinkToProfile={!!authorId}\n            />\n            <FormattedMessage\n              {...messages.byUserOnDate}\n              values={{ userName, date }}\n            />\n          </UserWrapper>\n        </Item>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(PostedBy);\n","export default {\n  postYourIdeaButtonClicked: \"'Post your idea' button clicked\",\n  redirectedToIdeaFrom:\n    \"Redirected to idea form in repsonse to clicking 'Post your idea' button\",\n  verificationModalOpened:\n    \"Verification modal opened in response to clicking 'Post your idea' button\",\n  redirectedToSignUpForm:\n    \"Redirected to sign up form in response to clicking 'Post your idea' button\",\n  signUpInModalOpened:\n    \"Sign up/in modal opened in response to clicking 'Post your idea' button\",\n};\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\nimport PopContainer from 'components/UI/PopContainer';\nimport VoteControl from 'components/VoteControl';\nimport VotingDisabled from 'components/VoteControl/VotingDisabled';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\n\nconst Container = styled.div``;\n\nconst VoteControlWrapper = styled.div`\n  &.error {\n    display: none;\n  }\n`;\n\ninterface InputProps {\n  className?: string;\n  ideaId?: string;\n  projectId: string;\n}\n\ninterface DataProps {\n  idea: GetIdeaChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  error: 'votingDisabled' | null;\n  isContainerVisible: boolean;\n}\n\nclass VoteWrapper extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isContainerVisible: false,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { ideaId } = this.props;\n    const prevIdeaId = prevProps.ideaId;\n\n    if (ideaId !== prevIdeaId) {\n      this.setState({ isContainerVisible: false, error: null });\n    }\n  }\n\n  disabledVoteClick = () => {\n    this.setState({ error: 'votingDisabled' });\n  };\n\n  setVoteControlRef = () => {\n    // we check the ref returned by VoteControl to determine if the VoteControl component actually mounted\n    // If it didn't mount (because showVoteContrle === false), we also shouldn't mount the Container in this component\n    this.setState({ isContainerVisible: true });\n  };\n\n  render() {\n    const { className, ideaId, projectId, idea } = this.props;\n    const { isContainerVisible, error } = this.state;\n\n    const votingDescriptor = isNilOrError(idea)\n      ? null\n      : idea.attributes.action_descriptor.voting_idea;\n\n    if (!ideaId || !votingDescriptor) return null;\n\n    const voteControlComponent = (\n      <VoteControl\n        styleType=\"shadow\"\n        ideaId={ideaId}\n        disabledVoteClick={this.disabledVoteClick}\n        setRef={this.setVoteControlRef}\n        size=\"4\"\n      />\n    );\n\n    return !isContainerVisible ? (\n      voteControlComponent\n    ) : (\n      <Container className={className || ''}>\n        <VoteControlWrapper className={error ? 'error' : ''}>\n          {voteControlComponent}\n        </VoteControlWrapper>\n        {error === 'votingDisabled' && (\n          <PopContainer icon=\"lock-outlined\">\n            <VotingDisabled\n              votingDescriptor={votingDescriptor}\n              projectId={projectId}\n            />\n          </PopContainer>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  idea: ({ ideaId, render }) => <GetIdea ideaId={ideaId}>{render}</GetIdea>,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <VoteWrapper {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import { useState, useEffect } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { IIdeaMarkerData, ideasMarkersStream } from 'services/ideas';\nimport { Sort } from 'resources/GetIdeas';\nimport { ideaDefaultSortMethodFallback } from 'services/participationContexts';\n\ninterface Props {\n  phaseId?: string | null;\n  projectIds?: string[] | null;\n  sort?: Sort;\n  search?: string | null;\n  topics?: string[] | null;\n}\n\nexport default function useIdeaMarkers({\n  phaseId,\n  projectIds,\n  sort,\n  search,\n  topics,\n}: Props) {\n  const [ideaMarkers, setIdeaMarkers] = useState<\n    IIdeaMarkerData[] | undefined | null\n  >(undefined);\n\n  useEffect(() => {\n    setIdeaMarkers(undefined);\n\n    const subscription = ideasMarkersStream({\n      queryParameters: {\n        'page[size]': 2000,\n        location_required: true,\n        projects: projectIds,\n        phase: phaseId,\n        sort: sort || ideaDefaultSortMethodFallback,\n        search: search || undefined,\n        topics: topics || undefined,\n      },\n    }).observable.subscribe((response) => {\n      setIdeaMarkers(!isNilOrError(response) ? response.data : null);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [phaseId, projectIds, sort, search, topics]);\n\n  return ideaMarkers;\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  sharingModalTitle: {\n    id: 'app.containers.IdeasShow.sharingModalTitle',\n    defaultMessage: 'Thanks for submitting your idea!',\n  },\n  optionSharingModalTitle: {\n    id: 'app.containers.IdeasShow.optionSharingModalTitle',\n    defaultMessage: 'Your option has been successfully posted!',\n  },\n  projectSharingModalTitle: {\n    id: 'app.containers.IdeasShow.projectSharingModalTitle',\n    defaultMessage: 'Thanks for submitting your project!',\n  },\n  questionSharingModalTitle: {\n    id: 'app.containers.IdeasShow.questionSharingModalTitle',\n    defaultMessage: 'Your question has been successfully posted!',\n  },\n  issueSharingModalTitle: {\n    id: 'app.containers.IdeasShow.issueSharingModalTitle',\n    defaultMessage: 'Thanks for submitting your issue!',\n  },\n  contributionSharingModalTitle: {\n    id: 'app.containers.IdeasShow.contributionSharingModalTitle',\n    defaultMessage: 'Thanks for submitting your contribution!',\n  },\n\n  sharingModalSubtitle: {\n    id: 'app.containers.IdeasShow.sharingModalSubtitle',\n    defaultMessage: 'Reach more people and make your voice heard.',\n  },\n  deletedUser: {\n    id: 'app.containers.IdeasShow.deletedUser',\n    defaultMessage: 'deleted user',\n  },\n  currentStatus: {\n    id: 'app.containers.IdeasShow.currentStatus',\n    defaultMessage: 'Current status',\n  },\n  moreOptions: {\n    id: 'app.components.IdeasShow.moreOptions',\n    defaultMessage: 'More options',\n  },\n  reportAsSpam: {\n    id: 'app.components.IdeasShow.reportAsSpam',\n    defaultMessage: 'Report as spam',\n  },\n  editPost: {\n    id: 'app.components.IdeasShow.editPost',\n    defaultMessage: 'Edit',\n  },\n  deletePost: {\n    id: 'app.components.IdeasShow.deletePost',\n    defaultMessage: 'Delete',\n  },\n  deleteInputConfirmation: {\n    id: 'app.components.IdeasShow.deleteInputConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? This action cannot be undone.',\n  },\n  deleteInputInTimelineConfirmation: {\n    id: 'app.components.IdeasShow.deleteInputInTimelineConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? The input will be deleted from all project phases and cannot be recovered.',\n  },\n  goBack: {\n    id: 'app.components.IdeasShow.goBack',\n    defaultMessage: 'Go back',\n  },\n  send: {\n    id: 'app.components.IdeasShow.send',\n    defaultMessage: 'Send',\n  },\n  skipSharing: {\n    id: 'app.components.IdeasShow.skipSharing',\n    defaultMessage: \"Skip it, I'll do it later\",\n  },\n  reportAsSpamModalTitle: {\n    id: 'app.containers.IdeasShow.reportAsSpamModalTitle',\n    defaultMessage: 'Why do you want to report this as spam?',\n  },\n  byUserOnDate: {\n    id: 'app.components.IdeasShow.byUserOnDate',\n    defaultMessage: 'By {userName} on {date}',\n  },\n  createdTimeAgo: {\n    id: 'app.components.IdeasShow.createdTimeAgo',\n    defaultMessage: 'Created {timeAgo}',\n  },\n  or: {\n    id: 'app.components.IdeasShow.or',\n    defaultMessage: 'or',\n  },\n  proposedBudgetTitle: {\n    id: 'app.components.IdeasShow.proposedBudgetTitle',\n    defaultMessage: 'Proposed budget',\n  },\n  bodyTitle: {\n    id: 'app.components.IdeasShow.bodyTitle',\n    defaultMessage: 'Description',\n  },\n  ideaTwitterMessage: {\n    id: 'app.containers.IdeasShow.ideaTwitterMessage',\n    defaultMessage: 'Support this idea: {postTitle}',\n  },\n  optionTwitterMessage: {\n    id: 'app.containers.IdeasShow.optionTwitterMessage',\n    defaultMessage: 'Support this option: {postTitle}',\n  },\n  issueTwitterMessage: {\n    id: 'app.containers.IdeasShow.issueTwitterMessage',\n    defaultMessage: 'Support this issue: {postTitle}',\n  },\n  projectTwitterMessage: {\n    id: 'app.containers.IdeasShow.projectTwitterMessage',\n    defaultMessage: 'Support this project: {postTitle}',\n  },\n  questionTwitterMessage: {\n    id: 'app.containers.IdeasShow.questionTwitterMessage',\n    defaultMessage: 'Join the discussion: {postTitle}',\n  },\n  contributionTwitterMessage: {\n    id: 'app.containers.IdeasShow.contributionTwitterMessage',\n    defaultMessage: 'Support this contribution: {postTitle}',\n  },\n  ideaWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.ideaWhatsAppMessage',\n    defaultMessage: 'Support this idea: {postTitle}',\n  },\n  optionWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.optionWhatsAppMessage',\n    defaultMessage: 'Support this option: {postTitle}',\n  },\n  contributionWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.contributionWhatsAppMessage',\n    defaultMessage: 'Support this contribution: {postTitle}',\n  },\n  projectWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.projectWhatsAppMessage',\n    defaultMessage: 'Support this project: {postTitle}',\n  },\n  questionWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.questionWhatsAppMessage',\n    defaultMessage: 'Join the discussion: {postTitle}',\n  },\n  issueWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.ideasWhatsAppMessage',\n    defaultMessage: 'Support this issue: {postTitle}',\n  },\n  ideaEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.ideaEmailSharingSubject',\n    defaultMessage: 'Support this idea: {ideaTitle}',\n  },\n  ideaEmailSharingBody: {\n    id: 'app.containers.IdeasShow.ideaEmailSharingBody',\n    defaultMessage: \"Support this idea '{ideaTitle}' at {ideaUrl}!\",\n  },\n  optionEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.optionEmailSharingSubject',\n    defaultMessage: 'Support this option: {ideaTitle}',\n  },\n  optionEmailSharingBody: {\n    id: 'app.containers.IdeasShow.optionEmailSharingBody',\n    defaultMessage: \"Support this option '{ideaTitle}' at {ideaUrl}!\",\n  },\n  contributionEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.contributionEmailSharingSubject',\n    defaultMessage: 'Support this contribution: {ideaTitle}',\n  },\n  contributionEmailSharingBody: {\n    id: 'app.containers.IdeasShow.contributionEmailSharingBody',\n    defaultMessage: \"Support this contribution '{ideaTitle}' at {ideaUrl}!\",\n  },\n  questionEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.questionEmailSharingSubject',\n    defaultMessage: 'Join the discussion: {ideaTitle}',\n  },\n  questionEmailSharingBody: {\n    id: 'app.containers.IdeasShow.questionEmailSharingBody',\n    defaultMessage:\n      \"Join the discussion about this question '{ideaTitle}' at {ideaUrl}!\",\n  },\n  issueEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.issueEmailSharingSubject',\n    defaultMessage: 'Support this issue: {ideaTitle}',\n  },\n  issueEmailSharingBody: {\n    id: 'app.containers.IdeasShow.issueEmailSharingBody',\n    defaultMessage: \"Support this issue '{ideaTitle}' at {ideaUrl}!\",\n  },\n  projectEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.projectEmailSharingSubject',\n    defaultMessage: 'Support this project: {ideaTitle}',\n  },\n  projectEmailSharingBody: {\n    id: 'app.containers.IdeasShow.projectEmailSharingBody',\n    defaultMessage: \"Support this project '{ideaTitle}' at {ideaUrl}!\",\n  },\n  share: {\n    id: 'app.containers.IdeasShow.share',\n    defaultMessage: 'Share',\n  },\n  commentCTA: {\n    id: 'app.containers.IdeasShow.commentCTA',\n    defaultMessage: 'Add a comment',\n  },\n});\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// hooks\nimport useTopics from 'hooks/useTopics';\n\n// i18n\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\n\n// styling\nimport styled from 'styled-components';\nimport { fontSizes, isRtl } from 'utils/styleUtils';\nimport { transparentize } from 'polished';\n\n// typings\nimport { ITopicData } from 'services/topics';\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst Topic = styled.div`\n  color: ${({ theme }) => theme.colorSecondary};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  padding: 6px 12px;\n  margin-right: 5px;\n  margin-bottom: 5px;\n  border: 1px solid ${({ theme }) => transparentize(0.7, theme.colorSecondary)};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  ${isRtl`\n    margin-right: 0;\n    margin-left: 5px;\n  `}\n`;\n\ninterface Props {\n  topicIds: string[];\n  className?: string;\n  postType: 'idea' | 'initiative';\n}\n\nconst Topics = memo<Props & InjectedLocalized>(\n  ({ topicIds, className, postType, localize }) => {\n    const topics = useTopics({ topicIds });\n\n    if (!isNilOrError(topics) && topics.length > 0) {\n      return (\n        <Container id={`e2e-${postType}-topics`} className={className}>\n          {topics\n            .filter((topic) => !isNilOrError(topic))\n            .map((topic: ITopicData) => {\n              return (\n                <Topic key={topic.id} className={`e2e-${postType}-topic`}>\n                  {localize(topic.attributes.title_multiloc)}\n                </Topic>\n              );\n            })}\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst TopicsWithHoCs = injectLocalize<Props>(Topics);\n\nexport default TopicsWithHoCs;\n","import {\n  distinctUntilChanged,\n  map,\n  publishReplay,\n  refCount,\n} from 'rxjs/operators';\nimport { isEqual } from 'lodash-es';\nimport eventEmitter from 'utils/eventEmitter';\nimport { Sort } from 'resources/GetIdeas';\n\nenum events {\n  ideaMapCardSelectedChange = 'ideaMapCardSelectedChange',\n  ideasSearchChange = 'ideasSearchChange',\n  ideasSortChange = 'ideasSortChange',\n  ideasTopicsChange = 'ideasTopicsChange',\n}\n\n// ---------\n\nexport function setIdeaMapCardSelected(ideaId: string | null) {\n  eventEmitter.emit<string | null>(events.ideaMapCardSelectedChange, ideaId);\n}\n\nexport const ideaMapCardSelected$ = eventEmitter\n  .observeEvent<string | null>(events.ideaMapCardSelectedChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y))\n  );\n\n// ---------\n\nexport function setIdeasSort(sort: Sort) {\n  eventEmitter.emit<string | null>(events.ideasSortChange, sort);\n}\n\nexport const ideasSort$ = eventEmitter\n  .observeEvent<Sort>(events.ideasSortChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y)),\n    publishReplay(1),\n    refCount()\n  );\n\n// ---------\n\nexport function setIdeasSearch(searchValue: string | null) {\n  eventEmitter.emit<string | null>(events.ideasSearchChange, searchValue);\n}\n\nexport const ideasSearch$ = eventEmitter\n  .observeEvent<string | null>(events.ideasSearchChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y)),\n    publishReplay(1),\n    refCount()\n  );\n\n// ---------\n\nexport function setIdeasTopics(topics: string[]) {\n  eventEmitter.emit<string[]>(events.ideasTopicsChange, topics);\n}\n\nexport const ideasTopics$ = eventEmitter\n  .observeEvent<string[]>(events.ideasTopicsChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y)),\n    publishReplay(1),\n    refCount()\n  );\n\n// ---------\n","import React from 'react';\nimport Button from 'components/UI/Button';\nimport { IconNames } from 'cl2-component-library';\n\ninterface Props {\n  className?: string;\n  buttonText: string;\n  iconName?: IconNames;\n  onClick?: () => void;\n  ariaExpanded?: boolean;\n}\n\nconst IdeaCTAButton = ({\n  className,\n  buttonText,\n  iconName,\n  onClick,\n  ariaExpanded,\n}: Props) => {\n  return (\n    <Button\n      className={className}\n      icon={iconName}\n      iconAriaHidden={true}\n      buttonStyle=\"white\"\n      fontWeight=\"500\"\n      onClick={onClick}\n      ariaExpanded={ariaExpanded}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nexport default IdeaCTAButton;\n","// libraries\nimport React, { memo } from 'react';\nimport { adopt } from 'react-adopt';\nimport { get } from 'lodash-es';\nimport { Helmet } from 'react-helmet';\n\n// resources\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetUser, { GetUserChildProps } from 'resources/GetUser';\nimport GetIdeaImages, {\n  GetIdeaImagesChildProps,\n} from 'resources/GetIdeaImages';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\n\n// utils\nimport { stripHtml } from 'utils/textUtils';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { imageSizes } from 'utils/fileTools';\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\ninterface InputProps {\n  ideaId: string;\n}\n\ninterface DataProps {\n  idea: GetIdeaChildProps;\n  project: GetProjectChildProps;\n  author: GetUserChildProps;\n  locale: GetLocaleChildProps;\n  tenant: GetAppConfigurationChildProps;\n  authUser: GetAuthUserChildProps;\n  ideaImages: GetIdeaImagesChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst IdeaMeta = memo<Props & InjectedIntlProps & InjectedLocalized>(\n  ({\n    idea,\n    locale,\n    tenant,\n    authUser,\n    ideaImages,\n    author,\n    project,\n    localize,\n  }) => {\n    if (!isNilOrError(locale) && !isNilOrError(tenant) && !isNilOrError(idea)) {\n      const { title_multiloc, body_multiloc } = idea.attributes;\n      const tenantLocales = tenant.attributes.settings.core.locales;\n      const localizedTitle = localize(title_multiloc, 50);\n      const ideaDescription = stripHtml(localize(body_multiloc), 250);\n      const ideaImage =\n        !isNilOrError(ideaImages) && ideaImages.length > 0\n          ? ideaImages[0].attributes.versions.fb\n          : null;\n      const ideaUrl = window.location.href;\n      const projectTitle =\n        !isNilOrError(project) &&\n        localize(project.attributes.title_multiloc, 20);\n      const projectSlug = !isNilOrError(project) && project.attributes.slug;\n      const ideaAuthorName = !isNilOrError(author)\n        ? `${author.attributes.first_name} ${author.attributes.last_name}`\n        : 'anonymous';\n\n      const articleJson = {\n        '@type': 'Article',\n        image: ideaImage,\n        headline: localizedTitle,\n        author: ideaAuthorName,\n        mainEntityOfPage: {\n          '@type': 'WebPage',\n          '@id': ideaUrl,\n        },\n        datePublished: idea.attributes.published_at,\n      };\n\n      const json = {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': tenant.attributes.host,\n              name: tenant.attributes.name,\n              image: tenant.attributes.logo\n                ? tenant.attributes.logo.large\n                : null,\n            },\n          },\n          {\n            '@type': 'ListItem',\n            position: 2,\n            item: {\n              '@id': `${tenant.attributes.host}/projects`,\n              name: 'Projects',\n            },\n          },\n          {\n            '@type': 'ListItem',\n            position: 2,\n            item: {\n              '@id': `${tenant.attributes.host}/projects/${projectSlug}`,\n              name: projectTitle,\n            },\n          },\n          {\n            '@type': 'ListItem',\n            position: 4,\n            item: {\n              '@id': `${tenant.attributes.host}/ideas`,\n              name: 'Ideas',\n            },\n          },\n        ],\n      };\n\n      return (\n        <Helmet>\n          <title>\n            {`\n            ${\n              authUser && authUser.attributes.unread_notifications\n                ? `(${authUser.attributes.unread_notifications}) `\n                : ''\n            }\n            ${localizedTitle}`}\n          </title>\n          {getCanonicalLink()}\n          {getAlternateLinks(tenantLocales)}\n          <meta name=\"title\" content={localizedTitle} />\n          <meta name=\"description\" content={ideaDescription} />\n\n          <meta property=\"og:type\" content=\"article\" />\n          <meta property=\"og:title\" content={localizedTitle} />\n          <meta property=\"ideaOgDescription\" content={ideaDescription} />\n          {ideaImage && <meta property=\"og:image\" content={ideaImage} />}\n          <meta\n            property=\"og:image:width\"\n            content={`${imageSizes.ideaImg.fb[0]}`}\n          />\n          <meta\n            property=\"og:image:height\"\n            content={`${imageSizes.ideaImg.fb[1]}`}\n          />\n\n          <meta name=\"twitter:title\" content={localizedTitle} />\n          <meta name=\"twitter:description\" content={ideaDescription} />\n          {ideaImage && <meta name=\"twitter:image\" content={ideaImage} />}\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n          {ideaImage && (\n            <script type=\"application/ld+json\">\n              {JSON.stringify(articleJson)}\n            </script>\n          )}\n          <script type=\"application/ld+json\">{JSON.stringify(json)}</script>\n\n          <meta property=\"og:url\" content={ideaUrl} />\n          <meta property=\"og:locale\" content={locale} />\n        </Helmet>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  idea: ({ ideaId, render }) => <GetIdea ideaId={ideaId}>{render}</GetIdea>,\n  ideaImages: ({ ideaId, render }) => (\n    <GetIdeaImages ideaId={ideaId}>{render}</GetIdeaImages>\n  ),\n  project: ({ idea, render }) =>\n    !isNilOrError(idea) ? (\n      <GetProject projectId={idea.relationships.project.data.id}>\n        {render}\n      </GetProject>\n    ) : null,\n  author: ({ idea, render }) => (\n    <GetUser id={get(idea, 'relationships.author.data.id', null)}>\n      {render}\n    </GetUser>\n  ),\n  locale: <GetLocale />,\n  tenant: <GetAppConfiguration />,\n  authUser: <GetAuthUser />,\n});\n\nconst IdeaMetaWithHoc = injectLocalize<Props>(IdeaMeta);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeaMetaWithHoc {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  twitterMessage: {\n    id: 'app.components.PostComponents.SharingModalContent.twitterMessage',\n    defaultMessage: 'Vote for {postTitle} on',\n  },\n  ideaEmailSharingSubjectText: {\n    id:\n      'app.components.PostComponents.SharingModalContent.ideaEmailSharingSubjectText',\n    defaultMessage: 'Support my idea: {postTitle}',\n  },\n  optionEmailSharingSubject: {\n    id:\n      'app.components.PostComponents.SharingModalContent.optionEmailSharingSubject',\n    defaultMessage: 'Support my proposed option: {postTitle}.',\n  },\n  issueEmailSharingSubject: {\n    id:\n      'app.components.PostComponents.SharingModalContent.issueEmailSharingSubject',\n    defaultMessage: 'I just posted an issue: {postTitle}.',\n  },\n  questionEmailSharingSubject: {\n    id:\n      'app.components.PostComponents.SharingModalContent.questionEmailSharingSubject',\n    defaultMessage: 'Join the discussion: {postTitle}.',\n  },\n  contributionEmailSharingSubject: {\n    id:\n      'app.components.PostComponents.SharingModalContent.contributionEmailSharingSubject',\n    defaultMessage: 'Support my contribution: {postTitle}.',\n  },\n  projectEmailSharingSubject: {\n    id:\n      'app.components.PostComponents.SharingModalContent.projectEmailSharingSubject',\n    defaultMessage: 'Support my project: {postTitle}.',\n  },\n  initiativeEmailSharingSubject: {\n    id:\n      'app.components.PostComponents.SharingModalContent.initiativeEmailSharingSubject',\n    defaultMessage: 'Support my initiative: {postTitle}.',\n  },\n  ideaEmailSharingBody: {\n    id:\n      'app.components.PostComponents.SharingModalContent.ideaEmailSharingBody',\n    defaultMessage: \"Support my idea '{postTitle}' at {postUrl}!\",\n  },\n  issueEmailSharingBody: {\n    id:\n      'app.components.PostComponents.SharingModalContent.issueEmailSharingBody',\n    defaultMessage: \"I posted an issue '{postTitle}' at {postUrl}!\",\n  },\n  optionEmailSharingBody: {\n    id:\n      'app.components.PostComponents.SharingModalContent.optionEmailSharingBody',\n    defaultMessage: \"Support my proposed option '{postTitle}' at {postUrl}!\",\n  },\n  contributionEmailSharingBody: {\n    id:\n      'app.components.PostComponents.SharingModalContent.contributionEmailSharingBody',\n    defaultMessage: \"Support my contribution '{postTitle}' at {postUrl}!\",\n  },\n  questionEmailSharingModalContentBody: {\n    id:\n      'app.components.PostComponents.SharingModalContent.questionEmailSharingModalContentBody',\n    defaultMessage:\n      \"Join the discussion about this question '{postTitle}' at {postUrl}!\",\n  },\n  projectEmailSharingBody: {\n    id:\n      'app.components.PostComponents.SharingModalContent.projectEmailSharingBody',\n    defaultMessage: \"Support my project '{postTitle}' at {postUrl}!\",\n  },\n  initiativeEmailSharingBody: {\n    id:\n      'app.components.PostComponents.SharingModalContent.initiativeEmailSharingBody',\n    defaultMessage:\n      'What do you think of this initiative? Vote on it and share the discussion at {postUrl} to make your voice heard!',\n  },\n  ideaWhatsAppMessage: {\n    id: 'app.components.PostComponents.SharingModalContent.ideaWhatsAppMessage',\n    defaultMessage: 'Support my idea: {postTitle}.',\n  },\n  optionWhatsAppMessage: {\n    id:\n      'app.components.PostComponents.SharingModalContent.optionWhatsAppMessage',\n    defaultMessage: 'Support my option: {postTitle}.',\n  },\n  questionWhatsAppMessage: {\n    id:\n      'app.components.PostComponents.SharingModalContent.questionWhatsAppMessage',\n    defaultMessage: 'Join the discussion: {postTitle}.',\n  },\n  contributionWhatsAppMessage: {\n    id:\n      'app.components.PostComponents.SharingModalContent.contributionWhatsAppMessage',\n    defaultMessage: 'Support my contribution: {postTitle}.',\n  },\n  projectWhatsAppMessage: {\n    id:\n      'app.components.PostComponents.SharingModalContent.projectWhatsAppMessage',\n    defaultMessage: 'Support my project: {postTitle}.',\n  },\n  issueWhatsAppMessage: {\n    id:\n      'app.components.PostComponents.SharingModalContent.issueWhatsAppMessage',\n    defaultMessage: 'I just posted an issue: {postTitle}.',\n  },\n  whatsAppMessageProposal: {\n    id:\n      'app.components.PostComponents.SharingModalContent.whatsAppMessageProposal',\n    defaultMessage: 'I just posted a proposal for {orgName}: {postTitle}',\n  },\n});\n","export default {\n  sharingModalOpened: {\n    name: 'initiativeflow social sharing modal opened',\n  },\n};\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { IRelationship, Multiloc, ImageSizes, ILinks } from 'typings';\nimport { first } from 'rxjs/operators';\nimport { get } from 'lodash-es';\n\nexport type InitiativePublicationStatus =\n  | 'draft'\n  | 'published'\n  | 'archived'\n  | 'spam';\n\nexport type IInitiativeAction =\n  | 'posting_initiative'\n  | 'commenting_initiative'\n  | 'voting_initiative'\n  | 'comment_voting_initiative';\n\nexport interface IInitiativeData {\n  id: string;\n  type: 'initiatives';\n  attributes: {\n    title_multiloc: Multiloc;\n    body_multiloc: Multiloc;\n    author_name: string;\n    slug: string;\n    publication_status: InitiativePublicationStatus;\n    upvotes_count: number;\n    comments_count: number;\n    location_point_geojson: GeoJSON.Point;\n    location_description: string;\n    budget: number | null;\n    created_at: string;\n    updated_at: string;\n    published_at: string;\n    header_bg: ImageSizes;\n    expires_at: string;\n  };\n  relationships: {\n    topics: {\n      data: IRelationship[];\n    };\n    initiative_images: {\n      data: IRelationship[];\n    };\n    author: {\n      data: IRelationship | null;\n    };\n    assignee: {\n      data: IRelationship | null;\n    };\n    initiative_status?: {\n      data: IRelationship | null;\n    };\n    user_vote?: {\n      data: IRelationship | null;\n    };\n  };\n}\n\nexport interface IInitiative {\n  data: IInitiativeData;\n}\n\nexport interface IInitiatives {\n  data: IInitiativeData[];\n  links: ILinks;\n}\n\nexport interface IInitiativeAdd {\n  author_id?: string | null;\n  assignee_id?: string | null;\n  initiative_status_id?: string | null;\n  publication_status?: InitiativePublicationStatus;\n  title_multiloc?: Multiloc;\n  body_multiloc?: Multiloc;\n  topic_ids?: string[] | null;\n  area_ids?: string[] | null;\n  phase_ids?: string[] | null;\n  location_point_geojson?: GeoJSON.Point | null;\n  location_description?: string | null;\n}\nexport interface IInitiativesCount {\n  count: number;\n}\n\nexport interface IInitiativesFilterCounts {\n  initiative_status_id: {\n    [key: string]: number;\n  };\n  area_id: {\n    [key: string]: number;\n  };\n  topic_id: {\n    [key: string]: number;\n  };\n  total: number;\n}\n\nexport interface IGeotaggedInitiativeData {\n  id: string;\n  type: string;\n  attributes: {\n    title_multiloc: Multiloc;\n    location_point_geojson: GeoJSON.Point;\n    location_description: string;\n  };\n}\n\nexport interface IInitiativeLinks {\n  self: string;\n  first: string;\n  prev: string;\n  next: string;\n  last: string;\n}\n\nexport interface InitiativeActivity {\n  id: string;\n  type: 'activity';\n  attributes: {\n    action: string;\n    acted_at: string;\n    change: string[] | { [key: string]: string }[] | null;\n  };\n  relationships: {\n    user: { data: IRelationship };\n  };\n}\n\nexport type InitiativeDisabledReason =\n  | 'not_permitted'\n  | 'not_verified'\n  | 'not_signed_in';\n\nexport function initiativeByIdStream(initiativeId: string) {\n  return streams.get<IInitiative>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}`,\n  });\n}\n\nexport function initiativeBySlugStream(initiativeSlug: string) {\n  return streams.get<IInitiative>({\n    apiEndpoint: `${API_PATH}/initiatives/by_slug/${initiativeSlug}`,\n  });\n}\n\nexport function initiativesStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IInitiatives>({\n    apiEndpoint: `${API_PATH}/initiatives`,\n    ...streamParams,\n  });\n}\n\nexport function initiativesFilterCountsStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInitiativesFilterCounts>({\n    apiEndpoint: `${API_PATH}/initiatives/filter_counts`,\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n\nexport function initiativesMarkersStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<{\n    data: IGeotaggedInitiativeData[];\n    links: IInitiativeLinks;\n  }>({\n    apiEndpoint: `${API_PATH}/initiatives/as_markers`,\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n\nexport async function addInitiative(object: IInitiativeAdd) {\n  const response = await streams.add<IInitiative>(`${API_PATH}/initiatives`, {\n    initiative: object,\n  });\n  return response;\n}\n\nexport async function updateInitiative(\n  initiativeId: string,\n  object: Partial<IInitiativeAdd>\n) {\n  const response = await streams.update<IInitiative>(\n    `${API_PATH}/initiatives/${initiativeId}`,\n    initiativeId,\n    { initiative: object }\n  );\n  streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/stats/initiatives_count`,\n      `${API_PATH}/initiatives`,\n      `${API_PATH}/initiatives/${initiativeId}/activities`,\n    ],\n  });\n  return response;\n}\n\nexport async function deleteInitiative(initiativeId: string) {\n  const [initiative, response] = await Promise.all([\n    initiativeByIdStream(initiativeId).observable.pipe(first()).toPromise(),\n    streams.delete(`${API_PATH}/initiatives/${initiativeId}`, initiativeId),\n  ]);\n\n  const authorId = get(initiative, 'relationships.author.data.id', false);\n\n  streams.fetchAllWith({\n    apiEndpoint: authorId\n      ? [`${API_PATH}/users/${authorId}/initiatives_count`]\n      : [],\n  });\n\n  return response;\n}\n\nexport interface IInitiativeAllowedTransitions {\n  [key: string]: {\n    feedback_needed: boolean;\n  };\n}\n\nexport function initiativeAllowedTransitionsStream(initiativeId: string) {\n  return streams.get<IInitiativeAllowedTransitions>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}/allowed_transitions`,\n  });\n}\n\nexport interface IInitiativesFilterCounts {\n  initiative_status_id: {\n    [key: string]: number;\n  };\n  area_id: {\n    [key: string]: number;\n  };\n  topic_id: {\n    [key: string]: number;\n  };\n  total: number;\n}\n\nexport function initiativeActivities(initiativeId: string) {\n  return streams.get<{ data: InitiativeActivity[] }>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}/activities`,\n  });\n}\n\nexport type IInitiativeActionDescriptors = {\n  [key in IInitiativeAction]: {\n    enabled: boolean;\n    disabled_reason: InitiativeDisabledReason | null;\n  };\n};\n\nexport function getInitiativeActionDescriptors() {\n  return streams.get<IInitiativeActionDescriptors>({\n    apiEndpoint: `${API_PATH}/action_descriptors/initiatives`,\n  });\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport GoToCommentsButton from '../../Buttons/GoToCommentsButton';\nimport IdeaSharingButton from '../../Buttons/IdeaSharingButton';\nimport SharingButtonComponent from '../../Buttons/SharingButtonComponent';\nimport { isNilOrError } from 'utils/helperUtils';\nimport useIdea from 'hooks/useIdea';\n\nconst Container = styled.div``;\n\nconst StyledGoToCommentsButton = styled(GoToCommentsButton)`\n  margin-bottom: 10px;\n`;\n\ninterface Props {\n  ideaId: string;\n  border?: string;\n  className?: string;\n}\n\nconst IdeaCTAButtons = ({ ideaId, className }: Props) => {\n  const idea = useIdea({ ideaId });\n\n  if (!isNilOrError(idea)) {\n    const commentingEnabled =\n      idea.attributes.action_descriptor.commenting_idea.enabled;\n\n    return (\n      <Container className={className || ''}>\n        {commentingEnabled && <StyledGoToCommentsButton />}\n        <IdeaSharingButton\n          ideaId={ideaId}\n          buttonComponent={<SharingButtonComponent />}\n        />\n      </Container>\n    );\n  }\n\n  return null;\n};\n\nexport default IdeaCTAButtons;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  noResultsFound: {\n    id: 'app.components.IdeasShowPage.noResultsFound',\n    defaultMessage: 'No results found.',\n  },\n  goBack: {\n    id: 'app.components.IdeasShowPage.goBack',\n    defaultMessage: 'Go back',\n  },\n  goBackToList: {\n    id: 'app.components.IdeasShowPage.goBackToList',\n    defaultMessage: 'Go back to the list',\n  },\n});\n","import React, {\n  memo,\n  useState,\n  useRef,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n} from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { popup, LatLng, Map as LeafletMap } from 'leaflet';\nimport { CSSTransition } from 'react-transition-group';\n\n// components\nimport Map, { Point } from 'components/Map';\nimport IdeaButton from 'components/IdeaButton';\nimport DesktopIdeaMapOverlay from './desktop/IdeaMapOverlay';\nimport IdeaMapCard from './IdeaMapCard';\nimport { Icon } from 'cl2-component-library';\n\n// hooks\nimport useAuthUser from 'hooks/useAuthUser';\nimport useProject from 'hooks/useProject';\nimport usePhase from 'hooks/usePhase';\nimport useIdeaMarkers from 'hooks/useIdeaMarkers';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// services\nimport { ideaDefaultSortMethodFallback } from 'services/participationContexts';\nimport { getIdeaPostingRules } from 'services/actionTakingRules';\n\n// events\nimport {\n  setIdeaMapCardSelected,\n  setIdeasSearch,\n  setIdeasSort,\n  setIdeasTopics,\n  ideaMapCardSelected$,\n  ideasSearch$,\n  ideasTopics$,\n} from './events';\nimport {\n  setLeafletMapSelectedMarker,\n  setLeafletMapHoveredMarker,\n  leafletMapSelectedMarker$,\n  leafletMapClicked$,\n} from 'components/UI/LeafletMap/events';\n\n// i18n\nimport FormattedMessage from 'utils/cl-intl/FormattedMessage';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { maxPageWidth } from 'containers/ProjectsShowPage/styles';\nimport { media, viewportWidths, colors, fontSizes } from 'utils/styleUtils';\n\n// typings\nimport { Sort } from 'resources/GetIdeas';\nimport { IIdeaMarkerData } from 'services/ideas';\n\nconst mapMarginDesktop = 70;\nconst mapHeightDesktop = '83vh';\nconst mapHeightMobile = '78vh';\n\nconst Container = styled.div``;\n\nconst InnerContainer = styled.div<{\n  leftMargin: number | null;\n  isPostingEnabled: boolean;\n}>`\n  width: ${({ leftMargin }) =>\n    leftMargin ? `calc(100vw - ${mapMarginDesktop * 2}px)` : '100%'};\n  margin-left: ${({ leftMargin }) =>\n    leftMargin ? `-${leftMargin}px` : 'auto'};\n  position: relative;\n\n  @media screen and (min-width: 2000px) {\n    width: 1800px;\n    margin-left: -${(1800 - maxPageWidth) / 2}px;\n  }\n\n  > .create-idea-wrapper {\n    display: none;\n  }\n\n  .activeArea {\n    position: absolute;\n    top: 0px;\n    bottom: 0px;\n    right: 0px;\n    left: 500px;\n  }\n\n  & .pbAssignBudgetControlContainer {\n    padding: 20px;\n    background: ${colors.backgroundLightGrey};\n  }\n\n  ${media.biggerThanMaxTablet`\n    & .leaflet-control-zoom {\n      margin-top: ${(props) =>\n        props.isPostingEnabled ? '78px' : '25px'} !important;\n      margin-right: 14px !important;\n    }\n\n    & .leaflet-control-layers {\n      margin-right: 15px !important;\n    }\n  `}\n\n  ${media.smallerThanMaxTablet`\n    .activeArea {\n      left: 0px;\n    }\n  `}\n`;\n\nconst InfoOverlay = styled.div`\n  position: absolute;\n  top: 25px;\n  right: 15px;\n  z-index: 900;\n\n  ${media.smallerThanMaxTablet`\n    width: calc(100% - 40px);\n    top: calc(${mapHeightMobile} - 72px);\n    right: 20px;\n  `}\n`;\n\nconst InfoOverlayInner = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 14px 17px;\n  border-radius: 3px;\n  background: #e1f0f4;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.1);\n  position: relative;\n`;\n\nconst InfoOverlayIcon = styled(Icon)`\n  fill: ${colors.clBlueDarker};\n  flex: 0 0 18px;\n  width: 18px;\n  height: 18px;\n  margin-right: 8px;\n`;\n\nconst InfoOverlayText = styled.text`\n  color: ${colors.clBlueDarker};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nconst IdeaButtonWrapper = styled.div``;\n\nconst StyledDesktopIdeaMapOverlay = styled(DesktopIdeaMapOverlay)`\n  width: 390px;\n  height: calc(${mapHeightDesktop} - 50px);\n  position: absolute;\n  display: flex;\n  top: 25px;\n  left: 25px;\n  z-index: 900;\n\n  ${media.smallerThanMaxTablet`\n    display: none;\n  `}\n`;\n\nconst StyledIdeaMapCard = styled(IdeaMapCard)<{ isClickable: boolean }>`\n  width: calc(100% - 24px);\n  position: absolute;\n  top: calc(${mapHeightMobile} - 130px - 24px);\n  left: 12px;\n  right: 12px;\n  z-index: 1001;\n  pointer-events: ${(props) => (props.isClickable ? 'auto' : 'none')};\n  transition: opacity 300ms cubic-bezier(0.19, 1, 0.22, 1),\n    top 300ms cubic-bezier(0.19, 1, 0.22, 1);\n\n  &.animation-enter {\n    opacity: 0;\n    top: calc(${mapHeightMobile} - 130px);\n\n    &.animation-enter-active {\n      opacity: 1;\n      top: calc(${mapHeightMobile} - 130px - 24px);\n    }\n  }\n`;\n\ninterface Props {\n  projectIds?: string[] | null;\n  phaseId?: string | null;\n  className?: string;\n}\n\nconst getInnerContainerLeftMargin = (\n  windowWidth: number,\n  containerWidth: number\n) => {\n  const leftMargin =\n    Math.round((windowWidth - containerWidth) / 2) - mapMarginDesktop;\n  return leftMargin > 0 ? leftMargin : null;\n};\n\nconst initialWindowWidth = Math.max(\n  document.documentElement.clientWidth || 0,\n  window.innerWidth || 0\n);\nconst initialContainerWidth =\n  document?.getElementById('e2e-ideas-container')?.offsetWidth ||\n  (initialWindowWidth < maxPageWidth ? initialWindowWidth - 40 : maxPageWidth);\nconst initialInnerContainerLeftMargin = getInnerContainerLeftMargin(\n  initialWindowWidth,\n  initialContainerWidth\n);\n\nconst IdeasMap = memo<Props>(({ projectIds, phaseId, className }) => {\n  const authUser = useAuthUser();\n  const project = useProject({ projectId: projectIds?.[0] });\n  const phase = usePhase(phaseId || null);\n  const { windowWidth } = useWindowSize();\n  const smallerThanMaxTablet = windowWidth <= viewportWidths.largeTablet;\n\n  const isPBProject =\n    phase === null &&\n    !isNilOrError(project) &&\n    project.attributes.participation_method === 'budgeting';\n  const isPBPhase =\n    !isNilOrError(phase) &&\n    phase.attributes.participation_method === 'budgeting';\n  const isPBIdea = isNilOrError(phase) ? isPBProject : isPBPhase;\n\n  // refs\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const ideaButtonWrapperRef = useRef<HTMLDivElement | null>(null);\n\n  // state\n  const [map, setMap] = useState<LeafletMap | null>(null);\n  const [selectedLatLng, setSelectedLatLng] = useState<LatLng | null>(null);\n  const [selectedIdeaMarkerId, setSelectedIdeaMarkerId] = useState<\n    string | null\n  >(null);\n  const [points, setPoints] = useState<Point[]>([]);\n  const [containerWidth, setContainerWidth] = useState(initialContainerWidth);\n  const [innerContainerLeftMargin, setInnerContainerLeftMargin] = useState(\n    initialInnerContainerLeftMargin\n  );\n  const [isCardClickable, setIsCardClickable] = useState(false);\n\n  // ideaMarkers\n  const defaultIdeasSearch: string | null = null;\n  const defaultIdeasSort: Sort =\n    project?.attributes.ideas_order || ideaDefaultSortMethodFallback;\n  const defaultIdeasTopics: string[] = [];\n  const [search, setSearch] = useState<string | null>(defaultIdeasSearch);\n  const [topics, setTopics] = useState<string[]>(defaultIdeasTopics);\n  const ideaMarkers = useIdeaMarkers({\n    projectIds,\n    phaseId,\n    search,\n    topics,\n  });\n\n  const ideaPostingRules = getIdeaPostingRules({\n    project,\n    phase,\n    authUser,\n  });\n\n  const isIdeaPostingEnabled =\n    ideaPostingRules.show && ideaPostingRules.enabled === true;\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(() => {\n    const containerWidth = containerRef.current\n      ?.getBoundingClientRect()\n      .toJSON()?.width;\n\n    if (containerWidth) {\n      setContainerWidth(containerWidth);\n    }\n  });\n\n  useEffect(() => {\n    const subscriptions = [\n      ideaMapCardSelected$.subscribe((ideaId) => {\n        setLeafletMapSelectedMarker(ideaId);\n        setSelectedIdeaMarkerId(ideaId);\n      }),\n      leafletMapSelectedMarker$.subscribe((ideaId) => {\n        setIdeaMapCardSelected(ideaId);\n        setSelectedIdeaMarkerId((_prevIdeaIdideaId) => {\n          // temporarily disable pointer events on the mobile ideacard popup to avoid\n          // the marker click event from propagating to the card that migth pop up on top of it\n          setIsCardClickable(false);\n          setTimeout(() => {\n            setIsCardClickable(true);\n          }, 200);\n          return ideaId;\n        });\n      }),\n      leafletMapClicked$.subscribe((latLng) => {\n        setSelectedLatLng(latLng);\n      }),\n      ideasSearch$.subscribe((search) => {\n        setSearch(search);\n      }),\n      ideasTopics$.subscribe((topics) => {\n        setTopics(topics);\n      }),\n    ];\n\n    // defaults\n    setIdeasSearch(defaultIdeasSearch);\n    setIdeasSort(defaultIdeasSort);\n    setIdeasTopics(defaultIdeasTopics);\n\n    return () => {\n      subscriptions.forEach((subscription) => subscription.unsubscribe());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [project, phase]);\n\n  useEffect(() => {\n    if (\n      map &&\n      selectedLatLng &&\n      isIdeaPostingEnabled &&\n      ideaButtonWrapperRef?.current\n    ) {\n      popup({ closeButton: true })\n        .setLatLng(selectedLatLng)\n        .setContent(ideaButtonWrapperRef.current)\n        .openOn(map);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, selectedLatLng]);\n\n  useEffect(() => {\n    setInnerContainerLeftMargin(\n      getInnerContainerLeftMargin(windowWidth, containerWidth)\n    );\n  }, [windowWidth, containerWidth, smallerThanMaxTablet]);\n\n  useEffect(() => {\n    const ideaPoints: Point[] = [];\n\n    if (!isNilOrError(ideaMarkers) && ideaMarkers.length > 0) {\n      ideaMarkers.forEach((ideaMarker) => {\n        if (\n          ideaMarker.attributes &&\n          ideaMarker.attributes.location_point_geojson\n        ) {\n          ideaPoints.push({\n            ...ideaMarker.attributes.location_point_geojson,\n            id: ideaMarker.id,\n          });\n        }\n      });\n    }\n\n    setPoints(ideaPoints);\n  }, [ideaMarkers]);\n\n  const handleMapOnInit = (map: LeafletMap) => {\n    setMap(map);\n  };\n\n  const handleIdeaMapCardOnClose = () => {\n    setIdeaMapCardSelected(null);\n    setLeafletMapSelectedMarker(null);\n    setLeafletMapHoveredMarker(null);\n  };\n\n  const selectedIdeaMarker = useMemo(() => {\n    return ideaMarkers?.find(({ id }) => id === selectedIdeaMarkerId);\n  }, [ideaMarkers, selectedIdeaMarkerId]);\n\n  if (!isNilOrError(project)) {\n    return (\n      <Container ref={containerRef} className={className || ''}>\n        <InnerContainer\n          leftMargin={innerContainerLeftMargin}\n          isPostingEnabled={isIdeaPostingEnabled}\n        >\n          {isIdeaPostingEnabled && (\n            <InfoOverlay>\n              <InfoOverlayInner>\n                <InfoOverlayIcon name=\"info\" />\n                <InfoOverlayText>\n                  <FormattedMessage\n                    {...(smallerThanMaxTablet\n                      ? messages.tapOnMapToAdd\n                      : messages.clickOnMapToAdd)}\n                  />\n                </InfoOverlayText>\n              </InfoOverlayInner>\n            </InfoOverlay>\n          )}\n\n          <ScreenReaderOnly>\n            <FormattedMessage {...messages.a11y_mapTitle} />\n          </ScreenReaderOnly>\n\n          {smallerThanMaxTablet && (\n            <CSSTransition\n              classNames=\"animation\"\n              in={!!selectedIdeaMarker}\n              timeout={300}\n            >\n              <StyledIdeaMapCard\n                ideaMarker={selectedIdeaMarker as IIdeaMarkerData}\n                isPBIdea={isPBIdea}\n                onClose={handleIdeaMapCardOnClose}\n                isClickable={isCardClickable}\n              />\n            </CSSTransition>\n          )}\n\n          <Map\n            onInit={handleMapOnInit}\n            projectId={project.id}\n            points={points}\n            mapHeight={\n              smallerThanMaxTablet ? mapHeightMobile : mapHeightDesktop\n            }\n            noMarkerClustering={false}\n            zoomControlPosition={smallerThanMaxTablet ? 'topleft' : 'topright'}\n            layersControlPosition={\n              smallerThanMaxTablet ? 'topright' : 'bottomright'\n            }\n          />\n\n          {projectIds && !isNilOrError(project) && (\n            <StyledDesktopIdeaMapOverlay\n              projectIds={projectIds}\n              projectId={project?.id}\n              phaseId={phaseId}\n            />\n          )}\n\n          <IdeaButtonWrapper\n            className=\"create-idea-wrapper\"\n            ref={ideaButtonWrapperRef}\n          >\n            <IdeaButton\n              projectId={project.id}\n              phaseId={phaseId || undefined}\n              participationContextType={phaseId ? 'phase' : 'project'}\n              latLng={selectedLatLng}\n              inMap={true}\n            />\n          </IdeaButtonWrapper>\n        </InnerContainer>\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default IdeasMap;\n","export default {\n  clickUpvote: {\n    name: 'Idea upvote clicked',\n  },\n  clickDownvote: {\n    name: 'Idea downvote clicked',\n  },\n  sharingModalOpened: {\n    name: 'ideaflow social sharing modal opened',\n  },\n  clickTranslateIdeaButton: {\n    name: 'Clicked button to translate idea title/description',\n  },\n  clickGoBackToOriginalIdeaCopyButton: {\n    name:\n      'Clicked button to go back to original, non-translated idea title/description',\n  },\n};\n","import React from 'react';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { TPermissionItem, hasPermission } from 'services/permissions';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  item: TPermissionItem | null;\n  action: string;\n  context?: any;\n}\n\ntype children = (renderProps: GetPermissionChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  permission: boolean | undefined;\n}\n\nexport type GetPermissionChildProps = boolean | undefined;\n\nexport default class GetPermission extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      permission: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { item, action, context } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ item, action, context });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          switchMap(({ item, action, context }) => {\n            if (!isNilOrError(item)) {\n              return hasPermission({ item, action, context });\n            }\n\n            return of(false);\n          })\n        )\n        .subscribe((permission) => this.setState({ permission })),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { item, action, context } = this.props;\n    this.inputProps$.next({ item, action, context });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { permission } = this.state;\n    return (children as children)(permission);\n  }\n}\n","const columnsGapDesktop = 90;\nconst rightColumnWidthDesktop = 350;\nconst columnsGapTablet = 60;\nconst rightColumnWidthTablet = 300;\nconst pageContentMaxWidth = 1210;\n\nexport {\n  columnsGapDesktop,\n  rightColumnWidthDesktop,\n  columnsGapTablet,\n  rightColumnWidthTablet,\n  pageContentMaxWidth,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { isNilOrError } from 'utils/helperUtils';\nimport isFieldEnabled from '../isFieldEnabled';\n\n// components\nimport Status from './Status';\nimport Location from './Location';\nimport Attachments from './Attachments';\nimport IdeaTopics from './IdeaTopics';\nimport PostedBy from './PostedBy';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useIdeaCustomFieldsSchemas from 'hooks/useIdeaCustomFieldsSchemas';\nimport Outlet from 'components/Outlet';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-top: solid 1px #ccc;\n  border-bottom: solid 1px #ccc;\n`;\n\ninterface Props {\n  ideaId: string;\n  authorId: string | null;\n  projectId: string;\n  statusId: string;\n  compact?: boolean;\n  className?: string;\n}\n\nconst MetaInformation = ({\n  ideaId,\n  projectId,\n  statusId,\n  authorId,\n  compact,\n  className,\n}: Props) => {\n  const locale = useLocale();\n  const ideaCustomFieldsSchemas = useIdeaCustomFieldsSchemas({ projectId });\n  if (!isNilOrError(locale) && !isNilOrError(ideaCustomFieldsSchemas)) {\n    const topicsEnabled = isFieldEnabled(\n      'topic_ids',\n      ideaCustomFieldsSchemas,\n      locale\n    );\n    const locationEnabled = isFieldEnabled(\n      'location',\n      ideaCustomFieldsSchemas,\n      locale\n    );\n    const attachmentsEnabled = isFieldEnabled(\n      'attachments',\n      ideaCustomFieldsSchemas,\n      locale\n    );\n\n    return (\n      <Container className={`${className || ''} ${compact ? 'compact' : ''}`}>\n        <PostedBy authorId={authorId} ideaId={ideaId} compact={compact} />\n        <Status statusId={statusId} compact={compact} />\n        {topicsEnabled && <IdeaTopics ideaId={ideaId} compact={compact} />}\n        {locationEnabled && (\n          <Location projectId={projectId} ideaId={ideaId} compact={compact} />\n        )}\n        {attachmentsEnabled && (\n          <Attachments ideaId={ideaId} compact={compact} />\n        )}\n        <Outlet\n          id=\"app.containers.IdeasShow.MetaInformation\"\n          ideaId={ideaId}\n          compact={compact}\n        />\n      </Container>\n    );\n  }\n\n  return null;\n};\n\nexport default MetaInformation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Attachment from './Attachment';\nimport useResourceFiles from 'hooks/useResourceFiles';\nimport { Header, Item } from 'components/IdeasShowComponents/MetaInfoStyles';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\nconst Container = styled.div``;\nconst StyledAttachment = styled(Attachment)<{ isLastItem: boolean }>`\n  margin-bottom: ${({ isLastItem }) => (!isLastItem ? '10px' : '0')};\n`;\n\ninterface Props {\n  ideaId: string;\n  compact?: boolean;\n  className?: string;\n}\n\nconst Attachments = ({\n  ideaId,\n  compact,\n  className,\n  intl: { formatMessage },\n}: Props & InjectedIntlProps) => {\n  const files = useResourceFiles({ resourceType: 'idea', resourceId: ideaId });\n\n  if (!isNilOrError(files) && files.length > 0) {\n    return (\n      <Item className={className || ''} compact={compact}>\n        <Header>{formatMessage(messages.attachments)}</Header>\n        <Container className={className}>\n          {Array.isArray(files) &&\n            files.map((file, index) => (\n              <StyledAttachment\n                isLastItem={index === files.length - 1}\n                file={file}\n                key={file.id}\n              />\n            ))}\n        </Container>\n      </Item>\n    );\n  }\n\n  return null;\n};\n\nexport default injectIntl(Attachments);\n","import {\n  PostingDisabledReason,\n  PollDisabledReason,\n  IProjectData,\n  SurveyDisabledReason,\n} from './projects';\nimport { pastPresentOrFuture } from 'utils/dateUtils';\nimport { GetProjectChildProps } from 'resources/GetProject';\nimport { GetPhaseChildProps } from 'resources/GetPhase';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport { IPhaseData } from './phases';\nimport { isAdmin, isProjectModerator } from 'services/permissions/roles';\nimport { TAuthUser } from 'hooks/useAuthUser';\nimport { TPhase } from 'hooks/usePhase';\n\ninterface ActionPermissionHide {\n  show: false;\n  enabled: null;\n  disabledReason: null;\n  action: null;\n}\ninterface ActionPermissionEnabled {\n  show: true;\n  enabled: true;\n  disabledReason: null;\n  action: null;\n}\ninterface ActionPermissionDisabled<DisabledReasons> {\n  show: true;\n  enabled: false;\n  disabledReason: DisabledReasons;\n  action: null;\n}\ninterface ActionPermissionMaybe {\n  show: true;\n  enabled: 'maybe';\n  disabledReason: null;\n  action: IPreliminaryAction;\n}\n\nexport type ActionPermission<DisabledReasons> =\n  | ActionPermissionHide\n  | ActionPermissionMaybe\n  | ActionPermissionEnabled\n  | ActionPermissionDisabled<DisabledReasons>;\n\n/* ----------- Idea Posting ------------ */\n\n// When disabled, these are the reasons to explain to the user\nexport type IIdeaPostingDisabledReason =\n  | 'notPermitted'\n  | 'postingDisabled'\n  | 'projectInactive'\n  | 'notActivePhase'\n  | 'maybeNotPermitted'\n  | 'futureEnabled';\n\n// When disabled but user might get access, here are the next steps for this user\nexport type IPreliminaryAction =\n  | 'sign_in_up'\n  | 'verify'\n  | 'sign_in_up_and_verify';\n\nconst ideaPostingDisabledReason = (\n  backendReason: PostingDisabledReason | null,\n  signedIn: boolean,\n  futureEnabled: string | null\n): {\n  disabledReason: IIdeaPostingDisabledReason | null;\n  action: IPreliminaryAction | null;\n} => {\n  switch (backendReason) {\n    case 'not_verified':\n      return signedIn\n        ? {\n            disabledReason: null,\n            action: 'verify',\n          }\n        : {\n            disabledReason: null,\n            action: 'sign_in_up_and_verify',\n          };\n    case 'not_signed_in':\n      return {\n        disabledReason: null,\n        action: 'sign_in_up',\n      };\n    case 'project_inactive':\n      return {\n        disabledReason: futureEnabled ? 'futureEnabled' : 'projectInactive',\n        action: null,\n      };\n    case 'posting_disabled':\n      return {\n        disabledReason: 'postingDisabled',\n        action: null,\n      };\n    case 'not_permitted':\n      return {\n        disabledReason: signedIn ? 'notPermitted' : 'maybeNotPermitted',\n        action: null,\n      };\n    default:\n      return {\n        disabledReason: 'notPermitted',\n        action: null,\n      };\n  }\n};\n\n/** Should we show and/or disable the idea posting button in the given context. And with what disabledReason?\n * @param context\n *  project: The project context we are posting to.\n *  phase: The phase context in which the button is rendered. NOT necessarily the active phase. Optional.\n *  authUser: The currently authenticated user\n */\nexport const getIdeaPostingRules = ({\n  project,\n  phase,\n  authUser,\n}: {\n  project: GetProjectChildProps;\n  phase: GetPhaseChildProps | TPhase;\n  authUser: GetAuthUserChildProps | TAuthUser;\n}): ActionPermission<IIdeaPostingDisabledReason> => {\n  const signedIn = !isNilOrError(authUser);\n\n  if (!isNilOrError(project)) {\n    const {\n      disabled_reason,\n      future_enabled,\n      enabled,\n    } = project.attributes.action_descriptor.posting_idea;\n\n    if (\n      !isNilOrError(authUser) &&\n      (isAdmin({ data: authUser }) || isProjectModerator({ data: authUser }))\n    ) {\n      return {\n        show: true,\n        enabled: true,\n        disabledReason: null,\n        action: null,\n      };\n    }\n\n    // timeline\n    if (!isNilOrError(phase)) {\n      // not an enabled ideation phase\n      if (\n        !(\n          phase.attributes.participation_method === 'ideation' &&\n          phase.attributes.posting_enabled &&\n          disabled_reason !== 'not_ideation'\n        )\n      ) {\n        return {\n          show: false,\n          enabled: null,\n          disabledReason: null,\n          action: null,\n        };\n      }\n\n      // if not in current phase\n      if (\n        pastPresentOrFuture([\n          phase.attributes.start_at,\n          phase.attributes.end_at,\n        ]) !== 'present'\n      ) {\n        return {\n          show: true,\n          enabled: false,\n          disabledReason: 'notActivePhase' as IIdeaPostingDisabledReason,\n          action: null,\n        };\n      }\n    }\n\n    // continuous, not an enabled ideation project\n    if (\n      isNilOrError(phase) &&\n      !(\n        project.attributes.participation_method === 'ideation' &&\n        project.attributes.posting_enabled &&\n        disabled_reason !== 'not_ideation'\n      )\n    ) {\n      return {\n        show: false,\n        enabled: null,\n        disabledReason: null,\n        action: null,\n      };\n    }\n\n    if (enabled) {\n      return {\n        show: true,\n        enabled: true,\n        disabledReason: null,\n        action: null,\n      };\n    }\n\n    const { disabledReason, action } = ideaPostingDisabledReason(\n      disabled_reason,\n      signedIn,\n      future_enabled\n    );\n\n    if (action) {\n      return {\n        action,\n        disabledReason: null,\n        show: true,\n        enabled: 'maybe',\n      };\n    }\n\n    return {\n      disabledReason,\n      action: null,\n      show: true,\n      enabled: false,\n    } as ActionPermissionDisabled<IIdeaPostingDisabledReason>;\n    // TODO enforce the validity of this by adding a test to ensure either action or disabledReason is not null\n  }\n  // if !project\n  return {\n    show: true,\n    enabled: true,\n    disabledReason: null,\n    action: null,\n  };\n};\n\n/* ----------- Poll Taking ------------ */\n\nexport type IPollTakingDisabledReason =\n  | 'notPermitted'\n  | 'maybeNotPermitted'\n  | 'projectInactive'\n  | 'notActivePhase'\n  | 'alreadyResponded'\n  | 'notVerified'\n  | 'maybeNotVerified';\n\nconst pollTakingDisabledReason = (\n  backendReason: PollDisabledReason | null,\n  signedIn: boolean\n): IPollTakingDisabledReason => {\n  switch (backendReason) {\n    case 'project_inactive':\n      return 'projectInactive';\n    case 'already_responded':\n      return 'alreadyResponded';\n    case 'not_verified':\n      return signedIn ? 'notVerified' : 'maybeNotVerified';\n    case 'not_permitted':\n      return signedIn ? 'notPermitted' : 'maybeNotPermitted';\n    case 'not_signed_in':\n      return 'maybeNotPermitted';\n    default:\n      return 'notPermitted';\n  }\n};\n\n/** Should we enable taking the poll in the curret context? And if not, with what message?\n * @param context\n *  project: The project context we are posting to.\n *  phaseContext: The phase context in which the button is rendered. NOT necessarily the active phase. Optional.\n *  signedIn: Whether the user is currently authenticated\n */\nexport const getPollTakingRules = ({\n  project,\n  phaseContext,\n  signedIn,\n}: {\n  project: IProjectData;\n  phaseContext?: IPhaseData | null;\n  signedIn: boolean;\n}): ActionPermission<IPollTakingDisabledReason> => {\n  const {\n    enabled,\n    disabled_reason,\n  } = project.attributes.action_descriptor.taking_poll;\n\n  if (phaseContext) {\n    if (\n      phaseContext &&\n      pastPresentOrFuture([\n        phaseContext.attributes.start_at,\n        phaseContext.attributes.end_at,\n      ]) !== 'present'\n    ) {\n      return {\n        enabled: false,\n        disabledReason: 'notActivePhase',\n        show: true,\n        action: null,\n      };\n    }\n  }\n\n  if (enabled) {\n    return {\n      enabled,\n      disabledReason: null,\n      show: true,\n      action: null,\n    };\n  }\n  // if not in phase context\n  return {\n    enabled: false,\n    disabledReason: pollTakingDisabledReason(disabled_reason, !!signedIn),\n    show: true,\n    action: null,\n  };\n};\n\nexport type ISurveyTakingDisabledReason =\n  | 'notPermitted'\n  | 'maybeNotPermitted'\n  | 'maybeNotVerified'\n  | 'projectInactive'\n  | 'notActivePhase'\n  | 'notVerified';\n\nconst surveyTakingDisabledReason = (\n  backendReason: SurveyDisabledReason | null,\n  signedIn: boolean\n): ISurveyTakingDisabledReason => {\n  switch (backendReason) {\n    case 'project_inactive':\n      return 'projectInactive';\n    case 'not_signed_in':\n      return 'maybeNotPermitted';\n    case 'not_verified':\n      return signedIn ? 'notVerified' : 'maybeNotVerified';\n    case 'not_permitted':\n      return signedIn ? 'notPermitted' : 'maybeNotPermitted';\n    default:\n      return 'notPermitted';\n  }\n};\n\n/** Should we show the survey in the given context? And if not, with what message?\n * @param context\n *  project: The project context we are posting to.\n *  phaseContext: The phase context in which the button is rendered. NOT necessarily the active phase. Optional.\n *  signedIn: Whether the user is currently authenticated\n */\nexport const getSurveyTakingRules = ({\n  project,\n  phaseContext,\n  signedIn,\n}: {\n  project: IProjectData;\n  phaseContext?: IPhaseData | null;\n  signedIn: boolean;\n}): ActionPermission<ISurveyTakingDisabledReason> => {\n  if (phaseContext) {\n    const inCurrentPhase =\n      pastPresentOrFuture([\n        phaseContext.attributes.start_at,\n        phaseContext.attributes.end_at,\n      ]) === 'present';\n    const {\n      disabled_reason,\n      enabled,\n    } = project.attributes.action_descriptor.taking_survey;\n\n    if (inCurrentPhase) {\n      return {\n        enabled,\n        disabledReason: enabled\n          ? null\n          : surveyTakingDisabledReason(disabled_reason, !!signedIn),\n        action: null,\n        show: true,\n      } as\n        | ActionPermissionDisabled<ISurveyTakingDisabledReason>\n        | ActionPermissionEnabled;\n    } else {\n      // if not in current phase\n      return {\n        enabled: false,\n        disabledReason: 'notActivePhase',\n        action: null,\n        show: true,\n      };\n    }\n  } else {\n    // if not in phase context\n    const {\n      enabled,\n      disabled_reason,\n    } = project.attributes.action_descriptor.taking_survey;\n    return {\n      enabled,\n      disabledReason: enabled\n        ? null\n        : surveyTakingDisabledReason(disabled_reason, !!signedIn),\n      action: null,\n      show: true,\n    } as\n      | ActionPermissionDisabled<ISurveyTakingDisabledReason>\n      | ActionPermissionEnabled;\n  }\n};\n","import React, { memo, FormEvent } from 'react';\nimport clHistory from 'utils/cl-router/history';\nimport { Button } from 'cl2-component-library';\nimport useProject from 'hooks/useProject';\nimport useLocale from 'hooks/useLocale';\nimport useLocalize from 'hooks/useLocalize';\nimport { isNilOrError } from 'utils/helperUtils';\nimport eventEmitter from 'utils/eventEmitter';\n\ninterface Props {\n  projectId: string;\n  className?: string;\n  insideModal: boolean;\n}\n\nconst GoBackButton = memo(({ projectId, className, insideModal }: Props) => {\n  const project = useProject({ projectId });\n  const locale = useLocale();\n  const localize = useLocalize();\n\n  const onGoBack = (event: FormEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    if (insideModal) {\n      eventEmitter.emit('closeIdeaModal');\n    } else if (!isNilOrError(project)) {\n      clHistory.push(`/projects/${project.attributes.slug}`);\n    } else {\n      clHistory.push('/');\n    }\n  };\n\n  if (!isNilOrError(project) && !isNilOrError(locale)) {\n    return (\n      <Button\n        className={className}\n        id=\"e2e-idea-other-link\"\n        locale={locale}\n        icon=\"circle-arrow-left\"\n        onClick={onGoBack}\n        buttonStyle=\"text\"\n        iconSize=\"26px\"\n        padding=\"0\"\n        textDecorationHover=\"underline\"\n      >\n        {localize(project.attributes.title_multiloc)}\n      </Button>\n    );\n  }\n\n  return null;\n});\n\nexport default GoBackButton;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  submitYourIdea: {\n    id: 'app.containers.IdeaButton.submitYourIdea',\n    defaultMessage: 'Submit your idea',\n  },\n  addAnOption: {\n    id: 'app.containers.IdeaButton.addAnOption',\n    defaultMessage: 'Add an option',\n  },\n  addAProject: {\n    id: 'app.containers.IdeaButton.addAProject',\n    defaultMessage: 'Add a project',\n  },\n  addAQuestion: {\n    id: 'app.containers.IdeaButton.addAQuestion',\n    defaultMessage: 'Add a question',\n  },\n  submitAnIssue: {\n    id: 'app.containers.IdeaButton.submitAnIssue',\n    defaultMessage: 'Submit an issue',\n  },\n  addAContribution: {\n    id: 'app.containers.IdeaButton.addAContribution',\n    defaultMessage: 'Add a contribution',\n  },\n  postingDisabled: {\n    id: 'app.containers.IdeaButton.postingDisabled',\n    defaultMessage: 'New submissions are not currently being accepted',\n  },\n  postingNoPermission: {\n    id: 'app.containers.IdeaButton.postingNoPermission',\n    defaultMessage: 'New submissions are only enabled for certain groups',\n  },\n  signInLinkText: {\n    id: 'app.containers.IdeaButton.signInLinkText',\n    defaultMessage: 'sign in',\n  },\n  signUpLinkText: {\n    id: 'app.containers.IdeaButton.signUpLinkText',\n    defaultMessage: 'sign up',\n  },\n  postingInactive: {\n    id: 'app.containers.IdeaButton.postingInactive',\n    defaultMessage: 'New submissions are not currently being accepted.',\n  },\n  postingInNonActivePhases: {\n    id: 'app.containers.IdeaButton.postingInNonActivePhases',\n    defaultMessage: 'New submissions can only be added in active phases.',\n  },\n  postingNotYetPossible: {\n    id: 'app.containers.IdeaButton.postingNotYetPossible',\n    defaultMessage: 'New submissions are not yet accepted here.',\n  },\n  postingMayNotBePermitted: {\n    id: 'app.containers.IdeaButton.postingMayNotBePermitted',\n    defaultMessage:\n      'Please {signInLink} to the platform to see what actions you can take.',\n  },\n\n  verificationLinkText: {\n    id: 'app.containers.IdeaButton.verificationLinkText',\n    defaultMessage: 'Verify your account now.',\n  },\n});\n","import {\n  IIdeaFormSchemas,\n  CustomFieldCodes,\n} from 'services/ideaCustomFieldsSchemas';\nimport { Locale } from 'typings';\n\nexport default function isFieldEnabled(\n  fieldCode: CustomFieldCodes,\n  ideaCustomFieldsSchemas: IIdeaFormSchemas,\n  locale: Locale\n) {\n  return (\n    ideaCustomFieldsSchemas.ui_schema_multiloc[locale][fieldCode][\n      'ui:widget'\n    ] !== 'hidden'\n  );\n}\n","import React from 'react';\nimport { BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  mergeScan,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport {\n  ICommentData,\n  commentsForIdeaStream,\n  commentsForInitiativeStream,\n  CommentsSort,\n} from 'services/comments';\nimport { unionBy, isString, get } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\ntype children = (renderProps: GetCommentsChildProps) => JSX.Element | null;\n\ninterface Props {\n  postId: string;\n  children?: children;\n  postType: 'idea' | 'initiative';\n}\n\ninterface State {\n  commentsList: ICommentData[] | undefined | null | Error;\n  loadingInital: boolean;\n  loadingMore: boolean;\n  hasMore: boolean;\n}\n\ninterface IQueryParameters {\n  pageNumber: number;\n  pageSize: number;\n  sort: CommentsSort;\n}\n\nexport interface GetCommentsChildProps extends State {\n  onLoadMore: () => void;\n  onChangeSort: (sort: CommentsSort) => void;\n}\n\nexport default class GetComments extends React.Component<Props, State> {\n  private postId$: BehaviorSubject<string>;\n  private postType$: BehaviorSubject<string>;\n  private sort$: BehaviorSubject<CommentsSort>;\n  private loadMore$: BehaviorSubject<null>;\n  private subscription: Subscription;\n  private initialQueryParameters: IQueryParameters = {\n    pageNumber: 0,\n    pageSize: 15,\n    sort: '-new',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      commentsList: undefined,\n      loadingInital: false,\n      loadingMore: false,\n      hasMore: true,\n    };\n  }\n\n  componentDidMount() {\n    this.postId$ = new BehaviorSubject(this.props.postId);\n    this.postType$ = new BehaviorSubject(this.props.postType);\n    this.sort$ = new BehaviorSubject(this.initialQueryParameters.sort);\n    this.loadMore$ = new BehaviorSubject(null);\n\n    this.subscription = combineLatest(\n      this.postId$.pipe(distinctUntilChanged()),\n      this.postType$.pipe(distinctUntilChanged()),\n      this.sort$.pipe(distinctUntilChanged())\n    )\n      .pipe(\n        switchMap(([postId, postType, sort]) => {\n          let commentsList:\n            | ICommentData[]\n            | undefined\n            | null\n            | Error = undefined;\n          let pageNumber = this.initialQueryParameters.pageNumber;\n          const pageSize = this.initialQueryParameters.pageSize;\n          let hasMore = true;\n\n          return this.loadMore$.pipe(\n            tap(() =>\n              this.setState({\n                loadingInital: pageNumber === 0,\n                loadingMore: pageNumber > 0,\n              })\n            ),\n            mergeScan(() => {\n              pageNumber = pageNumber + 1;\n\n              const commentsStream =\n                postType === 'idea'\n                  ? commentsForIdeaStream\n                  : commentsForInitiativeStream;\n\n              return commentsStream(postId, {\n                queryParameters: {\n                  sort,\n                  'page[number]': pageNumber,\n                  'page[size]': pageSize,\n                },\n              }).observable.pipe(\n                map((comments) => {\n                  const selfLink = get(comments, 'links.self');\n                  const lastLink = get(comments, 'links.last');\n                  hasMore =\n                    isString(selfLink) &&\n                    isString(lastLink) &&\n                    selfLink !== lastLink;\n                  commentsList = !isNilOrError(commentsList)\n                    ? unionBy(commentsList, comments.data, 'id')\n                    : comments.data;\n                  return null;\n                })\n              );\n            }, null),\n            map(() => ({ pageNumber, commentsList, hasMore }))\n          );\n        })\n      )\n      .subscribe(({ commentsList, hasMore }) => {\n        this.setState({\n          commentsList,\n          hasMore,\n          loadingInital: false,\n          loadingMore: false,\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    this.postId$.next(this.props.postId);\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  loadMore = () => {\n    if (this.state.hasMore) {\n      this.loadMore$.next(null);\n    }\n  };\n\n  changeSort = (sort: CommentsSort) => {\n    this.sort$.next(sort);\n  };\n\n  render() {\n    const { children } = this.props;\n    return (children as children)({\n      ...this.state,\n      onLoadMore: this.loadMore,\n      onChangeSort: this.changeSort,\n    });\n  }\n}\n","import React, { memo, useEffect, useState } from 'react';\nimport { IOpenPostPageModalEvent } from 'containers/App';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Button from 'components/UI/Button';\nimport { Icon } from 'cl2-component-library';\n\n// events\nimport eventEmitter from 'utils/eventEmitter';\nimport { setIdeaMapCardSelected } from './events';\nimport {\n  setLeafletMapHoveredMarker,\n  leafletMapHoveredMarker$,\n} from 'components/UI/LeafletMap/events';\n\n// hooks\nimport useWindowSize from 'hooks/useWindowSize';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\n\n// i18n\nimport T from 'components/T';\nimport FormattedBudget from 'utils/currency/FormattedBudget';\n\n// styling\nimport styled from 'styled-components';\nimport {\n  defaultCardStyle,\n  fontSizes,\n  colors,\n  viewportWidths,\n  media,\n} from 'utils/styleUtils';\n\n// typings\nimport { IIdeaMarkerData } from 'services/ideas';\n\nconst Container = styled.div`\n  text-align: left;\n  padding: 20px;\n  margin: 0;\n  margin-bottom: 15px;\n  cursor: pointer;\n  position: relative;\n  ${defaultCardStyle}\n  border: solid 1px #ccc;\n\n  &:hover,\n  &.hover {\n    border-color: #000;\n  }\n`;\n\nconst CloseButtonWrapper = styled.div`\n  display: flex;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\n\nconst CloseButton = styled(Button)``;\n\nconst Title = styled.h3`\n  height: 46px;\n  max-height: 46px;\n  color: ${(props) => props.theme.colorText};\n  font-size: 18px;\n  font-weight: 600;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  line-height: 23px;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 20px;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n\n  /* ${media.smallerThanMaxTablet`\n    width: calc(100% - 22px);\n    margin-bottom: 25px;\n  `} */\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst FooterItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 25px;\n`;\n\nconst MoneybagIcon = styled(Icon)`\n  width: 18px;\n  height: 18px;\n  fill: ${colors.label};\n  margin-right: 6px;\n`;\n\nconst DownvoteIcon = styled(Icon)`\n  width: 17px;\n  height: 17px;\n  fill: ${colors.label};\n  margin-right: 6px;\n`;\n\nconst UpvoteIcon = styled(Icon)`\n  width: 17px;\n  height: 17px;\n  fill: ${colors.label};\n  margin-right: 6px;\n  margin-top: 5px;\n`;\n\nconst CommentIcon = styled(Icon)`\n  width: 20px;\n  height: 20px;\n  fill: ${colors.label};\n  margin-right: 6px;\n  margin-left: 2px;\n`;\n\nconst FooterValue = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.small + 1}px;\n  line-height: normal;\n  font-weight: 400;\n`;\n\ninterface Props {\n  ideaMarker: IIdeaMarkerData;\n  isPBIdea: boolean;\n  onClose?: () => void;\n  className?: string;\n}\n\nconst IdeaMapCard = memo<Props>(\n  ({ ideaMarker, isPBIdea, onClose, className }) => {\n    const tenant = useAppConfiguration();\n    const { windowWidth } = useWindowSize();\n    const smallerThanMaxTablet = windowWidth <= viewportWidths.largeTablet;\n\n    const [hovered, setHovered] = useState(false);\n\n    useEffect(() => {\n      const subscriptions = [\n        leafletMapHoveredMarker$.subscribe((hoverredIdeaId) => {\n          if (!smallerThanMaxTablet) {\n            setHovered(hoverredIdeaId === ideaMarker.id);\n          }\n        }),\n      ];\n\n      return () => {\n        subscriptions.forEach((subscription) => subscription.unsubscribe());\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [smallerThanMaxTablet]);\n\n    const handleOnClick = (event: React.FormEvent) => {\n      event?.preventDefault();\n\n      setIdeaMapCardSelected(ideaMarker.id);\n\n      if (smallerThanMaxTablet) {\n        eventEmitter.emit<IOpenPostPageModalEvent>('cardClick', {\n          id: ideaMarker.id,\n          slug: ideaMarker.attributes.slug,\n          type: 'idea',\n        });\n      }\n    };\n\n    const handleOnKeyPress = (event: React.FormEvent) => {\n      event?.preventDefault();\n\n      if (event?.['key'] === 'Enter') {\n        handleOnClick(event);\n      }\n    };\n\n    const handleOnMouseEnter = () => {\n      setLeafletMapHoveredMarker(ideaMarker.id);\n    };\n\n    const handleOnMouseLeave = () => {\n      setLeafletMapHoveredMarker(null);\n    };\n\n    const handleCloseButtonClick = (event: React.FormEvent) => {\n      event?.preventDefault();\n      onClose?.();\n    };\n\n    if (!isNilOrError(tenant) && !isNilOrError(ideaMarker)) {\n      const tenantCurrency = tenant.data.attributes.settings.core.currency;\n      const ideaBudget = ideaMarker.attributes?.budget;\n\n      return (\n        <Container\n          className={`${className || ''} ${hovered ? 'hover' : ''}`}\n          onClick={handleOnClick}\n          onKeyPress={handleOnKeyPress}\n          onMouseEnter={handleOnMouseEnter}\n          onMouseLeave={handleOnMouseLeave}\n          role=\"button\"\n          tabIndex={0}\n        >\n          {smallerThanMaxTablet && (\n            <CloseButtonWrapper>\n              <CloseButton\n                width=\"26px\"\n                height=\"26px\"\n                padding=\"0px\"\n                buttonStyle=\"secondary\"\n                icon=\"close\"\n                iconSize=\"12px\"\n                onClick={handleCloseButtonClick}\n              />\n            </CloseButtonWrapper>\n          )}\n          <Title>\n            <T value={ideaMarker.attributes.title_multiloc} />\n          </Title>\n          <Footer>\n            {isPBIdea && tenantCurrency && ideaBudget && (\n              <FooterItem>\n                <MoneybagIcon name=\"coin-stack\" />\n                <FooterValue>\n                  <FormattedBudget value={ideaBudget} />\n                </FooterValue>\n              </FooterItem>\n            )}\n            {!isPBIdea && (\n              <>\n                <FooterItem>\n                  <DownvoteIcon name=\"upvote\" />\n                  <FooterValue>\n                    {ideaMarker.attributes.upvotes_count}\n                  </FooterValue>\n                </FooterItem>\n                <FooterItem>\n                  <UpvoteIcon name=\"downvote\" />\n                  <FooterValue>\n                    {ideaMarker.attributes.downvotes_count}\n                  </FooterValue>\n                </FooterItem>\n              </>\n            )}\n            <FooterItem>\n              <CommentIcon name=\"comments\" />\n              <FooterValue>{ideaMarker.attributes.comments_count}</FooterValue>\n            </FooterItem>\n          </Footer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default IdeaMapCard;\n"],"sourceRoot":""}