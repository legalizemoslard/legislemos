{"version":3,"sources":["webpack:///./app/components/admin/TabbedResource/index.tsx","webpack:///./app/components/HelmetIntl/index.tsx","webpack:///./app/components/admin/PageTitle/index.tsx","webpack:///./app/containers/Admin/emails/index.tsx","webpack:///./app/containers/Admin/emails/messages.ts","webpack:///./app/resources/GetPermission.tsx"],"names":["ResourceHeader","styled","div","TabbedNav","nav","props","theme","borderRadius","colors","separation","Tab","label","fontSizes","base","adminTextColor","ChildWrapper","adminContentBackground","getRegularExpression","tabUrl","RegExp","TabbedResource","tab","pathname","location","active","url","test","this","children","resource","title","subtitle","publicLink","messages","tabs","className","SectionDescription","buttonStyle","icon","linkTo","FormattedMessage","viewPublicResource","length","map","feature","key","name","activeClassForTab","to","React","PureComponent","withRouter","HelmetIntl","formatMessage","intl","description","Helmet","meta","content","injectIntl","h1","xxxl","EmailsDashboard","canManageManualCampaigns","manualEmailingEnabled","push","tabCustom","canManageAutomatedCampaigns","automatedEmailingEnabled","tabAutomated","match","isEmpty","clHistory","titleEmails","subtitleEmails","helmetTitle","helmetDescription","noAccess","EmailsDashboardWithHOCs","Data","adopt","item","action","inputProps","dataProps","defineMessages","id","defaultMessage","campaignDeletionConfirmation","addCampaignButton","deleteButtonLabel","statsButton","editButtonLabel","manageButtonLabel","fieldSender","fieldSenderTooltip","fieldReplyTo","fieldReplyToTooltip","fieldTo","fieldToTooltip","fieldSubject","fieldSubjectTooltip","fieldBody","addCampaignTitle","editCampaignTitle","draft","sent","sendNowButton","sendTestEmailButton","sendTestEmailTooltip","previewSentConfirmation","formSaveButton","formErrorButton","formSuccessButton","formSuccessMessage","formErrorMessage","formUnexpectedErrorMessage","previewTitle","recipientsTitle","deliveryStatus_sent","deliveryStatus_failed","deliveryStatus_accepted","deliveryStatus_delivered","deliveryStatus_opened","deliveryStatus_clicked","deliveryStatus_clickedTooltip","campaignFrom","campaignTo","deleteCampaignButton","noCampaignsHeader","noCampaignsDescription","automatedEmailCampaignsInfo","allUsers","groups","nameVariablesInfo","changeRecipientsButton","send","confirmSendHeader","toAllUsers","senderRecipients","GetPermission","state","permission","undefined","context","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","switchMap","isNilOrError","of","hasPermission","subscribe","setState","forEach","subscription","unsubscribe","Component"],"mappings":"oWAAA,mBAEA,YACA,eAGA,eACA,YAGA,YAMA,eACA,eACA,YACA,e,0cAEA,IAAMA,EAAiBC,UAAOC,IAAV,qFAAGD,CAAH,+IAedE,EAAYF,UAAOG,IAAV,gFAAGH,CAAH,kMAEI,SAACI,GAAD,OAAgBA,EAAMC,MAAMC,gBACzC,SAACF,GAAD,OAAgBA,EAAMC,MAAMC,eAGZC,SAAOC,YASvBC,EAAMT,UAAOC,IAAV,0EAAGD,CAAH,6ZAeIO,SAAOG,MACHC,YAAUC,KAWdL,SAAOM,eAKPN,SAAOM,eACAN,SAAOM,gBAIrBC,EAAed,UAAOC,IAAV,mFAAGD,CAAH,sHAGIO,SAAOC,WACbD,SAAOQ,wBAuBvB,SAASC,EAAqBC,GAC5B,OAAO,IAAIC,OAAJ,6CAAiDD,EAAjD,W,IAGHE,E,yPAIgB,SAACC,GACnB,IACcC,EACV,EAAKjB,MADPkB,SAAYD,SAGd,OACwB,mBAAfD,EAAIG,OACPH,EAAIG,OAAOF,GACXD,EAAIG,QACHF,GAAYL,EAAqBI,EAAII,KAAKC,KAAKH,SAASD,WAE3D,SACA,M,6CAGN,WAAS,WACP,EAKIK,KAAKtB,MAJPuB,EADF,EACEA,SADF,IAEEC,SAAYC,EAFd,EAEcA,MAAOC,EAFrB,EAEqBA,SAAUC,EAF/B,EAE+BA,WAC7BC,EAHF,EAGEA,SACAC,EAJF,EAIEA,KAGF,OACE,gDACE,wBAAClC,EAAD,CAAgBmC,UAAU,uBACxB,mCACE,wBAAC,UAAD,KAAQL,GACPC,GAAY,wBAAC,EAAAK,mBAAD,KAAqBL,IAGnCC,GAAcC,GACb,wBAAC,UAAD,CAAQI,YAAY,UAAUC,KAAK,MAAMC,OAAQP,GAC/C,wBAAC,EAAAQ,iBAAqBP,EAASQ,sBAKpCP,GAAQA,EAAKQ,OAAS,GACrB,wBAACvC,EAAD,CAAWgC,UAAU,qBAClBD,EAAKS,KAAI,SAACtB,GACT,OAAIA,EAAIuB,QAEJ,wBAAC,UAAD,CAAaC,IAAKxB,EAAII,IAAKqB,KAAMzB,EAAIuB,SACnC,wBAAClC,EAAD,CACEmC,IAAKxB,EAAII,IACTU,UAAS,UAAKd,EAAIyB,KAAT,YAAiB,EAAKC,kBAAkB1B,KAEjD,wBAAC,UAAD,CAAM2B,GAAI3B,EAAII,KAAMJ,EAAIV,SAM5B,wBAACD,EAAD,CACEmC,IAAKxB,EAAII,IACTU,UAAS,UAAKd,EAAIyB,KAAT,YAAiB,EAAKC,kBAAkB1B,KAEjD,wBAAC,UAAD,CAAM2B,GAAI3B,EAAII,KAAMJ,EAAIV,YAQpC,wBAACI,EAAD,KAAea,Q,GAtEMqB,UAAMC,e,GA4EpB,IAAAC,YAAW/B,G,6PCnM1B,eACA,YAEA,Y,8cASagC,E,sJAIX,WACE,IAAQC,EAAkB1B,KAAKtB,MAAMiD,KAA7BD,cACR,EAA+B1B,KAAKtB,MAA5ByB,EAAR,EAAQA,MAAOyB,EAAf,EAAeA,YAEf,OACE,gDACE,wBAAC,EAAAC,OAAD,CACE1B,MAAOuB,EAAcvB,GACrB2B,KAAM,CAAC,CAAEX,KAAM,cAAeY,QAASL,EAAcE,Y,GAZ/BN,UAAMC,e,sBAmBvB,IAAAS,YAAkBP,G,mIC9BjC,mBACA,Y,EAEenD,UAAO2D,G,gEAAP3D,C,4FACAW,YAAUiD,M,6WCLzB,E,ybAAA,YACA,YACA,YACA,YACA,eACA,YACA,eACA,eAEA,eACA,eACA,e,6kBAWMC,E,4OAIG,WACL,MAGI,EAAKzD,MAFCgD,EADV,EACEC,KAAQD,cACI/B,EAFd,EAEEC,SAAYD,SAERY,EAAY,GAwBlB,OAtBE,EAAK7B,MAAM0D,0BACX,EAAK1D,MAAM2D,uBAEX9B,EAAK+B,KAAK,CACRtD,MAAO0C,EAAcpB,UAASiC,WAC9BzC,IAAK,yBAIP,EAAKpB,MAAM8D,6BACX,EAAK9D,MAAM+D,0BAEXlC,EAAK+B,KAAK,CACRtD,MAAO0C,EAAcpB,UAASoC,cAC9B5C,IAAK,4BAILH,EAASgD,MAAM,uBAAwB,IAAAC,SAAQrC,IACjDsC,UAAUP,KAAK/B,EAAK,GAAGT,KAGlBS,K,6CAGT,WACE,MAGIP,KAAKtB,MAFPuB,EADF,EACEA,SACQyB,EAFV,EAEEC,KAAQD,cAEJnB,EAAOP,KAAKO,OAElB,OACE,gCACE,gBAAC,UAAD,CACEL,SAAU,CACRC,MAAOuB,EAAcpB,UAASwC,aAC9B1C,SAAUsB,EAAcpB,UAASyC,iBAEnCxC,KAAMP,KAAKO,QAEX,gBAAC,UAAD,CACEJ,MAAOG,UAAS0C,YAChBpB,YAAatB,UAAS2C,qBAEvB,IAAAL,SAAQrC,GACP,gBAAC,EAAAM,iBAAqBP,UAAS4C,UAE/BjD,Q,GA3DkBqB,EAAMC,eAmE9B4B,GAA0B,IAAA3B,aAAW,IAAAQ,YAAWG,IAEhDiB,GAAO,IAAAC,OAAa,CACxBb,4BACE,gBAAC,UAAD,CAAec,KAAK,oBAAoBC,OAAO,WAEjDnB,yBACE,gBAAC,UAAD,CAAekB,KAAK,iBAAiBC,OAAO,WAE9ClB,sBAAuB,gBAAC,UAAD,CAAgBlB,KAAK,oBAC5CsB,yBACE,gBAAC,UAAD,CAAgBtB,KAAK,iC,UAIV,SAACqC,GAAD,OACb,gBAACJ,EAAD,MACG,SAACK,GAAD,OAAe,gBAACN,GAAD,gBAA6BK,EAAgBC,S,oGCpGjE,I,GAEe,EAFf,UAEeC,gBAAe,CAC5BZ,YAAa,CACXa,GAAI,0CACJC,eAAgB,mBAElBb,eAAgB,CACdY,GAAI,6CACJC,eACE,sIAEJZ,YAAa,CACXW,GAAI,0CACJC,eAAgB,mBAElBX,kBAAmB,CACjBU,GAAI,gDACJC,eACE,kFAEJC,6BAA8B,CAC5BF,GAAI,2DACJC,eAAgB,iBAElBE,kBAAmB,CACjBH,GAAI,gDACJC,eAAgB,mBAElBG,kBAAmB,CACjBJ,GAAI,gDACJC,eAAgB,UAElBI,YAAa,CACXL,GAAI,0CACJC,eAAgB,cAElBK,gBAAiB,CACfN,GAAI,8CACJC,eAAgB,QAElBM,kBAAmB,CACjBP,GAAI,gDACJC,eAAgB,oCAElBO,YAAa,CACXR,GAAI,0CACJC,eAAgB,QAElBQ,mBAAoB,CAClBT,GAAI,iDACJC,eAAgB,0DAElBS,aAAc,CACZV,GAAI,2CACJC,eAAgB,wBAElBU,oBAAqB,CACnBX,GAAI,kDACJC,eACE,qFAEJW,QAAS,CACPZ,GAAI,sCACJC,eAAgB,MAElBY,eAAgB,CACdb,GAAI,6CACJC,eAAgB,6DAElBa,aAAc,CACZd,GAAI,2CACJC,eAAgB,iBAElBc,oBAAqB,CACnBf,GAAI,kDACJC,eACE,qHAEJe,UAAW,CACThB,GAAI,wCACJC,eAAgB,iBAElBgB,iBAAkB,CAChBjB,GAAI,+CACJC,eAAgB,gBAElBiB,kBAAmB,CACjBlB,GAAI,gDACJC,eAAgB,iBAElBkB,MAAO,CACLnB,GAAI,oCACJC,eAAgB,SAElBmB,KAAM,CACJpB,GAAI,mCACJC,eAAgB,QAElBoB,cAAe,CACbrB,GAAI,4CACJC,eAAgB,YAElBqB,oBAAqB,CACnBtB,GAAI,kDACJC,eAAgB,kBAElBsB,qBAAsB,CACpBvB,GAAI,mDACJC,eACE,uHAEJuB,wBAAyB,CACvBxB,GAAI,sDACJC,eAAgB,uDAElBwB,eAAgB,CACdzB,GAAI,6CACJC,eAAgB,YAElByB,gBAAiB,CACf1B,GAAI,8CACJC,eAAgB,YAElB0B,kBAAmB,CACjB3B,GAAI,gDACJC,eAAgB,YAElB2B,mBAAoB,CAClB5B,GAAI,iDACJC,eAAgB,sBAElB4B,iBAAkB,CAChB7B,GAAI,+CACJC,eAAgB,+CAElB6B,2BAA4B,CAC1B9B,GAAI,yDACJC,eAAgB,gDAElB8B,aAAc,CACZ/B,GAAI,2CACJC,eAAgB,WAElB+B,gBAAiB,CACfhC,GAAI,8CACJC,eAAgB,cAElBgC,oBAAqB,CACnBjC,GAAI,qDACJC,eAAgB,QAElBiC,sBAAuB,CACrBlC,GAAI,uDACJC,eAAgB,UAElBkC,wBAAyB,CACvBnC,GAAI,yDACJC,eAAgB,YAElBmC,yBAA0B,CACxBpC,GAAI,0DACJC,eAAgB,aAElBoC,sBAAuB,CACrBrC,GAAI,uDACJC,eAAgB,UAElBqC,uBAAwB,CACtBtC,GAAI,wDACJC,eAAgB,WAElBsC,8BAA+B,CAC7BvC,GAAI,+DACJC,eACE,8GAEJrB,UAAW,CACToB,GAAI,2CACJC,eAAgB,UAElBlB,aAAc,CACZiB,GAAI,8CACJC,eAAgB,aAElBuC,aAAc,CACZxC,GAAI,8CACJC,eAAgB,SAElBwC,WAAY,CACVzC,GAAI,4CACJC,eAAgB,OAElBV,SAAU,CACRS,GAAI,0CACJC,eACE,8EAEJyC,qBAAsB,CACpB1C,GAAI,mDACJC,eAAgB,mBAElB0C,kBAAmB,CACjB3C,GAAI,gDACJC,eAAgB,iCAElB2C,uBAAwB,CACtB5C,GAAI,qDACJC,eACE,iKAEJ4C,4BAA6B,CAC3B7C,GAAI,0DACJC,eACE,kOAEJ6C,SAAU,CACR9C,GAAI,uCACJC,eAAgB,aAElB8C,OAAQ,CACN/C,GAAI,qCACJC,eAAgB,UAElB+C,kBAAmB,CACjBhD,GAAI,gDACJC,eACE,sKAEJgD,uBAAwB,CACtBjD,GAAI,qDACJC,eAAgB,qBAElBiD,KAAM,CACJlD,GAAI,mCACJC,eAAgB,QAElBkD,kBAAmB,CACjBnD,GAAI,gDACJC,eAAgB,uBAElBmD,WAAY,CACVpD,GAAI,yCACJC,eAAgB,gDAElBoD,iBAAkB,CAChBrD,GAAI,+CACJC,eAAgB,2B,kQC7PpB,eACA,YACA,YACA,eACA,YACA,Y,8cAoBqBqD,E,0CAInB,WAAYvI,GAAc,kCACxB,cAAMA,IADkB,2GAExB,EAAKwI,MAAQ,CACXC,gBAAYC,GAHU,E,sDAO1B,WAAoB,WAClB,EAAkCpH,KAAKtB,MAA/B4E,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQ8D,EAAtB,EAAsBA,QAEtBrH,KAAKsH,YAAc,IAAIC,kBAAgB,CAAEjE,OAAMC,SAAQ8D,YAEvDrH,KAAKwH,cAAgB,CACnBxH,KAAKsH,YACFG,MACC,IAAAC,uBAAqB,SAACC,EAAMC,GAAP,OAAgB,aAAeD,EAAMC,OAC1D,IAAAC,YAAU,YAA+B,IAA5BvE,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQ8D,EAAc,EAAdA,QACzB,OAAK,IAAAS,cAAaxE,IAIX,IAAAyE,KAAG,IAHD,IAAAC,eAAc,CAAE1E,OAAMC,SAAQ8D,gBAM1CY,WAAU,SAACd,GAAD,OAAgB,EAAKe,SAAS,CAAEf,qB,gCAIjD,WACE,MAAkCnH,KAAKtB,MAA/B4E,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQ8D,EAAtB,EAAsBA,QACtBrH,KAAKsH,YAAYM,KAAK,CAAEtE,OAAMC,SAAQ8D,c,kCAGxC,WACErH,KAAKwH,cAAcW,SAAQ,SAACC,GAAD,OAAkBA,EAAaC,mB,oBAG5D,WAGE,OAAQpI,EAFaD,KAAKtB,MAAlBuB,UACeD,KAAKkH,MAApBC,gB,GA3C+B7F,UAAMgH,W","file":"117.0878af4398fce80b374b.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Link from 'utils/cl-router/Link';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// localisation\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// typings\nimport { Message, ITab } from 'typings';\n\n// components\nimport FeatureFlag from 'components/FeatureFlag';\nimport Button from 'components/UI/Button';\nimport { SectionDescription } from 'components/admin/Section';\nimport Title from 'components/admin/PageTitle';\n\nconst ResourceHeader = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-bottom: 30px;\n\n  @media print {\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin-right: 40px;\n  }\n`;\n\nconst TabbedNav = styled.nav`\n  background: #fcfcfc;\n  border-radius: ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius} 0 0;\n  padding-left: 44px;\n  display: flex;\n  border: 1px solid ${colors.separation};\n  border-bottom: 1px solid transparent;\n  @media print {\n    border: none;\n    padding: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Tab = styled.div`\n  list-style: none;\n  cursor: pointer;\n  display: flex;\n  margin-bottom: -1px;\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  a {\n    color: ${colors.label};\n    font-size: ${fontSizes.base}px;\n    font-weight: 400;\n    line-height: 1.5rem;\n    padding: 0;\n    padding-top: 1em;\n    padding-bottom: 1em;\n    border-bottom: 3px solid transparent;\n    transition: all 100ms ease-out;\n  }\n\n  &:not(.active):hover a {\n    color: ${colors.adminTextColor};\n    border-color: #ddd;\n  }\n\n  &.active a {\n    color: ${colors.adminTextColor};\n    border-color: ${colors.adminTextColor};\n  }\n`;\n\nconst ChildWrapper = styled.div`\n  margin-bottom: 60px;\n  padding: 42px;\n  border: 1px solid ${colors.separation};\n  background: ${colors.adminContentBackground};\n\n  @media print {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\ntype Props = {\n  resource: {\n    title: string;\n    publicLink?: string;\n    subtitle?: string;\n  };\n  messages?: {\n    viewPublicResource: Message;\n  };\n  tabs?: ITab[];\n};\n\ninterface State {}\n\nfunction getRegularExpression(tabUrl: string) {\n  return new RegExp(`^/([a-zA-Z]{2,3}(-[a-zA-Z]{2,3})?)(${tabUrl})(/)?$`);\n}\n\nclass TabbedResource extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  activeClassForTab = (tab: ITab) => {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    return (\n      typeof tab.active === 'function'\n        ? tab.active(pathname)\n        : tab.active ||\n          (pathname && getRegularExpression(tab.url).test(location.pathname))\n    )\n      ? 'active'\n      : '';\n  };\n\n  render() {\n    const {\n      children,\n      resource: { title, subtitle, publicLink },\n      messages,\n      tabs,\n    } = this.props;\n\n    return (\n      <>\n        <ResourceHeader className=\"e2e-resource-header\">\n          <div>\n            <Title>{title}</Title>\n            {subtitle && <SectionDescription>{subtitle}</SectionDescription>}\n          </div>\n\n          {publicLink && messages && (\n            <Button buttonStyle=\"cl-blue\" icon=\"eye\" linkTo={publicLink}>\n              <FormattedMessage {...messages.viewPublicResource} />\n            </Button>\n          )}\n        </ResourceHeader>\n\n        {tabs && tabs.length > 0 && (\n          <TabbedNav className=\"e2e-resource-tabs\">\n            {tabs.map((tab) => {\n              if (tab.feature) {\n                return (\n                  <FeatureFlag key={tab.url} name={tab.feature}>\n                    <Tab\n                      key={tab.url}\n                      className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                    >\n                      <Link to={tab.url}>{tab.label}</Link>\n                    </Tab>\n                  </FeatureFlag>\n                );\n              } else {\n                return (\n                  <Tab\n                    key={tab.url}\n                    className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                  >\n                    <Link to={tab.url}>{tab.label}</Link>\n                  </Tab>\n                );\n              }\n            })}\n          </TabbedNav>\n        )}\n\n        <ChildWrapper>{children}</ChildWrapper>\n      </>\n    );\n  }\n}\n\nexport default withRouter(TabbedResource);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\ntype Props = {\n  title: ReactIntl.FormattedMessage.MessageDescriptor;\n  description: ReactIntl.FormattedMessage.MessageDescriptor;\n};\n\ninterface State {}\n\nexport class HelmetIntl extends React.PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const { title, description } = this.props;\n\n    return (\n      <>\n        <Helmet\n          title={formatMessage(title)}\n          meta={[{ name: 'description', content: formatMessage(description) }]}\n        />\n      </>\n    );\n  }\n}\n\nexport default injectIntl<Props>(HelmetIntl);\n","// style\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nexport default styled.h1`\n  font-size: ${fontSizes.xxxl}px;\n  line-height: 40px;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 15px;\n`;\n","import * as React from 'react';\nimport { isEmpty } from 'lodash-es';\nimport { adopt } from 'react-adopt';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport clHistory from 'utils/cl-router/history';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport HelmetIntl from 'components/HelmetIntl';\nimport TabbedResource from 'components/admin/TabbedResource';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\nimport GetPermission from 'resources/GetPermission';\nimport GetFeatureFlag from 'resources/GetFeatureFlag';\n\ntype Props = {\n  canManageAutomatedCampaigns: boolean | null;\n  canManageManualCampaigns: boolean | null;\n  manualEmailingEnabled: boolean | null;\n  automatedEmailingEnabled: boolean | null;\n};\n\ninterface State {}\n\nclass EmailsDashboard extends React.PureComponent<\n  Props & InjectedIntlProps & WithRouterProps,\n  State\n> {\n  tabs = () => {\n    const {\n      intl: { formatMessage },\n      location: { pathname },\n    } = this.props;\n    const tabs: any = [];\n    if (\n      this.props.canManageManualCampaigns &&\n      this.props.manualEmailingEnabled\n    ) {\n      tabs.push({\n        label: formatMessage(messages.tabCustom),\n        url: '/admin/emails/custom',\n      });\n    }\n    if (\n      this.props.canManageAutomatedCampaigns &&\n      this.props.automatedEmailingEnabled\n    ) {\n      tabs.push({\n        label: formatMessage(messages.tabAutomated),\n        url: '/admin/emails/automated',\n      });\n    }\n\n    if (pathname.match(/\\/admin\\/emails$/) && !isEmpty(tabs)) {\n      clHistory.push(tabs[0].url);\n    }\n\n    return tabs;\n  };\n\n  render() {\n    const {\n      children,\n      intl: { formatMessage },\n    } = this.props;\n    const tabs = this.tabs();\n\n    return (\n      <>\n        <TabbedResource\n          resource={{\n            title: formatMessage(messages.titleEmails),\n            subtitle: formatMessage(messages.subtitleEmails),\n          }}\n          tabs={this.tabs()}\n        >\n          <HelmetIntl\n            title={messages.helmetTitle}\n            description={messages.helmetDescription}\n          />\n          {isEmpty(tabs) ? (\n            <FormattedMessage {...messages.noAccess} />\n          ) : (\n            children\n          )}\n        </TabbedResource>\n      </>\n    );\n  }\n}\n\nconst EmailsDashboardWithHOCs = withRouter(injectIntl(EmailsDashboard));\n\nconst Data = adopt<Props>({\n  canManageAutomatedCampaigns: (\n    <GetPermission item=\"automatedCampaign\" action=\"manage\" />\n  ),\n  canManageManualCampaigns: (\n    <GetPermission item=\"manualCampaign\" action=\"manage\" />\n  ),\n  manualEmailingEnabled: <GetFeatureFlag name=\"manual_emailing\" />,\n  automatedEmailingEnabled: (\n    <GetFeatureFlag name=\"automated_emailing_control\" />\n  ),\n});\n\nexport default (inputProps) => (\n  <Data>\n    {(dataProps) => <EmailsDashboardWithHOCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","/*\n * Admin.emails Messages\n *\n * This contains all the text for the admins email.\n */\n\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  titleEmails: {\n    id: 'app.containers.Admin.emails.titleEmails',\n    defaultMessage: 'Email Campaigns',\n  },\n  subtitleEmails: {\n    id: 'app.containers.Admin.emails.subtitleEmails',\n    defaultMessage:\n      'Compose your own emails to be sent out to all users or to particular groups. And control what automated emails your users receive.',\n  },\n  helmetTitle: {\n    id: 'app.containers.Admin.emails.helmetTitle',\n    defaultMessage: 'Email Campaigns',\n  },\n  helmetDescription: {\n    id: 'app.containers.Admin.emails.helmetDescription',\n    defaultMessage:\n      'Send out manual emails to certain citizen group and active automated campaigns',\n  },\n  campaignDeletionConfirmation: {\n    id: 'app.containers.Admin.emails.campaignDeletionConfirmation',\n    defaultMessage: 'Are you sure?',\n  },\n  addCampaignButton: {\n    id: 'app.containers.Admin.emails.addCampaignButton',\n    defaultMessage: 'Create campaign',\n  },\n  deleteButtonLabel: {\n    id: 'app.containers.Admin.emails.deleteButtonLabel',\n    defaultMessage: 'Delete',\n  },\n  statsButton: {\n    id: 'app.containers.Admin.emails.statsButton',\n    defaultMessage: 'Statistics',\n  },\n  editButtonLabel: {\n    id: 'app.containers.Admin.emails.editButtonLabel',\n    defaultMessage: 'Edit',\n  },\n  manageButtonLabel: {\n    id: 'app.containers.Admin.emails.manageButtonLabel',\n    defaultMessage: 'Manage & Edit & Preview & Delete',\n  },\n  fieldSender: {\n    id: 'app.containers.Admin.emails.fieldSender',\n    defaultMessage: 'From',\n  },\n  fieldSenderTooltip: {\n    id: 'app.containers.Admin.emails.fieldSenderTooltip',\n    defaultMessage: 'Choose whom users will see as the sender of the email.',\n  },\n  fieldReplyTo: {\n    id: 'app.containers.Admin.emails.fieldReplyTo',\n    defaultMessage: 'Replies should go to',\n  },\n  fieldReplyToTooltip: {\n    id: 'app.containers.Admin.emails.fieldReplyToTooltip',\n    defaultMessage:\n      'Choose what email address should receive direct replies from users on your email.',\n  },\n  fieldTo: {\n    id: 'app.containers.Admin.emails.fieldTo',\n    defaultMessage: 'To',\n  },\n  fieldToTooltip: {\n    id: 'app.containers.Admin.emails.fieldToTooltip',\n    defaultMessage: 'Choose the group(s) of users who will receive your email.',\n  },\n  fieldSubject: {\n    id: 'app.containers.Admin.emails.fieldSubject',\n    defaultMessage: 'Email Subject',\n  },\n  fieldSubjectTooltip: {\n    id: 'app.containers.Admin.emails.fieldSubjectTooltip',\n    defaultMessage:\n      'This will be shown in the subject line of the email and in the user’s inbox overview. Make it clear and engaging.',\n  },\n  fieldBody: {\n    id: 'app.containers.Admin.emails.fieldBody',\n    defaultMessage: 'Email Message',\n  },\n  addCampaignTitle: {\n    id: 'app.containers.Admin.emails.addCampaignTitle',\n    defaultMessage: 'New campaign',\n  },\n  editCampaignTitle: {\n    id: 'app.containers.Admin.emails.editCampaignTitle',\n    defaultMessage: 'Edit campaign',\n  },\n  draft: {\n    id: 'app.containers.Admin.emails.draft',\n    defaultMessage: 'Draft',\n  },\n  sent: {\n    id: 'app.containers.Admin.emails.sent',\n    defaultMessage: 'Sent',\n  },\n  sendNowButton: {\n    id: 'app.containers.Admin.emails.sendNowButton',\n    defaultMessage: 'Send now',\n  },\n  sendTestEmailButton: {\n    id: 'app.containers.Admin.emails.sendTestEmailButton',\n    defaultMessage: 'Send a preview',\n  },\n  sendTestEmailTooltip: {\n    id: 'app.containers.Admin.emails.sendTestEmailTooltip',\n    defaultMessage:\n      'Send this draft email to the email address with which you are logged in, to check how it looks like in ‘real life’.',\n  },\n  previewSentConfirmation: {\n    id: 'app.containers.Admin.emails.previewSentConfirmation',\n    defaultMessage: 'A preview email has been sent to your email address',\n  },\n  formSaveButton: {\n    id: 'app.containers.Admin.emails.formSaveButton',\n    defaultMessage: 'Continue',\n  },\n  formErrorButton: {\n    id: 'app.containers.Admin.emails.formErrorButton',\n    defaultMessage: 'Continue',\n  },\n  formSuccessButton: {\n    id: 'app.containers.Admin.emails.formSuccessButton',\n    defaultMessage: 'Continue',\n  },\n  formSuccessMessage: {\n    id: 'app.containers.Admin.emails.formSuccessMessage',\n    defaultMessage: 'formSuccessMessage',\n  },\n  formErrorMessage: {\n    id: 'app.containers.Admin.emails.formErrorMessage',\n    defaultMessage: 'Please correct the errors above to continue',\n  },\n  formUnexpectedErrorMessage: {\n    id: 'app.containers.Admin.emails.formUnexpectedErrorMessage',\n    defaultMessage: 'Something went wrong, please try again later',\n  },\n  previewTitle: {\n    id: 'app.containers.Admin.emails.previewTitle',\n    defaultMessage: 'Preview',\n  },\n  recipientsTitle: {\n    id: 'app.containers.Admin.emails.recipientsTitle',\n    defaultMessage: 'Recipients',\n  },\n  deliveryStatus_sent: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_sent',\n    defaultMessage: 'Sent',\n  },\n  deliveryStatus_failed: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_failed',\n    defaultMessage: 'Failed',\n  },\n  deliveryStatus_accepted: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_accepted',\n    defaultMessage: 'Accepted',\n  },\n  deliveryStatus_delivered: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_delivered',\n    defaultMessage: 'Delivered',\n  },\n  deliveryStatus_opened: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_opened',\n    defaultMessage: 'Opened',\n  },\n  deliveryStatus_clicked: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_clicked',\n    defaultMessage: 'Clicked',\n  },\n  deliveryStatus_clickedTooltip: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_clickedTooltip',\n    defaultMessage:\n      'When you added one or more links to your email, the number of users who clicked a link will be shown here.',\n  },\n  tabCustom: {\n    id: 'app.containers.Admin.Campaigns.tabCustom',\n    defaultMessage: 'Custom',\n  },\n  tabAutomated: {\n    id: 'app.containers.Admin.Campaigns.tabAutomated',\n    defaultMessage: 'Automated',\n  },\n  campaignFrom: {\n    id: 'app.containers.Admin.Campaigns.campaignFrom',\n    defaultMessage: 'From:',\n  },\n  campaignTo: {\n    id: 'app.containers.Admin.Campaigns.campaignTo',\n    defaultMessage: 'To:',\n  },\n  noAccess: {\n    id: 'app.containers.Admin.Campaigns.noAccess',\n    defaultMessage:\n      \"We're sorry, but it seems like you don't have access to the emails section\",\n  },\n  deleteCampaignButton: {\n    id: 'app.containers.Admin.emails.deleteCampaignButton',\n    defaultMessage: 'Delete Campaign',\n  },\n  noCampaignsHeader: {\n    id: 'app.containers.Admin.emails.noCampaignsHeader',\n    defaultMessage: 'No custom email campaigns yet',\n  },\n  noCampaignsDescription: {\n    id: 'app.containers.Admin.emails.noCampaignsDescription',\n    defaultMessage:\n      'Custom email campaigns are emails created from scratch. Their content and recipients can be chosen and you can follow up on their results through statistics.',\n  },\n  automatedEmailCampaignsInfo: {\n    id: 'app.containers.Admin.emails.automatedEmailCampaignsInfo',\n    defaultMessage:\n      'Automated email campaigns are sent out by default and are triggered by a user’s actions. Some of them can be turned off. Others are an inherent part of user interactions with the platform and therefore can’t be turned off.',\n  },\n  allUsers: {\n    id: 'app.containers.Admin.emails.allUsers',\n    defaultMessage: 'All users',\n  },\n  groups: {\n    id: 'app.containers.Admin.emails.groups',\n    defaultMessage: 'Groups',\n  },\n  nameVariablesInfo: {\n    id: 'app.containers.Admin.emails.nameVariablesInfo',\n    defaultMessage:\n      'You can speak directly to citizens using the variables \\\\{\\\\{first_name\\\\}\\\\} \\\\{\\\\{last_name\\\\}\\\\}. E.g. \"Dear \\\\{\\\\{first_name\\\\}\\\\} \\\\{\\\\{last_name\\\\}\\\\}, ...\"',\n  },\n  changeRecipientsButton: {\n    id: 'app.containers.Admin.emails.changeRecipientsButton',\n    defaultMessage: 'Change recipients',\n  },\n  send: {\n    id: 'app.containers.Admin.emails.send',\n    defaultMessage: 'Send',\n  },\n  confirmSendHeader: {\n    id: 'app.containers.Admin.emails.confirmSendHeader',\n    defaultMessage: 'Email to all users?',\n  },\n  toAllUsers: {\n    id: 'app.containers.Admin.emails.toAllUsers',\n    defaultMessage: 'Do you want to send this email to all users?',\n  },\n  senderRecipients: {\n    id: 'app.containers.Admin.emails.senderRecipients',\n    defaultMessage: 'Sender and recipients',\n  },\n});\n","import React from 'react';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { TPermissionItem, hasPermission } from 'services/permissions';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  item: TPermissionItem | null;\n  action: string;\n  context?: any;\n}\n\ntype children = (renderProps: GetPermissionChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  permission: boolean | undefined;\n}\n\nexport type GetPermissionChildProps = boolean | undefined;\n\nexport default class GetPermission extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      permission: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { item, action, context } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ item, action, context });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          switchMap(({ item, action, context }) => {\n            if (!isNilOrError(item)) {\n              return hasPermission({ item, action, context });\n            }\n\n            return of(false);\n          })\n        )\n        .subscribe((permission) => this.setState({ permission })),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { item, action, context } = this.props;\n    this.inputProps$.next({ item, action, context });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { permission } = this.state;\n    return (children as children)(permission);\n  }\n}\n"],"sourceRoot":""}