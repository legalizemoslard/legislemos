{"version":3,"sources":["webpack:///./app/components/InitiativeForm/CollapsibleTipsAndInfo.tsx","webpack:///./app/components/InitiativeForm/TipsContent.tsx","webpack:///./app/components/InitiativeForm/PageLayout.tsx","webpack:///./app/components/UI/CollapsibleBox/index.tsx","webpack:///./app/components/UI/GoBackButton/messages.ts","webpack:///./app/services/initiatives.ts","webpack:///./app/resources/GetTopics.tsx","webpack:///./app/components/InitiativeForm/TipsBox.tsx","webpack:///./app/components/UI/GoBackButton/index.tsx"],"names":["TipsContent","React","lazy","memo","className","titleIconName","title","FormattedMessage","messages","tipsTitle","contentBackgroundColor","colors","lightGreyishBlue","Container","styled","div","theme","colorText","fontSizes","base","TipsList","ul","Tip","li","_props","elaborate","meaningfulTitle","visualise","relevantAttachments","shareSocialMedia","withTheme","main","background","props","menuHeight","footerHeight","TopLine","media","smallerThanMinTablet","Header","smallerThanMaxTablet","HeaderTitle","h1","colorMain","signedOutHeaderTitleFontSize","xxxl","signedOutHeaderTitleFontWeight","xxl","ColoredText","span","colorSecondary","TwoColumns","StyledCollapsibleTipsAndInfo","CollapsibleTipsAndInfo","biggerThanMaxTablet","StyledContentContainer","ContentContainer","TipsContainer","StyledTipsBox","TipsBox","PageLayout","clHistory","goBack","this","children","isAdmin","pageContent","onClick","header","values","styledOrgName","orgName","mode","name","PureComponent","separation","borderRadius","Title","TitleIcon","Icon","label","ContentLabel","ContentToggleButton","button","darken","ArrowIcon","Wrapper","largePhone","useState","showContent","setShowContent","handleContentToggle","useCallback","e2eId","id","classNames","in","timeout","mountOnEnter","unmountOnExit","exit","Suspense","fallback","defineMessages","defaultMessage","initiativeSlug","streams","get","apiEndpoint","API_PATH","streamParams","cacheStream","initiativeId","initiativeByIdStream","object","add","initiative","response","update","fetchAllWith","Promise","all","observable","pipe","first","toPromise","delete","authorId","GetTopics","state","topics","undefined","topicIds","code","exclude_code","sort","projectId","inputProps$","BehaviorSubject","subscriptions","distinctUntilChanged","prev","next","isEqual","switchMap","queryParameters","projectTopicsStream","map","data","filter","topic","relationships","combineLatest","topicId","topicByIdStream","isNilOrError","length","of","topicsStream","subscribe","setState","forEach","subscription","unsubscribe","Component","TipsTitle","h2","large","GoBackButton","buttonStyle","icon","size","padding","text"],"mappings":"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","file":"24.6888b99f4dda844d8e47.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\n// components\nimport CollapsibleBox from 'components/UI/CollapsibleBox';\nconst TipsContent = React.lazy(() => import('./TipsContent'));\n\n// styling\nimport { colors } from 'utils/styleUtils';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nexport interface Props {\n  className?: string;\n}\n\nconst CollapsibleTipsAndInfo = memo<Props>(({ className }) => {\n  return (\n    <CollapsibleBox\n      className={className}\n      titleIconName=\"info\"\n      title={<FormattedMessage {...messages.tipsTitle} />}\n      contentBackgroundColor={colors.lightGreyishBlue}\n    >\n      <TipsContent />\n    </CollapsibleBox>\n  );\n});\n\nexport default CollapsibleTipsAndInfo;\n","import React, { memo } from 'react';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// styles\nimport styled, { withTheme } from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: 20px;\n  padding: 20px;\n`;\n\nconst TipsList = styled.ul`\n  padding: 0;\n`;\n\nconst Tip = styled.li`\n  margin-bottom: 20px;\n`;\n\ninterface Props {\n  theme: any;\n}\n\nconst TipsContent = memo<Props>((_props) => {\n  return (\n    <Container>\n      <TipsList>\n        <Tip>\n          <FormattedMessage {...messages.elaborate} />\n        </Tip>\n        <Tip>\n          <FormattedMessage {...messages.meaningfulTitle} />\n        </Tip>\n        <Tip>\n          <FormattedMessage {...messages.visualise} />\n        </Tip>\n        <Tip>\n          <FormattedMessage {...messages.relevantAttachments} />\n        </Tip>\n        <Tip>\n          <FormattedMessage {...messages.shareSocialMedia} />\n        </Tip>\n      </TipsList>\n    </Container>\n  );\n});\n\nexport default withTheme(TipsContent);\n","import React from 'react';\n\n// libraries\nimport clHistory from 'utils/cl-router/history';\n\n// components\nimport GoBackButton from 'components/UI/GoBackButton';\nimport TipsBox from './TipsBox';\nimport ContentContainer from 'components/ContentContainer';\nimport CollapsibleTipsAndInfo from './CollapsibleTipsAndInfo';\nimport Fragment from 'components/Fragment';\n\n// style\nimport { media, colors, fontSizes } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\n// intl\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.main`\n  background: ${colors.background};\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  width: 100%;\n  position: relative;\n`;\n\nconst TopLine = styled.div`\n  width: 100%;\n  padding: 30px 40px 0;\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `}\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 30px;\n  padding-bottom: 60px;\n  padding-left: 30px;\n  padding-right: 30px;\n\n  ${media.smallerThanMaxTablet`\n    padding-top: 50px;\n    padding-bottom: 40px;\n  `}\n`;\n\nconst HeaderTitle: any = styled.h1`\n  width: 100%;\n  max-width: 600px;\n  color: ${({ theme }) => theme.colorMain};\n  font-size: ${({ theme }) =>\n    theme.signedOutHeaderTitleFontSize || fontSizes.xxxl + 1}px;\n  line-height: normal;\n  font-weight: ${({ theme }) => theme.signedOutHeaderTitleFontWeight || 600};\n  text-align: center;\n  margin: 0;\n  padding: 0;\n\n  ${media.smallerThanMaxTablet`\n    font-size: ${fontSizes.xxl}px;\n  `}\n`;\n\nconst ColoredText = styled.span`\n  color: ${({ theme }) => theme.colorSecondary};\n`;\n\nconst TwoColumns = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 30px 0 0;\n\n  ${media.smallerThanMaxTablet`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  `}\n`;\n\nconst StyledCollapsibleTipsAndInfo = styled(CollapsibleTipsAndInfo)`\n  max-width: 620px;\n  margin-bottom: 20px;\n\n  ${media.biggerThanMaxTablet`\n    display: none;\n  `}\n`;\n\nconst StyledContentContainer = styled(ContentContainer)`\n  ${media.smallerThanMinTablet`\n    padding-left: 0;\n    padding-right: 0;\n  `}\n`;\n\nconst TipsContainer = styled.div`\n  position: relative;\n  margin-left: 25px;\n`;\n\nconst StyledTipsBox = styled(TipsBox)`\n  position: sticky;\n  top: calc(${({ theme }) => theme.menuHeight}px + 50px);\n  max-width: 550px;\n  width: 100%;\n  padding: 40px 50px;\n  margin-bottom: 110px;\n\n  ${media.smallerThanMaxTablet`\n    display: none;\n  `}\n`;\n\ninterface Props {\n  children: JSX.Element | null;\n  className?: string;\n  isAdmin: boolean;\n}\n\nexport default class PageLayout extends React.PureComponent<Props> {\n  goBack = () => {\n    clHistory.goBack();\n  };\n\n  render() {\n    const { children, className, isAdmin } = this.props;\n\n    const pageContent = (\n      <TwoColumns>\n        <div>\n          <StyledCollapsibleTipsAndInfo />\n          {children}\n        </div>\n        <TipsContainer>\n          <StyledTipsBox />\n        </TipsContainer>\n      </TwoColumns>\n    );\n    return (\n      <Container className={className}>\n        <TopLine>\n          <GoBackButton onClick={this.goBack} />\n        </TopLine>\n        <Header>\n          <HeaderTitle>\n            <FormattedMessage\n              {...messages.header}\n              values={{\n                styledOrgName: (\n                  <ColoredText>\n                    <FormattedMessage {...messages.orgName} />\n                  </ColoredText>\n                ),\n              }}\n            />\n          </HeaderTitle>\n        </Header>\n        <StyledContentContainer mode=\"page\">\n          {isAdmin ? (\n            pageContent\n          ) : (\n            <Fragment name=\"external-proposal-form\">{pageContent}</Fragment>\n          )}\n        </StyledContentContainer>\n      </Container>\n    );\n  }\n}\n","import React, { memo, useCallback, useState, Suspense } from 'react';\n\n// components\nimport { Icon, IconNames } from 'cl2-component-library';\n\n// animations\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes, media } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\nconst timeout = 300;\n\nconst Container = styled.div`\n  background: #fff;\n  border: 1px solid ${colors.separation};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TitleIcon = styled(Icon)`\n  flex: 0 0 16px;\n  width: 16px;\n  height: 23px;\n  fill: ${colors.label};\n  margin-right: 13px;\n\n  ${media.smallerThanMinTablet`\n    flex: 0 0 14px;\n    width: 14px;\n    height: 20px;\n  `}\n`;\n\nconst ContentLabel = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  margin-right: 6px;\n  text-align: left;\n  transition: all 100ms ease-out;\n`;\n\nconst ContentToggleButton = styled.button`\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  padding-left: 18px;\n  padding-right: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: 24px;\n  font-weight: 600;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  &:hover {\n    ${ContentLabel} {\n      color: ${darken(0.2, colors.label)};\n    }\n  }\n`;\n\nconst ArrowIcon = styled(Icon)`\n  flex: 0 0 13px;\n  width: 13px;\n  height: 13px;\n  fill: ${colors.label};\n  transform: rotate(90deg);\n  transition: all 0.2s linear;\n\n  &.open {\n    transform: rotate(0deg);\n  }\n`;\n\nconst Wrapper = styled.div<{ contentBackgroundColor?: string }>`\n  position: relative;\n  overflow: hidden;\n  z-index: 2;\n  padding: 20px;\n  background-color: ${(props) => props.contentBackgroundColor || '#fff'};\n  margin-top: 1px;\n\n  ${media.largePhone`\n    padding: 30px 20px;\n  `}\n\n  &.content-enter {\n    height: 0;\n    opacity: 0;\n\n    &.content-enter-active {\n      height: 100%;\n      opacity: 1;\n      transition: all ${timeout}ms ease-out;\n    }\n  }\n\n  &.content-exit {\n    height: 100%;\n    opacity: 1;\n\n    &.content-exit-active {\n      height: 0;\n      opacity: 0;\n      transition: all ${timeout}ms ease-out;\n    }\n  }\n`;\n\nexport interface Props {\n  className?: string;\n  titleIconName?: IconNames;\n  title: string | JSX.Element;\n  contentBackgroundColor?: string;\n  e2eId?: string;\n  /* children should be lazy-loaded. Search code for examples */\n  children: React.ReactNode;\n}\n\nconst CollapsibleBox = memo<Props>((props) => {\n  const [showContent, setShowContent] = useState<boolean>(false);\n\n  const handleContentToggle = useCallback(() => {\n    setShowContent(!showContent);\n  }, [showContent]);\n\n  const {\n    className,\n    titleIconName,\n    title,\n    children,\n    contentBackgroundColor,\n    e2eId,\n  } = props;\n\n  return (\n    <Container className={className}>\n      <ContentToggleButton\n        id={e2eId || ''}\n        aria-expanded={showContent}\n        onClick={handleContentToggle}\n      >\n        <Title>\n          {titleIconName && <TitleIcon name={titleIconName} />}\n          <ContentLabel>{title}</ContentLabel>\n        </Title>\n        <ArrowIcon name=\"dropdown\" className={showContent ? 'open' : ''} />\n      </ContentToggleButton>\n      <CSSTransition\n        classNames=\"content\"\n        in={showContent}\n        timeout={timeout}\n        mountOnEnter={true}\n        unmountOnExit={true}\n        exit={true}\n      >\n        <Wrapper contentBackgroundColor={contentBackgroundColor}>\n          <Suspense fallback={null}>{children}</Suspense>\n        </Wrapper>\n      </CSSTransition>\n    </Container>\n  );\n});\n\nexport default CollapsibleBox;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  goBack: {\n    id: 'app.components.GoBackButton.group.edit.goBack',\n    defaultMessage: 'Go back',\n  },\n});\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { IRelationship, Multiloc, ImageSizes, ILinks } from 'typings';\nimport { first } from 'rxjs/operators';\nimport { get } from 'lodash-es';\n\nexport type InitiativePublicationStatus =\n  | 'draft'\n  | 'published'\n  | 'archived'\n  | 'spam';\n\nexport type IInitiativeAction =\n  | 'posting_initiative'\n  | 'commenting_initiative'\n  | 'voting_initiative'\n  | 'comment_voting_initiative';\n\nexport interface IInitiativeData {\n  id: string;\n  type: 'initiatives';\n  attributes: {\n    title_multiloc: Multiloc;\n    body_multiloc: Multiloc;\n    author_name: string;\n    slug: string;\n    publication_status: InitiativePublicationStatus;\n    upvotes_count: number;\n    comments_count: number;\n    location_point_geojson: GeoJSON.Point;\n    location_description: string;\n    budget: number | null;\n    created_at: string;\n    updated_at: string;\n    published_at: string;\n    header_bg: ImageSizes;\n    expires_at: string;\n  };\n  relationships: {\n    topics: {\n      data: IRelationship[];\n    };\n    initiative_images: {\n      data: IRelationship[];\n    };\n    author: {\n      data: IRelationship | null;\n    };\n    assignee: {\n      data: IRelationship | null;\n    };\n    initiative_status?: {\n      data: IRelationship | null;\n    };\n    user_vote?: {\n      data: IRelationship | null;\n    };\n  };\n}\n\nexport interface IInitiative {\n  data: IInitiativeData;\n}\n\nexport interface IInitiatives {\n  data: IInitiativeData[];\n  links: ILinks;\n}\n\nexport interface IInitiativeAdd {\n  author_id?: string | null;\n  assignee_id?: string | null;\n  initiative_status_id?: string | null;\n  publication_status?: InitiativePublicationStatus;\n  title_multiloc?: Multiloc;\n  body_multiloc?: Multiloc;\n  topic_ids?: string[] | null;\n  area_ids?: string[] | null;\n  phase_ids?: string[] | null;\n  location_point_geojson?: GeoJSON.Point | null;\n  location_description?: string | null;\n}\nexport interface IInitiativesCount {\n  count: number;\n}\n\nexport interface IInitiativesFilterCounts {\n  initiative_status_id: {\n    [key: string]: number;\n  };\n  area_id: {\n    [key: string]: number;\n  };\n  topic_id: {\n    [key: string]: number;\n  };\n  total: number;\n}\n\nexport interface IGeotaggedInitiativeData {\n  id: string;\n  type: string;\n  attributes: {\n    title_multiloc: Multiloc;\n    location_point_geojson: GeoJSON.Point;\n    location_description: string;\n  };\n}\n\nexport interface IInitiativeLinks {\n  self: string;\n  first: string;\n  prev: string;\n  next: string;\n  last: string;\n}\n\nexport interface InitiativeActivity {\n  id: string;\n  type: 'activity';\n  attributes: {\n    action: string;\n    acted_at: string;\n    change: string[] | { [key: string]: string }[] | null;\n  };\n  relationships: {\n    user: { data: IRelationship };\n  };\n}\n\nexport type InitiativeDisabledReason =\n  | 'not_permitted'\n  | 'not_verified'\n  | 'not_signed_in';\n\nexport function initiativeByIdStream(initiativeId: string) {\n  return streams.get<IInitiative>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}`,\n  });\n}\n\nexport function initiativeBySlugStream(initiativeSlug: string) {\n  return streams.get<IInitiative>({\n    apiEndpoint: `${API_PATH}/initiatives/by_slug/${initiativeSlug}`,\n  });\n}\n\nexport function initiativesStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IInitiatives>({\n    apiEndpoint: `${API_PATH}/initiatives`,\n    ...streamParams,\n  });\n}\n\nexport function initiativesFilterCountsStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInitiativesFilterCounts>({\n    apiEndpoint: `${API_PATH}/initiatives/filter_counts`,\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n\nexport function initiativesMarkersStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<{\n    data: IGeotaggedInitiativeData[];\n    links: IInitiativeLinks;\n  }>({\n    apiEndpoint: `${API_PATH}/initiatives/as_markers`,\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n\nexport async function addInitiative(object: IInitiativeAdd) {\n  const response = await streams.add<IInitiative>(`${API_PATH}/initiatives`, {\n    initiative: object,\n  });\n  return response;\n}\n\nexport async function updateInitiative(\n  initiativeId: string,\n  object: Partial<IInitiativeAdd>\n) {\n  const response = await streams.update<IInitiative>(\n    `${API_PATH}/initiatives/${initiativeId}`,\n    initiativeId,\n    { initiative: object }\n  );\n  streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/stats/initiatives_count`,\n      `${API_PATH}/initiatives`,\n      `${API_PATH}/initiatives/${initiativeId}/activities`,\n    ],\n  });\n  return response;\n}\n\nexport async function deleteInitiative(initiativeId: string) {\n  const [initiative, response] = await Promise.all([\n    initiativeByIdStream(initiativeId).observable.pipe(first()).toPromise(),\n    streams.delete(`${API_PATH}/initiatives/${initiativeId}`, initiativeId),\n  ]);\n\n  const authorId = get(initiative, 'relationships.author.data.id', false);\n\n  streams.fetchAllWith({\n    apiEndpoint: authorId\n      ? [`${API_PATH}/users/${authorId}/initiatives_count`]\n      : [],\n  });\n\n  return response;\n}\n\nexport interface IInitiativeAllowedTransitions {\n  [key: string]: {\n    feedback_needed: boolean;\n  };\n}\n\nexport function initiativeAllowedTransitionsStream(initiativeId: string) {\n  return streams.get<IInitiativeAllowedTransitions>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}/allowed_transitions`,\n  });\n}\n\nexport interface IInitiativesFilterCounts {\n  initiative_status_id: {\n    [key: string]: number;\n  };\n  area_id: {\n    [key: string]: number;\n  };\n  topic_id: {\n    [key: string]: number;\n  };\n  total: number;\n}\n\nexport function initiativeActivities(initiativeId: string) {\n  return streams.get<{ data: InitiativeActivity[] }>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}/activities`,\n  });\n}\n\nexport type IInitiativeActionDescriptors = {\n  [key in IInitiativeAction]: {\n    enabled: boolean;\n    disabled_reason: InitiativeDisabledReason | null;\n  };\n};\n\nexport function getInitiativeActionDescriptors() {\n  return streams.get<IInitiativeActionDescriptors>({\n    apiEndpoint: `${API_PATH}/action_descriptors/initiatives`,\n  });\n}\n","import React from 'react';\nimport { isEqual } from 'lodash-es';\nimport { Subscription, BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, map } from 'rxjs/operators';\nimport {\n  ITopicData,\n  topicByIdStream,\n  topicsStream,\n  Code,\n} from 'services/topics';\nimport { projectTopicsStream } from 'services/projectTopics';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  // Don't use projectId, ids or the query parameters (code, exclude_code, sort) together\n  // Only one of the three at a time.\n  projectId?: string;\n  topicIds?: string[];\n  code?: Code;\n  exclude_code?: Code;\n  sort?: 'new' | 'custom';\n}\n\ntype children = (renderProps: GetTopicsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  topics: (ITopicData | Error)[] | undefined | null | Error;\n}\n\nexport type GetTopicsChildProps =\n  | (ITopicData | Error)[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetTopics extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      topics: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => isEqual(prev, next)),\n          switchMap(({ topicIds, code, exclude_code, sort, projectId }) => {\n            const queryParameters = { code, exclude_code, sort };\n\n            if (projectId) {\n              return projectTopicsStream(projectId).observable.pipe(\n                map((topics) =>\n                  topics.data\n                    .filter((topic) => topic)\n                    .map((topic) => topic.relationships.topic.data.id)\n                ),\n                switchMap((topicIds) => {\n                  return combineLatest(\n                    topicIds.map((topicId) =>\n                      topicByIdStream(topicId).observable.pipe(\n                        map((topic) =>\n                          !isNilOrError(topic) ? topic.data : topic\n                        )\n                      )\n                    )\n                  );\n                })\n              );\n            } else if (topicIds) {\n              if (topicIds.length > 0) {\n                return combineLatest(\n                  topicIds.map((id) => {\n                    return topicByIdStream(id).observable.pipe(\n                      map((topic) =>\n                        !isNilOrError(topic) ? topic.data : topic\n                      )\n                    );\n                  })\n                );\n              }\n\n              return of(null);\n            } else {\n              return topicsStream({ queryParameters }).observable.pipe(\n                map((topics) => topics.data)\n              );\n            }\n          })\n        )\n        .subscribe((topics) => {\n          this.setState({ topics });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n    this.inputProps$.next({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { topics } = this.state;\n    return (children as children)(topics);\n  }\n}\n","import React, { memo } from 'react';\n\n// components\nimport TipsContent from './TipsContent';\n\n// intl\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// style\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport styled from 'styled-components';\nimport { darken } from 'polished';\n\ninterface Props {\n  className?: string;\n}\n\nconst Container = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius};\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: 20px;\n  border: 1px solid #e7e7e7;\n  background: ${darken(0.045, colors.background)};\n`;\n\nconst TipsTitle = styled.h2`\n  font-size: ${fontSizes.large}px;\n  line-height: 24px;\n  font-weight: 600;\n  margin-bottom: 0;\n`;\n\nconst TipsBox = memo(({ className }: Props) => {\n  return (\n    <Container className={`${className} e2e-tips`}>\n      <TipsTitle>\n        <FormattedMessage {...messages.tipsTitle} />\n      </TipsTitle>\n      <TipsContent />\n    </Container>\n  );\n});\n\nexport default TipsBox;\n","import React, { PureComponent, FormEvent } from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/UI/Button';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.div`\n  display: inline-block;\n`;\n\ntype Props = {\n  onClick: (arg: FormEvent) => void;\n  className?: string;\n};\n\ninterface State {}\n\nexport default class GoBackButton extends PureComponent<Props, State> {\n  render() {\n    const { onClick, className } = this.props;\n\n    return (\n      <Container className={className || ''}>\n        <Button\n          onClick={onClick}\n          buttonStyle=\"text\"\n          icon=\"arrow-back\"\n          size=\"2\"\n          padding=\"0px\"\n          text={<FormattedMessage {...messages.goBack} />}\n        />\n      </Container>\n    );\n  }\n}\n"],"sourceRoot":""}