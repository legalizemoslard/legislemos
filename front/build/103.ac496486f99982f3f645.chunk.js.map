{"version":3,"sources":["webpack:///./app/containers/IdeasIndexPage/messages.ts","webpack:///./app/components/CityLogoSection/index.tsx","webpack:///./app/containers/IdeasIndexPage/IdeaIndexMeta.tsx","webpack:///./app/components/CityLogoSection/messages.ts","webpack:///./app/components/PageMeta/index.tsx","webpack:///./app/containers/IdeasIndexPage/index.tsx","webpack:///./app/components/IdeaCards/index.tsx"],"names":["defineMessages","inputsPageTitle","id","defaultMessage","a11y_IdeasListTitle","loadMore","loading","inputsIndexMetaTitle","inputsIndexMetaDescription","Container","styled","div","LogoLink","a","TenantLogo","img","CityLogoSection","memo","formatMessage","intl","locale","appConfiguration","isNilOrError","currentTenantLogo","data","attributes","logo","medium","tenantSite","settings","core","organization_site","footerLocale","title","messages","iframeTitle","name","href","target","src","alt","injectIntl","titleMessage","descriptionMessage","PageMeta","React","authUser","tenantLocales","location","window","ideasIndexTitle","ideasIndexDescription","Helmet","isError","unread_notifications","content","property","main","props","theme","menuHeight","footerHeight","colors","background","media","smallerThanMaxTablet","mobileMenuHeight","mobileTopBarHeight","StyledContentContainer","ContentContainer","smallerThanMinTablet","PageTitle","h1","colorText","fontSizes","xxxxl","xxxl","isRtl","maxWidth","FormattedMessage","type","allowProjectsFilter","projectPublicationStatus","showViewToggle","showFiltersSidebar","invisibleTitleMessage","WithFiltersSidebar","lazy","WithoutFiltersSidebar","className","ScreenReaderOnly","tagName","Suspense","fallback"],"mappings":"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","file":"103.ac496486f99982f3f645.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  inputsPageTitle: {\n    id: 'app.containers.IdeasIndexPage.inputsPageTitle',\n    defaultMessage: 'Inputs',\n  },\n  a11y_IdeasListTitle: {\n    id: 'app.containers.IdeasIndexPage.a11y_IdeasListTitle',\n    defaultMessage: 'All inputs posted in {orgName}',\n  },\n  loadMore: {\n    id: 'app.containers.IdeasIndexPage.loadMore',\n    defaultMessage: 'Load more...',\n  },\n  loading: {\n    id: 'app.containers.IdeasIndexPage.loading',\n    defaultMessage: 'Loading...',\n  },\n  inputsIndexMetaTitle: {\n    id: 'app.containers.IdeasIndexPage.inputsIndexMetaTitle',\n    defaultMessage: 'All inputs | {orgName}',\n  },\n  inputsIndexMetaDescription: {\n    id: 'app.containers.IdeasIndexPage.inputsIndexMetaDescription',\n    defaultMessage:\n      'Explore all inputs posted on the participation platform of {orgName}.',\n  },\n});\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Fragment from 'components/Fragment';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\nimport messages from './messages';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\n\n// style\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-right: 20px;\n  padding-left: 20px;\n  padding-top: 110px;\n  padding-bottom: 130px;\n  background: #fff;\n  width: 100%;\n`;\n\nconst LogoLink = styled.a`\n  cursor: pointer;\n`;\n\nconst TenantLogo = styled.img`\n  height: 50px;\n  margin-bottom: 20px;\n`;\n\ninterface Props {}\n\nconst CityLogoSection = memo(\n  ({ intl: { formatMessage } }: Props & InjectedIntlProps) => {\n    const locale = useLocale();\n    const appConfiguration = useAppConfiguration();\n\n    if (!isNilOrError(appConfiguration)) {\n      const currentTenantLogo =\n        appConfiguration.data.attributes.logo?.medium || null;\n      const tenantSite =\n        appConfiguration.data.attributes.settings.core.organization_site;\n      const footerLocale = `footer-city-logo-${locale}`;\n\n      if (currentTenantLogo) {\n        return (\n          <Fragment\n            title={formatMessage(messages.iframeTitle)}\n            name={footerLocale}\n          >\n            <Container id=\"hook-footer-logo\">\n              {tenantSite ? (\n                <LogoLink href={tenantSite} target=\"_blank\">\n                  <TenantLogo src={currentTenantLogo} alt=\"Organization logo\" />\n                </LogoLink>\n              ) : (\n                <TenantLogo src={currentTenantLogo} alt=\"Organization logo\" />\n              )}\n            </Container>\n          </Fragment>\n        );\n      }\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(CityLogoSection);\n","import React from 'react';\nimport PageMeta from 'components/PageMeta';\nimport messages from './messages';\n\nexport default () => (\n  <PageMeta\n    titleMessage={messages.inputsIndexMetaTitle}\n    descriptionMessage={messages.inputsIndexMetaDescription}\n  />\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  iframeTitle: {\n    id: 'app.components.CityLogoSection.iframeTitle',\n    defaultMessage: 'More information about {orgName}',\n  },\n});\n","// libraries\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { isError } from 'lodash-es';\n\n// i18n\nimport { injectIntl, MessageDescriptor } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// hooks\nimport useAuthUser from 'hooks/useAuthUser';\nimport useAppConfigurationLocales from 'hooks/useAppConfigurationLocales';\n\n// utils\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\ninterface Props {\n  titleMessage: MessageDescriptor;\n  descriptionMessage: MessageDescriptor;\n}\n\nconst PageMeta = React.memo<Props & InjectedIntlProps>(\n  ({ intl, titleMessage, descriptionMessage }) => {\n    const authUser = useAuthUser();\n    const tenantLocales = useAppConfigurationLocales();\n\n    const { formatMessage } = intl;\n    const { location } = window;\n    const ideasIndexTitle = formatMessage(titleMessage);\n    const ideasIndexDescription = formatMessage(descriptionMessage);\n\n    return (\n      <Helmet>\n        <title>\n          {`\n          ${\n            authUser &&\n            !isError(authUser) &&\n            authUser.attributes.unread_notifications\n              ? `(${authUser.attributes.unread_notifications}) `\n              : ''\n          }\n          ${ideasIndexTitle}`}\n        </title>\n        {getAlternateLinks(tenantLocales)}\n        {getCanonicalLink()}\n        <meta name=\"title\" content={ideasIndexTitle} />\n        <meta name=\"description\" content={ideasIndexDescription} />\n        <meta property=\"og:title\" content={ideasIndexTitle} />\n        <meta property=\"og:description\" content={ideasIndexDescription} />\n        <meta property=\"og:url\" content={location.href} />\n      </Helmet>\n    );\n  }\n);\n\nexport default injectIntl(PageMeta);\n","import React, { memo } from 'react';\n\n// components\nimport ContentContainer from 'components/ContentContainer';\nimport IdeaCards from 'components/IdeaCards';\nimport CityLogoSection from 'components/CityLogoSection';\nimport IdeasIndexMeta from './IdeaIndexMeta';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// style\nimport styled from 'styled-components';\nimport { media, fontSizes, colors, isRtl } from 'utils/styleUtils';\n\nconst Container = styled.main`\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  background: ${colors.background};\n\n  ${media.smallerThanMaxTablet`\n    min-height: calc(100vh - ${(props) => props.theme.mobileMenuHeight}px - ${(\n    props\n  ) => props.theme.mobileTopBarHeight}px);\n  `}\n`;\n\nconst StyledContentContainer = styled(ContentContainer)`\n  flex: 1 1 auto;\n  padding-top: 60px;\n  padding-bottom: 100px;\n\n  ${media.smallerThanMinTablet`\n    padding-top: 30px;\n  `}\n`;\n\nconst PageTitle = styled.h1`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.xxxxl}px;\n  line-height: normal;\n  font-weight: 500;\n  text-align: center;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 35px;\n\n  ${media.smallerThanMaxTablet`\n    text-align: left;\n    margin-bottom: 20px;\n  `}\n\n  ${media.smallerThanMinTablet`\n    font-size: ${fontSizes.xxxl}px;\n  `}\n\n ${isRtl`\n  ${media.smallerThanMaxTablet`\n    text-align: right;\n  `}\n `}\n`;\n\nexport default memo(() => (\n  <>\n    <IdeasIndexMeta />\n    <Container>\n      <StyledContentContainer maxWidth=\"100%\">\n        <PageTitle>\n          <FormattedMessage {...messages.inputsPageTitle} />\n        </PageTitle>\n        <IdeaCards\n          type=\"load-more\"\n          allowProjectsFilter={true}\n          projectPublicationStatus=\"published\"\n          showViewToggle={false}\n          showFiltersSidebar={true}\n          invisibleTitleMessage={messages.a11y_IdeasListTitle}\n        />\n      </StyledContentContainer>\n      <CityLogoSection />\n    </Container>\n  </>\n));\n","import React, { lazy, Suspense, memo } from 'react';\n\n// components\nconst WithFiltersSidebar = lazy(() => import('./WithFiltersSidebar'));\nconst WithoutFiltersSidebar = lazy(() => import('./WithoutFiltersSidebar'));\n\n// styling\nimport styled from 'styled-components';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// typings\nimport {\n  ParticipationMethod,\n  IdeaDefaultSortMethod,\n} from 'services/participationContexts';\nimport { InputProps as GetIdeasInputProps } from 'resources/GetIdeas';\nimport { MessageDescriptor, IParticipationContextType } from 'typings';\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\ninterface Props extends GetIdeasInputProps {\n  showViewToggle?: boolean | undefined;\n  defaultView?: 'card' | 'map' | null | undefined;\n  defaultSortingMethod?: IdeaDefaultSortMethod;\n  participationMethod?: ParticipationMethod | null;\n  participationContextId?: string | null;\n  participationContextType?: IParticipationContextType | null;\n  allowProjectsFilter?: boolean;\n  showFiltersSidebar?: boolean;\n  className?: string;\n  invisibleTitleMessage?: MessageDescriptor;\n}\n\nconst IdeaCards = memo<Props>(\n  ({ className, invisibleTitleMessage, ...props }) => {\n    return (\n      <Container className={className || ''}>\n        {invisibleTitleMessage && (\n          <ScreenReaderOnly>\n            <FormattedMessage tagName=\"h2\" {...invisibleTitleMessage} />\n          </ScreenReaderOnly>\n        )}\n        <Suspense fallback={null}>\n          {props.showFiltersSidebar ? (\n            <WithFiltersSidebar {...props} />\n          ) : (\n            <WithoutFiltersSidebar {...props} />\n          )}\n        </Suspense>\n      </Container>\n    );\n  }\n);\n\nexport default IdeaCards;\n"],"sourceRoot":""}