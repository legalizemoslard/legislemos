{"version":3,"sources":["webpack:///./app/components/FilterBoxes/StatusFilter.tsx","webpack:///./app/components/FiltersModal/messages.ts","webpack:///./app/components/FilterBoxes/TopicsFilter.tsx","webpack:///./app/components/FilterBoxes/styles.ts","webpack:///./app/components/FilterBoxes/messages.ts","webpack:///./app/components/FiltersModal/TopBar.tsx","webpack:///./app/components/UI/FullscreenModal/index.tsx","webpack:///./app/components/FiltersModal/BottomBar.tsx"],"names":["Container","styled","div","defaultCardStyle","Count","span","colors","label","fontSizes","base","isRtl","CloseIcon","Icon","StatusesContainer","Status","button","theme","colorText","colorSecondary","darken","AllStatus","memo","type","statuses","filterCounts","selectedStatusId","onChange","className","handleOnClick","useCallback","event","preventDefault","statusId","currentTarget","dataset","id","removeFocus","isNilOrError","length","allPostsCount","total","allFilterSelected","Header","Title","FormattedMessage","messages","statusTitle","onMouseDown","onClick","all","ScreenReaderOnly","a11y_numberOfInputs","values","inputsCount","a11y_numberOfInitiatives","initiativeCount","a11y_allFilterSelected","map","status","filterPostCount","get","isFilterSelected","key","value","attributes","title_multiloc","capitalize","title","a11y_removeFilter","name","a11y_selectedFilter","filter","defineMessages","filters","defaultMessage","resetFilters","a11y_closeFilterPanel","Topics","Topic","small","separationDark","props","borderRadius","TopicsFilter","topics","selectedTopicIds","localize","topicId","output","includes","selectedTopicId","selectedTopics","topic","numberOfSelectedTopics","selectedTopicNames","join","topicsTitle","isError","a11y_selectedTopicFilters","areas","mobileTopBarHeight","lighten","TopBarInner","media","biggerThanMinTablet","Left","Center","h1","medium","Right","CloseButton","onClose","onReset","slideInOutTimeout","slideInOutEasing","windowHeight","menuHeight","smallerThanMaxTablet","mobileMenuHeight","StyledFocusOn","FocusOn","Content","useCapture","FullscreenModal","locale","url","goBackUrl","pathname","removeLocale","window","location","origin","history","pushState","path","addEventListener","handlePopstateEvent","handleKeypress","unlisten","clHistory","listen","close","trackPage","modal","removeEventListener","href","isFunction","eventEmitter","emit","state","innerHeight","this","subscription","fromEvent","pipe","debounceTime","distinctUntilChanged","subscribe","target","height","setState","prevProps","opened","openModal","cleanup","unsubscribe","children","topBar","bottomBar","animateInOut","navbarRef","mobileNavbarRef","shards","compact","modalPortalElement","document","getElementById","modalContent","autoFocus","createPortal","classNames","in","timeout","enter","exit","mountOnEnter","unmountOnExit","PureComponent","Data","adopt","inputProps","dataProps","buttonText","fullWidth"],"mappings":"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","file":"26.7427b9609be0250a735b.chunk.js","sourcesContent":["import React, { memo, useCallback, MouseEvent } from 'react';\nimport { capitalize, get } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// components\nimport T from 'components/T';\nimport { Icon } from 'cl2-component-library';\n\n// styling\nimport styled from 'styled-components';\nimport { fontSizes, colors, defaultCardStyle, isRtl } from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { darken } from 'polished';\nimport { Header, Title } from './styles';\n\n// typings\nimport { IIdeasFilterCounts } from 'services/ideas';\nimport { IIdeaStatusData } from 'services/ideaStatuses';\nimport { IInitiativesFilterCounts } from 'services/initiatives';\nimport { IInitiativeStatusData } from 'services/initiativeStatuses';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding-top: 25px;\n  padding-bottom: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  ${defaultCardStyle};\n`;\n\nconst Count = styled.span`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 300;\n  transition: all 80ms ease-out;\n  margin-left: auto;\n\n  ${isRtl`\n    margin-left: 0;\n    margin-right: auto;\n  `}\n`;\n\nconst CloseIcon = styled(Icon)`\n  width: 12px;\n  height: 12px;\n  fill: #fff;\n  margin-left: auto;\n\n  ${isRtl`\n    margin-left: 0;\n    margin-right: auto;\n  `}\n`;\n\nconst StatusesContainer = styled.div``;\n\nconst Status = styled.button`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: normal;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 18px;\n  padding-right: 18px;\n  padding-top: 7px;\n  padding-bottom: 7px;\n  margin: 0px;\n  margin-right: 10px;\n  margin-bottom: 6px;\n  cursor: pointer;\n  border-radius: 5px;\n  user-select: none;\n  transition: all 80ms ease-out;\n  width: 100%;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n\n  &:not(.selected):hover {\n    background: rgba(132, 147, 158, 0.15);\n  }\n\n  &.selected {\n    color: #fff;\n    background: ${({ theme }) => theme.colorSecondary};\n\n    &:hover {\n      background: ${({ theme }) => darken(0.15, theme.colorSecondary)};\n    }\n\n    ${Count} {\n      color: #fff;\n    }\n  }\n`;\n\nconst AllStatus = styled(Status)``;\n\ninterface Props {\n  type: 'idea' | 'initiative';\n  statuses: (IIdeaStatusData | IInitiativeStatusData)[];\n  filterCounts:\n    | IIdeasFilterCounts\n    | IInitiativesFilterCounts\n    | null\n    | undefined;\n  selectedStatusId: string | null | undefined;\n  onChange: (arg: string | null) => void;\n  className?: string;\n}\n\nconst StatusFilter = memo<Props>(\n  ({ type, statuses, filterCounts, selectedStatusId, onChange, className }) => {\n    const handleOnClick = useCallback(\n      (event: MouseEvent<HTMLElement>) => {\n        event.preventDefault();\n        const statusId = event.currentTarget.dataset.id as string;\n        const nextSelectedStatusId =\n          selectedStatusId !== statusId ? statusId : null;\n        onChange(nextSelectedStatusId);\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [selectedStatusId]\n    );\n\n    const removeFocus = useCallback((event: MouseEvent<HTMLElement>) => {\n      event.preventDefault();\n    }, []);\n\n    if (!isNilOrError(statuses) && statuses.length > 0) {\n      const allPostsCount =\n        filterCounts && filterCounts.total ? filterCounts.total : 0;\n      const allFilterSelected = !selectedStatusId;\n\n      return (\n        <Container className={`e2e-statuses-filters ${className}`}>\n          <Header>\n            <Title>\n              <FormattedMessage {...messages.statusTitle} />\n            </Title>\n          </Header>\n\n          <StatusesContainer>\n            <AllStatus\n              data-id={null}\n              onMouseDown={removeFocus}\n              onClick={handleOnClick}\n              className={allFilterSelected ? 'selected' : ''}\n            >\n              <FormattedMessage {...messages.all} />\n              <Count aria-hidden>{allPostsCount}</Count>\n              <ScreenReaderOnly>\n                {/* Pronounce number of ideas/initiatives of All status when focus/hover it */}\n                {type === 'idea' && (\n                  <FormattedMessage\n                    {...messages.a11y_numberOfInputs}\n                    values={{ inputsCount: allPostsCount }}\n                  />\n                )}\n                {type === 'initiative' && (\n                  <FormattedMessage\n                    {...messages.a11y_numberOfInitiatives}\n                    values={{ initiativeCount: allPostsCount }}\n                  />\n                )}\n              </ScreenReaderOnly>\n              <ScreenReaderOnly aria-live=\"polite\">\n                {/*\n              When we focus a selected status filter and hit enter again, this filter gets removed and\n              the 'all' status filter is selected again. Screen readers don't pick this up, so hence this helper text\n            */}\n                {allFilterSelected && (\n                  <FormattedMessage {...messages.a11y_allFilterSelected} />\n                )}\n              </ScreenReaderOnly>\n            </AllStatus>\n\n            {statuses.map((status) => {\n              const filterPostCount = get(\n                filterCounts,\n                `${type}_status_id.${status.id}`,\n                0\n              );\n              const isFilterSelected = status.id === selectedStatusId;\n\n              return (\n                <Status\n                  key={status.id}\n                  data-id={status.id}\n                  onMouseDown={removeFocus}\n                  onClick={handleOnClick}\n                  className={`e2e-status ${isFilterSelected ? 'selected' : ''}`}\n                >\n                  <T value={status.attributes.title_multiloc}>\n                    {(statusTitle) => <>{capitalize(statusTitle)}</>}\n                  </T>\n                  {!isFilterSelected ? (\n                    <Count aria-hidden>{filterPostCount}</Count>\n                  ) : (\n                    <CloseIcon\n                      title={\n                        <FormattedMessage {...messages.a11y_removeFilter} />\n                      }\n                      name=\"close\"\n                    />\n                  )}\n\n                  <ScreenReaderOnly>\n                    {/* Pronounce number of ideas per status when focus/hover it */}\n                    {type === 'idea' && (\n                      <FormattedMessage\n                        {...messages.a11y_numberOfInputs}\n                        values={{ inputsCount: filterPostCount }}\n                      />\n                    )}\n                    {type === 'initiative' && (\n                      <FormattedMessage\n                        {...messages.a11y_numberOfInitiatives}\n                        values={{ initiativeCount: filterPostCount }}\n                      />\n                    )}\n                  </ScreenReaderOnly>\n                  <ScreenReaderOnly aria-live=\"polite\">\n                    {/*\n                    Added this for consistency with the all filter, see comment above AllStatus component.\n                    Pronounces the selected filter.\n                  */}\n                    {isFilterSelected && (\n                      <FormattedMessage\n                        {...messages.a11y_selectedFilter}\n                        values={{\n                          filter: (\n                            <T value={status.attributes.title_multiloc} />\n                          ),\n                        }}\n                      />\n                    )}\n                  </ScreenReaderOnly>\n                </Status>\n              );\n            })}\n          </StatusesContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default StatusFilter;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  filters: {\n    id: 'app.components.FiltersModal.filters',\n    defaultMessage: 'Filters',\n  },\n  resetFilters: {\n    id: 'app.components.FiltersModal.resetFilters',\n    defaultMessage: 'Reset filters',\n  },\n  a11y_closeFilterPanel: {\n    id: 'app.components.FiltersModal.a11y_closeFilterPanel',\n    defaultMessage: 'Close filter panel',\n  },\n});\n","import React, { memo, useCallback, MouseEvent } from 'react';\nimport { isError, includes } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// styling\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { fontSizes, colors, defaultCardStyle } from 'utils/styleUtils';\n\n// components\nimport T from 'components/T';\n\n// styling\nimport styled from 'styled-components';\nimport { darken } from 'polished';\nimport { Header, Title } from './styles';\n\n// typings\nimport { ITopicData } from 'services/topics';\n\n// intl\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 20px;\n  padding-top: 25px;\n  ${defaultCardStyle};\n`;\n\nconst Topics = styled.div``;\n\nconst Topic = styled.button`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  line-height: normal;\n  display: inline-block;\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  margin: 0px;\n  margin-right: 6px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  user-select: none;\n  border: solid 1px ${colors.separationDark};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  transition: all 80ms ease-out;\n\n  &:not(.selected) {\n    &:hover {\n      color: ${({ theme }) => theme.colorSecondary};\n      border-color: ${({ theme }) => theme.colorSecondary};\n    }\n  }\n\n  &.selected {\n    color: #fff;\n    background: ${({ theme }) => theme.colorSecondary};\n    border-color: ${({ theme }) => theme.colorSecondary};\n\n    &:hover {\n      background: ${({ theme }) => darken(0.15, theme.colorSecondary)};\n      border-color: ${({ theme }) => darken(0.15, theme.colorSecondary)};\n    }\n  }\n`;\n\ninterface Props {\n  topics: ITopicData[];\n  selectedTopicIds: string[] | null | undefined;\n  onChange: (arg: string[] | null) => void;\n  className?: string;\n}\n\nconst TopicsFilter = memo<Props & InjectedLocalized>(\n  ({ topics, selectedTopicIds, onChange, className, localize }) => {\n    const handleOnClick = useCallback(\n      (event: MouseEvent<HTMLElement>) => {\n        const topicId = event.currentTarget.dataset.id as string;\n        let output: string[] = [];\n\n        if (selectedTopicIds && includes(selectedTopicIds, topicId)) {\n          output = selectedTopicIds.filter(\n            (selectedTopicId) => selectedTopicId !== topicId\n          );\n        } else {\n          output = [...(selectedTopicIds || []), topicId];\n        }\n\n        onChange(output.length > 0 ? output : null);\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [selectedTopicIds]\n    );\n\n    const removeFocus = useCallback((event: MouseEvent<HTMLElement>) => {\n      event.preventDefault();\n    }, []);\n\n    if (!isNilOrError(topics) && topics.length > 0) {\n      const selectedTopics = topics.filter((topic) =>\n        includes(selectedTopicIds, topic.id)\n      );\n      const numberOfSelectedTopics = selectedTopics.length;\n      const selectedTopicNames = selectedTopics\n        .map((topic) => {\n          return (\n            !isNilOrError(topic) && localize(topic.attributes.title_multiloc)\n          );\n        })\n        .join(', ');\n\n      return (\n        <Container className={className}>\n          <Header>\n            <Title>\n              <FormattedMessage {...messages.topicsTitle} />\n            </Title>\n          </Header>\n\n          <Topics className=\"e2e-topics-filters\">\n            {topics\n              .filter((topic) => !isError(topic))\n              .map((topic: ITopicData) => (\n                <Topic\n                  key={topic.id}\n                  data-id={topic.id}\n                  onMouseDown={removeFocus}\n                  onClick={handleOnClick}\n                  className={`e2e-topic ${\n                    includes(selectedTopicIds, topic.id) ? 'selected' : ''\n                  }`}\n                >\n                  <T value={topic.attributes.title_multiloc} />\n                </Topic>\n              ))}\n          </Topics>\n          <ScreenReaderOnly aria-live=\"polite\">\n            {/* Pronounces numbers of selected topics + selected topic names */}\n            <FormattedMessage\n              {...messages.a11y_selectedTopicFilters}\n              values={{ numberOfSelectedTopics, selectedTopicNames }}\n            />\n          </ScreenReaderOnly>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectLocalize(TopicsFilter);\n","import { fontSizes, isRtl } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  margin-left: 18px;\n  margin-right: 22px;\n\n  ${isRtl`\n    margin-left: auto;\n  `}\n`;\n\nexport const Title = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.small}px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-right: 15px;\n`;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  statusTitle: {\n    id: 'app.components.FilterBoxes.statusTitle',\n    defaultMessage: 'Status',\n  },\n  all: {\n    id: 'app.components.FilterBoxes.all',\n    defaultMessage: 'All',\n  },\n  areas: {\n    id: 'app.components.FilterBoxes.areas',\n    defaultMessage: 'Areas',\n  },\n  topicsTitle: {\n    id: 'app.components.FilterBoxes.topicsTitle',\n    defaultMessage: 'Topics',\n  },\n  a11y_numberOfInputs: {\n    id: 'app.components.FilterBoxes.a11y_numberOfInputs',\n    defaultMessage:\n      '{inputsCount, plural, no {# inputs} one {# input} other {# inputs}}',\n  },\n  a11y_numberOfInitiatives: {\n    id: 'app.components.FilterBoxes.a11y_numberOfInitiatives',\n    defaultMessage:\n      '{initiativeCount, plural, no {# initiatives} one {# initiative} other {# initiatives}}',\n  },\n  a11y_removeFilter: {\n    id: 'app.components.FilterBoxes.a11y_removeFilter',\n    defaultMessage: 'Remove filter',\n  },\n  a11y_allFilterSelected: {\n    id: 'app.components.FilterBoxes.a11y_allFilterSelected',\n    defaultMessage: 'Selected status filter: all',\n  },\n  a11y_selectedFilter: {\n    id: 'app.components.FilterBoxes.a11y_selectedFilter',\n    defaultMessage: 'Selected status filter: {filter}',\n  },\n  a11y_selectedTopicFilters: {\n    id: 'app.components.FilterBoxes.a11y_selectedTopicFilters',\n    defaultMessage:\n      'Selected {numberOfSelectedTopics, plural, =0 {zero topic filters} one {one topic filter} other {# topic filters}}. {selectedTopicNames}',\n  },\n});\n","import React, { memo, MouseEvent } from 'react';\n\n// components\nimport { Icon } from 'cl2-component-library';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\nimport { media, colors, fontSizes } from 'utils/styleUtils';\nimport { lighten } from 'polished';\n\nconst Container = styled.div`\n  height: ${(props) => props.theme.mobileTopBarHeight}px;\n  background: #fff;\n  border-bottom: solid 1px ${lighten(0.4, colors.label)};\n`;\n\nconst TopBarInner = styled.div`\n  height: 100%;\n  padding-left: 15px;\n  padding-right: 15px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  ${media.biggerThanMinTablet`\n    padding-left: 30px;\n    padding-right: 30px;\n  `}\n`;\n\nconst Left = styled.div`\n  height: 48px;\n  align-items: center;\n  display: flex;\n`;\n\nconst Center = styled.h1`\n  flex: 1;\n  font-size: ${fontSizes.medium}px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n`;\n\nconst Right = styled.div``;\n\nconst CloseIcon = styled(Icon)`\n  flex: 0 0 12px;\n  width: 12px;\n  height: 12px;\n  fill: ${colors.label};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: fill 100ms ease-out;\n`;\n\nconst CloseButton = styled.button`\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  margin-right: 6px;\n  margin-left: -2px;\n  cursor: pointer;\n  transition: all 100ms ease-out;\n\n  &:hover {\n    border-color: #000;\n\n    ${CloseIcon} {\n      fill: #000;\n    }\n  }\n`;\n\ninterface Props {\n  onClose: (event: MouseEvent) => void;\n  onReset: (event: MouseEvent) => void;\n  className?: string;\n}\n\nconst TopBar = memo<Props>(({ onClose, onReset, className }) => {\n  return (\n    <Container className={className}>\n      <TopBarInner>\n        <Left>\n          <CloseButton onClick={onClose}>\n            <CloseIcon\n              title={<FormattedMessage {...messages.a11y_closeFilterPanel} />}\n              name=\"close\"\n            />\n          </CloseButton>\n        </Left>\n        <Center>\n          <FormattedMessage {...messages.filters} />\n        </Center>\n        <Right>\n          <button onClick={onReset}>\n            <FormattedMessage {...messages.resetFilters} />\n          </button>\n        </Right>\n      </TopBarInner>\n    </Container>\n  );\n});\n\nexport default TopBar;\n","import React, { PureComponent } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isFunction, compact } from 'lodash-es';\nimport clHistory from 'utils/cl-router/history';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport { removeLocale } from 'utils/cl-router/updateLocationDescriptor';\nimport { FocusOn } from 'react-focus-on';\nimport eventEmitter from 'utils/eventEmitter';\n\n// resource\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\n\n// tracking\nimport { trackPage } from 'utils/analytics';\n\n// styling\nimport styled from 'styled-components';\nimport { media } from 'utils/styleUtils';\n\nconst slideInOutTimeout = 500;\nconst slideInOutEasing = 'cubic-bezier(0.19, 1, 0.22, 1)';\n\nconst Container = styled.div<{ windowHeight: string }>`\n  width: 100vw;\n  height: ${(props) =>\n    `calc(${props.windowHeight} - ${props.theme.menuHeight}px)`};\n  position: fixed;\n  top: ${({ theme }) => theme.menuHeight}px;\n  left: 0;\n  display: flex;\n  overflow: hidden;\n  background: #fff;\n  z-index: 1003;\n\n  &.modal-enter {\n    transform: translateY(100vh);\n\n    &.modal-enter-active {\n      transform: translateY(0px);\n      transition: all ${slideInOutTimeout}ms ${slideInOutEasing};\n    }\n  }\n\n  &.modal-exit {\n    transform: translateY(0px);\n\n    &.modal-exit-active {\n      transform: translateY(100vh);\n      transition: all ${slideInOutTimeout}ms ${slideInOutEasing};\n    }\n  }\n\n  ${media.smallerThanMaxTablet`\n    height: ${(props) =>\n      `calc(${props.windowHeight} - ${props.theme.mobileMenuHeight}px)`};\n    top: 0;\n    bottom: ${(props) => props.theme.mobileMenuHeight}px;\n    z-index: 1005; /* there is no top navbar at this screen size, so okay that it is higher than the z-index of NavBar here */\n\n    &.hasBottomBar {\n      height: ${(props) => props.windowHeight};\n      bottom: 0;\n    }\n  `}\n`;\n\nconst StyledFocusOn = styled(FocusOn)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  transform: translate3d(0, 0, 0);\n`;\n\ninterface InputProps {\n  opened: boolean;\n  close: () => void;\n  url?: string | null;\n  goBackUrl?: string | null;\n  topBar?: JSX.Element | null;\n  bottomBar?: JSX.Element | null;\n  animateInOut?: boolean;\n  navbarRef?: HTMLElement | null;\n  mobileNavbarRef?: HTMLElement | null;\n  children: JSX.Element | null | undefined;\n}\n\ninterface DataProps {\n  locale: GetLocaleChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  windowHeight: string;\n}\n\nconst useCapture = false;\n\nclass FullscreenModal extends PureComponent<Props, State> {\n  subscription: Subscription | null = null;\n  unlisten: { (): void } | null = null;\n  url: string | null | undefined = null;\n  goBackUrl: string | null | undefined = null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      windowHeight: `${window.innerHeight}px`,\n    };\n  }\n\n  componentDidMount() {\n    this.subscription = fromEvent(window, 'resize')\n      .pipe(debounceTime(50), distinctUntilChanged())\n      .subscribe((event) => {\n        if (event.target) {\n          const height = event.target['innerHeight'] as number;\n          this.setState({ windowHeight: `${height}px` });\n        }\n      });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!prevProps.opened && this.props.opened) {\n      this.openModal();\n    } else if (prevProps.opened && !this.props.opened) {\n      this.cleanup();\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscription?.unsubscribe();\n    this.cleanup();\n  }\n\n  openModal = () => {\n    const { locale, url, goBackUrl } = this.props;\n\n    if (!isNilOrError(locale) && url) {\n      const { pathname } = removeLocale(url);\n      this.url = `${window.location.origin}/${locale}${pathname}`;\n      this.goBackUrl = `${window.location.origin}/${locale}${\n        removeLocale(goBackUrl || window.location.pathname).pathname\n      }`;\n      window.history.pushState({ path: this.url }, '', this.url);\n      window.addEventListener('popstate', this.handlePopstateEvent, useCapture);\n      window.addEventListener('keydown', this.handleKeypress, useCapture);\n      this.unlisten = clHistory.listen(() => this.props.close());\n\n      trackPage(this.url, { modal: true });\n    }\n  };\n\n  handleKeypress = (event) => {\n    if (event.type === 'keydown' && event.key === 'Escape') {\n      event.preventDefault();\n      this.props.close();\n    }\n  };\n\n  handlePopstateEvent = () => {\n    this.props.close();\n  };\n\n  cleanup = () => {\n    if (this.goBackUrl) {\n      window.removeEventListener(\n        'popstate',\n        this.handlePopstateEvent,\n        useCapture\n      );\n      window.removeEventListener('keydown', this.handleKeypress, useCapture);\n\n      if (window.location.href === this.url) {\n        window.history.pushState({ path: this.goBackUrl }, '', this.goBackUrl);\n      }\n    }\n\n    this.url = null;\n    this.goBackUrl = null;\n\n    if (isFunction(this.unlisten)) {\n      this.unlisten();\n      this.unlisten = null;\n    }\n\n    eventEmitter.emit('fullscreenModalClosed');\n  };\n\n  render() {\n    const { windowHeight } = this.state;\n    const {\n      children,\n      opened,\n      topBar,\n      bottomBar,\n      animateInOut,\n      navbarRef,\n      mobileNavbarRef,\n    } = this.props;\n    const shards = compact([navbarRef, mobileNavbarRef]);\n    const modalPortalElement = document?.getElementById('modal-portal');\n    let modalContent: React.ReactChild | null = null;\n\n    if (animateInOut || (!animateInOut && opened)) {\n      modalContent = (\n        <Container\n          id=\"e2e-fullscreenmodal-content\"\n          className={bottomBar ? 'hasBottomBar' : ''}\n          windowHeight={windowHeight}\n        >\n          <StyledFocusOn autoFocus={false} shards={shards}>\n            {topBar}\n            <Content className=\"fullscreenmodal-scrollcontainer\">\n              {children}\n            </Content>\n            {bottomBar}\n          </StyledFocusOn>\n        </Container>\n      );\n    }\n\n    if (animateInOut) {\n      return createPortal(\n        <CSSTransition\n          classNames=\"modal\"\n          in={opened}\n          timeout={{\n            enter: slideInOutTimeout,\n            exit: slideInOutTimeout,\n          }}\n          mountOnEnter={true}\n          unmountOnExit={true}\n          enter={true}\n          exit={true}\n        >\n          {modalContent}\n        </CSSTransition>,\n        document.getElementById('modal-portal') as HTMLElement\n      );\n    }\n\n    if (!animateInOut && opened && modalPortalElement) {\n      return createPortal(modalContent, modalPortalElement);\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps>({\n  locale: <GetLocale />,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <FullscreenModal {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { memo, FormEvent } from 'react';\n\n// components\nimport Button from 'components/UI/Button';\n\n// styling\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\nimport { lighten } from 'polished';\n\nconst Container = styled.div`\n  height: ${(props) => props.theme.mobileTopBarHeight}px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n  background: #fff;\n  border-top: solid 1px ${lighten(0.4, colors.label)};\n`;\n\ninterface Props {\n  buttonText: string | JSX.Element;\n  onClick: (event: FormEvent) => void;\n  className?: string;\n}\n\nconst BottomBar = memo<Props>(({ buttonText, onClick, className }) => {\n  return (\n    <Container className={className}>\n      <Button onClick={onClick} fullWidth={true}>\n        {buttonText}\n      </Button>\n    </Container>\n  );\n});\n\nexport default BottomBar;\n"],"sourceRoot":""}