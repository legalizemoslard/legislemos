{"version":3,"sources":["webpack:///./app/containers/Admin/sideBar/messages.ts","webpack:///./app/assets/semantic/semantic.min.css","webpack:///./app/containers/Admin/sideBar/index.tsx","webpack:///./app/containers/Admin/index.tsx","webpack:///./app/containers/Admin/sideBar/MenuItem.tsx"],"names":["defineMessages","dashboard","id","defaultMessage","moderation","users","invitations","initiatives","groups","projects","workshops","inputManager","settings","emails","processing","insights","guide","linkToSupportCenter","Menu","styled","div","media","smallerThan1200px","MenuInner","nav","stylingConsts","menuHeight","colors","adminMenuBackground","IconWrapper","Text","adminLightText","fontSizes","base","smallerThanMinTablet","Spacer","GetStartedLink","a","props","theme","borderRadius","lighten","Sidebar","insertNavItemOptions","setState","navItems","insertConfiguration","state","name","link","iconName","message","isActive","pathName","startsWith","getUrlLocale","featureName","onlyCheckAllowed","formatMessage","this","intl","length","onData","handleData","map","navItem","key","manualEmailing","automatedEmailing","route","item","type","path","action","href","messages","target","Icon","nextProps","prevState","ideasCount","initiativesCount","isNilOrError","count","find","nextNavItems","findIndex","PureComponent","Data","adopt","authUser","render","feedbackNeeded","assignee","get","SideBarWithHocs","withRouter","injectIntl","inputProps","dataProps","Container","background","adminTextColor","RightColumn","smallerThan1280px","chartTheme","chartStroke","clIconAccent","chartStrokeGreen","clGreen","chartStrokeRed","clRed","chartFill","barFill","adminContentBackground","chartLabelColor","adminSecondaryTextColor","barHoverColor","rgba","chartLabelSize","animationBegin","animationDuration","cartesianGridColor","newBarFill","newLineColor","AdminPage","memo","className","children","pathname","location","useState","adminFullWidth","setAdminFullWidth","adminNoPadding","setAdminNoPadding","useEffect","subscriptions","globalState","init","enabled","observable","subscribe","forEach","subscription","unsubscribe","userCanViewAdmin","hasPermission","undefined","clHistory","push","noPadding","includes","fullWidth","endsWith","whiteBg","ThemeProvider","ArrowIcon","MenuItemLink","Link","clIconPrimary","activeClassName","to","FormattedMessage"],"mappings":"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","file":"126.68d139eab6274e3c4f65.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  dashboard: {\n    id: 'app.containers.AdminPage.SideBar.dashboard',\n    defaultMessage: 'Dashboard',\n  },\n  moderation: {\n    id: 'app.containers.AdminPage.SideBar.moderation',\n    defaultMessage: 'Moderation',\n  },\n  users: {\n    id: 'app.containers.AdminPage.SideBar.users',\n    defaultMessage: 'Users',\n  },\n  invitations: {\n    id: 'app.containers.AdminPage.SideBar.invitations',\n    defaultMessage: 'Invitations',\n  },\n  initiatives: {\n    id: 'app.containers.AdminPage.SideBar.initiatives',\n    defaultMessage: 'Initiatives',\n  },\n  groups: {\n    id: 'app.containers.AdminPage.SideBar.groups',\n    defaultMessage: 'Groups',\n  },\n  projects: {\n    id: 'app.containers.AdminPage.SideBar.projects',\n    defaultMessage: 'Projects',\n  },\n  workshops: {\n    id: 'app.containers.AdminPage.SideBar.workshops',\n    defaultMessage: 'Workshops',\n  },\n  inputManager: {\n    id: 'app.containers.AdminPage.SideBar.inputManager',\n    defaultMessage: 'Input manager',\n  },\n  settings: {\n    id: 'app.containers.AdminPage.SideBar.settings',\n    defaultMessage: 'Settings',\n  },\n  emails: {\n    id: 'app.containers.AdminPage.SideBar.emails',\n    defaultMessage: 'Emails',\n  },\n  processing: {\n    id: 'app.containers.AdminPage.SideBar.processing',\n    defaultMessage: 'Processing',\n  },\n  insights: {\n    id: 'app.containers.AdminPage.SideBar.insights',\n    defaultMessage: 'Reporting',\n  },\n  guide: {\n    id: 'app.containers.AdminPage.SideBar.guide',\n    defaultMessage: 'Guide',\n  },\n  linkToSupportCenter: {\n    id: 'app.containers.AdminPage.SideBar.linkToSupportCenter',\n    defaultMessage: 'https://support.citizenlab.co/',\n  },\n});\n","// extracted by mini-css-extract-plugin\nexport {};","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { get } from 'lodash-es';\n\n// router\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { getUrlLocale } from 'services/locale';\n\n// components\nimport { Icon, IconNames } from 'cl2-component-library';\nimport FeatureFlag from 'components/FeatureFlag';\nimport MenuItem from './MenuItem';\nimport HasPermission from 'components/HasPermission';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\nimport messages from './messages';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors, fontSizes, stylingConsts } from 'utils/styleUtils';\nimport { lighten } from 'polished';\n\n// resources\nimport GetFeatureFlag from 'resources/GetFeatureFlag';\nimport GetIdeasCount, {\n  GetIdeasCountChildProps,\n} from 'resources/GetIdeasCount';\nimport GetInitiativesCount, {\n  GetInitiativesCountChildProps,\n} from 'resources/GetInitiativesCount';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport Outlet from 'components/Outlet';\nimport { InsertConfigurationOptions } from 'typings';\nimport { insertConfiguration } from 'utils/moduleUtils';\nimport { TAppConfigurationSetting } from 'services/appConfiguration';\n\nconst Menu = styled.div`\n  z-index: 10;\n  flex: 0 0 auto;\n  width: 210px;\n\n  @media print {\n    display: none;\n  }\n\n  ${media.smallerThan1200px`\n    width: 80px;\n  `}\n`;\n\nconst MenuInner = styled.nav`\n  flex: 0 0 auto;\n  width: 210px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  padding-top: ${stylingConsts.menuHeight + 10}px;\n  background: ${colors.adminMenuBackground};\n\n  ${media.smallerThan1200px`\n    width: 80px;\n  `}\n`;\n\nconst IconWrapper = styled.div`\n  flex: 0 0 auto;\n  width: 45px;\n  height: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  color: ${colors.adminLightText};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: 19px;\n  margin-left: 10px;\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `}\n`;\n\nconst Spacer = styled.div`\n  flex-grow: 1;\n`;\n\nconst GetStartedLink = styled.a`\n  flex: 0 0 auto;\n  width: 210px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 5px;\n  padding-right: 15px;\n  padding-bottom: 1px;\n  margin-bottom: 25px;\n  cursor: pointer;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  background: ${lighten(0.05, colors.adminMenuBackground)};\n  transition: all 100ms ease-out;\n\n  &:hover {\n    background: ${lighten(0.1, colors.adminMenuBackground)};\n\n    ${Text} {\n      color: #fff;\n    }\n  }\n\n  ${media.smallerThan1200px`\n    width: 56px;\n    padding-right: 5px;\n\n    ${Text} {\n      display: none;\n    }\n  `}\n`;\n\ninterface InputProps {}\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  ideasCount: GetIdeasCountChildProps;\n  initiativesCount: GetInitiativesCountChildProps;\n}\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  navItems: NavItem[];\n}\n\nexport type NavItem = {\n  name: string;\n  link: string;\n  iconName: IconNames;\n  message: string;\n  featureName?: TAppConfigurationSetting;\n  isActive: (pathname: string) => boolean;\n  count?: number;\n  onlyCheckAllowed?: boolean;\n};\n\ntype Tracks = {\n  trackFakeDoor: () => void;\n};\n\nclass Sidebar extends PureComponent<\n  Props & InjectedIntlProps & WithRouterProps & Tracks,\n  State\n> {\n  constructor(props: Props & InjectedIntlProps & WithRouterProps & Tracks) {\n    super(props);\n\n    this.state = {\n      navItems: [\n        {\n          name: 'dashboard',\n          link: '/admin/dashboard',\n          iconName: 'stats',\n          message: 'dashboard',\n          isActive: (pathName) =>\n            pathName.startsWith(\n              `${\n                getUrlLocale(pathName) ? `/${getUrlLocale(pathName)}` : ''\n              }/admin/dashboard`\n            ),\n        },\n        {\n          name: 'projects',\n          link: '/admin/projects',\n          iconName: 'folder',\n          message: 'projects',\n          isActive: (pathName) =>\n            pathName.startsWith(\n              `${\n                getUrlLocale(pathName) ? `/${getUrlLocale(pathName)}` : ''\n              }/admin/projects`\n            ),\n        },\n        {\n          name: 'workshops',\n          link: '/admin/workshops',\n          iconName: 'workshops',\n          message: 'workshops',\n          featureName: 'workshops',\n          isActive: (pathName) =>\n            pathName.startsWith(\n              `${\n                getUrlLocale(pathName) ? `/${getUrlLocale(pathName)}` : ''\n              }/admin/workshops`\n            ),\n        },\n        {\n          name: 'ideas',\n          link: '/admin/ideas',\n          iconName: 'idea2',\n          message: 'inputManager',\n          isActive: (pathName) =>\n            pathName.startsWith(\n              `${\n                getUrlLocale(pathName) ? `/${getUrlLocale(pathName)}` : ''\n              }/admin/ideas`\n            ),\n        },\n        {\n          name: 'initiatives',\n          link: '/admin/initiatives',\n          iconName: 'initiativesAdminMenuIcon',\n          message: 'initiatives',\n          featureName: 'initiatives',\n          onlyCheckAllowed: true,\n          isActive: (pathName) =>\n            pathName.startsWith(\n              `${\n                getUrlLocale(pathName) ? `/${getUrlLocale(pathName)}` : ''\n              }/admin/initiatives`\n            ),\n        },\n        {\n          name: 'userinserts',\n          link: '/admin/users',\n          iconName: 'users',\n          message: 'users',\n          isActive: (pathName) =>\n            pathName.startsWith(\n              `${\n                getUrlLocale(pathName) ? `/${getUrlLocale(pathName)}` : ''\n              }/admin/users`\n            ),\n        },\n        {\n          name: 'invitations',\n          link: '/admin/invitations',\n          iconName: 'invitations',\n          message: 'invitations',\n          isActive: (pathName) =>\n            pathName.startsWith(\n              `${\n                getUrlLocale(pathName) ? `/${getUrlLocale(pathName)}` : ''\n              }/admin/invitations`\n            ),\n        },\n        {\n          name: 'emails',\n          link: '/admin/emails',\n          iconName: 'emails',\n          message: 'emails',\n          isActive: (pathName) =>\n            pathName.startsWith(\n              `${\n                getUrlLocale(pathName) ? `/${getUrlLocale(pathName)}` : ''\n              }/admin/emails`\n            ),\n        },\n        {\n          name: 'settings',\n          link: '/admin/settings/general',\n          iconName: 'setting',\n          message: 'settings',\n          isActive: (pathName) =>\n            pathName.startsWith(\n              `${\n                getUrlLocale(pathName) ? `/${getUrlLocale(pathName)}` : ''\n              }/admin/settings`\n            ),\n        },\n      ],\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { ideasCount, initiativesCount } = nextProps;\n    if (\n      !isNilOrError(ideasCount.count) &&\n      ideasCount.count !==\n        prevState.navItems.find((navItem) => navItem.name === 'ideas').count\n    ) {\n      const { navItems } = prevState;\n      const nextNavItems = navItems;\n      const ideasIndex = navItems.findIndex(\n        (navItem) => navItem.name === 'ideas'\n      );\n      nextNavItems[ideasIndex].count = ideasCount.count;\n      return { navItems: nextNavItems };\n    }\n    if (\n      !isNilOrError(initiativesCount.count) &&\n      initiativesCount.count !==\n        prevState.navItems.find((navItem) => navItem.name === 'initiatives')\n          .count\n    ) {\n      const { navItems } = prevState;\n      const nextNavItems = navItems;\n      const initiativesIndex = navItems.findIndex(\n        (navItem) => navItem.name === 'initiatives'\n      );\n      nextNavItems[initiativesIndex].count = initiativesCount.count;\n      return { navItems: nextNavItems };\n    }\n    return prevState;\n  }\n\n  handleData = (insertNavItemOptions: InsertConfigurationOptions<NavItem>) => {\n    this.setState(({ navItems }) => ({\n      navItems: insertConfiguration(insertNavItemOptions)(navItems),\n    }));\n  };\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const { navItems } = this.state;\n\n    if (!(navItems && navItems.length > 1)) {\n      return null;\n    }\n\n    return (\n      <Menu>\n        <Outlet\n          id=\"app.containers.Admin.sideBar.navItems\"\n          onData={this.handleData}\n        />\n        <MenuInner id=\"sidebar\">\n          {navItems.map((navItem) => {\n            if (navItem.name === 'emails') {\n              return (\n                <GetFeatureFlag name=\"manual_emailing\" key={navItem.name}>\n                  {(manualEmailing) => (\n                    <GetFeatureFlag name=\"automated_emailing_control\">\n                      {(automatedEmailing) =>\n                        manualEmailing || automatedEmailing ? (\n                          <MenuItem route={navItem} key={navItem.name} />\n                        ) : null\n                      }\n                    </GetFeatureFlag>\n                  )}\n                </GetFeatureFlag>\n              );\n            } else if (navItem.featureName) {\n              return (\n                <FeatureFlag\n                  name={navItem.featureName}\n                  onlyCheckAllowed={navItem.onlyCheckAllowed}\n                  key={navItem.name}\n                >\n                  <MenuItem route={navItem} key={navItem.name} />\n                </FeatureFlag>\n              );\n            } else {\n              return <MenuItem route={navItem} key={navItem.name} />;\n            }\n          })}\n          <Spacer />\n          <HasPermission\n            item={{ type: 'route', path: '/admin/guide' }}\n            action=\"access\"\n          >\n            <GetStartedLink\n              href={formatMessage(messages.linkToSupportCenter)}\n              target=\"_blank\"\n            >\n              <IconWrapper>\n                <Icon name=\"circleInfo\" />\n              </IconWrapper>\n              <Text>{formatMessage({ ...messages.guide })}</Text>\n            </GetStartedLink>\n          </HasPermission>\n        </MenuInner>\n      </Menu>\n    );\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  ideasCount: ({ authUser, render }) => (\n    <GetIdeasCount feedbackNeeded={true} assignee={get(authUser, 'id')}>\n      {render}\n    </GetIdeasCount>\n  ),\n  initiativesCount: ({ authUser, render }) => (\n    <GetInitiativesCount feedbackNeeded={true} assignee={get(authUser, 'id')}>\n      {render}\n    </GetInitiativesCount>\n  ),\n});\n\nconst SideBarWithHocs = withRouter<Props>(injectIntl(Sidebar));\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <SideBarWithHocs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { memo, useState, useEffect } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { globalState } from 'services/globalState';\n\n// permissions\nimport useAuthUser from 'hooks/useAuthUser';\nimport { hasPermission } from 'services/permissions';\nimport HasPermission from 'components/HasPermission';\n\n// components\nimport Sidebar from './sideBar/';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { colors, media } from 'utils/styleUtils';\n\n// utils\nimport clHistory from 'utils/cl-router/history';\nimport { endsWith } from 'utils/helperUtils';\n\n// stlying\nimport 'assets/semantic/semantic.min.css';\nimport { rgba } from 'polished';\n\nconst Container = styled.div`\n  display: flex;\n  background: ${colors.background};\n  color: ${colors.adminTextColor};\n  fill: ${colors.adminTextColor};\n  border-color: ${colors.adminTextColor};\n\n  &.whiteBg {\n    background: #fff;\n  }\n\n  .ui,\n  .ui.menu .item,\n  .ui.table th,\n  .ui a,\n  .ui input,\n  .ui .active td {\n    color: ${colors.adminTextColor} !important;\n  }\n\n  .Select-control,\n  .Select-value-label,\n  .Select-value-icon,\n  .Select-option {\n    color: ${colors.adminTextColor} !important;\n  }\n\n  .ui.red {\n    color: white !important;\n  }\n`;\n\nconst RightColumn = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: 0;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  max-width: 1400px;\n  min-height: calc(100vh - ${(props) => props.theme.menuHeight}px);\n  padding-top: 45px;\n  padding-right: 51px;\n  padding-bottom: 0px;\n  padding-left: 51px;\n\n  &.fullWidth {\n    max-width: none;\n  }\n\n  &.noPadding {\n    padding: 0;\n    max-width: none;\n  }\n\n  @media print {\n    padding: 0;\n    max-width: none;\n  }\n\n  ${media.smallerThan1280px`\n    padding: 2.5rem 2.5rem;\n  `}\n`;\n\nexport const chartTheme = (theme) => {\n  return {\n    ...theme,\n    chartStroke: colors.clIconAccent,\n    chartStrokeGreen: colors.clGreen,\n    chartStrokeRed: colors.clRed,\n    chartFill: colors.clIconAccent,\n    barFill: colors.adminContentBackground,\n    chartLabelColor: colors.adminSecondaryTextColor,\n    barHoverColor: rgba(colors.clIconAccent, 0.25),\n    chartLabelSize: 13,\n    animationBegin: 10,\n    animationDuration: 200,\n    cartesianGridColor: '#f5f5f5',\n    newBarFill: '#073F80',\n    newLineColor: '#7FBBCA',\n  };\n};\n\ntype Props = {\n  className?: string;\n  children: React.ReactNode;\n};\n\nconst AdminPage = memo<Props & WithRouterProps>(\n  ({ className, children, location: { pathname } }) => {\n    const authUser = useAuthUser();\n\n    const [adminFullWidth, setAdminFullWidth] = useState(false);\n    const [adminNoPadding, setAdminNoPadding] = useState(false);\n\n    useEffect(() => {\n      const subscriptions = [\n        globalState\n          .init('AdminFullWidth', { enabled: false })\n          .observable.subscribe(({ enabled }) => setAdminFullWidth(enabled)),\n        globalState\n          .init('AdminNoPadding', { enabled: false })\n          .observable.subscribe(({ enabled }) => setAdminNoPadding(enabled)),\n      ];\n      return () => {\n        subscriptions.forEach((subscription) => subscription.unsubscribe());\n      };\n    }, []);\n\n    const userCanViewAdmin = () =>\n      hasPermission({\n        action: 'access',\n        item: { type: 'route', path: '/admin' },\n      });\n\n    useEffect(() => {\n      if (\n        authUser === null ||\n        (authUser !== undefined && !userCanViewAdmin())\n      ) {\n        clHistory.push('/');\n      }\n    }, [authUser]);\n\n    if (!userCanViewAdmin()) {\n      return null;\n    }\n\n    const noPadding =\n      adminNoPadding ||\n      pathname.includes('admin/dashboard') ||\n      pathname.includes('admin/processing') ||\n      pathname.includes('admin/insights');\n\n    const fullWidth =\n      adminFullWidth === true ||\n      endsWith(pathname, 'admin/moderation') ||\n      pathname.includes('admin/dashboard') ||\n      pathname.includes('admin/processing') ||\n      pathname.includes('admin/insights');\n\n    const whiteBg =\n      endsWith(pathname, 'admin/moderation') ||\n      pathname.includes('admin/processing');\n\n    return (\n      <HasPermission\n        item={{ type: 'route', path: '/admin/dashboard' }}\n        action=\"access\"\n      >\n        <ThemeProvider theme={chartTheme}>\n          <Container className={`${className} ${whiteBg ? 'whiteBg' : ''}`}>\n            <Sidebar />\n            <RightColumn\n              className={`${fullWidth && 'fullWidth'} ${\n                noPadding && 'noPadding'\n              }`}\n            >\n              {children}\n            </RightColumn>\n          </Container>\n        </ThemeProvider>\n      </HasPermission>\n    );\n  }\n);\n\nexport default withRouter<Props>(AdminPage);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Link from 'utils/cl-router/Link';\nimport { NavItem } from '.';\nimport { media, colors, fontSizes } from 'utils/styleUtils';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { Icon } from 'cl2-component-library';\nimport CountBadge from 'components/UI/CountBadge';\nimport HasPermission from 'components/HasPermission';\n\nconst Text = styled.div`\n  flex: 1;\n  color: #fff;\n  opacity: 0.7;\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: 19px;\n  margin-left: 10px;\n  display: flex;\n  align-items: center;\n  transition: all 80ms ease-out;\n\n  ${media.smallerThan1200px`\n    display: none;\n  `}\n`;\n\nconst ArrowIcon = styled(Icon)`\n  fill: #fff;\n  opacity: 0;\n  transition: all 80ms ease-out;\n\n  ${media.smallerThan1200px`\n    display: none;\n  `}\n`;\n\nconst MenuItemLink = styled(Link)`\n  flex: 0 0 auto;\n  width: 210px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 5px;\n  padding-right: 15px;\n  cursor: pointer;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  transition: background-color 80ms ease-out;\n\n  &:hover,\n  &.selected,\n  &.focus-visible {\n    background: rgba(0, 0, 0, 0.36);\n\n    ${Text} {\n      opacity: 1;\n    }\n  }\n\n  &:not(.selected) {\n    .cl-icon {\n      .cl-icon-primary {\n        fill: ${colors.clIconPrimary};\n      }\n      .cl-icon-accent {\n        fill: ${colors.clIconAccent};\n      }\n    }\n  }\n\n  &.selected {\n    ${ArrowIcon} {\n      opacity: 1;\n    }\n\n    .cl-icon {\n      .cl-icon-primary {\n        fill: ${colors.clIconAccent};\n      }\n      .cl-icon-accent {\n        fill: ${colors.clIconPrimary};\n      }\n    }\n\n    &.moderation {\n      .cl-icon {\n        .cl-icon-primary {\n          fill: ${colors.clIconAccent};\n        }\n        .cl-icon-accent {\n          fill: ${colors.clIconAccent};\n        }\n      }\n    }\n  }\n\n  ${media.smallerThan1200px`\n    width: 56px;\n    padding-right: 5px;\n  `}\n`;\n\nconst IconWrapper = styled.div`\n  flex: 0 0 auto;\n  width: 45px;\n  height: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &.processing svg {\n    height: 31px;\n  }\n`;\n\ntype Props = {\n  route: NavItem;\n};\n\nexport default ({ route }: Props) => {\n  const pathname = location.pathname;\n  return (\n    <HasPermission action=\"access\" item={{ type: 'route', path: route.link }}>\n      <MenuItemLink\n        activeClassName=\"active\"\n        className={`${route.iconName} ${\n          route.isActive(pathname) ? 'selected' : ''\n        }`}\n        to={route.link}\n      >\n        <IconWrapper className={route.iconName}>\n          <Icon name={route.iconName} />\n        </IconWrapper>\n        <Text>\n          <FormattedMessage {...messages[route.message]} />\n          {!!route.count && <CountBadge count={route.count} />}\n        </Text>\n        <ArrowIcon name=\"arrowLeft\" />\n      </MenuItemLink>\n    </HasPermission>\n  );\n};\n"],"sourceRoot":""}