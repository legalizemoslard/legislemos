{"version":3,"sources":["webpack:///./app/modules/commercial/custom_topics/admin/containers/TopicsSettings/all/index.tsx","webpack:///./app/modules/commercial/custom_topics/admin/containers/TopicsSettings/DefaultTopicRow.tsx","webpack:///./app/modules/commercial/custom_topics/admin/containers/TopicsSettings/messages.ts","webpack:///./app/modules/commercial/custom_topics/admin/containers/TopicsSettings/CustomTopicRow.tsx","webpack:///./app/resources/GetTopics.tsx","webpack:///./app/modules/commercial/custom_topics/admin/components/RowStyles.tsx"],"names":["TopicList","props","topicId","event","preventDefault","setState","showConfirmationModal","topicIdToDelete","state","processingDeletion","deleteTopic","then","catch","topics","this","isNilOrError","Section","SectionTitle","FormattedMessage","messages","titleTopicManager","SectionDescription","descriptionTopicManagerText","values","adminProjectsLink","StyledLink","to","projectsSettings","ButtonWrapper","buttonStyle","icon","linkTo","id","addTopicButton","List","key","length","map","topic","index","isLastItem","attributes","code","handleDeleteClick","opened","close","closeSendConfirmationModal","header","confirmHeader","ModalContentContainer","Content","deleteTopicConfirmation","ButtonsWrapper","onClick","cancel","handleTopicDeletionConfirm","processing","delete","React","PureComponent","TopicListWithHoCs","DragDropContext","HTML5Backend","injectIntl","DefaultTopicLabel","styled","span","StyledRowContentInner","RowContentInner","memo","Row","className","RowContent","RowTitle","value","title_multiloc","defaultTopic","defineMessages","defaultMessage","deleteButtonLabel","editButtonLabel","fieldTopicTitle","fieldTopicTitleTooltip","editTopicFormTitle","Buttons","div","GetTopics","undefined","topicIds","exclude_code","sort","projectId","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","isEqual","switchMap","queryParameters","projectTopicsStream","observable","data","filter","relationships","combineLatest","topicByIdStream","of","topicsStream","subscribe","forEach","subscription","unsubscribe","children","Component","T","fontSizes","base"],"mappings":"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","file":"128.35bc39116dfc841dc4cf.chunk.js","sourcesContent":["import React from 'react';\nimport { DragDropContext } from 'react-dnd-cjs';\nimport HTML5Backend from 'react-dnd-html5-backend-cjs';\nimport { InjectedIntlProps } from 'react-intl';\nimport { isNilOrError } from 'utils/helperUtils';\n\nimport GetTopics, { GetTopicsChildProps } from 'resources/GetTopics';\nimport { deleteTopic } from 'services/topics';\n\nimport messages from '../messages';\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\n\n// components\nimport {\n  Section,\n  SectionDescription,\n  SectionTitle,\n  StyledLink,\n} from 'components/admin/Section';\nimport { List } from 'components/admin/ResourceList';\nimport Button from 'components/UI/Button';\nimport { ButtonWrapper } from 'components/admin/PageWrapper';\nimport DefaultTopicRow from '../DefaultTopicRow';\nimport CustomTopicRow from '../CustomTopicRow';\nimport Modal, {\n  ModalContentContainer,\n  ButtonsWrapper,\n  Content,\n} from 'components/UI/Modal';\n\ninterface InputProps {}\n\ninterface DataProps {\n  topics: GetTopicsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  showConfirmationModal: boolean;\n  topicIdToDelete: string | null;\n  processingDeletion: boolean;\n}\n\nclass TopicList extends React.PureComponent<Props & InjectedIntlProps, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      processingDeletion: false,\n      showConfirmationModal: false,\n      topicIdToDelete: null,\n    };\n  }\n\n  handleDeleteClick = (topicId: string) => (event: React.FormEvent<any>) => {\n    event.preventDefault();\n\n    this.setState({\n      showConfirmationModal: true,\n      topicIdToDelete: topicId,\n    });\n  };\n\n  closeSendConfirmationModal = () => {\n    this.setState({\n      showConfirmationModal: false,\n      topicIdToDelete: null,\n    });\n  };\n\n  handleTopicDeletionConfirm = () => {\n    const { topicIdToDelete } = this.state;\n\n    if (topicIdToDelete) {\n      this.setState({\n        processingDeletion: true,\n      });\n\n      deleteTopic(topicIdToDelete)\n        .then(() => {\n          this.setState({\n            processingDeletion: false,\n            showConfirmationModal: false,\n            topicIdToDelete: null,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            processingDeletion: false,\n          });\n        });\n    }\n  };\n\n  render() {\n    const { topics } = this.props;\n    const { showConfirmationModal, processingDeletion } = this.state;\n\n    if (!isNilOrError(topics)) {\n      return (\n        <Section>\n          <SectionTitle>\n            <FormattedMessage {...messages.titleTopicManager} />\n          </SectionTitle>\n          <SectionDescription>\n            <FormattedMessage\n              {...messages.descriptionTopicManagerText}\n              values={{\n                adminProjectsLink: (\n                  <StyledLink to=\"/admin/projects/\">\n                    <FormattedMessage {...messages.projectsSettings} />\n                  </StyledLink>\n                ),\n              }}\n            />\n          </SectionDescription>\n\n          <ButtonWrapper>\n            <Button\n              buttonStyle=\"cl-blue\"\n              icon=\"plus-circle\"\n              linkTo=\"/admin/settings/topics/new\"\n              id=\"e2e-add-custom-topic-button\"\n            >\n              <FormattedMessage {...messages.addTopicButton} />\n            </Button>\n          </ButtonWrapper>\n          <List key={topics.length}>\n            {topics.map((topic, index) => {\n              const isLastItem = index === topics.length - 1;\n\n              if (!isNilOrError(topic)) {\n                const isDefaultTopic = topic.attributes.code !== 'custom';\n\n                return isDefaultTopic ? (\n                  <DefaultTopicRow\n                    topic={topic}\n                    isLastItem={isLastItem}\n                    key={topic.id}\n                  />\n                ) : (\n                  <CustomTopicRow\n                    topic={topic}\n                    isLastItem={isLastItem}\n                    handleDeleteClick={this.handleDeleteClick}\n                    key={topic.id}\n                  />\n                );\n              }\n\n              return null;\n            })}\n          </List>\n          <Modal\n            opened={showConfirmationModal}\n            close={this.closeSendConfirmationModal}\n            header={<FormattedMessage {...messages.confirmHeader} />}\n          >\n            <ModalContentContainer>\n              <Content>\n                <FormattedMessage {...messages.deleteTopicConfirmation} />\n              </Content>\n              <ButtonsWrapper>\n                <Button\n                  buttonStyle=\"secondary\"\n                  onClick={this.closeSendConfirmationModal}\n                >\n                  <FormattedMessage {...messages.cancel} />\n                </Button>\n                <Button\n                  buttonStyle=\"delete\"\n                  onClick={this.handleTopicDeletionConfirm}\n                  processing={processingDeletion}\n                  id=\"e2e-custom-topic-delete-confirmation-button\"\n                >\n                  <FormattedMessage {...messages.delete} />\n                </Button>\n              </ButtonsWrapper>\n            </ModalContentContainer>\n          </Modal>\n        </Section>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst TopicListWithHoCs = DragDropContext(HTML5Backend)(\n  injectIntl<Props>(TopicList)\n);\n\nexport default () => (\n  <GetTopics>{(topics) => <TopicListWithHoCs topics={topics} />}</GetTopics>\n);\n","import React, { memo } from 'react';\n\nimport { ITopicData } from 'services/topics';\nimport { isNilOrError } from 'utils/helperUtils';\nimport styled from 'styled-components';\n\n// components\nimport { Row } from 'components/admin/ResourceList';\nimport {\n  RowContent,\n  RowContentInner,\n  RowTitle,\n} from '../../components/RowStyles';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\nconst DefaultTopicLabel = styled.span``;\n\nconst StyledRowContentInner = styled(RowContentInner)`\n  height: 40px;\n`;\n\ninterface Props {\n  topic: ITopicData | Error;\n  isLastItem: boolean;\n}\n\nconst DefaultTopicRow = memo((props: Props) => {\n  const { isLastItem, topic } = props;\n\n  if (!isNilOrError(topic)) {\n    return (\n      <Row\n        key={topic.id}\n        id={topic.id}\n        className=\"e2e-topic-field-row\"\n        isLastItem={isLastItem}\n      >\n        <RowContent>\n          <StyledRowContentInner>\n            <RowTitle value={topic.attributes.title_multiloc} />\n          </StyledRowContentInner>\n        </RowContent>\n        <DefaultTopicLabel>\n          <FormattedMessage {...messages.defaultTopic} />\n        </DefaultTopicLabel>\n      </Row>\n    );\n  }\n\n  return null;\n});\n\nexport default DefaultTopicRow;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  descriptionTopicManagerText: {\n    id: 'app.containers.AdminPage.SettingsPage.descriptionTopicManagerText',\n    defaultMessage:\n      'Topics can be added to help categorise inputs. Here you can add and delete topics that you would like to use on your platform. You can add the topics to specific projects in the {adminProjectsLink}.',\n  },\n  titleTopicManager: {\n    id: 'app.containers.AdminPage.SettingsPage.titleTopicManager',\n    defaultMessage: 'Topic manager',\n  },\n  deleteButtonLabel: {\n    id: 'app.containers.AdminPage.SettingsPage.deleteTopicButtonLabel',\n    defaultMessage: 'Delete',\n  },\n  editButtonLabel: {\n    id: 'app.containers.AdminPage.SettingsPage.editTopicButtonLabel',\n    defaultMessage: 'Edit',\n  },\n  addTopicButton: {\n    id: 'app.containers.AdminPage.SettingsPage.addTopicButton',\n    defaultMessage: 'Add topic',\n  },\n  fieldTopicTitle: {\n    id: 'app.containers.AdminPage.SettingsPage.fieldTopicTitle',\n    defaultMessage: 'Topic name',\n  },\n  fieldTopicTitleTooltip: {\n    id: 'app.containers.AdminPage.SettingsPage.fieldTopicTitleTooltip',\n    defaultMessage:\n      'The name you choose for each topic will be visible for citizens during signup and when filtering projects.',\n  },\n  editTopicFormTitle: {\n    id: 'app.containers.AdminPage.SettingsPage.editTopicFormTitle',\n    defaultMessage: 'Edit topic',\n  },\n  defaultTopic: {\n    id: 'app.containers.AdminPage.SettingsPage.defaultTopic',\n    defaultMessage: 'Default topic',\n  },\n  confirmHeader: {\n    id: 'app.containers.AdminPage.SettingsPage.confirmHeader',\n    defaultMessage: 'Are you sure you want to delete this topic?',\n  },\n  deleteTopicConfirmation: {\n    id: 'app.containers.AdminPage.SettingsPage.deleteTopicConfirmation',\n    defaultMessage:\n      'This will delete the topic, including from all existing inputs. This change will apply to all projects.',\n  },\n  cancel: {\n    id: 'app.containers.AdminPage.SettingsPage.cancel',\n    defaultMessage: 'Cancel',\n  },\n  delete: {\n    id: 'app.containers.AdminPage.SettingsPage.delete',\n    defaultMessage: 'Delete',\n  },\n  projectsSettings: {\n    id: 'app.containers.AdminPage.SettingsPage.projectsSettings',\n    defaultMessage: 'project settings',\n  },\n});\n","import React, { memo } from 'react';\nimport { ITopicData } from 'services/topics';\nimport { isNilOrError } from 'utils/helperUtils';\nimport styled from 'styled-components';\n\n// components\nimport { Row } from 'components/admin/ResourceList';\nimport Button from 'components/UI/Button';\nimport {\n  RowContent,\n  RowContentInner,\n  RowTitle,\n} from '../../components/RowStyles';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\nconst Buttons = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\ninterface Props {\n  topic: ITopicData | Error;\n  isLastItem: boolean;\n  handleDeleteClick: (topicId: string) => (event: React.FormEvent<any>) => void;\n}\n\nconst DefaultTopicRow = memo((props: Props) => {\n  const { isLastItem, topic, handleDeleteClick } = props;\n\n  if (!isNilOrError(topic)) {\n    return (\n      <Row\n        key={topic.id}\n        id={topic.id}\n        className=\"e2e-topic-field-row\"\n        isLastItem={isLastItem}\n      >\n        <RowContent>\n          <RowContentInner>\n            <RowTitle value={topic.attributes.title_multiloc} />\n          </RowContentInner>\n        </RowContent>\n        <Buttons>\n          <Button\n            linkTo={`/admin/settings/topics/${topic.id}/edit`}\n            buttonStyle=\"secondary\"\n            icon=\"edit\"\n            id=\"e2e-custom-topic-edit-button\"\n          >\n            <FormattedMessage {...messages.editButtonLabel} />\n          </Button>\n\n          <Button\n            onClick={handleDeleteClick(topic.id)}\n            buttonStyle=\"text\"\n            icon=\"delete\"\n            id=\"e2e-custom-topic-delete-button\"\n          >\n            <FormattedMessage {...messages.deleteButtonLabel} />\n          </Button>\n        </Buttons>\n      </Row>\n    );\n  }\n\n  return null;\n});\n\nexport default DefaultTopicRow;\n","import React from 'react';\nimport { isEqual } from 'lodash-es';\nimport { Subscription, BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, map } from 'rxjs/operators';\nimport {\n  ITopicData,\n  topicByIdStream,\n  topicsStream,\n  Code,\n} from 'services/topics';\nimport { projectTopicsStream } from 'services/projectTopics';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  // Don't use projectId, ids or the query parameters (code, exclude_code, sort) together\n  // Only one of the three at a time.\n  projectId?: string;\n  topicIds?: string[];\n  code?: Code;\n  exclude_code?: Code;\n  sort?: 'new' | 'custom';\n}\n\ntype children = (renderProps: GetTopicsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  topics: (ITopicData | Error)[] | undefined | null | Error;\n}\n\nexport type GetTopicsChildProps =\n  | (ITopicData | Error)[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetTopics extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      topics: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => isEqual(prev, next)),\n          switchMap(({ topicIds, code, exclude_code, sort, projectId }) => {\n            const queryParameters = { code, exclude_code, sort };\n\n            if (projectId) {\n              return projectTopicsStream(projectId).observable.pipe(\n                map((topics) =>\n                  topics.data\n                    .filter((topic) => topic)\n                    .map((topic) => topic.relationships.topic.data.id)\n                ),\n                switchMap((topicIds) => {\n                  return combineLatest(\n                    topicIds.map((topicId) =>\n                      topicByIdStream(topicId).observable.pipe(\n                        map((topic) =>\n                          !isNilOrError(topic) ? topic.data : topic\n                        )\n                      )\n                    )\n                  );\n                })\n              );\n            } else if (topicIds) {\n              if (topicIds.length > 0) {\n                return combineLatest(\n                  topicIds.map((id) => {\n                    return topicByIdStream(id).observable.pipe(\n                      map((topic) =>\n                        !isNilOrError(topic) ? topic.data : topic\n                      )\n                    );\n                  })\n                );\n              }\n\n              return of(null);\n            } else {\n              return topicsStream({ queryParameters }).observable.pipe(\n                map((topics) => topics.data)\n              );\n            }\n          })\n        )\n        .subscribe((topics) => {\n          this.setState({ topics });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n    this.inputProps$.next({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { topics } = this.state;\n    return (children as children)(topics);\n  }\n}\n","// styles\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\n// components\nimport T from 'components/T';\n\nexport const RowContent = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const RowContentInner = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-right: 20px;\n`;\n\nexport const RowTitle = styled(T)`\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: 24px;\n  margin-right: 10px;\n`;\n"],"sourceRoot":""}