{"version":3,"sources":["webpack:///./app/containers/ProjectsShowPage/shared/survey/SurveyXact.tsx","webpack:///./app/components/ProjectArchivedIndicator/messages.js","webpack:///./node_modules/react-iframe/dist/es/iframe.js","webpack:///./app/containers/ProjectsShowPage/shared/poll/PollSingleChoice.tsx","webpack:///./app/containers/ProjectsShowPage/styles.ts","webpack:///./app/containers/ProjectsShowPage/shared/survey/QualtricsSurvey.tsx","webpack:///./app/resources/GetPollQuestions.tsx","webpack:///./app/containers/ProjectsShowPage/shared/survey/messages.ts","webpack:///./app/components/IdeaButton/index.tsx","webpack:///./app/containers/ProjectsShowPage/shared/volunteering/CauseCard.tsx","webpack:///./app/containers/ProjectsShowPage/timeline/Poll.tsx","webpack:///./app/containers/ProjectsShowPage/continuous/Volunteering.tsx","webpack:///./app/containers/ProjectsShowPage/shared/volunteering/messages.ts","webpack:///./app/containers/ProjectsShowPage/timeline/tracks.ts","webpack:///./app/services/pollResponses.ts","webpack:///./app/containers/ProjectsShowPage/shared/poll/Illustration.tsx","webpack:///./app/containers/ProjectsShowPage/shared/header/ProjectSharingModal.tsx","webpack:///./app/containers/ProjectsShowPage/timeline/PhaseTitle.tsx","webpack:///./app/containers/ProjectsShowPage/timeline/Volunteering.tsx","webpack:///./app/containers/ProjectsShowPage/index.tsx","webpack:///./app/containers/ProjectsShowPage/shared/poll/PollForm.tsx","webpack:///./app/hooks/useProjectFiles.ts","webpack:///./app/containers/ProjectsShowPage/timeline/index.tsx","webpack:///./app/resources/GetPollOptions.tsx","webpack:///./app/containers/ProjectsShowPage/shared/poll/PollMultipleChoice.tsx","webpack:///./app/services/pollOptions.ts","webpack:///./app/containers/ProjectsShowPage/continuous/Ideas.tsx","webpack:///./app/containers/ProjectsShowPage/timeline/events.ts","webpack:///./app/containers/ProjectsShowPage/shared/poll/index.tsx","webpack:///./app/containers/ProjectsShowPage/shared/header/ProjectHeader.tsx","webpack:///./app/hooks/useCauses.ts","webpack:///./app/components/ProjectArchivedIndicator/index.tsx","webpack:///./app/containers/ProjectsShowPage/shared/poll/FormCompleted.tsx","webpack:///./app/services/causes.ts","webpack:///./app/components/IdeaButton/tracks.ts","webpack:///./app/containers/ProjectsShowPage/getScrollToEventId.ts","webpack:///./app/containers/ProjectsShowPage/shared/survey/TypeformSurvey.tsx","webpack:///./app/containers/ProjectsShowPage/shared/survey/EnalyzerSurvey.tsx","webpack:///./app/containers/ProjectsShowPage/shared/header/ProjectInfo.tsx","webpack:///./app/containers/ProjectsShowPage/shared/survey/index.tsx","webpack:///./app/containers/ProjectsShowPage/shared/header/ProjectNotFound.tsx","webpack:///./app/services/pollQuestions.ts","webpack:///./app/utils/scroll.ts","webpack:///./app/resources/GetIdeas.tsx","webpack:///./app/containers/ProjectsShowPage/shared/survey/GoogleFormsSurvey.tsx","webpack:///./app/services/volunteers.ts","webpack:///./app/containers/ProjectsShowPage/timeline/setPhaseURL.ts","webpack:///./app/containers/ProjectsShowPage/shared/poll/messages.ts","webpack:///./app/containers/ProjectsShowPage/timeline/PhaseDescription.tsx","webpack:///./app/containers/ProjectsShowPage/timeline/Timeline.tsx","webpack:///./app/containers/ProjectsShowPage/shared/header/ProjectHelmet.tsx","webpack:///./app/containers/ProjectsShowPage/shared/events/index.tsx","webpack:///./app/containers/ProjectsShowPage/shared/header/ProjectActionButtons.tsx","webpack:///./app/containers/ProjectsShowPage/timeline/PhaseNavigation.tsx","webpack:///./app/containers/ProjectsShowPage/shared/header/ProjectActionBar.tsx","webpack:///./app/containers/ProjectsShowPage/shared/volunteering/index.tsx","webpack:///./app/containers/ProjectsShowPage/phaseParam.ts","webpack:///./app/containers/ProjectsShowPage/shared/survey/MicrosoftFormsSurvey.tsx","webpack:///./app/containers/ProjectsShowPage/continuous/Poll.tsx","webpack:///./app/containers/ProjectsShowPage/continuous/Survey.tsx","webpack:///./app/containers/ProjectsShowPage/timeline/Survey.tsx","webpack:///./app/containers/ProjectsShowPage/shared/header/ProjectInfoSideBar.tsx","webpack:///./app/containers/ProjectsShowPage/timeline/Ideas.tsx","webpack:///./app/containers/ProjectsShowPage/shared/header/ProjectNotVisible.tsx","webpack:///./app/services/actionTakingRules.ts","webpack:///./app/components/SectionContainer/index.tsx","webpack:///./app/components/IdeaCards/index.tsx","webpack:///./app/components/IdeaButton/messages.ts","webpack:///./app/containers/ProjectsShowPage/shared/survey/SurveymonkeySurvey.tsx"],"names":["surveyHeightDesktop","Container","styled","div","props","theme","borderRadius","Placeholder","defaultCardStyle","memo","surveyXactUrl","className","useState","isIframeLoaded","setIsIframeLoaded","hackyWidthThingy","setHackyWidthThingy","windowSize","smallerThanLargeTablet","windowWidth","viewportWidths","largeTablet","Spinner","url","width","height","display","overflow","onLoad","setTimeout","document","getElementById","clientWidth","toString","parseInt","id","defineMessages","archivedProject","defaultMessage","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","allowFullScreen","position","styles","onMouseOver","onMouseOut","scrolling","frameBorder","ariaHidden","sandbox","allow","title","ariaLabel","ariaLabelledby","name","target","loading","importance","referrerpolicy","allowpaymentrequest","src","defaultProps","style","create","_i","_b","keys","prop","_c","_d","currentAllow","replace","trim","border","createElement","StyledFieldSet","fieldset","StyledRadio","Radio","PollSingleChoice","question","index","options","value","disabled","onChange","key","isNilOrError","QuestionContainer","Question","QuestionNumber","QuestionText","attributes","title_multiloc","map","option","currentValue","label","Data","adopt","render","questionId","inputProps","dataprops","ProjectPageSectionTitle","h2","colorText","fontSizes","xxl","isRtl","StyledIframe","iframe","qualtricsUrl","GetPollQuestions","state","pollQuestions","undefined","participationContextType","participationContextId","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","tap","setState","filter","isString","includes","switchMap","pollQuestionsStream","observable","subscribe","data","forEach","subscription","unsubscribe","children","React","Component","surveyDisabledProjectInactive","surveyDisabledNotPermitted","surveyDisabledMaybeNotPermitted","surveyDisabledMaybeNotVerified","surveyDisabledNotPossible","surveyDisabledNotActivePhase","verificationLinkText","surveyDisabledNotVerified","signUpLinkText","logInLinkText","survey","signUpToTakeTheSurvey","logInToTakeTheSurvey","ButtonWrapper","TooltipContent","inMap","TooltipContentIcon","Icon","TooltipContentText","base","colors","clBlueDark","darken","IdeaButton","project","phase","phases","authUser","phaseId","projectId","latLng","formatMessage","intl","buttonContainerProps","disabledMessages","notPermitted","messages","postingNoPermission","postingDisabled","projectInactive","postingInactive","futureEnabled","postingNotYetPossible","notActivePhase","postingInNonActivePhases","maybeNotPermitted","postingMayNotBePermitted","getIdeaPostingRules","show","enabled","disabledReason","action","redirectToIdeaForm","trackEventByName","tracks","redirectedToIdeaFrom","clHistory","push","pathname","slug","search","stringify","lat","lng","addQueryPrefix","verify","event","preventDefault","pcType","pcId","verificationModalOpened","openVerificationModal","context","type","signUp","signUpIn","flow","shouldVerify","signUpInModalOpened","openSignUpInModal","verification","verificationContext","verificationLink","onClick","signUpLink","signInLink","signInLinkText","tippyContent","FormattedMessage","values","inputTerm","getInputTerm","process_type","interactive","placement","content","hideOnClick","tabIndex","postYourIdeaButtonClicked","ariaDisabled","getInputTermMessage","idea","submitYourIdea","addAnOption","addAProject","addAQuestion","issue","submitAnIssue","contribution","addAContribution","IdeaButtonWithHoC","injectIntl","dataProps","media","smallerThanMinTablet","Left","Right","Content","Title","h3","Description","ImageWrapper","placeholderBg","PlaceholderIcon","StyledImage","Image","VolunteersCount","VolunteersCountIcon","VolunteersCountText","span","small","ActionWrapper","cause","useTheme","handleOnVolunteerButtonClick","useCallback","relationships","user_volunteer","deleteVolunteer","addVolunteer","signIn","isVolunteer","smallerThanSmallTablet","smallTablet","image","medium","alt","xVolunteers","x","volunteers_count","isEmptyMultiloc","description_multiloc","textColor","supportHtml","icon","buttonStyle","fullWidth","withdrawVolunteerButton","becomeVolunteerButton","notLoggedIn","participation_method","navPoll","StyledContentContainer","ContentContainer","background","maxWidth","maxPageWidth","ScreenReaderOnly","tagName","invisibleTitlePoll","clickPreviousPhaseButton","clickNextPhaseButton","clickCurrentPhaseButton","clickOnPhase","streams","get","apiEndpoint","API_PATH","optionIds","add","response","response_options_attributes","optionId","option_id","fetchAllWith","dataId","fileName","requestBlob","blob","saveAs","viewBox","fill","xmlns","role","y","rx","transform","opacity","d","fillOpacity","cx","cy","r","stroke","strokeWidth","ProjectSharingModal","opened","close","projectUrl","location","href","utmParams","source","campaign","onClose","closeOnClickOutside","noClose","header","maxLength","whatsAppMessage","projectName","twitterMessage","projectTwitterMessage","layout","PhaseNumberWrapper","clGreen","PhaseNumber","HeaderTitleWrapper","HeaderTitle","large","HeaderSubtitle","selectedPhaseId","locale","tenant","phaseIds","tenantLocales","settings","core","locales","selectedPhase","find","selectedPhaseTitle","getLocalized","selectedPhaseNumber","indexOf","isSelected","selectedPhaseStatus","pastPresentOrFuture","start_at","end_at","startMoment","endMoment","startDate","format","endDate","noPhaseSelected","a11y_selectedPhaseX","VolunteeringContainer","PureComponent","main","menuHeight","footerHeight","smallerThanMaxTablet","mobileMenuHeight","mobileTopBarHeight","Loading","ContentWrapper","ProjectsShowPage","scrollToEventId","projectNotFound","isError","processType","events","projectIds","sort","user","useMemo","anyIsUndefined","isUnauthorized","isApiError","json","errors","error","userSignedInButUnauthorized","bgColor","ProjectsShowPageWrapper","query","params","phaseNumber","projectSlug","urlSegments","split","segment","isValidPhase","slice","join","withRouter","PollContainer","Label","PollForm","answers","oldAnswer","toggleElementInArray","validate","addPollResponse","flat","questions","every","question_type","max_options","isValid","questionIndex","changeAnswerSingle","changeAnswerMultiple","sendAnswer","size","projectFiles","setProjectFiles","useEffect","of","projectFilesStream","StyledSectionContainer","SectionContainer","Header","StyledProjectPageSectionTitle","StyledTimeline","Timeline","StyledPhaseDescription","PhaseDescription","hasBottmMargin","StyledPBExpenses","PBExpenses","ProjectTimelineContainer","setSelectedPhase","currentPhase","getCurrentPhase","selectedPhase$","selectPhase","latestRelevantPhase","getLatestRelevantPhase","phaseIndex","Number","isPBPhase","participationMethod","timeline","viewMode","GetPollOptions","pollOptions","pollOptionsStream","StyledCheckbox","Checkbox","MaxText","PollMultipleChoice","maxOptions","maxNumber","checked","titleMultiloc","delete","update","projectType","showIdeas","input_term","smallerThanBigTablet","isPBProject","ideas","projects","issues","contributions","showViewToggle","defaultSortingMethod","ideas_order","defaultView","presentation_mode","invisibleTitleMessage","a11y_titleInputs","eventEmitter","emit","selectedPhaseChange","observeEvent","eventValue","publishReplay","refCount","StyledWarning","Warning","pollDisabledProjectInactive","pollDisabledMaybeNotPermitted","maybeNotVerified","pollDisabledMaybeNotVerified","pollDisabledNotPermitted","pollDisabledNotActivePhase","notVerified","pollDisabledNotVerified","alreadyResponded","pollDisabledNotPossible","Poll","takingPollDisabledReason","action_descriptor","taking_poll","disabled_reason","isSignedIn","getPollTakingRules","phaseContext","signedIn","message","onVerify","logInLink","TopBar","EditButton","Button","HeaderImage","StyledProjectArchivedIndicator","ProjectArchivedIndicator","hasHeaderImage","ProjectHeader","projectFolderId","folder_id","projectHeaderImageLargeUrl","header_bg","userCanEditProject","canModerateProject","linkTo","padding","editProject","cover","fadeIn","isLazy","input","causes","setCauses","causesStream","publication_status","text","xl","StyledIllustration","Illustration","formCompleted","causeId","streamParams","ordering","object","stream","regexApiEndpoint","redirectedToSignUpForm","QUERY_NAME","lastSegment","containsQuery","getQueryValue","urlSegment","surveyHeightMobile","typeformUrl","email","user_id","queryString","omitBy","isNil","surveyUrl","EnalyzerSurvey","enalyzerUrl","ProjectTitle","h1","xxxxl","smallerThan1280px","ProjectDescription","maxHeight","ReadMoreOuterWrapper","ReadMoreInnerWrapper","ReadMoreButton","CollapseButtonWrapper","CollapseButton","expanded","setExpanded","descriptionHeight","setDescriptionHeight","collapsedDescriptionMaxHeight","toggleExpandCollapse","isEmpty","handleWidth","handleHeight","onResize","_width","fontSize","files","textDecoration","textDecorationHover","textHoverColor","fontWeight","readMore","seeLess","SignUpInWrapper","StyledSignUpIn","SignUpIn","SignUpInHeader","Survey","takingSurveyDisabledReason","taking_survey","surveyEmbedUrl","surveyService","getSurveyTakingRules","registrationNotCompleted","registration_completed_at","requiresConfirmation","confirmation_required","metaData","window","modalNoCloseSteps","inModal","noPushLinks","noAutofocus","customSignInHeader","customSignUpHeader","onSignUpInCompleted","noOp","surveymonkeyUrl","googleFormsUrl","microsoftFormsUrl","disabledMessage","noProjectFoundHere","goBackToList","newPosition","diff","participation_context_id","participation_context_type","capitalizeParticipationContextType","behavior","offset","element","top","getBoundingClientRect","pageYOffset","scrollTo","GetIdeas","pageNumber","pageSize","author","authorId","topics","areas","idea_status","ideaStatusId","publicationStatus","project_publication_status","projectPublicationStatus","bounding_box","boundingBox","assignee","feedback_needed","feedbackNeeded","queryParamsShaped","propsToQueryParamsShape","queryParameters","isArray","inputPropsQueryParameters","loadingMore","queryParameters$","ideaStatus","ideaFilters","paramsToOmit","defaultQueryParameters","getQueryParametersFromProps","omit","getQueryParameters","list","hasMore","querying","sortAttribute","getSortAttribute","sortDirection","getSortDirection","currentPage","lastPage","startAccumulatorValue","isEqual","oldPageNumber","newPageNumber","mini","ideasMiniStream","ideasStream","getPageNumberFromUrl","links","self","last","mergeScan","acc","newQueryParameters","oldQueryParamsWithoutPageNumber","cloneDeep","newQueryParamsWithoutPageNumber","isLoadingMore","selfLink","lastLink","unionBy","prevProps","_prevState","prevPropsWithoutChildren","nextPropsWithoutChildren","onLoadMore","loadMore","onChangePage","handleChangePage","onChangeProjects","handleProjectsOnChange","onChangePhase","handlePhaseOnChange","onChangeSearchTerm","handleSearchOnChange","onChangeSorting","handleSortOnChange","onChangeTopics","handleTopicsOnChange","onChangeAreas","handleAreasOnchange","onChangeStatus","handleStatusOnChange","onChangePublicationStatus","handlePublicationStatusOnChange","onChangeProjectPublicationStatus","handleProjectPublicationStatusOnChange","onChangeAssignee","handleAssigneeOnChange","onChangeFeedbackFilter","handleFeedbackFilterOnChange","onIdeaFiltering","handleIdeaFiltering","onResetParams","handleResetParamsToProps","GoogleFormsSurvey","volunteerId","currentPhaseId","findIndex","projectURL","history","pushState","hasContent","StyledFileAttachments","FileAttachments","localize","phaseFiles","resourceId","resourceType","grey","greenTransparent","rgba","green","darkGreen","clGreenDark","isHidden","ContainerInner","Phases","phaseBarHeight","PhaseBar","button","lightGreyishBlue","PhaseArrow","PhaseText","selectedPhaseBar","css","currentPhaseBar","currentSelectedPhaseBar","PhaseContainer","currentTenant","handleOnPhaseSelection","removeFocus","currentTenantLocales","totalNumberOfDays","phaseData","startIsoDate","getIsoDate","endIsoDate","Math","abs","reduce","accumulator","numberOfDays","a11y_phasesOverview","phaseTitle","isFirst","isLast","isCurrentPhase","isSelectedPhase","round","classNames","onMouseDown","a11y_phaseX","current","selected","ProjectHelmet","metaTitle","projectTitle","description","stripHtml","Helmet","unread_notifications","property","imageSizes","projectBg","StyledEventCard","EventCard","EventsContainer","ideasLoaded","_scrollToEventId","setScrollToEventId","args","arg","allHaveLoaded","scrollToElement","showLocation","showDescription","showAttachments","ideaDefaultSortMethodFallback","SeeIdeasButton","setCurrentPhase","ideasPresentOutsideViewport","setIdeasPresentOutsideViewport","surveyPresentOutsideViewport","setSurveyPresentOutsideViewport","pollPresentOutsideViewport","setPollPresentOutsideViewport","getLastPhase","loop","counter","viewportHeight","max","documentElement","clientHeight","innerHeight","ideasElement","surveyElement","pollElement","shouldSelectCurrentPhase","ideas_count","hasProjectEnded","isNumber","seeTheIdeas","seeTheOptions","seeTheProjects","seeTheQuestions","seeTheIssues","seeTheContributions","takeTheSurvey","takeThePoll","PreviousPhaseButton","CurrentPhaseButton","NextPhaseButton","PhaseNavigation","goToNextPhase","selectedPhaseIndex","nextPhaseIndex","nextPhase","goToPreviousPhase","prevPhaseIndex","prevPhase","goToCurrentPhase","navButtonSize","navButtonStyle","previousPhase","arrow","iconSize","iconColor","slideInOutTimeout","slideInOutEasing","lighten","InnerContainer","StyledIdeaButton","isVisible","setIsVisible","portalElement","addEventListener","actionButtonElement","actionButtonYOffset","passive","createPortal","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","enter","exit","Volunteering","phaseParam","str","floor","Infinity","String","isIntegerOverZero","phaseExists","Box","justifyContent","SurveyContainer","survey_embed_url","survey_service","invisibleTitleSurvey","About","List","ul","ListItem","li","ListItemIcon","ListItemButton","StyledProjectActionButtons","ProjectActionButtons","shareModalOpened","setShareModalOpened","openShareModal","closeShareModal","projectParticipantsCount","participants_count","maxBudget","max_budget","ideasCount","projectParticipationMethod","currentPhaseParticipationMethod","about","endedOn","date","xParticipants","participantsCount","xPhases","phasesCount","xIdeas","xOptions","xProjects","xQuestions","xIssues","xContributions","xIdeasInCurrentPhase","xOptionsInCurrentPhase","xProjectsInCurrentPhase","xQuestionsInCurrentPhase","xIssuesInCurrentPhase","xContributionsInCurrentPhase","xIdeasInFinalPhase","xOptionsInFinalPhase","xProjectsInFinalPhase","xQuestionsInFinalPhase","xIssuesInFinalPhase","xContributionsInFinalPhase","nothingPosted","xSurveys","xSurveysInCurrentPhase","surveysCount","poll","pollInCurrentPhase","xEvents","eventsCount","share","IdeasContainer","a11y_titleInputsPhase","thisProjectIsNotPubliclyVisibleVisitHomePageToDiscover","posting_idea","future_enabled","isAdmin","isProjectModerator","posting_enabled","backendReason","ideaPostingDisabledReason","pollTakingDisabledReason","surveyTakingDisabledReason","inCurrentPhase","section","WithFiltersSidebar","lazy","WithoutFiltersSidebar","Suspense","fallback","showFiltersSidebar","surveyContainer","script","async","appendChild","ref","setRef"],"mappings":"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","file":"5.a40322e8c7e5483ce0a5.chunk.js","sourcesContent":["import React, { memo, useState } from 'react';\n\n// styling\nimport { defaultCardStyle, viewportWidths } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\n// components\nimport { Spinner } from 'cl2-component-library';\nimport Iframe from 'react-iframe';\n\n// hooks\nimport useWindowSize from 'hooks/useWindowSize';\n\nconst surveyHeightDesktop = '600px';\nconst surveyHeightMobile = '500px';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  iframe {\n    border: solid 1px #ccc;\n    border-radius: ${(props: any) => props.theme.borderRadius};\n  }\n`;\n\nconst Placeholder = styled.div`\n  width: 100%;\n  height: ${surveyHeightDesktop};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${defaultCardStyle};\n`;\n\ntype Props = {\n  surveyXactUrl: string;\n  className?: string;\n};\n\nexport default memo<Props>(({ surveyXactUrl, className }) => {\n  const [isIframeLoaded, setIsIframeLoaded] = useState(false);\n  const [hackyWidthThingy, setHackyWidthThingy] = useState<string>('100%');\n  const windowSize = useWindowSize();\n  const smallerThanLargeTablet = windowSize\n    ? windowSize.windowWidth <= viewportWidths.largeTablet\n    : false;\n\n  const handleIframeOnLoad = () => {\n    setIsIframeLoaded(true);\n    setTimeout(() => {\n      setHackyWidthThingy(\n        document.getElementById('survey-xact-frame')?.clientWidth.toString() ||\n          '100%'\n      );\n      setTimeout(() => {\n        setHackyWidthThingy((width) =>\n          width === '100%'\n            ? document\n                .getElementById('survey-xact-frame')\n                ?.clientWidth.toString() || '99%'\n            : (parseInt(width, 10) - 1).toString()\n        );\n      }, 1000);\n    }),\n      10000;\n  };\n\n  return (\n    <Container className={className || ''}>\n      {!isIframeLoaded && (\n        <Placeholder>\n          <Spinner />\n        </Placeholder>\n      )}\n      <Iframe\n        url={surveyXactUrl}\n        width={hackyWidthThingy}\n        height={\n          smallerThanLargeTablet ? surveyHeightMobile : surveyHeightDesktop\n        }\n        display={isIframeLoaded ? 'block' : 'none'}\n        overflow=\"hidden\"\n        onLoad={handleIframeOnLoad}\n        id=\"survey-xact-frame\"\n      />\n    </Container>\n  );\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  archivedProject: {\n    id: 'app.components.ProjectArchivedIndicator.archivedProject',\n    defaultMessage: `Unfortunately you can't participate in this project anymore because it has been archived`,\n  },\n});\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from \"react\";\nimport objectAssign from \"object-assign\";\nvar Iframe = function (_a) {\n    var url = _a.url, allowFullScreen = _a.allowFullScreen, position = _a.position, display = _a.display, height = _a.height, width = _a.width, overflow = _a.overflow, styles = _a.styles, onLoad = _a.onLoad, onMouseOver = _a.onMouseOver, onMouseOut = _a.onMouseOut, scrolling = _a.scrolling, id = _a.id, frameBorder = _a.frameBorder, ariaHidden = _a.ariaHidden, sandbox = _a.sandbox, allow = _a.allow, className = _a.className, title = _a.title, ariaLabel = _a.ariaLabel, ariaLabelledby = _a.ariaLabelledby, name = _a.name, target = _a.target, loading = _a.loading, importance = _a.importance, referrerpolicy = _a.referrerpolicy, allowpaymentrequest = _a.allowpaymentrequest, src = _a.src;\n    var defaultProps = objectAssign({\n        src: src || url,\n        target: target || null,\n        style: {\n            position: position || null,\n            display: display || \"block\",\n            overflow: overflow || null\n        },\n        scrolling: scrolling || null,\n        allowpaymentrequest: allowpaymentrequest || null,\n        importance: importance || null,\n        sandbox: sandbox || null,\n        loading: loading || null,\n        styles: styles || null,\n        name: name || null,\n        className: className || null,\n        referrerpolicy: referrerpolicy || null,\n        title: title || null,\n        allow: allow || null,\n        id: id || null,\n        \"aria-labelledby\": ariaLabelledby || null,\n        \"aria-hidden\": ariaHidden || null,\n        \"aria-label\": ariaLabel || null,\n        width: width || null,\n        height: height || null,\n        onLoad: onLoad || null,\n        onMouseOver: onMouseOver || null,\n        onMouseOut: onMouseOut || null\n    });\n    var props = Object.create(null);\n    for (var _i = 0, _b = Object.keys(defaultProps); _i < _b.length; _i++) {\n        var prop = _b[_i];\n        if (defaultProps[prop] != null) {\n            props[prop] = defaultProps[prop];\n        }\n    }\n    for (var _c = 0, _d = Object.keys(props.style); _c < _d.length; _c++) {\n        var i = _d[_c];\n        if (props.style[i] == null) {\n            delete props.style[i];\n        }\n    }\n    if (allowFullScreen) {\n        if (\"allow\" in props) {\n            var currentAllow = props.allow.replace(\"fullscreen\", \"\");\n            props.allow = (\"fullscreen \" + currentAllow.trim()).trim();\n        }\n        else {\n            props.allow = \"fullscreen\";\n        }\n    }\n    if (frameBorder >= 0) {\n        if (!props.style.hasOwnProperty(\"border\")) {\n            props.style.border = frameBorder;\n        }\n    }\n    return React.createElement(\"iframe\", __assign({}, props));\n};\nexport default Iframe;\n","import React from 'react';\nimport GetPollOptions, {\n  GetPollOptionsChildProps,\n} from 'resources/GetPollOptions';\nimport { adopt } from 'react-adopt';\nimport { IPollQuestion } from 'services/pollQuestions';\nimport styled from 'styled-components';\nimport { Radio } from 'cl2-component-library';\nimport {\n  QuestionContainer,\n  Question,\n  QuestionNumber,\n  QuestionText,\n} from './PollForm';\nimport { isNilOrError } from 'utils/helperUtils';\nimport T from 'components/T';\n\nconst StyledFieldSet = styled.fieldset`\n  width: 100%;\n  border: none;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 18px;\n`;\n\nconst StyledRadio = styled(Radio)`\n  margin-left: 35px;\n`;\n\ninterface InputProps {\n  question: IPollQuestion;\n  index: number;\n  value: string | undefined;\n  disabled: boolean;\n  onChange: (questionId: string, optionId: string) => () => void;\n}\n\ninterface DataProps {\n  options: GetPollOptionsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst PollSingleChoice = ({\n  question,\n  index,\n  options,\n  value,\n  disabled,\n  onChange,\n}: Props) => {\n  return (\n    <StyledFieldSet key={question.id}>\n      {isNilOrError(options) || options.length === 0 ? null : (\n        <QuestionContainer className=\"e2e-poll-question\">\n          <Question>\n            <QuestionNumber>{index + 1}</QuestionNumber>\n            <QuestionText>\n              <T value={question.attributes.title_multiloc} />\n            </QuestionText>\n          </Question>\n          {options.map((option) => (\n            <StyledRadio\n              className=\"e2e-poll-option\"\n              key={option.id}\n              onChange={onChange(question.id, option.id)}\n              currentValue={value}\n              value={option.id}\n              name={question.id}\n              id={option.id}\n              label={<T value={option.attributes.title_multiloc} />}\n              disabled={disabled}\n            />\n          ))}\n        </QuestionContainer>\n      )}\n    </StyledFieldSet>\n  );\n};\n\nconst Data = adopt<DataProps, InputProps>({\n  options: ({ question, render }) => (\n    <GetPollOptions questionId={question.id}>{render}</GetPollOptions>\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataprops) => <PollSingleChoice {...inputProps} {...dataprops} />}\n  </Data>\n);\n","import styled from 'styled-components';\nimport { fontSizes, isRtl } from 'utils/styleUtils';\n\nexport const maxPageWidth = 1166;\n\nexport const ProjectPageSectionTitle = styled.h2`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.xxl}px;\n  line-height: normal;\n  font-weight: 500;\n  text-align: left;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  margin: 0;\n  margin-bottom: 25px;\n  padding: 0;\n\n  ${isRtl`\n    text-align: right;\n  `}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledIframe = styled.iframe`\n  display: block;\n  border: none;\n  height: 600px;\n  flex-basis: 640px;\n  border: 1px solid #ccc;\n`;\n\ntype Props = {\n  qualtricsUrl: string;\n  className?: string;\n};\n\nconst QualtricsSurvey = ({ qualtricsUrl, className }: Props) => {\n  return (\n    <Container className={className}>\n      <StyledIframe src={qualtricsUrl} />\n    </Container>\n  );\n};\n\nexport default QualtricsSurvey;\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\n\nimport { IPollQuestion, pollQuestionsStream } from 'services/pollQuestions';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { IParticipationContextType } from 'typings';\n\ninterface InputProps {\n  participationContextId: string;\n  participationContextType: IParticipationContextType;\n}\n\ntype children = (renderProps: GetPollQuestionsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  pollQuestions: IPollQuestion[] | undefined | null | Error;\n}\n\nexport type GetPollQuestionsChildProps =\n  | IPollQuestion[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetPollQuestions extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      pollQuestions: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { participationContextType, participationContextId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({\n      participationContextType,\n      participationContextId,\n    });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => this.setState({ pollQuestions: undefined })),\n          filter(\n            ({ participationContextType, participationContextId }) =>\n              isString(participationContextId) &&\n              ['project', 'phase'].includes(participationContextType)\n          ),\n          switchMap(\n            ({\n              participationContextType,\n              participationContextId,\n            }: {\n              participationContextId: string;\n              participationContextType: IParticipationContextType;\n            }) =>\n              pollQuestionsStream(\n                participationContextId,\n                participationContextType\n              ).observable\n          )\n        )\n        .subscribe((pollQuestions) =>\n          this.setState({\n            pollQuestions: !isNilOrError(pollQuestions)\n              ? pollQuestions.data\n              : pollQuestions,\n          })\n        ),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { participationContextId, participationContextType } = this.props;\n    this.inputProps$.next({ participationContextId, participationContextType });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { pollQuestions } = this.state;\n    return (children as children)(pollQuestions);\n  }\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  surveyDisabledProjectInactive: {\n    id:\n      'app.containers.ProjectsShowPage.process.survey.surveyDisabledProjectInactive',\n    defaultMessage:\n      'The survey is no longer available, since this proect is no longer active.',\n  },\n  surveyDisabledNotPermitted: {\n    id:\n      'app.containers.ProjectsShowPage.process.survey.surveyDisabledNotPermitted',\n    defaultMessage:\n      \"Unfortunately, you don't have the rights to take this survey.\",\n  },\n  surveyDisabledMaybeNotPermitted: {\n    id:\n      'app.containers.ProjectsShowPage.process.survey.surveyDisabledMaybeNotPermitted',\n    defaultMessage:\n      'Only certain users can take this survey. Please {signUpLink} or {logInLink} first.',\n  },\n  surveyDisabledMaybeNotVerified: {\n    id:\n      'app.containers.ProjectsShowPage.process.survey.surveyDisabledMaybeNotVerified',\n    defaultMessage:\n      'Only verified users can take this survey. Please {signUpLink} or {logInLink} first.',\n  },\n  surveyDisabledNotPossible: {\n    id:\n      'app.containers.ProjectsShowPage.process.survey.surveyDisabledNotPossible',\n    defaultMessage: 'It is currently impossible to take this survey.',\n  },\n  surveyDisabledNotActivePhase: {\n    id:\n      'app.containers.ProjectsShowPage.process.survey.surveyDisabledNotActivePhase',\n    defaultMessage:\n      'This survey can only be taken when this phase in the timeline is active.',\n  },\n  verificationLinkText: {\n    id: 'app.containers.ProjectsShowPage.process.survey.verificationLinkText',\n    defaultMessage: 'Verify your account now.',\n  },\n  surveyDisabledNotVerified: {\n    id:\n      'app.containers.ProjectsShowPage.process.survey.surveyDisabledNotVerified',\n    defaultMessage:\n      'Taking this survey requires verification of your account. {verificationLink}',\n  },\n  signUpLinkText: {\n    id: 'app.containers.ProjectsShowPage.process.survey.signUpLinkText',\n    defaultMessage: 'sign up',\n  },\n  logInLinkText: {\n    id: 'app.containers.ProjectsShowPage.process.survey.logInLinkText',\n    defaultMessage: 'log in',\n  },\n  survey: {\n    id: 'app.containers.ProjectsShowPage.process.survey.survey',\n    defaultMessage: 'Survey',\n  },\n  signUpToTakeTheSurvey: {\n    id: 'app.containers.ProjectsShowPage.process.survey.signUpToTakeTheSurvey',\n    defaultMessage: 'Sign up to take the survey',\n  },\n  logInToTakeTheSurvey: {\n    id: 'app.containers.ProjectsShowPage.process.survey.logInToTakeTheSurvey',\n    defaultMessage: 'Log in to take the survey',\n  },\n});\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\nimport clHistory from 'utils/cl-router/history';\nimport { stringify } from 'qs';\n\n// typings\nimport { IParticipationContextType } from 'typings';\n\n// services\nimport {\n  getIdeaPostingRules,\n  IIdeaPostingDisabledReason,\n} from 'services/actionTakingRules';\nimport { getInputTerm } from 'services/participationContexts';\n\n// resources\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhase, { GetPhaseChildProps } from 'resources/GetPhase';\nimport GetPhases, { GetPhasesChildProps } from 'resources/GetPhases';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// components\nimport Button, { Props as ButtonProps } from 'components/UI/Button';\nimport Tippy from '@tippyjs/react';\nimport { Icon } from 'cl2-component-library';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// utils\nimport { openSignUpInModal } from 'components/SignUpIn/events';\n\n// events\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\n\n// tracks\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// styling\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\n// typings\nimport { LatLng } from 'leaflet';\n\nconst Container = styled.div``;\n\nconst ButtonWrapper = styled.div``;\n\nconst TooltipContent = styled.div<{ inMap?: boolean }>`\n  display: flex;\n  align-items: center;\n  padding: ${(props) => (props.inMap ? '0px' : '15px')};\n`;\n\nconst TooltipContentIcon = styled(Icon)`\n  flex: 0 0 25px;\n  width: 20px;\n  height: 25px;\n  margin-right: 1rem;\n`;\n\nconst TooltipContentText = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  font-weight: 400;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n\n  a,\n  button {\n    color: ${colors.clBlueDark};\n    font-size: ${fontSizes.base}px;\n    line-height: normal;\n    font-weight: 400;\n    text-align: left;\n    text-decoration: underline;\n    white-space: normal;\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    word-break: break-all;\n    word-break: break-word;\n    hyphens: auto;\n    display: inline;\n    padding: 0px;\n    margin: 0px;\n    cursor: pointer;\n    transition: all 100ms ease-out;\n\n    &:hover {\n      color: ${darken(0.15, colors.clBlueDark)};\n      text-decoration: underline;\n    }\n  }\n`;\n\ninterface DataProps {\n  project: GetProjectChildProps;\n  phase: GetPhaseChildProps;\n  phases: GetPhasesChildProps;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface InputProps extends Omit<ButtonProps, 'onClick'> {\n  id?: string;\n  projectId: string;\n  phaseId?: string | undefined | null;\n  latLng?: LatLng | null;\n  inMap?: boolean;\n  className?: string;\n  participationContextType: IParticipationContextType;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst IdeaButton = memo<Props & InjectedIntlProps>(\n  ({\n    id,\n    project,\n    phase,\n    phases,\n    authUser,\n    participationContextType,\n    phaseId,\n    projectId,\n    inMap,\n    className,\n    latLng,\n    intl: { formatMessage },\n    ...buttonContainerProps\n  }) => {\n    const disabledMessages: {\n      [key in IIdeaPostingDisabledReason]: ReactIntl.FormattedMessage.MessageDescriptor;\n    } = {\n      notPermitted: messages.postingNoPermission,\n      postingDisabled: messages.postingDisabled,\n      projectInactive: messages.postingInactive,\n      futureEnabled: messages.postingNotYetPossible,\n      notActivePhase: messages.postingInNonActivePhases,\n      maybeNotPermitted: messages.postingMayNotBePermitted,\n    };\n    const { show, enabled, disabledReason, action } = getIdeaPostingRules({\n      project,\n      phase,\n      authUser,\n    });\n\n    const onClick = (event: React.FormEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n\n      trackEventByName(tracks.postYourIdeaButtonClicked);\n\n      // if not logged in\n      if (action === 'sign_in_up' || action === 'sign_in_up_and_verify') {\n        signUp();\n      }\n\n      // if logged in but not verified and verification required\n      if (action === 'verify') {\n        verify();\n      }\n\n      // if logegd in and posting allowed\n      if (enabled === true) {\n        redirectToIdeaForm();\n      }\n    };\n\n    const redirectToIdeaForm = () => {\n      if (!isNilOrError(project)) {\n        trackEventByName(tracks.redirectedToIdeaFrom);\n\n        clHistory.push({\n          pathname: `/projects/${project.attributes.slug}/ideas/new`,\n          search: latLng\n            ? stringify(\n                { lat: latLng.lat, lng: latLng.lng },\n                { addQueryPrefix: true }\n              )\n            : undefined,\n        });\n      }\n    };\n\n    const verify = (event?: React.MouseEvent) => {\n      event?.preventDefault();\n\n      const pcType = participationContextType;\n      const pcId = pcType === 'phase' ? phaseId : projectId;\n\n      if (pcId && pcType) {\n        trackEventByName(tracks.verificationModalOpened);\n        openVerificationModal({\n          context: {\n            action: 'posting_idea',\n            id: pcId,\n            type: pcType,\n          },\n        });\n      }\n    };\n\n    const signIn = (event?: React.MouseEvent) => {\n      signUpIn('signin')(event);\n    };\n\n    const signUp = (event?: React.MouseEvent) => {\n      signUpIn('signup')(event);\n    };\n\n    const signUpIn = (flow: 'signup' | 'signin') => (\n      event?: React.MouseEvent\n    ) => {\n      event?.preventDefault();\n\n      const pcType = participationContextType;\n      const pcId = pcType === 'phase' ? phaseId : projectId;\n      const shouldVerify = action === 'sign_in_up_and_verify';\n\n      if (isNilOrError(authUser) && !isNilOrError(project)) {\n        trackEventByName(tracks.signUpInModalOpened);\n        openSignUpInModal({\n          flow,\n          verification: shouldVerify,\n          verificationContext:\n            shouldVerify && pcId && pcType\n              ? {\n                  action: 'posting_idea',\n                  id: pcId,\n                  type: pcType,\n                }\n              : undefined,\n          action: () => redirectToIdeaForm(),\n        });\n      }\n    };\n\n    const verificationLink = (\n      <button onClick={verify}>\n        {formatMessage(messages.verificationLinkText)}\n      </button>\n    );\n\n    const signUpLink = (\n      <button onClick={signUp}>{formatMessage(messages.signUpLinkText)}</button>\n    );\n\n    const signInLink = (\n      <button onClick={signIn}>{formatMessage(messages.signInLinkText)}</button>\n    );\n\n    if (show) {\n      const tippyContent =\n        !enabled && !!disabledReason ? (\n          <TooltipContent\n            id=\"tooltip-content\"\n            className=\"e2e-disabled-tooltip\"\n            inMap={inMap}\n          >\n            <TooltipContentIcon name=\"lock-outlined\" ariaHidden />\n            <TooltipContentText>\n              <FormattedMessage\n                {...disabledMessages[disabledReason]}\n                values={{ verificationLink, signUpLink, signInLink }}\n              />\n            </TooltipContentText>\n          </TooltipContent>\n        ) : null;\n\n      if (inMap && !enabled && !!disabledReason) {\n        return (\n          <TooltipContent\n            id=\"tooltip-content\"\n            className=\"e2e-disabled-tooltip\"\n            inMap={inMap}\n          >\n            <TooltipContentIcon name=\"lock-outlined\" ariaHidden />\n            <TooltipContentText>\n              <FormattedMessage\n                {...disabledMessages[disabledReason]}\n                values={{ verificationLink, signUpLink, signInLink }}\n              />\n            </TooltipContentText>\n          </TooltipContent>\n        );\n      }\n\n      if (!isNilOrError(project)) {\n        const inputTerm = getInputTerm(\n          project.attributes.process_type,\n          project,\n          phases\n        );\n\n        return (\n          <Container id={id || ''} className={className || ''}>\n            <Tippy\n              disabled={!tippyContent}\n              interactive={true}\n              placement=\"bottom\"\n              content={tippyContent || <></>}\n              theme=\"light\"\n              hideOnClick={false}\n            >\n              <ButtonWrapper\n                tabIndex={!enabled ? 0 : -1}\n                className={`e2e-idea-button ${!enabled ? 'disabled' : ''} ${\n                  disabledReason ? disabledReason : ''\n                }`}\n              >\n                <Button\n                  {...buttonContainerProps}\n                  aria-describedby=\"tooltip-content\"\n                  onClick={onClick}\n                  disabled={!enabled}\n                  ariaDisabled={false}\n                >\n                  <FormattedMessage\n                    {...getInputTermMessage(inputTerm, {\n                      idea: messages.submitYourIdea,\n                      option: messages.addAnOption,\n                      project: messages.addAProject,\n                      question: messages.addAQuestion,\n                      issue: messages.submitAnIssue,\n                      contribution: messages.addAContribution,\n                    })}\n                  />\n                </Button>\n              </ButtonWrapper>\n            </Tippy>\n          </Container>\n        );\n      }\n    }\n\n    return null;\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n  phases: ({ projectId, render }) => (\n    <GetPhases projectId={projectId}>{render}</GetPhases>\n  ),\n  phase: ({ phaseId, render }) => <GetPhase id={phaseId}>{render}</GetPhase>,\n});\n\nconst IdeaButtonWithHoC = injectIntl(IdeaButton);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeaButtonWithHoC {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { memo, useCallback } from 'react';\n\n// services\nimport { addVolunteer, deleteVolunteer } from 'services/volunteers';\nimport { ICauseData } from 'services/causes';\n\n// resource hooks\nimport useAuthUser from 'hooks/useAuthUser';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// components\nimport Image from 'components/UI/Image';\nimport { Icon } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\nimport QuillEditedContent from 'components/UI/QuillEditedContent';\nimport Warning from 'components/UI/Warning';\n\n// utils\nimport { isEmptyMultiloc } from 'utils/helperUtils';\nimport { openSignUpInModal } from 'components/SignUpIn/events';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport T from 'components/T';\nimport messages from './messages';\n\n// styling\nimport styled, { useTheme } from 'styled-components';\nimport {\n  fontSizes,\n  colors,\n  media,\n  viewportWidths,\n  defaultCardStyle,\n  isRtl,\n} from 'utils/styleUtils';\n\nconst Container = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: stretch;\n  ${defaultCardStyle};\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n\n  ${media.smallerThanMinTablet`\n    flex-direction: column;\n  `}\n`;\n\nconst Left = styled.div`\n  flex: 0 0 300px;\n  width: 300px;\n  overflow: hidden;\n\n  ${media.smallerThanMinTablet`\n    flex: auto;\n    width: auto;\n    margin-bottom: 20px;\n  `}\n`;\n\nconst Right = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  margin-left: 40px;\n\n  ${isRtl`\n  margin-left: 0;\n  margin-right: 40px;\n  `}\n\n  ${media.smallerThanMinTablet`\n    margin-left: 0px;\n  `}\n`;\n\nconst Content = styled.div`\n  flex: 1 1 auto;\n  margin-bottom: 30px;\n`;\n\nconst Title = styled.h3`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.xxl}px;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n  margin-bottom: 20px;\n  padding: 0;\n`;\n\nconst Description = styled.div`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n`;\n\nconst ImageWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  overflow: hidden;\n\n  &.fillBackground {\n    height: 225px;\n    background: ${colors.placeholderBg};\n  }\n`;\n\nconst PlaceholderIcon = styled(Icon)`\n  flex: 0 0 56px;\n  width: 56px;\n  height: 56px;\n  fill: #fff;\n`;\n\nconst StyledImage = styled(Image)`\n  width: 100%;\n`;\n\nconst VolunteersCount = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  display: flex;\n  align-items: center;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 10px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  background: rgba(0, 0, 0, 0.75);\n\n  ${isRtl`\n    left: auto;\n    right: 10px;\n  `}\n`;\n\nconst VolunteersCountIcon = styled(Icon)`\n  flex: 0 0 16px;\n  width: 16px;\n  height: 16px;\n  fill: #fff;\n  margin-right: 8px;\n`;\n\nconst VolunteersCountText = styled.span`\n  color: #fff;\n  font-size: ${fontSizes.small}px;\n  font-weight: 300;\n`;\n\nconst ActionWrapper = styled.div`\n  display: flex;\n\n  ${isRtl`\n   flex-direction: row-reverse;\n `}\n`;\n\ninterface Props {\n  cause: ICauseData;\n  className?: string;\n}\n\nconst CauseCard = memo<Props>(({ cause, className }) => {\n  const theme: any = useTheme();\n  const authUser = useAuthUser();\n  const { windowWidth } = useWindowSize();\n\n  const handleOnVolunteerButtonClick = useCallback(() => {\n    if (cause.relationships?.user_volunteer?.data) {\n      deleteVolunteer(cause.id, cause.relationships.user_volunteer.data.id);\n    } else {\n      addVolunteer(cause.id);\n    }\n  }, [cause]);\n\n  const signIn = useCallback(() => {\n    openSignUpInModal({\n      flow: 'signin',\n      action: () => handleOnVolunteerButtonClick(),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const signUp = useCallback(() => {\n    openSignUpInModal({\n      flow: 'signup',\n      action: () => handleOnVolunteerButtonClick(),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isVolunteer = !!cause.relationships?.user_volunteer?.data;\n  const smallerThanSmallTablet = windowWidth <= viewportWidths.smallTablet;\n  const signUpLink = (\n    <button onClick={signUp}>\n      <FormattedMessage {...messages.signUpLinkText} />\n    </button>\n  );\n  const signInLink = (\n    <button onClick={signIn}>\n      <FormattedMessage {...messages.signInLinkText} />\n    </button>\n  );\n\n  return (\n    <Container className={className}>\n      <Left>\n        {cause.attributes.image.medium ? (\n          <ImageWrapper>\n            <StyledImage src={cause.attributes.image.medium} alt=\"\" />\n            <VolunteersCount>\n              <VolunteersCountIcon name=\"volunteer-hand\" />\n              <VolunteersCountText>\n                <FormattedMessage\n                  {...messages.xVolunteers}\n                  values={{ x: cause.attributes.volunteers_count }}\n                />\n              </VolunteersCountText>\n            </VolunteersCount>\n          </ImageWrapper>\n        ) : (\n          <ImageWrapper className=\"fillBackground\">\n            <PlaceholderIcon name=\"volunteer-hand\" />\n            <VolunteersCount>\n              <VolunteersCountIcon name=\"volunteer-hand\" />\n              <VolunteersCountText>\n                <FormattedMessage\n                  {...messages.xVolunteers}\n                  values={{ x: cause.attributes.volunteers_count }}\n                />\n              </VolunteersCountText>\n            </VolunteersCount>\n          </ImageWrapper>\n        )}\n      </Left>\n\n      <Right>\n        <Content>\n          <Title>\n            <T value={cause.attributes.title_multiloc} />\n          </Title>\n\n          {!isEmptyMultiloc(cause.attributes.description_multiloc) && (\n            <Description>\n              <QuillEditedContent textColor={theme.colorText}>\n                <T value={cause.attributes.description_multiloc} supportHtml />\n              </QuillEditedContent>\n            </Description>\n          )}\n        </Content>\n\n        <ActionWrapper>\n          {!authUser ? (\n            <Warning>\n              <FormattedMessage\n                {...messages.notLoggedIn}\n                values={{ signUpLink, signInLink }}\n              />\n            </Warning>\n          ) : (\n            <Button\n              onClick={handleOnVolunteerButtonClick}\n              icon={!isVolunteer ? 'volunteer-hand' : 'unvolunteer-hand'}\n              disabled={!authUser}\n              buttonStyle={!isVolunteer ? 'primary' : 'secondary'}\n              fullWidth={smallerThanSmallTablet}\n            >\n              {isVolunteer ? (\n                <FormattedMessage {...messages.withdrawVolunteerButton} />\n              ) : (\n                <FormattedMessage {...messages.becomeVolunteerButton} />\n              )}\n            </Button>\n          )}\n        </ActionWrapper>\n      </Right>\n    </Container>\n  );\n});\n\nexport default CauseCard;\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Poll from '../shared/poll';\nimport { ProjectPageSectionTitle } from 'containers/ProjectsShowPage/styles';\n\n// hooks\nimport usePhase from 'hooks/usePhase';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// styling\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\ninterface Props {\n  projectId: string;\n  phaseId: string | null;\n  className?: string;\n}\n\nconst PollContainer = memo<Props>(({ projectId, phaseId, className }) => {\n  const phase = usePhase(phaseId);\n\n  if (\n    !isNilOrError(phase) &&\n    phase.attributes.participation_method === 'poll'\n  ) {\n    return (\n      <Container\n        className={`e2e-timeline-project-poll-container ${className || ''}`}\n      >\n        <ProjectPageSectionTitle>\n          <FormattedMessage {...messages.navPoll} />\n        </ProjectPageSectionTitle>\n        <Poll phaseId={phaseId} projectId={projectId} type=\"phase\" />\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default PollContainer;\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport ContentContainer from 'components/ContentContainer';\nimport Volunteering from '../shared/volunteering';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { maxPageWidth } from 'containers/ProjectsShowPage/styles';\nimport SectionContainer from 'components/SectionContainer';\n\n// hooks\nimport useProject from 'hooks/useProject';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// styling\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\n\nconst Container = styled.div``;\n\nconst StyledContentContainer = styled(ContentContainer)`\n  background: ${colors.background};\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst VolunteeringContainer = memo<Props>(({ projectId, className }) => {\n  const project = useProject({ projectId });\n\n  if (\n    !isNilOrError(project) &&\n    project.attributes.process_type === 'continuous' &&\n    project.attributes.participation_method === 'volunteering'\n  ) {\n    return (\n      <Container\n        id=\"e2e-continuous-project-volunteering-container\"\n        className={className || ''}\n      >\n        <StyledContentContainer maxWidth={maxPageWidth}>\n          <SectionContainer>\n            <ScreenReaderOnly>\n              <FormattedMessage tagName=\"h2\" {...messages.invisibleTitlePoll} />\n            </ScreenReaderOnly>\n            <Volunteering\n              type=\"project\"\n              projectId={project.id}\n              phaseId={null}\n            />\n          </SectionContainer>\n        </StyledContentContainer>\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default VolunteeringContainer;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  xVolunteers: {\n    id: 'app.containers.ProjectsShowPage.VolunteeringSection.xVolunteers',\n    defaultMessage:\n      '{x, plural, =0 {no volunteers} one {# volunteer} other {# volunteers}}',\n  },\n  becomeVolunteerButton: {\n    id:\n      'app.containers.ProjectsShowPage.VolunteeringSection.becomeVolunteerButton',\n    defaultMessage: 'I want to volunteer',\n  },\n  withdrawVolunteerButton: {\n    id:\n      'app.containers.ProjectsShowPage.VolunteeringSection.withdrawVolunteerButton',\n    defaultMessage: 'I withdraw my offer to volunteer',\n  },\n  notLoggedIn: {\n    id: 'app.containers.ProjectsShowPage.VolunteeringSection.notLoggedIn',\n    defaultMessage:\n      'Please {signInLink} or {signUpLink} first in order to volunteer for this activity',\n  },\n  signInLinkText: {\n    id: 'app.containers.ProjectsShowPage.VolunteeringSection.signInLinkText',\n    defaultMessage: 'log in',\n  },\n  signUpLinkText: {\n    id: 'app.containers.ProjectsShowPage.VolunteeringSection.signUpLinkText',\n    defaultMessage: 'sign up',\n  },\n});\n","export default {\n  clickPreviousPhaseButton: 'Go to previous phase button clicked',\n  clickNextPhaseButton: 'Go to next phase button clicked',\n  clickCurrentPhaseButton: 'Go the current phase button clicked',\n  clickOnPhase: 'Clicked on phase',\n};\n","import { API_PATH } from 'containers/App/constants';\nimport streams from 'utils/streams';\nimport { requestBlob } from 'utils/request';\nimport { saveAs } from 'file-saver';\nimport { IParticipationContextType } from 'typings';\n\nexport interface IPollResponseAttributes {\n  series: { [key: string]: number };\n}\n\nexport async function addPollResponse(\n  participationContextId: string,\n  participationContextType: IParticipationContextType,\n  optionIds: string[],\n  projectId?: string\n) {\n  const response = await streams.add(\n    `${API_PATH}/${participationContextType}s/${participationContextId}/poll_responses`,\n    {\n      response: {\n        response_options_attributes: optionIds.map((optionId) => ({\n          option_id: optionId,\n        })),\n      },\n    }\n  );\n  projectId && streams.fetchAllWith({ dataId: [projectId] });\n  return response;\n}\n\nexport async function exportPollResponses(\n  participationContextId: string,\n  participationContextType: IParticipationContextType,\n  fileName: string\n) {\n  const blob = await requestBlob(\n    `${API_PATH}/${participationContextType}s/${participationContextId}/poll_responses/as_xlsx`,\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n  );\n  saveAs(blob, fileName);\n}\nexport function getPollResponses(\n  participationContextId: string,\n  participationContextType: IParticipationContextType\n) {\n  const response = streams.get<IPollResponseAttributes>({\n    apiEndpoint: `${API_PATH}/${participationContextType}s/${participationContextId}/poll_responses/responses_count`,\n  });\n  return response;\n}\n","import React from 'react';\n\nexport default ({ className }: { className?: string }) => (\n  <svg\n    width=\"477\"\n    height=\"156\"\n    viewBox=\"0 0 477 156\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className || ''}\n    aria-hidden\n    role=\"img\"\n  >\n    <rect\n      x=\"115.014\"\n      y=\"48.6638\"\n      width=\"17\"\n      height=\"17\"\n      rx=\"2\"\n      transform=\"rotate(18 115.014 48.6638)\"\n      fill=\"#80CFD8\"\n    />\n    <rect\n      opacity=\"0.0338399\"\n      x=\"16.7604\"\n      y=\"62.6638\"\n      width=\"17\"\n      height=\"17\"\n      rx=\"2\"\n      transform=\"rotate(-170.368 16.7604 62.6638)\"\n      fill=\"#80CFD8\"\n    />\n    <rect\n      opacity=\"0.469507\"\n      x=\"269.76\"\n      y=\"83.6638\"\n      width=\"17\"\n      height=\"17\"\n      rx=\"2\"\n      transform=\"rotate(135.379 269.76 83.6638)\"\n      fill=\"#80CFD8\"\n    />\n    <rect\n      opacity=\"0.506389\"\n      x=\"338.76\"\n      y=\"100.664\"\n      width=\"12\"\n      height=\"12\"\n      rx=\"2\"\n      transform=\"rotate(-6.08579 338.76 100.664)\"\n      fill=\"#80CFD8\"\n    />\n    <rect\n      opacity=\"0.106245\"\n      x=\"457.76\"\n      y=\"29.6638\"\n      width=\"17\"\n      height=\"17\"\n      rx=\"2\"\n      transform=\"rotate(-8.11439 457.76 29.6638)\"\n      fill=\"#80CFD8\"\n    />\n    <path\n      opacity=\"0.370054\"\n      d=\"M166.289 119.37L168.749 133.007L155.709 128.319L166.289 119.37Z\"\n      fill=\"#FF672F\"\n    />\n    <path\n      opacity=\"0.902804\"\n      d=\"M40.7953 30.734L28.7649 37.6094L28.8258 23.7531L40.7953 30.734Z\"\n      fill=\"#FF672F\"\n      fillOpacity=\"0.3\"\n    />\n    <path\n      opacity=\"0.567912\"\n      d=\"M413.514 70.5501L399.888 73.0705L404.518 60.0105L413.514 70.5501Z\"\n      fill=\"#FF672F\"\n    />\n    <circle cx=\"139.76\" cy=\"93.6638\" r=\"4\" fill=\"#32B67A\" />\n    <circle\n      opacity=\"0.706472\"\n      cx=\"335.544\"\n      cy=\"10.5541\"\n      r=\"5.5\"\n      transform=\"rotate(-3.0429 335.544 10.5541)\"\n      fill=\"#32B67A\"\n      fillOpacity=\"0.2\"\n    />\n    <circle\n      opacity=\"0.822581\"\n      cx=\"321.864\"\n      cy=\"61.3503\"\n      r=\"6.5\"\n      transform=\"rotate(149.576 321.864 61.3503)\"\n      fill=\"#32B67A\"\n    />\n    <circle\n      opacity=\"0.126479\"\n      cx=\"171.211\"\n      cy=\"8.83188\"\n      r=\"6.5\"\n      transform=\"rotate(-151.099 171.211 8.83188)\"\n      fill=\"#32B67A\"\n    />\n    <circle\n      opacity=\"0.98217\"\n      cx=\"83.928\"\n      cy=\"39.3556\"\n      r=\"5\"\n      transform=\"rotate(170.873 83.928 39.3556)\"\n      fill=\"#32B67A\"\n      fillOpacity=\"0.2\"\n    />\n    <circle\n      opacity=\"0.800979\"\n      cx=\"193.015\"\n      cy=\"104.015\"\n      r=\"6.5\"\n      transform=\"rotate(56.2815 193.015 104.015)\"\n      fill=\"#32B67A\"\n    />\n    <path\n      d=\"M270.176 86.2367L251.218 78.1117C250.66 77.8734 250.007 78.0359 249.628 78.5098L244.211 85.2806C243.957 85.6002 243.859 86.0173 243.946 86.4181C244.027 86.7946 244.276 87.1088 244.612 87.2956L227.606 93.6738C226.179 94.21 224.96 95.2229 224.175 96.5311L218.552 105.902C217.355 107.898 217.261 110.333 218.303 112.413L218.701 113.209H212.767C212.02 113.209 211.413 113.816 211.413 114.563V140.292H207.351C206.603 140.292 205.997 140.899 205.997 141.646C205.997 142.394 206.603 143.001 207.351 143.001H253.392C254.14 143.001 254.747 142.394 254.747 141.646C254.747 140.899 254.14 140.292 253.392 140.292H249.33V126.453C249.33 125.99 249.092 125.556 248.702 125.31C248.312 125.063 247.819 125.031 247.399 125.229C245.917 125.927 244.821 126.285 244.298 126.436C244.184 126.469 244.078 126.515 243.978 126.577L235.16 131.867C233.754 132.712 232.151 133.159 230.523 133.159C227.528 133.159 224.733 131.674 223.016 129.131C221.659 127.095 221.19 124.654 221.697 122.263C222.203 119.871 223.614 117.832 225.678 116.519L226.959 115.709C227.88 115.129 228.717 114.606 229.467 114.143C229.99 113.818 230.231 113.185 230.049 112.594C229.716 111.508 229.161 110.544 228.633 109.796C230.707 108.908 233.486 107.297 234.895 105.653C234.903 105.655 234.911 105.661 234.919 105.666C235.222 105.845 235.572 106.032 235.97 106.224C235.991 106.235 236.008 106.246 236.029 106.257C236.032 106.257 236.035 106.257 236.037 106.259C237.042 106.744 238.31 107.232 239.799 107.521C238.218 109.48 236.606 111.904 236.021 113.518C234.903 114.021 232.568 115.34 227.13 118.804C225.686 119.723 224.7 121.147 224.346 122.821C223.993 124.495 224.321 126.204 225.274 127.634C226.488 129.454 228.484 130.448 230.523 130.448C231.631 130.448 232.752 130.155 233.771 129.546L243.076 123.964C244.533 123.609 251.773 121.442 257.257 112.57C261.555 105.618 263.974 100.017 264.971 97.4925L265.122 97.5684C265.696 97.8554 266.308 98.0017 266.937 98.0017C267.979 98.0017 269.009 97.5846 269.764 96.8561C270.561 96.0869 271.002 95.0496 271.002 93.9365V87.4852C270.997 86.9381 270.674 86.4479 270.176 86.2367Z\"\n      fill=\"#32B67A\"\n    />\n    <path\n      d=\"M253.507 146.094L261.143 138.458L261.286 138.6L252.8 147.086L248.714 143L248.857 142.858L252.093 146.094L252.8 146.801L253.507 146.094ZM255 131C248.37 131 243 136.37 243 143C243 149.624 248.37 155 255 155C261.624 155 267 149.624 267 143C267 136.37 261.624 131 255 131Z\"\n      fill=\"#448943\"\n      stroke=\"white\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);\n","import React, { memo, useCallback } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Modal from 'components/UI/Modal';\nimport SharingButtons from 'components/Sharing/SharingButtons';\n\n// hooks\nimport useAuthUser from 'hooks/useAuthUser';\nimport useProject from 'hooks/useProject';\n\n// i18n\nimport T from 'components/T';\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// style\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 400px;\n  padding: 40px 25px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ninterface Props {\n  projectId: string;\n  opened: boolean;\n  className?: string;\n  close: () => void;\n}\n\nconst ProjectSharingModal = memo<Props & InjectedIntlProps>(\n  ({ projectId, className, opened, close, intl: { formatMessage } }) => {\n    const authUser = useAuthUser();\n    const project = useProject({ projectId });\n\n    const projectUrl = location.href;\n    const utmParams = !isNilOrError(authUser)\n      ? {\n          source: 'share_project',\n          campaign: 'share_content',\n          content: authUser.id,\n        }\n      : {\n          source: 'share_project',\n          campaign: 'share_content',\n        };\n\n    const onClose = useCallback(() => {\n      close();\n    }, [close]);\n\n    if (!isNilOrError(project)) {\n      return (\n        <Modal\n          width={550}\n          opened={opened}\n          close={onClose}\n          closeOnClickOutside={true}\n          noClose={false}\n          header={<T value={project.attributes.title_multiloc} />}\n        >\n          <Container className={className}>\n            {opened && (\n              <>\n                <T value={project.attributes.title_multiloc} maxLength={50}>\n                  {(title) => {\n                    return (\n                      <SharingButtons\n                        context=\"project\"\n                        url={projectUrl}\n                        whatsAppMessage={formatMessage(\n                          messages.whatsAppMessage,\n                          {\n                            projectName: title,\n                          }\n                        )}\n                        twitterMessage={formatMessage(\n                          messages.projectTwitterMessage,\n                          {\n                            projectName: title,\n                          }\n                        )}\n                        utmParams={utmParams}\n                        layout=\"columnLayout\"\n                      />\n                    );\n                  }}\n                </T>\n              </>\n            )}\n          </Container>\n        </Modal>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(ProjectSharingModal);\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { indexOf } from 'lodash-es';\nimport moment from 'moment';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport usePhases from 'hooks/usePhases';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// i18n\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { getLocalized } from 'utils/i18n';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// utils\nimport { pastPresentOrFuture } from 'utils/dateUtils';\n\n// style\nimport styled from 'styled-components';\nimport {\n  media,\n  colors,\n  fontSizes,\n  viewportWidths,\n  isRtl,\n} from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst PhaseNumberWrapper = styled.div`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: 39px;\n  width: 39px;\n  height: 39px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${colors.label};\n  margin-right: 11px;\n\n  ${isRtl`\n    margin-right: 0;\n    margin-left: 11px;\n  `}\n\n  &.present {\n    background: ${colors.clGreen};\n  }\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `}\n`;\n\nconst PhaseNumber = styled.div`\n  color: #fff;\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  font-weight: 400;\n`;\n\nconst HeaderTitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: flex-start;\n\n  ${isRtl`\n    align-items: flex-end;\n  `}\n`;\n\nconst HeaderTitle = styled.h2`\n  color: ${colors.label};\n  font-size: ${fontSizes.large + 1}px;\n  line-height: normal;\n  font-weight: 600;\n  margin: 0;\n  padding: 0;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n\n  &.present {\n    color: ${colors.clGreen};\n  }\n`;\n\nconst HeaderSubtitle = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  font-weight: 400;\n  display: flex;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n  margin-top: 5px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n `}\n`;\n\ninterface Props {\n  projectId: string;\n  selectedPhaseId: string | null;\n  className?: string;\n}\n\nconst PhaseTitle = memo<Props>(({ projectId, selectedPhaseId, className }) => {\n  const locale = useLocale();\n  const tenant = useAppConfiguration();\n  const phases = usePhases(projectId);\n  const { windowWidth } = useWindowSize();\n\n  const smallerThanSmallTablet = windowWidth <= viewportWidths.smallTablet;\n\n  if (\n    !isNilOrError(locale) &&\n    !isNilOrError(tenant) &&\n    !isNilOrError(phases) &&\n    phases.length > 0\n  ) {\n    const phaseIds = phases ? phases.map((phase) => phase.id) : null;\n    const tenantLocales = tenant.data.attributes.settings.core.locales;\n    const selectedPhase = selectedPhaseId\n      ? phases.find((phase) => phase.id === selectedPhaseId)\n      : null;\n    let selectedPhaseTitle = selectedPhase\n      ? getLocalized(\n          selectedPhase.attributes.title_multiloc,\n          locale,\n          tenantLocales\n        )\n      : null;\n\n    const selectedPhaseNumber = selectedPhase\n      ? indexOf(phaseIds, selectedPhaseId) + 1\n      : null;\n    const isSelected = selectedPhaseId !== null;\n    const selectedPhaseStatus =\n      selectedPhase &&\n      pastPresentOrFuture([\n        selectedPhase.attributes.start_at,\n        selectedPhase.attributes.end_at,\n      ]);\n\n    const startMoment = moment(\n      selectedPhase?.attributes.start_at,\n      'YYYY-MM-DD'\n    );\n    const endMoment = moment(selectedPhase?.attributes.end_at, 'YYYY-MM-DD');\n    const startDate = startMoment.format('LL');\n    const endDate = endMoment.format('LL');\n\n    if (smallerThanSmallTablet && selectedPhaseTitle && selectedPhaseNumber) {\n      selectedPhaseTitle = `${selectedPhaseNumber}. ${selectedPhaseTitle}`;\n    }\n\n    return (\n      <Container className={className || ''}>\n        {isSelected && phases.length > 1 && (\n          <PhaseNumberWrapper\n            aria-hidden\n            className={`${isSelected && 'selected'} ${selectedPhaseStatus}`}\n          >\n            <PhaseNumber\n              className={`${isSelected && 'selected'} ${selectedPhaseStatus}`}\n            >\n              {selectedPhaseNumber}\n            </PhaseNumber>\n          </PhaseNumberWrapper>\n        )}\n        <HeaderTitleWrapper>\n          <HeaderTitle\n            aria-hidden\n            className={`e2e-phase-title ${\n              isSelected && 'selected'\n            } ${selectedPhaseStatus}`}\n          >\n            {selectedPhaseTitle || (\n              <FormattedMessage {...messages.noPhaseSelected} />\n            )}\n          </HeaderTitle>\n          <HeaderSubtitle className={selectedPhaseStatus || ''}>\n            {startDate} - {endDate}\n          </HeaderSubtitle>\n        </HeaderTitleWrapper>\n        <ScreenReaderOnly>\n          <FormattedMessage\n            {...messages.a11y_selectedPhaseX}\n            values={{\n              selectedPhaseNumber,\n              selectedPhaseTitle,\n            }}\n          />\n        </ScreenReaderOnly>\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default PhaseTitle;\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Volunteering from '../shared/volunteering';\n\n// resources\nimport GetPhase, { GetPhaseChildProps } from 'resources/GetPhase';\n\n// styling\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\ninterface InputProps {\n  projectId: string;\n  phaseId: string | null;\n  className?: string;\n}\n\ninterface DataProps {\n  phase: GetPhaseChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass VolunteeringContainer extends PureComponent<Props, State> {\n  render() {\n    const { projectId, phase, className } = this.props;\n\n    if (\n      !isNilOrError(phase) &&\n      phase.attributes.participation_method === 'volunteering'\n    ) {\n      return (\n        <Container\n          className={`e2e-timeline-project-volunteering-container ${\n            className || ''\n          }`}\n        >\n          <Volunteering phaseId={phase.id} projectId={projectId} type=\"phase\" />\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  phase: ({ phaseId, render }) => <GetPhase id={phaseId}>{render}</GetPhase>,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <VolunteeringContainer {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { memo, useMemo } from 'react';\nimport { isError } from 'lodash-es';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport clHistory from 'utils/cl-router/history';\n\n// components\nimport ProjectHelmet from './shared/header/ProjectHelmet';\nimport ProjectNotFound from './shared/header/ProjectNotFound';\nimport ProjectNotVisible from './shared/header/ProjectNotVisible';\nimport ProjectHeader from './shared/header/ProjectHeader';\nimport ProjectEvents from './shared/events';\nimport ContinuousIdeas from './continuous/Ideas';\nimport ContinuousSurvey from './continuous/Survey';\nimport ContinuousPoll from './continuous/Poll';\nimport ContinuousVolunteering from './continuous/Volunteering';\nimport TimelineContainer from './timeline';\nimport { Spinner } from 'cl2-component-library';\nimport ForbiddenRoute from 'components/routing/forbiddenRoute';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport useProject from 'hooks/useProject';\nimport usePhases from 'hooks/usePhases';\nimport useEvents from 'hooks/useEvents';\nimport useAuthUser from 'hooks/useAuthUser';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors } from 'utils/styleUtils';\n\n// typings\nimport { IProjectData } from 'services/projects';\n\n// other\nimport { isValidPhase } from './phaseParam';\nimport { anyIsUndefined, isNilOrError, isApiError } from 'utils/helperUtils';\nimport getScrollToEventId from './getScrollToEventId';\n\nconst Container = styled.main<{ background: string }>`\n  flex: 1 0 auto;\n  height: 100%;\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: ${(props) => props.background};\n\n  ${media.smallerThanMaxTablet`\n    min-height: calc(100vh - ${({ theme: { mobileMenuHeight } }) =>\n      mobileMenuHeight}px - ${({ theme: { mobileTopBarHeight } }) =>\n    mobileTopBarHeight}px);\n  `}\n\n  ${media.smallerThanMinTablet`\n    min-height: calc(100vh - ${({ theme: { mobileMenuHeight } }) =>\n      mobileMenuHeight}px - ${({ theme: { mobileTopBarHeight } }) =>\n    mobileTopBarHeight}px);\n  `}\n`;\n\nconst Loading = styled.div`\n  flex: 1 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n`;\n\ninterface Props {\n  project: IProjectData | Error | null | undefined;\n  scrollToEventId?: string;\n}\n\nconst ProjectsShowPage = memo<Props>(({ project, scrollToEventId }) => {\n  const projectId = !isNilOrError(project) ? project.id : undefined;\n  const projectNotFound = isError(project);\n  const processType = !isNilOrError(project)\n    ? project.attributes.process_type\n    : undefined;\n\n  const locale = useLocale();\n  const tenant = useAppConfiguration();\n  const phases = usePhases(projectId);\n  const { events } = useEvents({\n    projectIds: projectId ? [projectId] : undefined,\n    sort: 'newest',\n  });\n  const user = useAuthUser();\n\n  const loading = useMemo(() => {\n    return anyIsUndefined(locale, tenant, project, phases, events);\n  }, [locale, tenant, project, phases, events]);\n\n  const isUnauthorized = useMemo(() => {\n    if (!isApiError(project)) return false;\n\n    return project.json.errors.base[0].error === 'Unauthorized!';\n  }, [project]);\n\n  const userSignedInButUnauthorized = !isNilOrError(user) && isUnauthorized;\n  const userNotSignedInAndUnauthorized = isNilOrError(user) && isUnauthorized;\n\n  let content: JSX.Element | null = null;\n\n  if (userNotSignedInAndUnauthorized) return <ForbiddenRoute />;\n\n  if (userSignedInButUnauthorized) {\n    content = <ProjectNotVisible />;\n  } else if (loading) {\n    content = (\n      <Loading>\n        <Spinner />\n      </Loading>\n    );\n  } else if (projectNotFound) {\n    content = <ProjectNotFound />;\n  } else if (projectId && processType) {\n    content = (\n      <ContentWrapper id=\"e2e-project-page\">\n        <ProjectHeader projectId={projectId} />\n        {processType === 'continuous' ? (\n          <>\n            <ContinuousIdeas projectId={projectId} />\n            <ContinuousSurvey projectId={projectId} />\n            <ContinuousPoll projectId={projectId} />\n            <ContinuousVolunteering projectId={projectId} />\n          </>\n        ) : (\n          <TimelineContainer projectId={projectId} />\n        )}\n        <ProjectEvents\n          projectId={projectId}\n          scrollToEventId={scrollToEventId}\n        />\n      </ContentWrapper>\n    );\n  }\n\n  const bgColor =\n    !isNilOrError(events) && events.length > 0 ? '#fff' : colors.background;\n\n  return (\n    <Container background={bgColor}>\n      {!isNilOrError(project) && <ProjectHelmet project={project} />}\n      {content}\n    </Container>\n  );\n});\n\nconst ProjectsShowPageWrapper = memo<WithRouterProps>(\n  ({ location: { pathname, query }, params: { slug, phaseNumber } }) => {\n    const project = useProject({ projectSlug: slug });\n    const phases = usePhases(project?.id);\n\n    const urlSegments = pathname\n      .replace(/^\\/|\\/$/g, '')\n      .split('/')\n      .filter((segment) => segment !== '');\n\n    const scrollToEventId = getScrollToEventId(query, urlSegments);\n    const processType = project?.attributes.process_type;\n\n    // If processType is not available yet: don't render yet\n    if (!processType) return null;\n\n    // If processType is 'timeline' but the phases aren't loaded yet: don't render yet\n    if (processType === 'timeline' && isNilOrError(phases)) return null;\n\n    if (\n      processType === 'timeline' &&\n      urlSegments.length === 4 &&\n      !isNilOrError(phases) &&\n      isValidPhase(phaseNumber, phases)\n    ) {\n      // If this is a timeline project and a valid phase param was passed: continue\n      return <ProjectsShowPage project={project} />;\n    } else if (scrollToEventId) {\n      // If an event id was passed as a query param, pass it on\n      return (\n        <ProjectsShowPage project={project} scrollToEventId={scrollToEventId} />\n      );\n    } else if (urlSegments.length > 3 && urlSegments[1] === 'projects') {\n      // Redirect old childRoutes (e.g. /info, /process, ...) to the project index location\n      clHistory.replace(`/${urlSegments.slice(1, 3).join('/')}`);\n    } else if (slug) {\n      return <ProjectsShowPage project={project} />;\n    }\n\n    return null;\n  }\n);\n\nconst ProjectsShowPageWrapperWithHoC = withRouter(ProjectsShowPageWrapper);\n\nexport default ProjectsShowPageWrapperWithHoC;\n","import React, { PureComponent } from 'react';\nimport { isNilOrError, toggleElementInArray } from 'utils/helperUtils';\n\nimport { IParticipationContextType } from 'typings';\n\nimport Button from 'components/UI/Button';\n\nimport { IPollQuestion } from 'services/pollQuestions';\nimport { addPollResponse } from 'services/pollResponses';\n\nimport styled from 'styled-components';\nimport { fontSizes, defaultCardStyle } from 'utils/styleUtils';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport PollSingleChoice from './PollSingleChoice';\nimport PollMultipleChoice from './PollMultipleChoice';\n\nconst PollContainer = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const QuestionContainer = styled.div`\n  width: 100%;\n  padding: 20px;\n  ${defaultCardStyle};\n`;\n\nexport const Question = styled.h3`\n  display: flex;\n  align-items: center;\n`;\n\nexport const QuestionNumber = styled.span`\n  flex: 0 0 25px;\n  width: 25px;\n  height: 25px;\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #f2f2f2;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  margin-right: 13px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  margin-bottom: 25px;\n`;\n\nexport const QuestionText = styled.span`\n  font-size: ${fontSizes.large}px;\n  font-weight: 600;\n`;\n\ninterface Props {\n  questions: IPollQuestion[];\n  projectId: string;\n  id: string | null;\n  type: IParticipationContextType;\n  disabled: boolean;\n}\n\ninterface State {\n  answers: {\n    [questionId: string]: string[];\n  };\n}\n\nexport class PollForm extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: {},\n    };\n  }\n\n  changeAnswerSingle = (questionId: string, optionId: string) => () => {\n    this.setState((state) => ({\n      answers: { ...state.answers, [questionId]: [optionId] },\n    }));\n  };\n\n  changeAnswerMultiple = (questionId: string, optionId: string) => () => {\n    this.setState((state) => {\n      const oldAnswer = state.answers[questionId] || [];\n\n      toggleElementInArray(oldAnswer, optionId);\n\n      return { answers: { ...state.answers, [questionId]: oldAnswer } };\n    });\n  };\n\n  sendAnswer = () => {\n    const { id, type, projectId } = this.props;\n    const { answers } = this.state;\n    if (this.validate() && id) {\n      addPollResponse(id, type, Object.values(answers).flat(), projectId);\n    }\n  };\n\n  validate = () => {\n    const { answers } = this.state;\n    const { questions, disabled } = this.props;\n    // you can submit the form...\n    return (\n      !disabled && // when it's not disabled and...\n      // each question has at least one answer, and this answer is a string (representing the option) and...\n      questions.every(\n        (question) => typeof (answers[question.id] || [])[0] === 'string'\n      ) &&\n      // for multiple options questions...\n      questions\n        .filter(\n          (question) => question.attributes.question_type === 'multiple_options'\n        )\n        // the number of answers must not be greater than the maximum of answer allowed.\n        .every(\n          (question) =>\n            question.attributes.max_options &&\n            answers[question.id].length <= question.attributes.max_options\n        )\n    );\n  };\n\n  //\n\n  render() {\n    const { answers } = this.state;\n    const { questions, disabled } = this.props;\n\n    if (!isNilOrError(questions) && questions.length > 0) {\n      const isValid = this.validate();\n\n      return (\n        <>\n          <PollContainer id=\"project-poll\" className=\"e2e-poll-form\">\n            {questions.map((question, questionIndex) =>\n              question.attributes.question_type === 'single_option' ? (\n                <PollSingleChoice\n                  key={questionIndex}\n                  question={question}\n                  index={questionIndex}\n                  value={(answers[question.id] || [])[0]}\n                  disabled={disabled}\n                  onChange={this.changeAnswerSingle}\n                />\n              ) : (\n                <PollMultipleChoice\n                  key={questionIndex}\n                  question={question}\n                  index={questionIndex}\n                  value={answers[question.id]}\n                  disabled={disabled}\n                  onChange={this.changeAnswerMultiple}\n                />\n              )\n            )}\n          </PollContainer>\n          <Button\n            onClick={this.sendAnswer}\n            size=\"2\"\n            fullWidth={true}\n            disabled={!isValid}\n            className=\"e2e-send-poll\"\n          >\n            <FormattedMessage {...messages.sendAnswer} />\n          </Button>\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default PollForm;\n","import { useState, useEffect } from 'react';\nimport { Observable, of } from 'rxjs';\nimport { projectFilesStream, IProjectFiles } from 'services/projectFiles';\n\nexport default function useProjectFiles(projectId: string | null | undefined) {\n  const [projectFiles, setProjectFiles] = useState<\n    IProjectFiles | undefined | null | Error\n  >(undefined);\n  useEffect(() => {\n    setProjectFiles(undefined);\n\n    let observable: Observable<IProjectFiles | null> = of(null);\n\n    if (projectId) {\n      observable = projectFilesStream(projectId).observable;\n    }\n\n    const subscription = observable.subscribe((projectFiles) => {\n      setProjectFiles(projectFiles);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [projectId]);\n\n  return projectFiles;\n}\n","import React, { memo, useEffect, useState } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// components\nimport Timeline from './Timeline';\nimport PhaseDescription from './PhaseDescription';\nimport PBExpenses from '../shared/pb/PBExpenses';\nimport PhaseSurvey from './Survey';\nimport PhasePoll from './Poll';\nimport PhaseVolunteering from './Volunteering';\nimport PhaseIdeas from './Ideas';\nimport ContentContainer from 'components/ContentContainer';\nimport PhaseNavigation from './PhaseNavigation';\nimport {\n  ProjectPageSectionTitle,\n  maxPageWidth,\n} from 'containers/ProjectsShowPage/styles';\nimport SectionContainer from 'components/SectionContainer';\n\n// services\nimport {\n  IPhaseData,\n  getLatestRelevantPhase,\n  getCurrentPhase,\n} from 'services/phases';\n\n// events\nimport { selectedPhase$, selectPhase } from './events';\n\n// hooks\nimport useProject from 'hooks/useProject';\nimport usePhases from 'hooks/usePhases';\nimport useWindowSize from 'hooks/useWindowSize';\nimport useLocale from 'hooks/useLocale';\n\n// i18n\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// style\nimport styled from 'styled-components';\nimport { colors, viewportWidths, isRtl } from 'utils/styleUtils';\n\n// other\nimport { isValidPhase } from '../phaseParam';\nimport setPhaseURL from './setPhaseURL';\n\nconst Container = styled.div``;\n\nconst StyledSectionContainer = styled(SectionContainer)`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  background: ${colors.background};\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 25px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst StyledProjectPageSectionTitle = styled(ProjectPageSectionTitle)`\n  margin: 0px;\n  padding: 0px;\n`;\n\nconst StyledTimeline = styled(Timeline)`\n  margin-bottom: 22px;\n`;\n\nconst StyledPhaseDescription = styled(PhaseDescription)<{\n  hasBottmMargin: boolean;\n}>`\n  margin-bottom: ${(props) => (props.hasBottmMargin ? '50px' : '0px')};\n`;\n\nconst StyledPBExpenses = styled(PBExpenses)`\n  padding: 20px;\n  margin-bottom: 50px;\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst ProjectTimelineContainer = memo<Props & WithRouterProps>(\n  ({ projectId, className, params: { phaseNumber } }) => {\n    const project = useProject({ projectId });\n    const phases = usePhases(projectId);\n    const locale = useLocale();\n    const windowSize = useWindowSize();\n\n    const [selectedPhase, setSelectedPhase] = useState<IPhaseData | null>(null);\n    const currentPhase = getCurrentPhase(phases);\n\n    useEffect(() => {\n      const subscription = selectedPhase$.subscribe((selectedPhase) => {\n        setSelectedPhase(selectedPhase);\n      });\n\n      return () => {\n        subscription.unsubscribe();\n        selectPhase(null);\n      };\n    }, []);\n\n    useEffect(() => {\n      if (\n        selectedPhase !== null &&\n        !isNilOrError(phases) &&\n        project &&\n        !isNilOrError(locale)\n      ) {\n        setPhaseURL(\n          selectedPhase.id,\n          currentPhase?.id,\n          phases,\n          project,\n          locale\n        );\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedPhase, phases, project, locale]);\n\n    useEffect(() => {\n      if (!isNilOrError(phases) && phases.length > 0) {\n        const latestRelevantPhase = getLatestRelevantPhase(phases);\n\n        // if a phase parameter was provided, and it is valid, we set that as phase.\n        // otherwise, use the most logical phase\n        if (isValidPhase(phaseNumber, phases)) {\n          const phaseIndex = Number(phaseNumber) - 1;\n          selectPhase(phases[phaseIndex]);\n        } else if (latestRelevantPhase) {\n          selectPhase(latestRelevantPhase);\n        } else {\n          selectPhase(null);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [phases]);\n\n    if (\n      !isNilOrError(project) &&\n      !isNilOrError(phases) &&\n      phases.length > 0 &&\n      selectedPhase !== undefined\n    ) {\n      const selectedPhaseId = selectedPhase ? selectedPhase.id : null;\n      const isPBPhase =\n        selectedPhase?.attributes?.participation_method === 'budgeting';\n      const participationMethod = !isNilOrError(selectedPhase)\n        ? selectedPhase.attributes.participation_method\n        : null;\n      const smallerThanSmallTablet = windowSize\n        ? windowSize.windowWidth <= viewportWidths.smallTablet\n        : false;\n\n      return (\n        <Container className={`${className || ''} e2e-project-process-page`}>\n          <StyledSectionContainer>\n            <div>\n              <ContentContainer maxWidth={maxPageWidth}>\n                {smallerThanSmallTablet && (\n                  <Header>\n                    <StyledProjectPageSectionTitle>\n                      <FormattedMessage {...messages.timeline} />\n                    </StyledProjectPageSectionTitle>\n                    <PhaseNavigation\n                      projectId={project.id}\n                      buttonStyle=\"white\"\n                    />\n                  </Header>\n                )}\n                <StyledTimeline projectId={project.id} />\n                <StyledPhaseDescription\n                  projectId={project.id}\n                  phaseId={selectedPhaseId}\n                  hasBottmMargin={\n                    selectedPhase?.attributes?.participation_method !==\n                    'information'\n                  }\n                />\n                {isPBPhase && (\n                  <StyledPBExpenses\n                    participationContextId={selectedPhaseId}\n                    participationContextType=\"phase\"\n                    viewMode={smallerThanSmallTablet ? 'column' : 'row'}\n                  />\n                )}\n                <PhaseSurvey projectId={project.id} phaseId={selectedPhaseId} />\n              </ContentContainer>\n            </div>\n            <div>\n              <ContentContainer maxWidth={maxPageWidth}>\n                <PhasePoll projectId={project.id} phaseId={selectedPhaseId} />\n                <PhaseVolunteering\n                  projectId={project.id}\n                  phaseId={selectedPhaseId}\n                />\n              </ContentContainer>\n            </div>\n\n            {(participationMethod === 'ideation' ||\n              participationMethod === 'budgeting') &&\n              selectedPhaseId && (\n                <div>\n                  <ContentContainer maxWidth={maxPageWidth}>\n                    <PhaseIdeas\n                      projectId={project.id}\n                      phaseId={selectedPhaseId}\n                    />\n                  </ContentContainer>\n                </div>\n              )}\n          </StyledSectionContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default withRouter(ProjectTimelineContainer);\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\n\nimport { IPollOption, pollOptionsStream } from 'services/pollOptions';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  questionId: string;\n}\n\ntype children = (renderProps: GetPollOptionsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  pollOptions: IPollOption[] | undefined | null | Error;\n}\n\nexport type GetPollOptionsChildProps = IPollOption[] | undefined | null | Error;\n\nexport default class GetPollOptions extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      pollOptions: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { questionId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ questionId });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => this.setState({ pollOptions: undefined })),\n          filter(({ questionId }) => isString(questionId)),\n          switchMap(\n            ({ questionId }) => pollOptionsStream(questionId).observable\n          )\n        )\n        .subscribe((pollOptions) =>\n          this.setState({\n            pollOptions: !isNilOrError(pollOptions)\n              ? pollOptions.data\n              : pollOptions,\n          })\n        ),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { pollOptions } = this.state;\n    return (children as children)(pollOptions);\n  }\n}\n","import React from 'react';\nimport GetPollOptions, {\n  GetPollOptionsChildProps,\n} from 'resources/GetPollOptions';\nimport { adopt } from 'react-adopt';\nimport { IPollQuestion } from 'services/pollQuestions';\nimport styled from 'styled-components';\nimport Checkbox from 'components/UI/Checkbox';\nimport {\n  QuestionContainer,\n  Question,\n  QuestionNumber,\n  QuestionText,\n} from './PollForm';\nimport { isNilOrError } from 'utils/helperUtils';\nimport T from 'components/T';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst StyledFieldSet = styled.fieldset`\n  width: 100%;\n  border: none;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 18px;\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin: 5px;\n  margin-left: 35px;\n`;\n\nconst MaxText = styled.span`\n  font-weight: 400;\n`;\n\ninterface InputProps {\n  question: IPollQuestion;\n  index: number;\n  value: string[] | undefined;\n  disabled: boolean;\n  onChange: (questionId: string, optionId: string) => () => void;\n}\n\ninterface DataProps {\n  options: GetPollOptionsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst PollMultipleChoice = ({\n  question,\n  index,\n  options,\n  value,\n  disabled,\n  onChange,\n}: Props) => {\n  return (\n    <StyledFieldSet key={question.id}>\n      {isNilOrError(options) || options.length === 0 ? null : (\n        <QuestionContainer className=\"e2e-poll-question\">\n          <Question>\n            <QuestionNumber>{index + 1}</QuestionNumber>\n            <QuestionText>\n              <T value={question.attributes.title_multiloc} />\n              <MaxText>\n                {' ('}\n                <FormattedMessage\n                  {...messages.maxOptions}\n                  values={{ maxNumber: question.attributes.max_options }}\n                />\n                {')'}\n              </MaxText>\n            </QuestionText>\n          </Question>\n          {options.map((option) => (\n            <StyledCheckbox\n              className=\"e2e-poll-option\"\n              key={option.id}\n              onChange={onChange(question.id, option.id)}\n              checked={!!value?.includes(option.id)}\n              disabled={\n                disabled === true ||\n                (!value?.includes(option.id) &&\n                  value?.length === question.attributes.max_options)\n              }\n              label={<T value={option.attributes.title_multiloc} />}\n            />\n          ))}\n        </QuestionContainer>\n      )}\n    </StyledFieldSet>\n  );\n};\n\nconst Data = adopt<DataProps, InputProps>({\n  options: ({ question, render }) => (\n    <GetPollOptions questionId={question.id}>{render}</GetPollOptions>\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataprops) => <PollMultipleChoice {...inputProps} {...dataprops} />}\n  </Data>\n);\n","import { API_PATH } from 'containers/App/constants';\nimport streams from 'utils/streams';\nimport { Multiloc } from 'typings';\n\nexport interface IPollOption {\n  id: string;\n  type: string;\n  attributes: {\n    title_multiloc: Multiloc;\n    ordering: number;\n  };\n}\n\nexport function pollOptionsStream(questionId: string) {\n  return streams.get<{ data: IPollOption[] }>({\n    apiEndpoint: `${API_PATH}/poll_questions/${questionId}/poll_options`,\n  });\n}\n\nexport function addPollOption(questionId: string, titleMultiloc: Multiloc) {\n  return streams.add<{ data: IPollOption }>(\n    `${API_PATH}/poll_questions/${questionId}/poll_options`,\n    {\n      title_multiloc: titleMultiloc,\n    }\n  );\n}\n\nexport function pollOptionStream(optionId: string) {\n  return streams.get<{ data: IPollOption }>({\n    apiEndpoint: `${API_PATH}/poll_options/${optionId}`,\n  });\n}\n\nexport function deletePollOption(optionId: string) {\n  return streams.delete(`${API_PATH}/poll_options/${optionId}`, optionId);\n}\n\nexport function updatePollOption(optionId: string, titleMultiloc: Multiloc) {\n  return streams.update(`${API_PATH}/poll_options/${optionId}`, optionId, {\n    title_multiloc: titleMultiloc,\n  });\n}\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport ContentContainer from 'components/ContentContainer';\nimport IdeaCards from 'components/IdeaCards';\nimport PBExpenses from '../shared/pb/PBExpenses';\nimport {\n  ProjectPageSectionTitle,\n  maxPageWidth,\n} from 'containers/ProjectsShowPage/styles';\nimport SectionContainer from 'components/SectionContainer';\n\n// hooks\nimport useProject from 'hooks/useProject';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// style\nimport styled from 'styled-components';\nimport { viewportWidths, colors } from 'utils/styleUtils';\n\nconst Container = styled.div``;\n\nconst StyledContentContainer = styled(ContentContainer)`\n  background: ${colors.background};\n`;\n\nconst StyledProjectPageSectionTitle = styled(ProjectPageSectionTitle)`\n  margin-bottom: 20px;\n`;\n\nconst StyledPBExpenses = styled(PBExpenses)`\n  padding: 20px;\n  margin-bottom: 50px;\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst IdeasContainer = memo<Props>(({ projectId, className }) => {\n  const project = useProject({ projectId });\n  const windowSize = useWindowSize();\n\n  const projectType = project?.attributes.process_type;\n  const participationMethod = project?.attributes.participation_method;\n  const showIdeas = !!(\n    projectType === 'continuous' &&\n    (participationMethod === 'budgeting' || participationMethod === 'ideation')\n  );\n\n  if (!isNilOrError(project) && showIdeas) {\n    const inputTerm = project.attributes.input_term;\n    const smallerThanBigTablet = windowSize?.windowWidth\n      ? windowSize?.windowWidth <= viewportWidths.smallTablet\n      : false;\n    const isPBProject = project.attributes.participation_method === 'budgeting';\n    const projectId = project.id;\n    const projectIds = [projectId];\n\n    return (\n      <Container\n        id=\"e2e-continuos-project-idea-cards\"\n        className={className || ''}\n      >\n        <StyledContentContainer id=\"project-ideas\" maxWidth={maxPageWidth}>\n          <SectionContainer>\n            {isPBProject && (\n              <StyledPBExpenses\n                participationContextId={projectId}\n                participationContextType=\"project\"\n                viewMode={smallerThanBigTablet ? 'column' : 'row'}\n              />\n            )}\n            <StyledProjectPageSectionTitle>\n              <FormattedMessage\n                {...getInputTermMessage(inputTerm, {\n                  idea: messages.ideas,\n                  option: messages.options,\n                  project: messages.projects,\n                  question: messages.questions,\n                  issue: messages.issues,\n                  contribution: messages.contributions,\n                })}\n              />\n            </StyledProjectPageSectionTitle>\n\n            <IdeaCards\n              type=\"load-more\"\n              projectIds={projectIds}\n              participationMethod={project.attributes.participation_method}\n              participationContextId={projectId}\n              participationContextType=\"project\"\n              showViewToggle={true}\n              defaultSortingMethod={project.attributes.ideas_order || null}\n              defaultView={project.attributes.presentation_mode || null}\n              invisibleTitleMessage={messages.a11y_titleInputs}\n            />\n          </SectionContainer>\n        </StyledContentContainer>\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default IdeasContainer;\n","import {\n  distinctUntilChanged,\n  map,\n  publishReplay,\n  refCount,\n} from 'rxjs/operators';\nimport eventEmitter from 'utils/eventEmitter';\nimport { IPhaseData } from 'services/phases';\n\nenum events {\n  selectedPhaseChange = 'selectedPhaseChange',\n}\n\nexport function selectPhase(phase: IPhaseData | null) {\n  eventEmitter.emit<IPhaseData | null>(events.selectedPhaseChange, phase);\n}\n\nexport const selectedPhase$ = eventEmitter\n  .observeEvent<IPhaseData | null>(events.selectedPhaseChange)\n  .pipe(\n    map((event) => event.eventValue),\n    distinctUntilChanged((x, y) => x?.id === y?.id),\n    publishReplay(1),\n    refCount()\n  );\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { IParticipationContextType } from 'typings';\n\n// services\nimport {\n  getPollTakingRules,\n  IPollTakingDisabledReason,\n} from 'services/actionTakingRules';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetPollQuestions, {\n  GetPollQuestionsChildProps,\n} from 'resources/GetPollQuestions';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhase, { GetPhaseChildProps } from 'resources/GetPhase';\n\n// components\nimport FormCompleted from './FormCompleted';\nimport PollForm from './PollForm';\nimport Warning from 'components/UI/Warning';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// events\nimport { openSignUpInModal } from 'components/SignUpIn/events';\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  color: ${({ theme }) => theme.colorText};\n`;\n\nconst StyledWarning = styled(Warning)`\n  margin-bottom: 30px;\n`;\n\n// Didn't manage to strongly type this component, here are the two typings it can actually have\n// type ProjectProps = {\n//   type: 'project',\n//   phaseId: null,\n//   projectId: string\n// };\n// type PhaseProps = {\n//   type: 'phase',\n//   phaseId: string,\n//   projectId: string\n// };\n\ninterface InputProps {\n  type: IParticipationContextType;\n  phaseId: string | null;\n  projectId: string;\n}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  pollQuestions: GetPollQuestionsChildProps;\n  project: GetProjectChildProps;\n  phase: GetPhaseChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst disabledMessages: {\n  [key in IPollTakingDisabledReason]: ReactIntl.FormattedMessage.MessageDescriptor;\n} = {\n  projectInactive: messages.pollDisabledProjectInactive,\n  maybeNotPermitted: messages.pollDisabledMaybeNotPermitted,\n  maybeNotVerified: messages.pollDisabledMaybeNotVerified,\n  notPermitted: messages.pollDisabledNotPermitted,\n  notActivePhase: messages.pollDisabledNotActivePhase,\n  notVerified: messages.pollDisabledNotVerified,\n  alreadyResponded: messages.pollDisabledNotPossible, // will not be used\n};\n\nexport class Poll extends PureComponent<Props> {\n  onVerify = () => {\n    const { type, projectId, phaseId } = this.props;\n    const pcId = type === 'phase' ? phaseId : projectId;\n    const pcType = type;\n\n    if (pcId && pcType) {\n      openVerificationModal({\n        context: {\n          action: 'taking_poll',\n          id: pcId,\n          type: pcType,\n        },\n      });\n    }\n  };\n\n  signUpIn = (flow: 'signin' | 'signup') => {\n    const { phaseId, project, phase } = this.props;\n\n    if (!isNilOrError(project)) {\n      const pcType = phaseId ? 'phase' : 'project';\n      const pcId = phaseId ? phase?.id : project?.id;\n      const takingPollDisabledReason =\n        project.attributes?.action_descriptor?.taking_poll?.disabled_reason;\n\n      openSignUpInModal({\n        flow,\n        verification: takingPollDisabledReason === 'not_verified',\n        verificationContext:\n          takingPollDisabledReason === 'not_verified' && pcId && pcType\n            ? {\n                action: 'taking_poll',\n                id: pcId,\n                type: pcType,\n              }\n            : undefined,\n      });\n    }\n  };\n\n  signIn = () => {\n    this.signUpIn('signin');\n  };\n\n  signUp = () => {\n    this.signUpIn('signup');\n  };\n\n  render() {\n    const {\n      pollQuestions,\n      projectId,\n      phaseId,\n      project,\n      phase,\n      type,\n      authUser,\n    } = this.props;\n\n    if (\n      !isNilOrError(pollQuestions) &&\n      !isNilOrError(project) &&\n      !!(type === 'phase' ? !isNilOrError(phase) : true)\n    ) {\n      const isSignedIn = !isNilOrError(authUser);\n      const { enabled, disabledReason } = getPollTakingRules({\n        project,\n        phaseContext: phase,\n        signedIn: !!authUser,\n      });\n      const message = disabledReason\n        ? disabledMessages[disabledReason]\n        : isSignedIn\n        ? messages.pollDisabledNotPossible\n        : messages.pollDisabledMaybeNotPermitted;\n\n      return (\n        <Container>\n          {disabledReason === 'alreadyResponded' ? (\n            <FormCompleted />\n          ) : (\n            <>\n              {(!isSignedIn || !enabled) && (\n                <StyledWarning icon=\"lock\">\n                  <FormattedMessage\n                    {...message}\n                    values={{\n                      verificationLink: (\n                        <button onClick={this.onVerify}>\n                          <FormattedMessage\n                            {...messages.verificationLinkText}\n                          />\n                        </button>\n                      ),\n                      signUpLink: (\n                        <button onClick={this.signUp}>\n                          <FormattedMessage {...messages.signUpLinkText} />\n                        </button>\n                      ),\n                      logInLink: (\n                        <button onClick={this.signIn}>\n                          <FormattedMessage {...messages.logInLinkText} />\n                        </button>\n                      ),\n                    }}\n                  />\n                </StyledWarning>\n              )}\n              <PollForm\n                projectId={projectId}\n                questions={pollQuestions}\n                id={type === 'project' ? projectId : phaseId}\n                type={type}\n                disabled={!enabled || isNilOrError(authUser)}\n              />\n            </>\n          )}\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  pollQuestions: ({ projectId, phaseId, type, render }) => (\n    <GetPollQuestions\n      participationContextId={\n        type === 'project' ? projectId : (phaseId as string)\n      }\n      participationContextType={type}\n    >\n      {render}\n    </GetPollQuestions>\n  ),\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n  phase: ({ phaseId, render }) => <GetPhase id={phaseId}>{render}</GetPhase>,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <Poll {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { canModerateProject } from 'services/permissions/rules/projectPermissions';\n\n// components\nimport ContentContainer from 'components/ContentContainer';\nimport ProjectInfo from './ProjectInfo';\nimport ProjectArchivedIndicator from 'components/ProjectArchivedIndicator';\nimport { Button } from 'cl2-component-library';\nimport Image from 'components/UI/Image';\nimport Outlet from 'components/Outlet';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useProject from 'hooks/useProject';\nimport useAuthUser from 'hooks/useAuthUser';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// style\nimport styled from 'styled-components';\nimport { media, isRtl } from 'utils/styleUtils';\nimport { maxPageWidth } from 'containers/ProjectsShowPage/styles';\n\nconst Container = styled.div`\n  padding-top: 30px;\n  padding-bottom: 65px;\n  background: #fff;\n  position: relative;\n  z-index: 2;\n\n  ${media.smallerThanMinTablet`\n    padding-top: 30px;\n    padding-bottom: 35px;\n  `}\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst EditButton = styled(Button)`\n  display: table;\n  margin: 0 0 10px auto;\n\n  ${isRtl`\n    margin: 0 0 auto 10px;\n  `}\n`;\n\nconst HeaderImage = styled(Image)`\n  width: 100%;\n  height: 240px;\n  margin-bottom: 30px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  overflow: hidden;\n\n  ${media.smallerThanMinTablet`\n    height: 160px;\n    margin-bottom: 20px;\n  `}\n`;\n\nconst StyledProjectArchivedIndicator = styled(ProjectArchivedIndicator)<{\n  hasHeaderImage: boolean;\n}>`\n  margin-top: ${(props) => (props.hasHeaderImage ? '-20px' : '0px')};\n  margin-bottom: 25px;\n\n  ${media.smallerThanMaxTablet`\n    display: none;\n  `}\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst ProjectHeader = memo<Props & InjectedIntlProps>(\n  ({ projectId, className, intl: { formatMessage } }) => {\n    const locale = useLocale();\n    const project = useProject({ projectId });\n    const authUser = useAuthUser();\n    const projectFolderId = project?.attributes.folder_id;\n\n    if (!isNilOrError(locale) && !isNilOrError(project)) {\n      const projectHeaderImageLargeUrl = project?.attributes?.header_bg?.large;\n      const userCanEditProject =\n        !isNilOrError(authUser) &&\n        canModerateProject(project.id, { data: authUser });\n\n      return (\n        <Container className={className || ''}>\n          <ContentContainer maxWidth={maxPageWidth}>\n            {(projectFolderId || userCanEditProject) && (\n              <TopBar>\n                {projectFolderId && (\n                  <Outlet\n                    id=\"app.containers.ProjectsShowPage.shared.header.ProjectHeader.GoBackButton\"\n                    projectFolderId={projectFolderId}\n                  />\n                )}\n\n                {userCanEditProject && (\n                  <EditButton\n                    icon=\"edit\"\n                    locale={locale}\n                    linkTo={`/admin/projects/${project.id}/edit`}\n                    buttonStyle=\"secondary\"\n                    padding=\"5px 8px\"\n                  >\n                    {formatMessage(messages.editProject)}\n                  </EditButton>\n                )}\n              </TopBar>\n            )}\n            {projectHeaderImageLargeUrl && (\n              <HeaderImage\n                id=\"e2e-project-header-image\"\n                src={projectHeaderImageLargeUrl}\n                cover={true}\n                fadeIn={false}\n                isLazy={false}\n                placeholderBg=\"transparent\"\n                alt=\"\"\n              />\n            )}\n            <StyledProjectArchivedIndicator\n              projectId={projectId}\n              hasHeaderImage={!!projectHeaderImageLargeUrl}\n            />\n            <ProjectInfo projectId={projectId} />\n          </ContentContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(ProjectHeader);\n","import { useState, useEffect } from 'react';\nimport { causesStream, ICauses } from 'services/causes';\n\ninterface Input {\n  projectId: string | null;\n  phaseId: string | null;\n}\n\nexport default function useCauses(input: Input) {\n  const [causes, setCauses] = useState<ICauses | undefined | null | Error>(\n    undefined\n  );\n\n  useEffect(() => {\n    let subscription;\n    if (input.phaseId) {\n      subscription = causesStream('phase', input.phaseId);\n    } else if (input.projectId) {\n      subscription = causesStream('project', input.projectId);\n    }\n\n    subscription = subscription.observable.subscribe((causes) => {\n      setCauses(causes);\n    });\n\n    return () => subscription.unsubscribe();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return causes;\n}\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// hooks\nimport useProject from 'hooks/useProject';\n\n// components\nimport Warning from 'components/UI/Warning';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// style\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst ProjectArchivedIndicator = memo<Props>(({ projectId, className }) => {\n  const project = useProject({ projectId });\n\n  if (\n    !isNilOrError(project) &&\n    project.attributes.publication_status === 'archived'\n  ) {\n    return (\n      <Container className={className || ''}>\n        <Warning text={<FormattedMessage {...messages.archivedProject} />} />\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default ProjectArchivedIndicator;\n","import React from 'react';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport Illustration from './Illustration';\nimport styled from 'styled-components';\nimport { fontSizes, media, defaultCardStyle } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  font-size: ${fontSizes.xl}px;\n  line-height: ${fontSizes.xxl}px;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 100px 50px;\n  ${defaultCardStyle};\n\n  ${media.smallerThanMinTablet`\n    padding: 70px 30px;\n  `}\n`;\n\nconst StyledIllustration = styled(Illustration)`\n  max-width: 100%;\n  min-width: 300px;\n  margin-bottom: 40px;\n\n  ${media.smallerThanMinTablet`\n    margin-bottom: 20px;\n  `}\n`;\n\nexport default () => (\n  <Container className=\"e2e-form-completed\">\n    <StyledIllustration />\n    <FormattedMessage {...messages.formCompleted} />\n  </Container>\n);\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { Multiloc, ImageSizes } from 'typings';\n\nconst apiEndpoint = `${API_PATH}/causes`;\n\nexport interface ICauseData {\n  id: string;\n  type: string;\n  attributes: {\n    title_multiloc: Multiloc;\n    description_multiloc: Multiloc;\n    image: ImageSizes;\n    volunteers_count: number;\n    ordering: number;\n  };\n  relationships: {\n    participation_context: {\n      data: {\n        type: 'project' | 'phase';\n        id: string;\n      };\n    };\n    user_volunteer?: {\n      data: null | {\n        id: string;\n      };\n    };\n  };\n}\n\nexport interface ICauseLinks {\n  self: string;\n  first: string;\n  prev: string;\n  next: string;\n  last: string;\n}\n\nexport interface ICauses {\n  data: ICauseData[];\n  links: ICauseLinks;\n}\n\nexport interface ICause {\n  data: ICauseData;\n}\n\nexport function causeByIdStream(causeId: string) {\n  return streams.get<ICause>({ apiEndpoint: `${apiEndpoint}/${causeId}` });\n}\n\nexport function causesStream(\n  participationContextType: 'project' | 'phase',\n  participationContextId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICauses>({\n    apiEndpoint: `${API_PATH}/${participationContextType}s/${participationContextId}/causes`,\n    ...streamParams,\n  });\n}\n\nexport async function addCause(object) {\n  const stream = await streams.add<ICause>(apiEndpoint, { cause: object });\n  await streams.fetchAllWith({ regexApiEndpoint: [/^.*causes$/] });\n  return stream;\n}\n\nexport async function updateCause(causeId: string, object) {\n  const stream = streams.update<ICause>(`${apiEndpoint}/${causeId}`, causeId, {\n    cause: object,\n  });\n  await streams.fetchAllWith({ dataId: [causeId] });\n  return stream;\n}\n\nexport function deleteCause(causeId: string) {\n  return streams.delete(`${apiEndpoint}/${causeId}`, causeId);\n}\n\nexport function reorderCause(causeId: string, ordering: number) {\n  return streams.update<ICause>(`${apiEndpoint}/${causeId}/reorder`, causeId, {\n    cause: { ordering },\n  });\n}\n","export default {\n  postYourIdeaButtonClicked: \"'Post your idea' button clicked\",\n  redirectedToIdeaFrom:\n    \"Redirected to idea form in repsonse to clicking 'Post your idea' button\",\n  verificationModalOpened:\n    \"Verification modal opened in response to clicking 'Post your idea' button\",\n  redirectedToSignUpForm:\n    \"Redirected to sign up form in response to clicking 'Post your idea' button\",\n  signUpInModalOpened:\n    \"Sign up/in modal opened in response to clicking 'Post your idea' button\",\n};\n","const QUERY_NAME = 'scrollToEventId';\n\nexport default function getScrollToEventId(\n  query: Record<string, any>,\n  urlSegments: string[]\n) {\n  if (query[QUERY_NAME]) return query[QUERY_NAME];\n  // Sometimes, query[QUERY_NAME] is undefined for some weird reason.\n  // In this case, the query is taken from the URL.\n\n  const lastSegment = urlSegments[urlSegments.length - 1];\n  if (containsQuery(lastSegment)) return getQueryValue(lastSegment);\n}\n\nconst containsQuery = (urlSegment: string) => {\n  return urlSegment.includes(`?${QUERY_NAME}=`);\n};\n\nconst getQueryValue = (urlSegment: string) => {\n  return urlSegment.split(`?${QUERY_NAME}=`)[1];\n};\n","import React, { memo, useState } from 'react';\nimport { stringify } from 'qs';\nimport { omitBy, isNil } from 'lodash-es';\n\n// components\nimport { Spinner } from 'cl2-component-library';\nimport Iframe from 'react-iframe';\n\n// hooks\nimport useWindowSize from 'hooks/useWindowSize';\n\n// styling\nimport styled from 'styled-components';\nimport { defaultCardStyle, viewportWidths, media } from 'utils/styleUtils';\n\nconst surveyHeightDesktop = '600px';\nconst surveyHeightMobile = '500px';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  iframe {\n    border: solid 1px #ccc;\n    border-radius: ${(props: any) => props.theme.borderRadius};\n  }\n`;\n\nconst Placeholder = styled.div`\n  width: 100%;\n  height: ${surveyHeightDesktop};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${defaultCardStyle};\n\n  ${media.smallerThanMaxTablet`\n    height: ${surveyHeightMobile};\n  `}\n`;\n\ninterface Props {\n  typeformUrl: string;\n  email: string | null;\n  user_id: string | null;\n  className?: string;\n}\n\nconst TypeformSurvey = memo<Props>(\n  ({ typeformUrl, email, user_id, className }) => {\n    const [isIframeLoaded, setIsIframeLoaded] = useState(false);\n    const windowSize = useWindowSize();\n    const smallerThanLargeTablet = windowSize\n      ? windowSize.windowWidth <= viewportWidths.largeTablet\n      : false;\n\n    const queryString = stringify(omitBy({ email, user_id }, isNil));\n    const surveyUrl = `${typeformUrl}?${queryString}`;\n\n    const handleIframeOnLoad = () => {\n      setTimeout(() => {\n        setIsIframeLoaded(true);\n      }, 1000);\n    };\n\n    return (\n      <Container className={className || ''}>\n        {!isIframeLoaded && (\n          <Placeholder>\n            <Spinner />\n          </Placeholder>\n        )}\n        <Iframe\n          url={surveyUrl}\n          width=\"100%\"\n          height={\n            smallerThanLargeTablet ? surveyHeightMobile : surveyHeightDesktop\n          }\n          display={isIframeLoaded ? 'block' : 'none'}\n          overflow=\"hidden\"\n          onLoad={handleIframeOnLoad}\n        />\n      </Container>\n    );\n  }\n);\n\nexport default TypeformSurvey;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledIframe = styled.iframe`\n  display: block;\n  border: none;\n  height: 600px;\n  flex-basis: 640px;\n`;\n\ntype Props = {\n  enalyzerUrl: string;\n  className?: string;\n};\n\nexport default class EnalyzerSurvey extends PureComponent<Props> {\n  render() {\n    const { enalyzerUrl, className } = this.props;\n\n    return (\n      <Container className={className}>\n        <StyledIframe src={enalyzerUrl} />\n      </Container>\n    );\n  }\n}\n","import React, {\n  memo,\n  useCallback,\n  useState,\n  useEffect,\n  FormEvent,\n} from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isEmpty } from 'lodash-es';\n\n// components\nimport Fragment from 'components/Fragment';\nimport Button from 'components/UI/Button';\nimport FileAttachments from 'components/UI/FileAttachments';\nimport ProjectInfoSideBar from './ProjectInfoSideBar';\nimport ReactResizeDetector from 'react-resize-detector/build/withPolyfill';\nimport ProjectArchivedIndicator from 'components/ProjectArchivedIndicator';\n\n// hooks\nimport useProject from 'hooks/useProject';\nimport useProjectFiles from 'hooks/useProjectFiles';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// i18n\nimport T from 'components/T';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// style\nimport styled, { useTheme } from 'styled-components';\nimport {\n  fontSizes,\n  colors,\n  media,\n  viewportWidths,\n  isRtl,\n} from 'utils/styleUtils';\nimport QuillEditedContent from 'components/UI/QuillEditedContent';\n\nconst desktopCollapsedDescriptionMaxHeight = 380;\nconst mobileCollapsedDescriptionMaxHeight = 180;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n\n  ${media.smallerThanMaxTablet`\n    flex-direction: column;\n    align-items: stretch;\n    justify-content: flex-start;\n  `}\n`;\n\nconst Left = styled.div`\n  flex: 1;\n\n  ${media.smallerThanMaxTablet`\n    margin-bottom: 20px;\n  `}\n`;\n\nconst Right = styled.div`\n  flex: 0 0 310px;\n  width: 310px;\n  margin-left: 120px;\n\n  ${isRtl`\n    margin-right: 120px;\n    margin-left: auto;\n  `}\n\n  ${media.smallerThanMaxTablet`\n    flex: 1 1 auto;\n    width: 100%;\n    margin-left: 0px;\n  `}\n`;\n\nconst ProjectTitle = styled.h1`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.xxxxl}px;\n  line-height: normal;\n  font-weight: 500;\n  text-align: left;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  margin: 0;\n  margin-bottom: 27px;\n  padding: 0;\n\n  ${isRtl`\n    text-align: right;\n  `}\n\n  ${media.smallerThan1280px`\n    font-size: ${fontSizes.xxl}px;\n  `}\n\n  ${media.smallerThanMaxTablet`\n    margin-bottom: 20px;\n  `}\n`;\n\nconst StyledProjectArchivedIndicator = styled(ProjectArchivedIndicator)`\n  margin-bottom: 20px;\n`;\n\nconst ProjectDescription = styled.div<{ maxHeight: number }>`\n  position: relative;\n  max-height: ${(props) => props.maxHeight}px;\n  overflow: hidden;\n\n  &.expanded {\n    max-height: none;\n    overflow: visible;\n  }\n`;\n\nconst ReadMoreOuterWrapper = styled.div`\n  height: 130px;\n  content: '';\n  display: flex;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgb(255, 255, 255);\n  background: linear-gradient(\n    0deg,\n    rgba(255, 255, 255, 1) 30%,\n    rgba(255, 255, 255, 0) 100%\n  );\n`;\n\nconst ReadMoreInnerWrapper = styled.div`\n  position: relative;\n  flex: 1;\n`;\n\nconst ReadMoreButton = styled(Button)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n`;\n\nconst CollapseButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  margin-top: 20px;\n`;\n\nconst CollapseButton = styled(Button)``;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst ProjectInfo = memo<Props>(({ projectId, className }) => {\n  const theme: any = useTheme();\n  const project = useProject({ projectId });\n  const projectFiles = useProjectFiles(projectId);\n  const { windowWidth } = useWindowSize();\n\n  const [expanded, setExpanded] = useState(false);\n  const [descriptionHeight, setDescriptionHeight] = useState<number | null>(\n    null\n  );\n\n  const smallerThanLargeTablet = windowWidth <= viewportWidths.largeTablet;\n\n  const collapsedDescriptionMaxHeight = smallerThanLargeTablet\n    ? mobileCollapsedDescriptionMaxHeight\n    : desktopCollapsedDescriptionMaxHeight;\n\n  useEffect(() => {\n    setExpanded(false);\n  }, [projectId]);\n\n  const toggleExpandCollapse = useCallback(\n    (event: FormEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      setExpanded((expanded) => !expanded);\n    },\n    []\n  );\n\n  const onResize = (_width: number | undefined, height: number | undefined) => {\n    if (height) {\n      setDescriptionHeight(height);\n    }\n  };\n\n  if (!isNilOrError(project)) {\n    return (\n      <Container className={`${className || ''} e2e-project-info`}>\n        <Fragment name={`projects/${project.id}/info`}>\n          <Left>\n            <ProjectTitle>\n              <T value={project.attributes.title_multiloc} />\n            </ProjectTitle>\n\n            {smallerThanLargeTablet && (\n              <StyledProjectArchivedIndicator projectId={projectId} />\n            )}\n\n            <ProjectDescription\n              className={expanded ? 'expanded' : ''}\n              maxHeight={collapsedDescriptionMaxHeight}\n            >\n              {!isEmpty(project.attributes.description_multiloc) && (\n                <>\n                  <ReactResizeDetector\n                    handleWidth\n                    handleHeight\n                    onResize={onResize}\n                  >\n                    <div id=\"e2e-project-description\">\n                      <QuillEditedContent\n                        fontSize=\"medium\"\n                        textColor={theme.colorText}\n                      >\n                        <T\n                          value={project.attributes.description_multiloc}\n                          supportHtml={true}\n                        />\n                      </QuillEditedContent>\n                      {!isNilOrError(projectFiles) &&\n                        projectFiles &&\n                        projectFiles.data.length > 0 && (\n                          <FileAttachments files={projectFiles.data} />\n                        )}\n                    </div>\n                  </ReactResizeDetector>\n                  {descriptionHeight &&\n                    descriptionHeight > collapsedDescriptionMaxHeight &&\n                    !expanded && (\n                      <ReadMoreOuterWrapper>\n                        <ReadMoreInnerWrapper>\n                          <ReadMoreButton\n                            id=\"e2e-project-description-read-more-button\"\n                            buttonStyle=\"text\"\n                            onClick={toggleExpandCollapse}\n                            textDecoration=\"underline\"\n                            textDecorationHover=\"underline\"\n                            textColor={colors.label}\n                            textHoverColor={theme.colorText}\n                            fontWeight=\"500\"\n                            fontSize={`${fontSizes.medium}px`}\n                            padding=\"0\"\n                          >\n                            <FormattedMessage {...messages.readMore} />\n                          </ReadMoreButton>\n                        </ReadMoreInnerWrapper>\n                      </ReadMoreOuterWrapper>\n                    )}\n                  {descriptionHeight &&\n                    descriptionHeight > collapsedDescriptionMaxHeight &&\n                    expanded && (\n                      <CollapseButtonWrapper>\n                        <CollapseButton\n                          id=\"e2e-project-description-see-less-button\"\n                          buttonStyle=\"text\"\n                          onClick={toggleExpandCollapse}\n                          textDecoration=\"underline\"\n                          textDecorationHover=\"underline\"\n                          textColor={colors.label}\n                          textHoverColor={theme.colorText}\n                          fontWeight=\"500\"\n                          fontSize={`${fontSizes.medium}px`}\n                          padding=\"0\"\n                        >\n                          <FormattedMessage {...messages.seeLess} />\n                        </CollapseButton>\n                      </CollapseButtonWrapper>\n                    )}\n                </>\n              )}\n            </ProjectDescription>\n          </Left>\n\n          <Right>\n            <ProjectInfoSideBar projectId={project.id} />\n          </Right>\n        </Fragment>\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default ProjectInfo;\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport TypeformSurvey from './TypeformSurvey';\nimport SurveymonkeySurvey from './SurveymonkeySurvey';\nimport GoogleFormsSurvey from './GoogleFormsSurvey';\nimport EnalyzerSurvey from './EnalyzerSurvey';\nimport QualtricsSurvey from './QualtricsSurvey';\nimport MicrosoftFormsSurvey from './MicrosoftFormsSurvey';\nimport Warning from 'components/UI/Warning';\nimport SignUpIn from 'components/SignUpIn';\nimport { ProjectPageSectionTitle } from 'containers/ProjectsShowPage/styles';\n\n// services\nimport {\n  getSurveyTakingRules,\n  ISurveyTakingDisabledReason,\n} from 'services/actionTakingRules';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhase, { GetPhaseChildProps } from 'resources/GetPhase';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// events\nimport { openSignUpInModal } from 'components/SignUpIn/events';\n\n// styling\nimport styled from 'styled-components';\nimport { defaultCardStyle, fontSizes, media } from 'utils/styleUtils';\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\nimport SurveyXact from './SurveyXact';\n\nconst Container = styled.div`\n  position: relative;\n\n  &.enabled {\n    min-height: 500px;\n  }\n`;\n\nconst SignUpInWrapper = styled.div`\n  width: 100%;\n  padding: 20px;\n  padding-top: 45px;\n  ${defaultCardStyle};\n\n  ${media.smallerThanMinTablet`\n    padding-top: 30px;\n  `}\n`;\n\nconst StyledSignUpIn = styled(SignUpIn)`\n  width: 100%;\n  max-width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n\n  & .signuphelpertext {\n    display: none !important;\n  }\n\n  & .signupinheadercontainer {\n    border-bottom: none !important;\n  }\n\n  & .signupincontentcontainer {\n    max-height: unset !important;\n  }\n`;\n\nconst SignUpInHeader = styled.h2`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.xxl}px;\n  line-height: normal;\n  font-weight: 500;\n  margin: 0;\n  padding: 0;\n\n  ${media.smallerThanMinTablet`\n    font-size: ${fontSizes.xl}px;\n  `}\n`;\n\ninterface InputProps {\n  projectId: string | null;\n  phaseId?: string | null;\n  surveyEmbedUrl: string;\n  surveyService: string;\n  className?: string;\n}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  project: GetProjectChildProps;\n  phase: GetPhaseChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass Survey extends PureComponent<Props, State> {\n  onVerify = () => {\n    const { projectId, phaseId } = this.props;\n    const pcId = phaseId || projectId;\n    const pcType = phaseId ? 'phase' : 'project';\n\n    if (pcId && pcType) {\n      openVerificationModal({\n        context: {\n          action: 'taking_survey',\n          id: pcId,\n          type: pcType,\n        },\n      });\n    }\n  };\n\n  signUpIn = (flow: 'signin' | 'signup') => {\n    const { phaseId, project, projectId } = this.props;\n\n    if (!isNilOrError(project)) {\n      const pcId = phaseId || projectId;\n      const pcType = phaseId ? 'phase' : 'project';\n      const takingSurveyDisabledReason =\n        project.attributes?.action_descriptor?.taking_survey?.disabled_reason;\n\n      openSignUpInModal({\n        flow,\n        verification: takingSurveyDisabledReason === 'not_verified',\n        verificationContext:\n          takingSurveyDisabledReason === 'not_verified' && pcId && pcType\n            ? {\n                action: 'taking_survey',\n                id: pcId,\n                type: pcType,\n              }\n            : undefined,\n      });\n    }\n  };\n\n  signIn = () => {\n    this.signUpIn('signin');\n  };\n\n  signUp = () => {\n    this.signUpIn('signup');\n  };\n\n  noOp = () => {};\n\n  disabledMessage: {\n    [key in ISurveyTakingDisabledReason]: ReactIntl.FormattedMessage.MessageDescriptor;\n  } = {\n    projectInactive: messages.surveyDisabledProjectInactive,\n    maybeNotPermitted: messages.surveyDisabledMaybeNotPermitted,\n    maybeNotVerified: messages.surveyDisabledMaybeNotVerified,\n    notPermitted: messages.surveyDisabledNotPermitted,\n    notActivePhase: messages.surveyDisabledNotActivePhase,\n    notVerified: messages.surveyDisabledNotVerified,\n  };\n\n  render() {\n    const {\n      surveyEmbedUrl,\n      surveyService,\n      authUser,\n      project,\n      phase,\n      className,\n    } = this.props;\n\n    if (!isNilOrError(project)) {\n      const { enabled, disabledReason } = getSurveyTakingRules({\n        project,\n        phaseContext: phase,\n        signedIn: !isNilOrError(authUser),\n      });\n      const registrationNotCompleted =\n        !isNilOrError(authUser) &&\n        !authUser.attributes.registration_completed_at;\n      const requiresConfirmation =\n        !isNilOrError(authUser) &&\n        !!authUser.attributes.confirmation_required &&\n        !!registrationNotCompleted;\n      const shouldVerify = !!(\n        disabledReason === 'maybeNotVerified' ||\n        disabledReason === 'notVerified'\n      );\n\n      if (\n        disabledReason === 'maybeNotPermitted' ||\n        disabledReason === 'maybeNotVerified' ||\n        disabledReason === 'notVerified' ||\n        registrationNotCompleted\n      ) {\n        return (\n          <Container className={className || ''}>\n            {/*\n            <ProjectPageSectionTitle>\n              <FormattedMessage {...messages.survey} />\n            </ProjectPageSectionTitle>\n            */}\n\n            <SignUpInWrapper>\n              <StyledSignUpIn\n                metaData={{\n                  requiresConfirmation,\n                  flow: 'signup',\n                  pathname: window.location.pathname,\n                  modalNoCloseSteps: ['confirmation'],\n                  inModal: true,\n                  verification: shouldVerify,\n                  noPushLinks: true,\n                  noAutofocus: true,\n                }}\n                customSignInHeader={\n                  <SignUpInHeader>\n                    <FormattedMessage {...messages.logInToTakeTheSurvey} />\n                  </SignUpInHeader>\n                }\n                customSignUpHeader={\n                  <SignUpInHeader>\n                    <FormattedMessage {...messages.signUpToTakeTheSurvey} />\n                  </SignUpInHeader>\n                }\n                onSignUpInCompleted={this.noOp}\n              />\n            </SignUpInWrapper>\n          </Container>\n        );\n      }\n\n      if (enabled) {\n        const email = authUser ? authUser.attributes.email : null;\n        const user_id = authUser ? authUser.id : null;\n\n        return (\n          <Container\n            id=\"project-survey\"\n            className={`${className} e2e-${surveyService}-survey enabled`}\n          >\n            <ProjectPageSectionTitle>\n              <FormattedMessage {...messages.survey} />\n            </ProjectPageSectionTitle>\n\n            {surveyService === 'typeform' && (\n              <TypeformSurvey\n                typeformUrl={surveyEmbedUrl}\n                email={email || null}\n                user_id={user_id}\n              />\n            )}\n\n            {surveyService === 'survey_monkey' && (\n              <SurveymonkeySurvey surveymonkeyUrl={surveyEmbedUrl} />\n            )}\n\n            {surveyService === 'google_forms' && (\n              <GoogleFormsSurvey googleFormsUrl={surveyEmbedUrl} />\n            )}\n\n            {surveyService === 'enalyzer' && (\n              <EnalyzerSurvey enalyzerUrl={surveyEmbedUrl} />\n            )}\n\n            {surveyService === 'qualtrics' && (\n              <QualtricsSurvey qualtricsUrl={surveyEmbedUrl} />\n            )}\n\n            {surveyService === 'microsoft_forms' && (\n              <MicrosoftFormsSurvey microsoftFormsUrl={surveyEmbedUrl} />\n            )}\n\n            {surveyService === 'survey_xact' && (\n              <SurveyXact surveyXactUrl={surveyEmbedUrl} />\n            )}\n          </Container>\n        );\n      }\n\n      return (\n        <Container className={`warning ${className || ''}`}>\n          <Warning icon=\"lock\">\n            <FormattedMessage\n              {...(disabledReason\n                ? this.disabledMessage[disabledReason]\n                : messages.surveyDisabledNotPossible)}\n              values={{\n                verificationLink: (\n                  <button onClick={this.onVerify}>\n                    <FormattedMessage {...messages.verificationLinkText} />\n                  </button>\n                ),\n                signUpLink: (\n                  <button onClick={this.signUp}>\n                    <FormattedMessage {...messages.signUpLinkText} />\n                  </button>\n                ),\n                logInLink: (\n                  <button onClick={this.signIn}>\n                    <FormattedMessage {...messages.logInLinkText} />\n                  </button>\n                ),\n              }}\n            />\n          </Warning>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n  phase: ({ phaseId, render }) => <GetPhase id={phaseId}>{render}</GetPhase>,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <Survey {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { memo } from 'react';\n\n// components\nimport Button from 'components/UI/Button';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// style\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  height: 100%;\n  flex: 1 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 4rem;\n  font-size: ${fontSizes.large}px;\n  color: ${colors.label};\n`;\n\ninterface Props {\n  className?: string;\n}\n\nconst ProjectNotFound = memo<Props>(({ className }) => {\n  return (\n    <Container className={className || ''}>\n      <p>\n        <FormattedMessage {...messages.noProjectFoundHere} />\n      </p>\n      <Button\n        linkTo=\"/projects\"\n        text={<FormattedMessage {...messages.goBackToList} />}\n        icon=\"arrow-back\"\n      />\n    </Container>\n  );\n});\n\nexport default ProjectNotFound;\n","import { API_PATH } from 'containers/App/constants';\nimport streams from 'utils/streams';\nimport { Multiloc, IParticipationContextType } from 'typings';\nimport { capitalizeParticipationContextType } from 'utils/helperUtils';\n\ntype IPollQuestionAttributes = {\n  question_type: 'multiple_options' | 'single_option';\n  max_options: number | null;\n  title_multiloc: Multiloc;\n  ordering: number;\n};\n\nexport interface IPollQuestion {\n  id: string;\n  type: string;\n  attributes: IPollQuestionAttributes;\n  relationships: {\n    options: {\n      data: {\n        id: string;\n      }[];\n    };\n  };\n}\n\nexport function pollQuestionsStream(\n  participationContextId: string,\n  participationContextType: IParticipationContextType\n) {\n  return streams.get<{ data: IPollQuestion[] }>({\n    apiEndpoint: `${API_PATH}/${participationContextType}s/${participationContextId}/poll_questions`,\n  });\n}\n\nexport async function addPollQuestion(\n  participationContextId: string,\n  participationContextType: IParticipationContextType,\n  titleMultiloc: Multiloc\n) {\n  const response = await streams.add<{ data: IPollQuestion }>(\n    `${API_PATH}/poll_questions`,\n    {\n      participation_context_id: participationContextId,\n      participation_context_type: capitalizeParticipationContextType(\n        participationContextType\n      ),\n      title_multiloc: titleMultiloc,\n    }\n  );\n  streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/${participationContextType}s/${participationContextId}/poll_questions`,\n    ],\n  });\n  return response;\n}\n\nexport function pollQuestionStream(questionId: string) {\n  return streams.get<IPollQuestion>({\n    apiEndpoint: `${API_PATH}/poll_questions/${questionId}`,\n  });\n}\n\nexport async function deletePollQuestion(\n  questionId: string,\n  participationContextId?: string,\n  participationContextType?: IParticipationContextType\n) {\n  const response = await streams.delete(\n    `${API_PATH}/poll_questions/${questionId}`,\n    questionId\n  );\n  streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/${participationContextType}s/${participationContextId}/poll_questions`,\n    ],\n  });\n  return response;\n}\n\nexport function reorderPollQuestion(questionId: string, newPosition: number) {\n  return streams.update(\n    `${API_PATH}/poll_questions/${questionId}/reorder`,\n    questionId,\n    {\n      ordering: newPosition,\n    }\n  );\n}\nexport function updatePollQuestion(\n  questionId: string,\n  diff: Partial<IPollQuestionAttributes>\n) {\n  return streams.update<{ data: IPollQuestion }>(\n    `${API_PATH}/poll_questions/${questionId}`,\n    questionId,\n    diff\n  );\n}\n","interface IScrollToElementParams {\n  id: string;\n  behavior?: 'smooth' | 'auto';\n  offset?: number;\n}\n\nexport function scrollToElement({\n  id,\n  behavior,\n  offset,\n}: IScrollToElementParams) {\n  const element = document.getElementById(id);\n  if (!element) return;\n\n  const elementTop = element.getBoundingClientRect().top;\n  const top = elementTop + window.pageYOffset - (offset ?? 100);\n  window.scrollTo({ top, behavior: behavior ?? 'smooth' });\n}\n","import React from 'react';\nimport {\n  get,\n  isString,\n  isEqual,\n  omit,\n  cloneDeep,\n  omitBy,\n  isNil,\n  isArray,\n  unionBy,\n} from 'lodash-es';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport {\n  map,\n  distinctUntilChanged,\n  mergeScan,\n  switchMap,\n} from 'rxjs/operators';\nimport {\n  ideasStream,\n  IIdeaData,\n  IdeaPublicationStatus,\n  ideasMiniStream,\n} from 'services/ideas';\nimport { PublicationStatus as ProjectPublicationStatus } from 'services/projects';\nimport {\n  getPageNumberFromUrl,\n  getSortAttribute,\n  getSortDirection,\n  SortDirection,\n} from 'utils/paginationUtils';\n\nexport type SortAttribute =\n  | 'new'\n  | 'trending'\n  | 'popular'\n  | 'author_name'\n  | 'upvotes_count'\n  | 'downvotes_count'\n  | 'baskets_count'\n  | 'status';\nexport type Sort =\n  | 'random'\n  | 'new'\n  | '-new'\n  | 'trending'\n  | '-trending'\n  | 'popular'\n  | '-popular'\n  | 'author_name'\n  | '-author_name'\n  | 'upvotes_count'\n  | '-upvotes_count'\n  | 'downvotes_count'\n  | '-downvotes_count'\n  | 'baskets_count'\n  | '-baskets_count'\n  | 'status'\n  | '-status';\ntype PublicationStatus = IdeaPublicationStatus;\n\nexport interface InputProps {\n  type: 'load-more' | 'paginated';\n  pageNumber?: number;\n  pageSize?: number;\n  projectIds?: string[] | 'all';\n  phaseId?: string;\n  authorId?: string;\n  sort?: Sort;\n  search?: string;\n  topics?: string[];\n  areas?: string[];\n  ideaStatusId?: string;\n  publicationStatus?: PublicationStatus;\n  projectPublicationStatus?: ProjectPublicationStatus;\n  boundingBox?: number[];\n  assignee?: string;\n  feedbackNeeded?: boolean;\n  // prop mini Gets stripped down ideas containing only title, should never be cached,\n  // and is not tested in all scenarios, but improves performance drastically.\n  mini?: boolean;\n}\n\nexport interface IQueryParameters {\n  'page[number]': number;\n  'page[size]': number;\n  projects: string[] | undefined | null;\n  phase: string | undefined | null;\n  author: string | undefined | null;\n  sort: Sort;\n  search: string | undefined | null;\n  topics: string[] | undefined | null;\n  areas: string[] | undefined | null;\n  idea_status: string | undefined | null;\n  publication_status: PublicationStatus | undefined | null;\n  project_publication_status: ProjectPublicationStatus | undefined | null;\n  bounding_box: number[] | undefined | null;\n  assignee: string | undefined | null;\n  feedback_needed: boolean | undefined | null;\n}\n\ninterface IAccumulator {\n  ideas: IIdeaData[] | null;\n  queryParameters: IQueryParameters;\n  hasMore: boolean;\n}\n\ntype children = (renderProps: GetIdeasChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: (obj: GetIdeasChildProps) => JSX.Element | null;\n}\n\nexport type GetIdeasChildProps = State & {\n  onLoadMore: () => void;\n  onChangePage: (pageNumber: number) => void;\n  onChangeProjects: (projectIds: string[]) => void;\n  onChangePhase: (phaseId: string) => void;\n  onChangeSearchTerm: (search: string) => void;\n  onChangeSorting: (sort: Sort) => void;\n  onChangeTopics: (topics: string[]) => void;\n  onChangeAreas: (areas: string[]) => void;\n  onChangeStatus: (ideaStatus: string | null) => void;\n  onChangePublicationStatus: (publicationStatus: PublicationStatus) => void;\n  onChangeProjectPublicationStatus: (\n    ProjectPublicationStatus: ProjectPublicationStatus\n  ) => void;\n  onChangeAssignee: (assignee: string | undefined) => void;\n  onChangeFeedbackFilter: (feedbackNeeded: boolean) => void;\n  onIdeaFiltering: (partialQueryParameters: Partial<IQueryParameters>) => void;\n  onResetParams: (paramsToOmit?: (keyof IQueryParameters)[]) => void;\n  type: 'ideas';\n};\n\ninterface State {\n  queryParameters: IQueryParameters;\n  list: IIdeaData[] | undefined | null;\n  hasMore: boolean;\n  querying: boolean;\n  loadingMore: boolean;\n  sortAttribute: SortAttribute;\n  sortDirection: SortDirection;\n  currentPage: number;\n  lastPage: number;\n}\n\nexport default class GetIdeas extends React.Component<Props, State> {\n  defaultQueryParameters: IQueryParameters;\n  queryParameters$: BehaviorSubject<IQueryParameters>;\n  subscriptions: Subscription[];\n\n  static defaultProps = {\n    pageNumber: 1,\n    pageSize: 12,\n    sort: 'random',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.defaultQueryParameters = {\n      'page[number]': props.pageNumber as number,\n      'page[size]': props.pageSize as number,\n      sort: props.sort as Sort,\n      projects: undefined,\n      phase: undefined,\n      author: undefined,\n      search: undefined,\n      topics: undefined,\n      areas: undefined,\n      idea_status: undefined,\n      publication_status: undefined,\n      project_publication_status: undefined,\n      bounding_box: undefined,\n      assignee: undefined,\n      feedback_needed: undefined,\n    };\n    const queryParameters = this.getQueryParameters(\n      this.defaultQueryParameters,\n      props\n    );\n    this.state = {\n      // defaults\n      queryParameters,\n      list: undefined,\n      hasMore: false,\n      querying: true,\n      loadingMore: false,\n      sortAttribute: getSortAttribute<Sort, SortAttribute>(props.sort as Sort),\n      sortDirection: getSortDirection<Sort>(props.sort as Sort),\n      currentPage: 1,\n      lastPage: 1,\n    };\n    this.queryParameters$ = new BehaviorSubject(queryParameters);\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    const queryParameters = this.getQueryParameters(\n      this.state.queryParameters,\n      this.props\n    );\n    const startAccumulatorValue: IAccumulator = {\n      queryParameters,\n      ideas: null,\n      hasMore: false,\n    };\n    const queryParameters$ = this.queryParameters$.pipe(\n      distinctUntilChanged((prev, next) => isEqual(prev, next))\n    );\n\n    if (!this.props.type || this.props.type === 'load-more') {\n      this.subscriptions = [\n        queryParameters$\n          .pipe(\n            mergeScan<IQueryParameters, IAccumulator>(\n              (acc, newQueryParameters) => {\n                const oldQueryParamsWithoutPageNumber = omit(\n                  cloneDeep(acc.queryParameters),\n                  'page[number]'\n                );\n                const newQueryParamsWithoutPageNumber = omit(\n                  cloneDeep(newQueryParameters),\n                  'page[number]'\n                );\n                const oldPageNumber = acc.queryParameters['page[number]'];\n                const newPageNumber = newQueryParameters['page[number]'];\n                const isLoadingMore =\n                  isEqual(\n                    oldQueryParamsWithoutPageNumber,\n                    newQueryParamsWithoutPageNumber\n                  ) && oldPageNumber !== newPageNumber;\n                const pageNumber = isLoadingMore\n                  ? newQueryParameters['page[number]']\n                  : 1;\n                const queryParameters: IQueryParameters = {\n                  ...newQueryParameters,\n                  'page[number]': pageNumber,\n                };\n\n                this.setState({\n                  querying: !isLoadingMore,\n                  loadingMore: isLoadingMore,\n                });\n\n                const stream = this.props.mini ? ideasMiniStream : ideasStream;\n\n                return stream({ queryParameters }).observable.pipe(\n                  map((ideas) => {\n                    const selfLink = get(ideas, 'links.self');\n                    const lastLink = get(ideas, 'links.last');\n                    const hasMore =\n                      isString(selfLink) &&\n                      isString(lastLink) &&\n                      selfLink !== lastLink;\n\n                    return {\n                      queryParameters,\n                      hasMore,\n                      ideas: !isLoadingMore\n                        ? ideas.data\n                        : unionBy(acc.ideas || [], ideas.data, 'id'),\n                    };\n                  })\n                );\n              },\n              startAccumulatorValue\n            )\n          )\n          .subscribe(({ ideas, queryParameters, hasMore }) => {\n            this.setState({\n              queryParameters,\n              hasMore,\n              list: ideas,\n              querying: false,\n              loadingMore: false,\n            });\n          }),\n      ];\n    } else {\n      this.subscriptions = [\n        queryParameters$\n          .pipe(\n            switchMap((queryParameters) => {\n              const oldPageNumber = this.state.queryParameters['page[number]'];\n              const newPageNumber = queryParameters['page[number]'];\n              queryParameters['page[number]'] =\n                newPageNumber !== oldPageNumber ? newPageNumber : 1;\n\n              const stream = this.props.mini ? ideasMiniStream : ideasStream;\n\n              return stream({\n                queryParameters,\n              }).observable.pipe(map((ideas) => ({ queryParameters, ideas })));\n            })\n          )\n          .subscribe(({ ideas, queryParameters }) => {\n            this.setState({\n              queryParameters,\n              list: ideas ? ideas.data : null,\n              querying: false,\n              loadingMore: false,\n              sortAttribute: getSortAttribute<Sort, SortAttribute>(\n                queryParameters.sort\n              ),\n              sortDirection: getSortDirection<Sort>(queryParameters.sort),\n              currentPage: getPageNumberFromUrl(ideas.links.self) || 1,\n              lastPage: getPageNumberFromUrl(ideas.links.last) || 1,\n            });\n          }),\n      ];\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, _prevState: State) {\n    const { children: _prevChildren, ...prevPropsWithoutChildren } = prevProps;\n    const { children: _nextChildren, ...nextPropsWithoutChildren } = this.props;\n\n    if (!isEqual(prevPropsWithoutChildren, nextPropsWithoutChildren)) {\n      const queryParameters = this.getQueryParameters(\n        this.state.queryParameters,\n        this.props\n      );\n      this.queryParameters$.next(queryParameters);\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  propsToQueryParamsShape = () => ({\n    projects: this.props.projectIds,\n    'page[number]': this.props.pageNumber as number,\n    'page[size]': this.props.pageSize as number,\n    phase: this.props.phaseId,\n    author: this.props.authorId,\n    sort: this.props.sort as Sort,\n    topics: this.props.topics,\n    areas: this.props.areas,\n    idea_status: this.props.ideaStatusId,\n    publication_status: this.props.publicationStatus,\n    project_publication_status: this.props.projectPublicationStatus,\n    bounding_box: this.props.boundingBox,\n    assignee: this.props.assignee,\n    feedback_needed: this.props.feedbackNeeded,\n    search: undefined,\n  });\n\n  getQueryParametersFromProps = () => {\n    const queryParamsShaped = this.propsToQueryParamsShape();\n    Object.keys(queryParamsShaped)\n      .filter((key) => queryParamsShaped[key] === null)\n      .forEach((key) => (queryParamsShaped[key] = undefined));\n    return queryParamsShaped as IQueryParameters; // legal because last line changes null values to undefined\n  };\n\n  getQueryParameters = (queryParameters: IQueryParameters, props: Props) => {\n    let projects: string[] | undefined | null = undefined;\n\n    if (isNil(props.projectIds)) {\n      projects = queryParameters.projects;\n    } else if (isArray(props.projectIds)) {\n      projects = props.projectIds;\n    }\n\n    const inputPropsQueryParameters: IQueryParameters = {\n      projects,\n      'page[number]': props.pageNumber as number,\n      'page[size]': props.pageSize as number,\n      phase: props.phaseId,\n      author: props.authorId,\n      sort: props.sort as Sort,\n      search: props.search,\n      topics: props.topics,\n      areas: props.areas,\n      idea_status: props.ideaStatusId,\n      publication_status: props.publicationStatus,\n      project_publication_status: props.projectPublicationStatus,\n      bounding_box: props.boundingBox,\n      assignee: props.assignee,\n      feedback_needed: props.feedbackNeeded,\n    };\n\n    // Omit all queryParameters that are nil.\n    // Why do this? Because we assume that an input prop that's nil is an input prop that should be ignored,\n    // and not overwrite a none-nil value that's part of this.state.queryParameters.\n    return {\n      ...queryParameters,\n      ...omitBy(inputPropsQueryParameters, isNil),\n      // Make an exception for 'projects', because when it's undefined we don't want to ignore it but instead pass it along\n      // to let the request know we don't want to apply a projects filter but load the ideas for all projects\n      projects,\n    };\n  };\n\n  loadMore = () => {\n    if (!this.state.loadingMore) {\n      this.queryParameters$.next({\n        ...this.state.queryParameters,\n        'page[number]': this.state.queryParameters['page[number]'] + 1,\n      });\n    }\n  };\n\n  handleChangePage = (pageNumber: number) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      'page[number]': pageNumber,\n    });\n  };\n\n  handlePhaseOnChange = (phaseId: string) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      phase: phaseId,\n      'page[number]': 1,\n    });\n  };\n\n  handleSearchOnChange = (search: string) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      search: search ? search : undefined,\n      'page[number]': 1,\n    });\n  };\n\n  handleSortOnChange = (sort: Sort) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      sort,\n      'page[number]': 1,\n    });\n  };\n\n  handleProjectsOnChange = (projects: string[]) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      projects,\n      'page[number]': 1,\n    });\n  };\n\n  handleTopicsOnChange = (topics: string[]) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      topics,\n      'page[number]': 1,\n    });\n  };\n\n  handleAreasOnchange = (areas: string[]) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      areas,\n      'page[number]': 1,\n    });\n  };\n\n  handleStatusOnChange = (ideaStatus: string | null) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      idea_status: ideaStatus || undefined,\n      'page[number]': 1,\n    });\n  };\n\n  handlePublicationStatusOnChange = (publicationStatus: PublicationStatus) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      publication_status: publicationStatus,\n      'page[number]': 1,\n    });\n  };\n\n  handleProjectPublicationStatusOnChange = (\n    projectPublicationStatus: ProjectPublicationStatus\n  ) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      project_publication_status: projectPublicationStatus,\n      'page[number]': 1,\n    });\n  };\n\n  handleAssigneeOnChange = (assignee: string | undefined) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      assignee,\n      'page[number]': 1,\n    });\n  };\n\n  handleFeedbackFilterOnChange = (feedbackNeeded: boolean) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      feedback_needed: feedbackNeeded || undefined,\n      'page[number]': 1,\n    });\n  };\n\n  handleIdeaFiltering = (ideaFilters: Partial<IQueryParameters>) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      ...ideaFilters,\n      'page[number]': 1,\n    });\n  };\n\n  handleResetParamsToProps = (paramsToOmit?: (keyof IQueryParameters)[]) => {\n    const defaultQueryParameters = this.getQueryParametersFromProps();\n\n    if (paramsToOmit && paramsToOmit.length > 0) {\n      this.queryParameters$.next({\n        ...this.state.queryParameters,\n        ...omit(defaultQueryParameters, paramsToOmit),\n      });\n    } else {\n      this.queryParameters$.next(defaultQueryParameters);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return (children as children)({\n      ...this.state,\n      onLoadMore: this.loadMore,\n      onChangePage: this.handleChangePage,\n      onChangeProjects: this.handleProjectsOnChange,\n      onChangePhase: this.handlePhaseOnChange,\n      onChangeSearchTerm: this.handleSearchOnChange,\n      onChangeSorting: this.handleSortOnChange,\n      onChangeTopics: this.handleTopicsOnChange,\n      onChangeAreas: this.handleAreasOnchange,\n      onChangeStatus: this.handleStatusOnChange,\n      onChangePublicationStatus: this.handlePublicationStatusOnChange,\n      onChangeProjectPublicationStatus: this\n        .handleProjectPublicationStatusOnChange,\n      onChangeAssignee: this.handleAssigneeOnChange,\n      onChangeFeedbackFilter: this.handleFeedbackFilterOnChange,\n      onIdeaFiltering: this.handleIdeaFiltering,\n      onResetParams: this.handleResetParamsToProps,\n      type: 'ideas',\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledIframe = styled.iframe`\n  display: block;\n  border: none;\n  height: 600px;\n  flex-basis: 640px;\n`;\n\ntype Props = {\n  googleFormsUrl: string;\n  className?: string;\n};\n\nexport default class GoogleFormsSurvey extends PureComponent<Props> {\n  render() {\n    const { googleFormsUrl, className } = this.props;\n\n    return (\n      <Container className={className}>\n        <StyledIframe src={googleFormsUrl} />\n      </Container>\n    );\n  }\n}\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { Multiloc, ImageSizes, IParticipationContextType } from 'typings';\nimport { requestBlob } from 'utils/request';\nimport { saveAs } from 'file-saver';\n\nexport interface IVolunteerData {\n  id: string;\n  type: string;\n  attributes: {\n    title_multiloc: Multiloc;\n    description_multiloc: Multiloc;\n    image: ImageSizes;\n    volunteers_count: number;\n  };\n}\n\nexport interface IVolunteerLinks {\n  self: string;\n  first: string;\n  prev: string;\n  next: string;\n  last: string;\n}\n\nexport interface IVolunteers {\n  data: IVolunteerData[];\n  links: IVolunteerLinks;\n}\n\nexport interface IVolunteer {\n  data: IVolunteerData;\n}\n\nexport function volunteersStream(\n  causeId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IVolunteers>({\n    apiEndpoint: `${API_PATH}/causes/${causeId}/volunteers`,\n    ...streamParams,\n  });\n}\n\nexport async function addVolunteer(causeId: string) {\n  const stream = await streams.add<IVolunteer>(\n    `${API_PATH}/causes/${causeId}/volunteers`,\n    null\n  );\n  await streams.fetchAllWith({ dataId: [causeId] });\n  return stream;\n}\n\nexport async function deleteVolunteer(causeId: string, volunteerId: string) {\n  const stream = await streams.delete(\n    `${API_PATH}/causes/${causeId}/volunteers`,\n    volunteerId\n  );\n  await streams.fetchAllWith({ dataId: [causeId] });\n  return stream;\n}\n\nexport async function exportVolunteers(\n  participationContextId: string,\n  participationContextType: IParticipationContextType\n) {\n  const blob = await requestBlob(\n    `${API_PATH}/${participationContextType}s/${participationContextId}/volunteers/as_xlsx`,\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n  );\n  saveAs(blob, 'volunteers-export.xlsx');\n}\n","import { IPhaseData } from 'services/phases';\nimport { IProjectData } from 'services/projects';\nimport { Locale } from 'typings';\n\nexport default function setPhaseUrl(\n  selectedPhaseId: string,\n  currentPhaseId: string | undefined,\n  phases: IPhaseData[],\n  project: IProjectData,\n  locale: Locale\n) {\n  const phaseNumber =\n    phases.findIndex((phase) => selectedPhaseId === phase.id) + 1;\n  const projectSlug = project.attributes.slug;\n\n  const projectURL = `/${locale}/projects/${projectSlug}`;\n  const url =\n    selectedPhaseId === currentPhaseId\n      ? projectURL\n      : `${projectURL}/${phaseNumber}`;\n\n  window.history.pushState(null, '', url);\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  formCompleted: {\n    id: 'app.containers.Projects.PollForm.formCompleted',\n    defaultMessage: 'Thank you for answering this poll!',\n  },\n  sendAnswer: {\n    id: 'app.containers.Projects.PollForm.sendAnswer',\n    defaultMessage: 'Send',\n  },\n  pollDisabledProjectInactive: {\n    id: 'app.containers.Projects.PollForm.pollDisabledProjectInactive',\n    defaultMessage:\n      'The poll is no longer available, since this project is no longer active.',\n  },\n  pollDisabledNotPermitted: {\n    id: 'app.containers.Projects.PollForm.pollDisabledNotPermitted',\n    defaultMessage:\n      \"Unfortunately, you don't have the rights to take this poll.\",\n  },\n  pollDisabledMaybeNotPermitted: {\n    id: 'app.containers.Projects.PollForm.pollDisabledMaybeNotPermitted',\n    defaultMessage:\n      'Only certain users can take this poll. Please {signUpLink} or {logInLink} first.',\n  },\n  pollDisabledMaybeNotVerified: {\n    id: 'app.containers.Projects.PollForm.pollDisabledMaybeNotVerified',\n    defaultMessage:\n      'Only verified users can take this poll. Please {signUpLink} or {logInLink} first.',\n  },\n  pollDisabledNotPossible: {\n    id: 'app.containers.Projects.PollForm.pollDisabledNotPossible',\n    defaultMessage: 'It is currently impossible to take this poll.',\n  },\n  pollDisabledNotActivePhase: {\n    id: 'app.containers.Projects.PollForm.pollDisabledNotActivePhase',\n    defaultMessage:\n      'This survey can only be taken when this phase in the timeline is active.',\n  },\n  signUpLinkText: {\n    id: 'app.containers.Projects.PollForm.signUpLinkText',\n    defaultMessage: 'sign up',\n  },\n  logInLinkText: {\n    id: 'app.containers.Projects.PollForm.logInLinkText',\n    defaultMessage: 'log in',\n  },\n  verificationLinkText: {\n    id: 'app.containers.Projects.PollForm.verificationLinkText',\n    defaultMessage: 'Verify your account now.',\n  },\n  pollDisabledNotVerified: {\n    id: 'app.containers.Projects.PollForm.pollDisabledNotVerified',\n    defaultMessage:\n      'Taking this poll requires verification of your account. {verificationLink}',\n  },\n  maxOptions: {\n    id: 'app.containers.Projects.PollForm.maxOptions',\n    defaultMessage: 'max. {maxNumber}',\n  },\n});\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isEmpty } from 'lodash-es';\n\n// components\nimport FileAttachments from 'components/UI/FileAttachments';\nimport PhaseTitle from './PhaseTitle';\nimport PhaseNavigation from './PhaseNavigation';\n\n// hooks\nimport useWindowSize from 'hooks/useWindowSize';\nimport useLocalize from 'hooks/useLocalize';\nimport usePhase from 'hooks/usePhase';\nimport useResourceFiles from 'hooks/useResourceFiles';\n\n// style\nimport styled, { useTheme } from 'styled-components';\nimport {\n  defaultCardStyle,\n  media,\n  viewportWidths,\n  isRtl,\n} from 'utils/styleUtils';\nimport T from 'components/T';\nimport QuillEditedContent from 'components/UI/QuillEditedContent';\n\nconst Container = styled.div`\n  padding: 30px;\n  padding-bottom: 35px;\n  ${defaultCardStyle};\n\n  ${media.smallerThanMinTablet`\n    padding: 20px;\n  `}\n`;\n\nconst Header = styled.div<{ hasContent: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${(props) => (props.hasContent ? '30px' : '0px')};\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst StyledFileAttachments = styled(FileAttachments)`\n  margin-top: 20px;\n  max-width: 520px;\n`;\n\ninterface Props {\n  projectId: string;\n  phaseId: string | null;\n  className?: string;\n}\n\nconst PhaseDescription = memo<Props>(({ projectId, phaseId, className }) => {\n  const theme: any = useTheme();\n  const { windowWidth } = useWindowSize();\n  const localize = useLocalize();\n  const phase = usePhase(phaseId);\n  const phaseFiles = useResourceFiles({\n    resourceId: phaseId,\n    resourceType: 'phase',\n  });\n\n  const smallerThanSmallTablet = windowWidth <= viewportWidths.smallTablet;\n  const content = !isNilOrError(phase)\n    ? localize(phase.attributes.description_multiloc)\n    : '';\n  const contentIsEmpty =\n    content === '' || content === '<p></p>' || content === '<p><br></p>';\n  const hasContent = !contentIsEmpty || !isEmpty(phaseFiles);\n\n  return (\n    <Container className={`e2e-phase-description ${className || ''}`}>\n      <Header hasContent={hasContent}>\n        <PhaseTitle projectId={projectId} selectedPhaseId={phaseId} />\n        {!smallerThanSmallTablet && <PhaseNavigation projectId={projectId} />}\n      </Header>\n      {!isNilOrError(phase) && hasContent && (\n        <>\n          <QuillEditedContent fontSize=\"base\" textColor={theme.colorText}>\n            <T\n              value={phase?.attributes?.description_multiloc}\n              supportHtml={true}\n            />\n          </QuillEditedContent>\n\n          {!isNilOrError(phaseFiles) && !isEmpty(phaseFiles) && (\n            <StyledFileAttachments files={phaseFiles} />\n          )}\n        </>\n      )}\n    </Container>\n  );\n});\n\nexport default PhaseDescription;\n","import React, {\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n  FormEvent,\n} from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport moment from 'moment';\n\n// tracking\nimport tracks from './tracks';\nimport { trackEventByName } from 'utils/analytics';\n\n// components\nimport { Icon } from 'cl2-component-library';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport usePhases from 'hooks/usePhases';\n\n// services\nimport { IPhaseData, getCurrentPhase } from 'services/phases';\n\n// events\nimport { selectedPhase$, selectPhase } from './events';\n\n// i18n\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { getLocalized } from 'utils/i18n';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// utils\nimport { getIsoDate } from 'utils/dateUtils';\n\n// style\nimport styled, { css } from 'styled-components';\nimport { media, colors, fontSizes, isRtl } from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { darken, rgba } from 'polished';\n\nconst grey = colors.label;\nconst greenTransparent = rgba(colors.clGreen, 0.15);\nconst green = colors.clGreen;\nconst darkGreen = colors.clGreenDark;\n\nconst Container = styled.div<{ isHidden: boolean }>`\n  width: 100%;\n  display: ${(props) => (props.isHidden ? 'none' : 'flex')};\n  justify-content: center;\n`;\n\nconst ContainerInner = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst Phases = styled.div`\n  width: 100%;\n  margin: 0;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst phaseBarHeight = '24px';\n\nconst PhaseBar = styled.button`\n  width: 100%;\n  height: calc(${phaseBarHeight} - 1px);\n  color: ${darken(0.1, colors.label)};\n  font-size: ${fontSizes.small}px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${darken(0.08, colors.lightGreyishBlue)};\n  transition: background 60ms ease-out;\n  position: relative;\n  cursor: pointer;\n  border: none;\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n`;\n\nconst PhaseArrow = styled(Icon)`\n  width: 20px;\n  height: ${phaseBarHeight};\n  fill: ${colors.background};\n  position: absolute;\n  top: 0px;\n  right: -9px;\n  z-index: 2;\n\n  ${isRtl`\n    transform: rotate(180deg);\n    right: auto;\n    left: -9px;\n  `}\n`;\n\nconst PhaseText = styled.div<{ current: boolean; selected: boolean }>`\n  color: ${darken(0.1, colors.label)};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 3;\n  line-height: 20px;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-all;\n  word-break: break-word;\n  hyphens: auto;\n  max-height: 60px;\n  margin-top: 5px;\n  margin-left: 5px;\n  margin-right: 5px;\n  transition: color 80ms ease-out;\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `}\n`;\n\nconst selectedPhaseBar = css`\n  ${PhaseBar} {\n    background: ${grey};\n    color: #fff;\n  }\n  ${PhaseText} {\n    color: ${grey};\n  }\n`;\n\nconst currentPhaseBar = css`\n  ${PhaseBar} {\n    background: ${greenTransparent};\n    color: ${darkGreen};\n  }\n  ${PhaseText} {\n    color: ${darkGreen};\n  }\n`;\n\nconst currentSelectedPhaseBar = css`\n  ${PhaseBar} {\n    background: ${green};\n    color: #fff;\n  }\n  ${PhaseText} {\n    color: ${darkGreen};\n  }\n`;\n\nconst PhaseContainer = styled.div<{ width: number }>`\n  width: ${(props) => props.width}%;\n  min-width: 80px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  cursor: pointer;\n  margin-right: ${(props: any) => (!props.last ? '1px' : '0px')};\n\n  ${media.smallerThanMinTablet`\n    width: 100%;\n    min-width: unset;\n  `}\n\n  &.first ${PhaseBar} {\n    border-radius: ${(props: any) => props.theme.borderRadius} 0px 0px\n      ${(props: any) => props.theme.borderRadius};\n  }\n\n  &.last ${PhaseBar} {\n    border-radius: 0px ${(props: any) => props.theme.borderRadius}\n      ${(props: any) => props.theme.borderRadius} 0px;\n  }\n\n  &:focus,\n  &:hover {\n    ${selectedPhaseBar}\n  }\n\n  &.currentPhase:not(.selectedPhase) {\n    ${currentPhaseBar}\n\n    &:hover {\n      ${currentSelectedPhaseBar}\n    }\n  }\n\n  &.selectedPhase:not(.currentPhase) {\n    ${selectedPhaseBar}\n  }\n\n  &.selectedPhase.currentPhase {\n    ${currentSelectedPhaseBar}\n  }\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst Timeline = memo<Props>(({ projectId, className }) => {\n  const locale = useLocale();\n  const currentTenant = useAppConfiguration();\n  const phases = usePhases(projectId);\n\n  const [selectedPhase, setSelectedPhase] = useState<IPhaseData | null>(null);\n\n  useEffect(() => {\n    const subscription = selectedPhase$.subscribe((selectedPhase) => {\n      setSelectedPhase(selectedPhase);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const handleOnPhaseSelection = useCallback(\n    (phase: IPhaseData | null) => (event: FormEvent) => {\n      trackEventByName(tracks.clickOnPhase);\n      event.preventDefault();\n      selectPhase(phase);\n    },\n    []\n  );\n\n  const removeFocus = useCallback((event: React.MouseEvent) => {\n    event.preventDefault();\n  }, []);\n\n  if (\n    !isNilOrError(locale) &&\n    !isNilOrError(currentTenant) &&\n    !isNilOrError(phases) &&\n    phases.length > 0\n  ) {\n    const currentPhase = getCurrentPhase(phases);\n    const currentPhaseId = currentPhase ? currentPhase.id : null;\n    const selectedPhaseId = selectedPhase ? selectedPhase.id : null;\n    const currentTenantLocales =\n      currentTenant.data.attributes.settings.core.locales;\n    const totalNumberOfDays = phases\n      .map((phaseData) => {\n        const startIsoDate = getIsoDate(phaseData.attributes.start_at);\n        const endIsoDate = getIsoDate(phaseData.attributes.end_at);\n        const startMoment = moment(startIsoDate, 'YYYY-MM-DD');\n        const endMoment = moment(endIsoDate, 'YYYY-MM-DD');\n        const numberOfDays = Math.abs(startMoment.diff(endMoment, 'days')) + 1;\n        return numberOfDays;\n      })\n      .reduce((accumulator, numberOfDays) => {\n        return accumulator + numberOfDays;\n      });\n\n    return (\n      <Container\n        id=\"project-timeline\"\n        className={className || ''}\n        isHidden={phases.length === 1}\n      >\n        <ContainerInner>\n          <Phases className=\"e2e-phases\">\n            <ScreenReaderOnly>\n              <FormattedMessage {...messages.a11y_phasesOverview} />\n            </ScreenReaderOnly>\n            {phases.map((phase, index) => {\n              const phaseNumber = index + 1;\n              const phaseTitle = getLocalized(\n                phase.attributes.title_multiloc,\n                locale,\n                currentTenantLocales\n              );\n              const isFirst = index === 0;\n              const isLast = index === phases.length - 1;\n              const isCurrentPhase = phase.id === currentPhaseId;\n              const isSelectedPhase = phase.id === selectedPhaseId;\n              const startIsoDate = getIsoDate(phase.attributes.start_at);\n              const endIsoDate = getIsoDate(phase.attributes.end_at);\n              const startMoment = moment(startIsoDate, 'YYYY-MM-DD');\n              const endMoment = moment(endIsoDate, 'YYYY-MM-DD');\n              const numberOfDays =\n                Math.abs(startMoment.diff(endMoment, 'days')) + 1;\n              const width = Math.round(\n                (numberOfDays / totalNumberOfDays) * 100\n              );\n              const classNames = [\n                isFirst ? 'first' : null,\n                isLast ? 'last' : null,\n                isCurrentPhase ? 'currentPhase' : null,\n                isSelectedPhase ? 'selectedPhase' : null,\n              ]\n                .filter((className) => className)\n                .join(' ');\n\n              return (\n                <PhaseContainer\n                  className={classNames}\n                  key={index}\n                  width={width}\n                  onMouseDown={removeFocus}\n                  onClick={handleOnPhaseSelection(phase)}\n                >\n                  <PhaseBar>\n                    <span aria-hidden>{phaseNumber}</span>\n                    <ScreenReaderOnly>\n                      <FormattedMessage\n                        {...messages.a11y_phaseX}\n                        values={{\n                          phaseNumber,\n                          phaseTitle,\n                        }}\n                      />\n                    </ScreenReaderOnly>\n                    {!isLast && <PhaseArrow name=\"phase_arrow\" ariaHidden />}\n                  </PhaseBar>\n                  <PhaseText\n                    current={isCurrentPhase}\n                    selected={isSelectedPhase}\n                    aria-hidden\n                  >\n                    {phaseTitle}\n                  </PhaseText>\n                </PhaseContainer>\n              );\n            })}\n          </Phases>\n        </ContainerInner>\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default Timeline;\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport { Helmet } from 'react-helmet';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useAppConfigurationLocales from 'hooks/useAppConfigurationLocales';\nimport useAuthUser from 'hooks/useAuthUser';\n\n// utils\nimport { stripHtml } from 'utils/textUtils';\nimport { imageSizes } from 'utils/fileTools';\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\n// i18n\nimport { getLocalized } from 'utils/i18n';\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// typings\nimport { IProjectData } from 'services/projects';\n\ninterface Props {\n  project: IProjectData;\n}\n\nconst ProjectHelmet = memo<Props & InjectedIntlProps>(({ project, intl }) => {\n  const locale = useLocale();\n  const tenantLocales = useAppConfigurationLocales();\n  const authUser = useAuthUser();\n\n  if (\n    !isNilOrError(locale) &&\n    !isNilOrError(tenantLocales) &&\n    project.attributes\n  ) {\n    const { formatMessage } = intl;\n    const metaTitle = formatMessage(messages.metaTitle, {\n      projectTitle: getLocalized(\n        project.attributes.title_multiloc,\n        locale,\n        tenantLocales,\n        50\n      ),\n    });\n    const description = stripHtml(\n      getLocalized(\n        project.attributes.description_multiloc,\n        locale,\n        tenantLocales\n      ),\n      250\n    );\n    const image = project.attributes.header_bg.large;\n    const { location } = window;\n\n    return (\n      <Helmet>\n        <title>\n          {`${\n            !isNilOrError(authUser) && authUser.attributes.unread_notifications\n              ? `(${authUser.attributes.unread_notifications}) `\n              : ''\n          }\n            ${metaTitle}`}\n        </title>\n        {getCanonicalLink()}\n        {getAlternateLinks(tenantLocales)}\n        <meta name=\"title\" content={metaTitle} />\n        <meta name=\"description\" content={description} />\n        <meta property=\"og:title\" content={metaTitle} />\n        <meta property=\"og:description\" content={description} />\n        {image && <meta property=\"og:image\" content={image} />}\n        <meta\n          property=\"og:image:width\"\n          content={`${imageSizes.projectBg.large[0]}`}\n        />\n        <meta\n          property=\"og:image:height\"\n          content={`${imageSizes.projectBg.large[1]}`}\n        />\n        <meta property=\"og:url\" content={location.href} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      </Helmet>\n    );\n  }\n\n  return null;\n});\n\nconst ProjectHelmetWithHoC = injectIntl<Props>(ProjectHelmet);\n\nexport default ProjectHelmetWithHoC;\n","import React, { memo, useState, useEffect } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// resources\nimport GetIdeas from 'resources/GetIdeas';\n\n// hooks\nimport useProject from 'hooks/useProject';\nimport useEvents from 'hooks/useEvents';\nimport useLocale from 'hooks/useLocale';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport usePhases from 'hooks/usePhases';\n\n// components\nimport EventCard from 'components/EventCard';\nimport ContentContainer from 'components/ContentContainer';\nimport {\n  ProjectPageSectionTitle,\n  maxPageWidth,\n} from 'containers/ProjectsShowPage/styles';\nimport SectionContainer from 'components/SectionContainer';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// services\nimport { IPhaseData } from 'services/phases';\n\n// style\nimport styled from 'styled-components';\n\n// other\nimport { selectedPhase$ } from '../../timeline/events';\nimport { ideaDefaultSortMethodFallback } from 'services/participationContexts';\nimport { scrollToElement } from 'utils/scroll';\n\nconst Container = styled.div`\n  background: #fff;\n`;\n\nconst StyledEventCard = styled(EventCard)`\n  margin-bottom: 30px;\n`;\n\ninterface InputProps {\n  projectId: string;\n  className?: string;\n  scrollToEventId?: string;\n}\n\ninterface DataProps {\n  ideasLoaded: boolean;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst allHaveLoaded = (...args) => args.every((arg) => !isNilOrError(arg));\n\nconst EventsContainer = memo<Props>(\n  ({\n    projectId,\n    className,\n    ideasLoaded,\n    scrollToEventId: _scrollToEventId,\n  }) => {\n    const { events } = useEvents({\n      projectIds: [projectId],\n      sort: 'newest',\n      pageSize: 1000,\n    });\n\n    const locale = useLocale();\n    const tenant = useAppConfiguration();\n    const phases = usePhases(projectId);\n    const [scrollToEventId, setScrollToEventId] = useState<null | string>(null);\n\n    useEffect(() => {\n      if (!_scrollToEventId) return;\n      setScrollToEventId(_scrollToEventId);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n      // This if statement makes sure that all the page content has loaded\n      // before scrolling takes place. If not, the event card would be\n      // scrolled into view, but then pushed out of view again as other\n      // components load.\n      // There is an integration test to make sure this doesn't break\n      // (see front/cypress/integration/project_scroll_to_event_param)\n      if (\n        scrollToEventId === null ||\n        !ideasLoaded ||\n        !allHaveLoaded(events, locale, tenant, phases)\n      ) {\n        return;\n      }\n\n      setTimeout(() => {\n        scrollToElement({ id: scrollToEventId });\n      }, 100);\n\n      setScrollToEventId(null);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [events, locale, tenant, phases, ideasLoaded]);\n\n    if (!isNilOrError(events) && events.length > 0) {\n      return (\n        <Container id=\"project-events\" className={className || ''}>\n          <ContentContainer maxWidth={maxPageWidth}>\n            <SectionContainer>\n              <ProjectPageSectionTitle>\n                <FormattedMessage {...messages.events} />\n              </ProjectPageSectionTitle>\n              {events.map((event) => (\n                <StyledEventCard\n                  id={event.id}\n                  key={event.id}\n                  event={event}\n                  showLocation\n                  showDescription\n                  showAttachments\n                />\n              ))}\n            </SectionContainer>\n          </ContentContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default (props: InputProps) => {\n  const { projectId } = props;\n  const project = useProject({ projectId });\n  const [selectedPhase, setSelectedPhase] = useState<IPhaseData | null>(null);\n\n  useEffect(() => {\n    const subscription = selectedPhase$.subscribe((selectedPhase) => {\n      setSelectedPhase(selectedPhase);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  if (isNilOrError(project)) return null;\n\n  const sort =\n    project.attributes.process_type === 'continuous'\n      ? project.attributes.ideas_order\n      : selectedPhase?.attributes.ideas_order;\n\n  return (\n    <GetIdeas\n      type=\"load-more\"\n      projectIds={[projectId]}\n      pageSize={24}\n      sort={sort ?? ideaDefaultSortMethodFallback}\n      phaseId={selectedPhase?.id}\n    >\n      {(dataProps) => {\n        const ideasLoaded = !!dataProps.list;\n        return <EventsContainer {...props} ideasLoaded={ideasLoaded} />;\n      }}\n    </GetIdeas>\n  );\n};\n","import React, {\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n  FormEvent,\n} from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isNumber } from 'lodash-es';\n\n// hooks\nimport useProject from 'hooks/useProject';\nimport usePhases from 'hooks/usePhases';\n\n// services\nimport { IPhaseData, getCurrentPhase, getLastPhase } from 'services/phases';\nimport { getInputTerm } from 'services/participationContexts';\n\n// components\nimport Button from 'components/UI/Button';\nimport IdeaButton from 'components/IdeaButton';\n\n// utils\nimport { pastPresentOrFuture } from 'utils/dateUtils';\nimport { scrollToElement } from 'utils/scroll';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// style\nimport styled from 'styled-components';\nimport { selectPhase } from 'containers/ProjectsShowPage/timeline/events';\n\nconst Container = styled.div``;\n\n// const AllocateBudgetButton = styled(Button)`\n//   margin-bottom: 10px;\n// `;\n\nconst SeeIdeasButton = styled(Button)`\n  margin-bottom: 10px;\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst ProjectActionButtons = memo<Props>(({ projectId, className }) => {\n  const project = useProject({ projectId });\n  const phases = usePhases(projectId);\n\n  const [currentPhase, setCurrentPhase] = useState<IPhaseData | null>(null);\n  const [\n    ideasPresentOutsideViewport,\n    setIdeasPresentOutsideViewport,\n  ] = useState(false);\n  const [\n    surveyPresentOutsideViewport,\n    setSurveyPresentOutsideViewport,\n  ] = useState(false);\n  const [pollPresentOutsideViewport, setPollPresentOutsideViewport] = useState(\n    false\n  );\n\n  useEffect(() => {\n    setCurrentPhase(getCurrentPhase(phases) || getLastPhase(phases));\n  }, [phases]);\n\n  useEffect(() => {\n    const loop = (counter: number) => {\n      if (counter < 200) {\n        setTimeout(() => {\n          const viewportHeight = Math.max(\n            document.documentElement.clientHeight || 0,\n            window.innerHeight || 0\n          );\n\n          const ideasElement = document.getElementById('project-ideas');\n          const surveyElement = document.getElementById('project-survey');\n          const pollElement = document.getElementById('project-poll');\n\n          if (ideasElement) {\n            const isIdeasInViewport =\n              ideasElement.getBoundingClientRect()?.top + 800 <= viewportHeight;\n\n            if (!isIdeasInViewport) {\n              setIdeasPresentOutsideViewport(true);\n            }\n          }\n\n          if (surveyElement) {\n            const isSurveyInViewport =\n              surveyElement.getBoundingClientRect()?.top + 400 <=\n              viewportHeight;\n\n            if (!isSurveyInViewport) {\n              setSurveyPresentOutsideViewport(true);\n            }\n          }\n\n          if (pollElement) {\n            const isPollInViewport =\n              pollElement.getBoundingClientRect()?.top + 200 <= viewportHeight;\n\n            if (!isPollInViewport) {\n              setPollPresentOutsideViewport(true);\n            }\n          }\n\n          loop(counter + 1);\n        }, 10);\n      }\n    };\n\n    loop(0);\n  }, [projectId]);\n\n  const scrollTo = useCallback(\n    (id: string, shouldSelectCurrentPhase = true) => (event: FormEvent) => {\n      event.preventDefault();\n\n      currentPhase && shouldSelectCurrentPhase && selectPhase(currentPhase);\n\n      setTimeout(() => {\n        scrollToElement({ id });\n      }, 100);\n    },\n    [currentPhase]\n  );\n\n  if (!isNilOrError(project)) {\n    const {\n      process_type,\n      participation_method,\n      publication_status,\n    } = project.attributes;\n    const ideas_count =\n      process_type === 'continuous'\n        ? project.attributes.ideas_count\n        : currentPhase?.attributes.ideas_count;\n    const hasProjectEnded = currentPhase\n      ? pastPresentOrFuture([\n          currentPhase.attributes.start_at,\n          currentPhase.attributes.end_at,\n        ]) === 'past'\n      : false;\n    const inputTerm = getInputTerm(\n      project.attributes.process_type,\n      project,\n      phases\n    );\n\n    return (\n      <Container className={className || ''}>\n        {/* {ideasPresentOutsideViewport &&\n          ((process_type === 'continuous' &&\n            participation_method === 'budgeting') ||\n            currentPhase?.attributes.participation_method === 'budgeting') &&\n          !hasProjectEnded &&\n          isNumber(ideas_count) &&\n          ideas_count > 0 && (\n            <AllocateBudgetButton\n              id=\"e2e-project-allocate-budget-button\"\n              buttonStyle=\"primary\"\n              onClick={scrollTo('project-ideas')}\n              fontWeight=\"500\"\n            >\n              <FormattedMessage {...messages.allocateBudget} />\n            </AllocateBudgetButton>\n          )} */}\n        {ideasPresentOutsideViewport &&\n          ((process_type === 'continuous' &&\n            participation_method === 'ideation') ||\n            currentPhase?.attributes.participation_method === 'ideation') &&\n          isNumber(ideas_count) &&\n          ideas_count > 0 && (\n            <SeeIdeasButton\n              id=\"e2e-project-see-ideas-button\"\n              buttonStyle=\"secondary\"\n              onClick={scrollTo('project-ideas')}\n              fontWeight=\"500\"\n            >\n              <FormattedMessage\n                {...getInputTermMessage(inputTerm, {\n                  idea: messages.seeTheIdeas,\n                  option: messages.seeTheOptions,\n                  project: messages.seeTheProjects,\n                  question: messages.seeTheQuestions,\n                  issue: messages.seeTheIssues,\n                  contribution: messages.seeTheContributions,\n                })}\n              />\n            </SeeIdeasButton>\n          )}\n        {process_type === 'continuous' &&\n          participation_method === 'ideation' &&\n          publication_status !== 'archived' && (\n            <IdeaButton\n              id=\"project-ideabutton\"\n              projectId={project.id}\n              participationContextType=\"project\"\n              fontWeight=\"500\"\n            />\n          )}\n        {currentPhase?.attributes.participation_method === 'ideation' &&\n          !hasProjectEnded && (\n            <IdeaButton\n              id=\"project-ideabutton\"\n              projectId={project.id}\n              phaseId={currentPhase.id}\n              participationContextType=\"phase\"\n              fontWeight=\"500\"\n            />\n          )}\n        {surveyPresentOutsideViewport &&\n          ((process_type === 'continuous' &&\n            participation_method === 'survey') ||\n            currentPhase?.attributes.participation_method === 'survey') &&\n          !hasProjectEnded && (\n            <Button\n              buttonStyle=\"primary\"\n              onClick={scrollTo('project-survey')}\n              fontWeight=\"500\"\n            >\n              <FormattedMessage {...messages.takeTheSurvey} />\n            </Button>\n          )}\n        {pollPresentOutsideViewport &&\n          ((process_type === 'continuous' && participation_method === 'poll') ||\n            currentPhase?.attributes.participation_method === 'poll') &&\n          !hasProjectEnded && (\n            <Button\n              buttonStyle=\"primary\"\n              onClick={scrollTo('project-poll')}\n              fontWeight=\"500\"\n            >\n              <FormattedMessage {...messages.takeThePoll} />\n            </Button>\n          )}\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default ProjectActionButtons;\n","import React, { memo, useState, useCallback, useEffect } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { findIndex } from 'lodash-es';\nimport Tippy from '@tippyjs/react';\n\n// tracking\nimport tracks from './tracks';\nimport { trackEventByName } from 'utils/analytics';\n\n// components\nimport { Button } from 'cl2-component-library';\n\n// services\nimport { IPhaseData, getCurrentPhase } from 'services/phases';\n\n// events\nimport { selectedPhase$, selectPhase } from './events';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport usePhases from 'hooks/usePhases';\n\n// i18n\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// style\nimport styled from 'styled-components';\nimport { colors, isRtl } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 15px;\n\n  ${isRtl`\n    margin-left: 0;\n    margin-right: 15px;\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst PreviousPhaseButton = styled(Button)`\n  margin-right: 5px;\n\n  ${isRtl`\n    margin-right: 0;\n    margin-left: 5px;\n    transform: rotate(180deg);\n  `}\n`;\n\nconst CurrentPhaseButton = styled(Button)``;\n\nconst NextPhaseButton = styled(Button)`\n  margin-left: 5px;\n\n  ${isRtl`\n    margin-left: 0;\n    margin-right: 5px;\n    transform: rotate(180deg);\n  `}\n`;\n\ninterface Props {\n  projectId: string;\n  buttonStyle?: 'secondary' | 'white';\n  className?: string;\n}\n\nconst PhaseNavigation = memo<Props & InjectedIntlProps>(\n  ({ projectId, buttonStyle, className, intl: { formatMessage } }) => {\n    const locale = useLocale();\n    const phases = usePhases(projectId);\n\n    const [selectedPhase, setSelectedPhase] = useState<IPhaseData | null>(null);\n\n    useEffect(() => {\n      const subscription = selectedPhase$.subscribe((selectedPhase) => {\n        setSelectedPhase(selectedPhase);\n      });\n\n      return () => subscription.unsubscribe();\n    }, []);\n\n    const goToNextPhase = useCallback(() => {\n      trackEventByName(tracks.clickNextPhaseButton);\n\n      if (!isNilOrError(phases)) {\n        const selectedPhaseId = selectedPhase ? selectedPhase.id : null;\n        const selectedPhaseIndex = findIndex(\n          phases,\n          (phase) => phase.id === selectedPhaseId\n        );\n        const nextPhaseIndex =\n          phases.length >= selectedPhaseIndex + 2 ? selectedPhaseIndex + 1 : 0;\n        const nextPhase = phases[nextPhaseIndex];\n        selectPhase(nextPhase);\n      }\n    }, [phases, selectedPhase]);\n\n    const goToPreviousPhase = useCallback(() => {\n      trackEventByName(tracks.clickPreviousPhaseButton);\n\n      if (!isNilOrError(phases)) {\n        const selectedPhaseId = selectedPhase ? selectedPhase.id : null;\n        const selectedPhaseIndex = findIndex(\n          phases,\n          (phase) => phase.id === selectedPhaseId\n        );\n        const prevPhaseIndex =\n          selectedPhaseIndex > 0 ? selectedPhaseIndex - 1 : phases.length - 1;\n        const prevPhase = phases[prevPhaseIndex];\n        selectPhase(prevPhase);\n      }\n    }, [phases, selectedPhase]);\n\n    const goToCurrentPhase = useCallback(() => {\n      if (!isNilOrError(phases)) {\n        trackEventByName(tracks.clickCurrentPhaseButton);\n        const currentPhase = getCurrentPhase(phases);\n        selectPhase(currentPhase);\n      }\n    }, [phases]);\n\n    if (!isNilOrError(locale) && !isNilOrError(phases) && phases.length > 1) {\n      const navButtonSize = '34px';\n      const navButtonStyle = buttonStyle || 'secondary';\n      const selectedPhaseId = selectedPhase ? selectedPhase.id : null;\n      const currentPhase = getCurrentPhase(phases);\n      const currentPhaseId = currentPhase ? currentPhase.id : null;\n\n      return (\n        <Container\n          className={`e2e-timeline-phase-navigation ${className || ''}`}\n        >\n          <Tippy\n            disabled={selectedPhaseId === phases[0].id}\n            interactive={false}\n            placement=\"bottom\"\n            content={formatMessage(messages.previousPhase)}\n            theme=\"translucent\"\n            arrow={false}\n            hideOnClick={true}\n          >\n            <div>\n              <PreviousPhaseButton\n                locale={locale}\n                onClick={goToPreviousPhase}\n                icon=\"chevron-left\"\n                iconSize=\"12px\"\n                iconColor={colors.label}\n                buttonStyle={navButtonStyle}\n                width={navButtonSize}\n                height={navButtonSize}\n                padding=\"0px\"\n                disabled={selectedPhaseId === phases[0].id}\n                ariaLabel={formatMessage(messages.previousPhase)}\n                className=\"e2e-previous-phase\"\n              />\n            </div>\n          </Tippy>\n          {currentPhaseId && (\n            <Tippy\n              disabled={selectedPhaseId === currentPhaseId}\n              interactive={false}\n              placement=\"bottom\"\n              content={formatMessage(messages.currentPhase)}\n              theme=\"translucent\"\n              arrow={false}\n              hideOnClick={true}\n            >\n              <div>\n                <CurrentPhaseButton\n                  locale={locale}\n                  onClick={goToCurrentPhase}\n                  icon=\"dot\"\n                  iconSize=\"8px\"\n                  iconColor={colors.clGreen}\n                  buttonStyle={navButtonStyle}\n                  width={navButtonSize}\n                  height={navButtonSize}\n                  padding=\"0px\"\n                  disabled={selectedPhaseId === currentPhaseId}\n                  ariaLabel={formatMessage(messages.currentPhase)}\n                  className=\"e2e-current-phase\"\n                />\n              </div>\n            </Tippy>\n          )}\n          <Tippy\n            disabled={selectedPhaseId === phases[phases.length - 1].id}\n            interactive={false}\n            placement=\"bottom\"\n            content={formatMessage(messages.nextPhase)}\n            theme=\"translucent\"\n            arrow={false}\n            hideOnClick={true}\n          >\n            <div>\n              <NextPhaseButton\n                locale={locale}\n                onClick={goToNextPhase}\n                icon=\"chevron-right\"\n                iconSize=\"12px\"\n                iconColor={colors.label}\n                buttonStyle={navButtonStyle}\n                width={navButtonSize}\n                height={navButtonSize}\n                padding=\"0px\"\n                disabled={selectedPhaseId === phases[phases.length - 1].id}\n                ariaLabel={formatMessage(messages.nextPhase)}\n              />\n            </div>\n          </Tippy>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(PhaseNavigation);\n","import React, { memo, useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { CSSTransition } from 'react-transition-group';\n\n// hooks\nimport useProject from 'hooks/useProject';\nimport usePhases from 'hooks/usePhases';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// services\nimport { IPhaseData, getCurrentPhase } from 'services/phases';\n\n// components\nimport ContentContainer from 'components/ContentContainer';\nimport IdeaButton from 'components/IdeaButton';\n\n// i18n\nimport T from 'components/T';\n\n// style\nimport styled from 'styled-components';\nimport { lighten } from 'polished';\nimport { fontSizes, media, colors, viewportWidths } from 'utils/styleUtils';\nimport { maxPageWidth } from 'containers/ProjectsShowPage/styles';\n\nconst slideInOutTimeout = 250;\nconst slideInOutDistance = 14;\nconst slideInOutEasing = 'cubic-bezier(0.19, 1, 0.22, 1)';\n\nconst Container = styled.div`\n  width: 100vw;\n  position: fixed;\n  top: 0px;\n  z-index: 1004;\n  background: #fff;\n  border-bottom: solid 1px #ddd;\n  opacity: 0;\n  pointer-events: none;\n  will-change: opacity;\n\n  &.visible {\n    opacity: 100;\n    pointer-events: auto;\n  }\n\n  ${media.smallerThanMaxTablet`\n    top: 0px;\n    border-bottom: solid 1px ${lighten(0.4, colors.label)};\n  `}\n`;\n\nconst InnerContainer = styled.div`\n  min-height: 61px;\n  display: flex;\n  align-items: center;\n\n  /* IE11 hack */\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    &:after {\n      display: block;\n      content: '';\n      min-height: inherit;\n      font-size: 0;\n    }\n  }\n\n  ${media.smallerThanMaxTablet`\n    flex-direction: column;\n  `}\n`;\n\nconst Left = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n\n  ${media.smallerThanMaxTablet`\n    display: none;\n  `}\n`;\n\nconst Right = styled.div`\n  flex: 0 0 310px;\n  width: 310px;\n  display: flex;\n  align-items: center;\n  margin-left: 15px;\n\n  ${media.smallerThanMaxTablet`\n    flex: 1 1 auto;\n    width: 100%;\n    flex-direction: column;\n    align-items: stretch;\n    justify-content: center;\n    margin-left: 0px;\n  `}\n`;\n\nconst StyledIdeaButton = styled(IdeaButton)`\n  opacity: 0;\n  pointer-events: none;\n\n  &.ideabutton-enter {\n    transform: translateY(${slideInOutDistance}px);\n    opacity: 0;\n\n    &.ideabutton-enter-active {\n      transform: translateY(0px);\n      transition: all ${slideInOutTimeout}ms ${slideInOutEasing};\n      opacity: 1;\n    }\n  }\n\n  &.ideabutton-enter-done {\n    opacity: 1;\n    pointer-events: auto;\n  }\n\n  &.ideabutton-exit {\n    opacity: 1;\n\n    &.ideabutton-exit-active {\n      opacity: 0;\n      transition: all ${slideInOutTimeout - 100}ms ${slideInOutEasing};\n    }\n  }\n\n  &.ideabutton-exit-done {\n    opacity: 0;\n    pointer-events: none;\n  }\n`;\n\nconst ProjectTitle = styled.h1`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.xxl - 2}px;\n  line-height: normal;\n  font-weight: 500;\n  text-align: left;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  margin: 0;\n  padding: 0;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst ProjectActionBar = memo<Props>(({ projectId, className }) => {\n  const project = useProject({ projectId });\n  const phases = usePhases(projectId);\n  const { windowWidth } = useWindowSize();\n\n  const [currentPhase, setCurrentPhase] = useState<IPhaseData | null>(null);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const smallerThanLargeTablet = windowWidth <= viewportWidths.largeTablet;\n\n  const portalElement = document?.getElementById('topbar-portal');\n\n  useEffect(() => {\n    setCurrentPhase(!isNilOrError(phases) ? getCurrentPhase(phases) : null);\n  }, [phases]);\n\n  useEffect(() => {\n    window.addEventListener(\n      'scroll',\n      () => {\n        const actionButtonElement = document.getElementById(\n          'project-ideabutton'\n        );\n        const actionButtonYOffset = actionButtonElement\n          ? actionButtonElement.getBoundingClientRect().top + window.pageYOffset\n          : undefined;\n        setIsVisible(\n          !!(\n            actionButtonElement &&\n            actionButtonYOffset &&\n            window.pageYOffset >\n              actionButtonYOffset - (smallerThanLargeTablet ? 14 : 30)\n          )\n        );\n      },\n      { passive: true }\n    );\n  }, [projectId, smallerThanLargeTablet]);\n\n  if (!isNilOrError(project) && portalElement) {\n    const {\n      process_type,\n      participation_method,\n      publication_status,\n    } = project.attributes;\n\n    return createPortal(\n      <Container\n        className={`${className || ''} ${isVisible ? 'visible' : 'hidden'}`}\n      >\n        <ContentContainer maxWidth={maxPageWidth}>\n          <InnerContainer>\n            <Left>\n              <ProjectTitle>\n                <T value={project.attributes.title_multiloc} />\n              </ProjectTitle>\n            </Left>\n            <Right>\n              {process_type === 'continuous' &&\n                participation_method === 'ideation' &&\n                publication_status !== 'archived' && (\n                  <CSSTransition\n                    in={isVisible}\n                    timeout={slideInOutTimeout}\n                    mountOnEnter={false}\n                    unmountOnExit={false}\n                    enter={true}\n                    exit={true}\n                    classNames=\"ideabutton\"\n                  >\n                    <StyledIdeaButton\n                      projectId={project.id}\n                      participationContextType=\"project\"\n                      fontWeight=\"500\"\n                      width={!smallerThanLargeTablet ? '310px' : undefined}\n                    />\n                  </CSSTransition>\n                )}\n\n              {currentPhase?.attributes.participation_method === 'ideation' && (\n                <CSSTransition\n                  in={isVisible}\n                  timeout={slideInOutTimeout}\n                  mountOnEnter={false}\n                  unmountOnExit={false}\n                  enter={true}\n                  exit={true}\n                  classNames=\"ideabutton\"\n                >\n                  <StyledIdeaButton\n                    projectId={project.id}\n                    phaseId={currentPhase?.id}\n                    participationContextType=\"phase\"\n                    fontWeight=\"500\"\n                    width={!smallerThanLargeTablet ? '310px' : undefined}\n                  />\n                </CSSTransition>\n              )}\n            </Right>\n          </InnerContainer>\n        </ContentContainer>\n      </Container>,\n      portalElement\n    );\n  }\n\n  return null;\n});\n\nexport default ProjectActionBar;\n","import React, { memo } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// resource hooks\nimport useCauses from 'hooks/useCauses';\n\n// resource components\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhase, { GetPhaseChildProps } from 'resources/GetPhase';\n\n// components\nimport CauseCard from './CauseCard';\n\n// styling\nimport styled from 'styled-components';\n\n// typings\nimport { IParticipationContextType } from 'typings';\n\nconst Container = styled.div`\n  color: ${({ theme }) => theme.colorText};\n`;\n\ninterface InputProps {\n  type: IParticipationContextType;\n  phaseId: string | null;\n  projectId: string;\n  className?: string;\n}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  project: GetProjectChildProps;\n  phase: GetPhaseChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst Volunteering = memo<Props>(\n  ({ projectId, phaseId, project, phase, type, className }) => {\n    const causes = useCauses({ projectId, phaseId });\n\n    if (\n      !isNilOrError(causes) &&\n      (!isNilOrError(project) || (type === 'phase' && !isNilOrError(phase)))\n    ) {\n      return (\n        <Container className={className}>\n          {causes.data.map((cause) => (\n            <CauseCard key={cause.id} cause={cause} />\n          ))}\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n  phase: ({ phaseId, render }) => <GetPhase id={phaseId}>{render}</GetPhase>,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <Volunteering {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import { IPhaseData } from 'services/phases';\n\n// https://stackoverflow.com/a/10834843\nfunction isIntegerOverZero(str: string | undefined) {\n  if (str === undefined) return false;\n  const n = Math.floor(Number(str));\n  return n !== Infinity && String(n) === str && n > 0;\n}\n\nfunction phaseExists(phaseParam: string, phases: IPhaseData[]) {\n  return +phaseParam <= phases.length;\n}\n\nexport function isValidPhase(phaseParam: string, phases: IPhaseData[]) {\n  return isIntegerOverZero(phaseParam) && phaseExists(phaseParam, phases);\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Box } from 'cl2-component-library';\n\nconst StyledIframe = styled.iframe`\n  display: block;\n  border: none;\n  height: 600px;\n  flex-basis: 640px;\n  border: 1px solid #ccc;\n`;\n\ntype Props = {\n  microsoftFormsUrl: string;\n  className?: string;\n};\n\nconst MicrosoftFormsSurvey = ({ microsoftFormsUrl, className }: Props) => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={className}>\n      <StyledIframe src={microsoftFormsUrl} />\n    </Box>\n  );\n};\n\nexport default MicrosoftFormsSurvey;\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport ContentContainer from 'components/ContentContainer';\nimport Poll from '../shared/poll';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport {\n  ProjectPageSectionTitle,\n  maxPageWidth,\n} from 'containers/ProjectsShowPage/styles';\nimport SectionContainer from 'components/SectionContainer';\n\n// hooks\nimport useProject from 'hooks/useProject';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// styling\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\n\nconst Container = styled.div``;\n\nconst StyledContentContainer = styled(ContentContainer)`\n  background: ${colors.background};\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst PollContainer = memo<Props & InjectedIntlProps>(\n  ({ projectId, className, intl: { formatMessage } }) => {\n    const project = useProject({ projectId });\n\n    if (\n      !isNilOrError(project) &&\n      project.attributes.process_type === 'continuous' &&\n      project.attributes.participation_method === 'poll'\n    ) {\n      return (\n        <Container\n          className={`e2e-continuous-project-poll-container ${className || ''}`}\n        >\n          <StyledContentContainer maxWidth={maxPageWidth}>\n            <SectionContainer>\n              <ProjectPageSectionTitle>\n                <FormattedMessage {...messages.navPoll} />\n              </ProjectPageSectionTitle>\n              <ScreenReaderOnly>\n                <h2>{formatMessage(messages.invisibleTitlePoll)}</h2>\n              </ScreenReaderOnly>\n              <Poll type=\"project\" projectId={project.id} phaseId={null} />\n            </SectionContainer>\n          </StyledContentContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(PollContainer);\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport ContentContainer from 'components/ContentContainer';\nimport Survey from '../shared/survey';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { maxPageWidth } from 'containers/ProjectsShowPage/styles';\nimport SectionContainer from 'components/SectionContainer';\n\n// hooks\nimport useProject from 'hooks/useProject';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport injectIntl from 'utils/cl-intl/injectIntl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// styling\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\n\nconst Container = styled.div``;\n\nconst StyledContentContainer = styled(ContentContainer)`\n  background: ${colors.background};\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst SurveyContainer = memo<Props & InjectedIntlProps>(\n  ({ projectId, className, intl: { formatMessage } }) => {\n    const project = useProject({ projectId });\n\n    if (\n      !isNilOrError(project) &&\n      project.attributes.process_type === 'continuous' &&\n      project.attributes.participation_method === 'survey' &&\n      project.attributes.survey_embed_url &&\n      project.attributes.survey_service\n    ) {\n      return (\n        <Container\n          className={`e2e-continuous-project-survey-container ${\n            className || ''\n          }`}\n        >\n          <StyledContentContainer maxWidth={maxPageWidth}>\n            <SectionContainer>\n              <ScreenReaderOnly>\n                <h2>{formatMessage(messages.invisibleTitleSurvey)}</h2>\n              </ScreenReaderOnly>\n              <Survey\n                projectId={project.id}\n                surveyService={project.attributes.survey_service}\n                surveyEmbedUrl={project.attributes.survey_embed_url}\n              />\n            </SectionContainer>\n          </StyledContentContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(SurveyContainer);\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Survey from '../shared/survey';\n\n// hooks\nimport usePhase from 'hooks/usePhase';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// styling\nimport styled from 'styled-components';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\ninterface Props {\n  projectId: string;\n  phaseId: string | null;\n  className?: string;\n}\n\nconst SurveyContainer = memo<Props>(({ projectId, phaseId, className }) => {\n  const phase = usePhase(phaseId);\n\n  if (\n    !isNilOrError(phase) &&\n    phase.attributes.participation_method === 'survey' &&\n    phase.attributes.survey_embed_url &&\n    phase.attributes.survey_service\n  ) {\n    return (\n      <Container className={className || ''}>\n        <ScreenReaderOnly>\n          <FormattedMessage tagName=\"h3\" {...messages.invisibleTitleSurvey} />\n        </ScreenReaderOnly>\n        <Survey\n          className={className}\n          projectId={projectId}\n          phaseId={phase.id}\n          surveyEmbedUrl={phase.attributes.survey_embed_url}\n          surveyService={phase.attributes.survey_service}\n        />\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default SurveyContainer;\n","import React, {\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n  FormEvent,\n} from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isNumber } from 'lodash-es';\nimport moment from 'moment';\n\n// hooks\nimport useProject from 'hooks/useProject';\nimport usePhases from 'hooks/usePhases';\nimport useEvents from 'hooks/useEvents';\nimport useAuthUser from 'hooks/useAuthUser';\n\n// services\nimport { IPhaseData, getCurrentPhase, getLastPhase } from 'services/phases';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport ProjectSharingModal from './ProjectSharingModal';\nimport ProjectActionBar from './ProjectActionBar';\nimport ProjectActionButtons from './ProjectActionButtons';\n\n// utils\nimport { pastPresentOrFuture } from 'utils/dateUtils';\nimport { scrollToElement } from 'utils/scroll';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { getInputTermMessage } from 'utils/i18n';\nimport FormattedBudget from 'utils/currency/FormattedBudget';\n\n// style\nimport styled from 'styled-components';\nimport { fontSizes, colors, isRtl, media } from 'utils/styleUtils';\nimport { selectPhase } from 'containers/ProjectsShowPage/timeline/events';\n\nconst Container = styled.div``;\n\nconst About = styled.div`\n  padding: 20px;\n  padding-top: 0px;\n  padding-bottom: 5px;\n  border: solid 1px #ccc;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n`;\n\nconst Title = styled.h2`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.xl}px;\n  line-height: normal;\n  font-weight: 500;\n  margin: 0;\n  margin-bottom: 20px;\n  padding: 0;\n  padding-top: 12px;\n`;\n\nconst List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nconst ListItem = styled.li`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  font-weight: 400;\n  display: flex;\n  align-items: flex-start;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  margin-top: 18px;\n  margin-bottom: 18px;\n`;\n\nconst ListItemIcon = styled(Icon)`\n  flex: 0 0 18px;\n  width: 18px;\n  height: 18px;\n  fill: ${colors.label};\n  margin-right: 14px;\n\n  ${isRtl`\n    margin-right: 0;\n    margin-left: 14px;\n  `}\n\n  &.timeline {\n    flex: 0 0 22px;\n    width: 22px;\n    height: 22px;\n    margin-right: 10px;\n  }\n`;\n\nconst ListItemButton = styled.button`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  font-weight: 400;\n  text-decoration: underline;\n  text-align: left;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n\n  &:hover {\n    color: #000;\n    text-decoration: underline;\n  }\n`;\n\nconst StyledProjectActionButtons = styled(ProjectActionButtons)`\n  margin-top: 20px;\n\n  ${media.smallerThanMaxTablet`\n    margin-top: 30px;\n  `}\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst ProjectInfoSideBar = memo<Props>(({ projectId, className }) => {\n  const project = useProject({ projectId });\n  const phases = usePhases(projectId);\n  const { events } = useEvents({\n    projectIds: [projectId],\n    sort: 'newest',\n  });\n  const authUser = useAuthUser();\n\n  const [currentPhase, setCurrentPhase] = useState<IPhaseData | null>(null);\n  const [shareModalOpened, setShareModalOpened] = useState(false);\n\n  useEffect(() => {\n    setCurrentPhase(getCurrentPhase(phases) || getLastPhase(phases));\n  }, [phases]);\n\n  const scrollTo = useCallback(\n    (id: string, shouldSelectCurrentPhase = true) => (event: FormEvent) => {\n      event.preventDefault();\n\n      currentPhase && shouldSelectCurrentPhase && selectPhase(currentPhase);\n\n      setTimeout(() => {\n        scrollToElement({ id });\n      }, 100);\n    },\n    [currentPhase]\n  );\n\n  const openShareModal = useCallback((event: FormEvent) => {\n    event.preventDefault();\n    setShareModalOpened(true);\n  }, []);\n\n  const closeShareModal = useCallback(() => {\n    setShareModalOpened(false);\n  }, []);\n\n  if (!isNilOrError(project)) {\n    const projectType = project.attributes.process_type;\n    const projectParticipantsCount = project.attributes.participants_count;\n    const maxBudget =\n      currentPhase?.attributes?.max_budget ||\n      project?.attributes?.max_budget ||\n      null;\n    const hasProjectEnded = currentPhase\n      ? pastPresentOrFuture([\n          currentPhase.attributes.start_at,\n          currentPhase.attributes.end_at,\n        ]) === 'past'\n      : false;\n    const ideasCount =\n      projectType === 'continuous'\n        ? project.attributes.ideas_count\n        : currentPhase?.attributes.ideas_count;\n    const projectParticipationMethod =\n      project?.attributes?.participation_method;\n    const currentPhaseParticipationMethod =\n      currentPhase?.attributes?.participation_method;\n\n    return (\n      <Container id=\"e2e-project-sidebar\" className={className || ''}>\n        <ProjectActionBar projectId={projectId} />\n        <About>\n          <Title>\n            <FormattedMessage {...messages.about} />\n          </Title>\n          <List>\n            {projectType === 'timeline' &&\n              currentPhase &&\n              hasProjectEnded &&\n              pastPresentOrFuture([\n                currentPhase.attributes.start_at,\n                currentPhase.attributes.end_at,\n              ]) === 'past' && (\n                <ListItem id=\"e2e-project-sidebar-enddate\">\n                  <ListItemIcon ariaHidden name=\"finish_flag\" />\n                  <FormattedMessage\n                    {...messages.endedOn}\n                    values={{\n                      date: moment(currentPhase.attributes.end_at).format('ll'),\n                    }}\n                  />\n                </ListItem>\n              )}\n            {isNumber(projectParticipantsCount) &&\n              projectParticipantsCount > 0 && (\n                <ListItem id=\"e2e-project-sidebar-participants-count\">\n                  <ListItemIcon ariaHidden name=\"person\" />\n                  <FormattedMessage\n                    {...messages.xParticipants}\n                    values={{ participantsCount: projectParticipantsCount }}\n                  />\n                </ListItem>\n              )}\n            {projectType === 'timeline' &&\n              !isNilOrError(phases) &&\n              phases.length > 1 && (\n                <ListItem>\n                  <ListItemIcon\n                    ariaHidden\n                    name=\"timeline\"\n                    className=\"timeline\"\n                  />\n                  <ListItemButton\n                    id=\"e2e-project-sidebar-phases-count\"\n                    onClick={scrollTo('project-timeline', false)}\n                  >\n                    <FormattedMessage\n                      {...messages.xPhases}\n                      values={{ phasesCount: phases.length }}\n                    />\n                  </ListItemButton>\n                </ListItem>\n              )}\n            {((projectType === 'continuous' &&\n              projectParticipationMethod === 'ideation') ||\n              currentPhaseParticipationMethod === 'ideation' ||\n              (currentPhase &&\n                hasProjectEnded &&\n                currentPhase?.attributes.participation_method ===\n                  'ideation')) &&\n              isNumber(ideasCount) &&\n              ideasCount > 0 && (\n                <ListItem>\n                  <ListItemIcon ariaHidden name=\"idea-filled\" />\n                  {project.attributes.ideas_count > 0 ? (\n                    <ListItemButton\n                      id=\"e2e-project-sidebar-ideas-count\"\n                      onClick={scrollTo('project-ideas')}\n                    >\n                      {projectType === 'continuous' && (\n                        <FormattedMessage\n                          {...getInputTermMessage(\n                            project.attributes.input_term,\n                            {\n                              idea: messages.xIdeas,\n                              option: messages.xOptions,\n                              project: messages.xProjects,\n                              question: messages.xQuestions,\n                              issue: messages.xIssues,\n                              contribution: messages.xContributions,\n                            }\n                          )}\n                          values={{ ideasCount }}\n                        />\n                      )}\n                      {!isNilOrError(currentPhase) &&\n                        currentPhaseParticipationMethod === 'ideation' &&\n                        !hasProjectEnded && (\n                          <FormattedMessage\n                            {...getInputTermMessage(\n                              currentPhase.attributes.input_term,\n                              {\n                                idea: messages.xIdeasInCurrentPhase,\n                                option: messages.xOptionsInCurrentPhase,\n                                project: messages.xProjectsInCurrentPhase,\n                                question: messages.xQuestionsInCurrentPhase,\n                                issue: messages.xIssuesInCurrentPhase,\n                                contribution:\n                                  messages.xContributionsInCurrentPhase,\n                              }\n                            )}\n                            values={{ ideasCount }}\n                          />\n                        )}\n                      {!isNilOrError(currentPhase) &&\n                        currentPhaseParticipationMethod === 'ideation' &&\n                        hasProjectEnded && (\n                          <FormattedMessage\n                            {...getInputTermMessage(\n                              currentPhase.attributes.input_term,\n                              {\n                                idea: messages.xIdeasInFinalPhase,\n                                option: messages.xOptionsInFinalPhase,\n                                project: messages.xProjectsInFinalPhase,\n                                question: messages.xQuestionsInFinalPhase,\n                                issue: messages.xIssuesInFinalPhase,\n                                contribution:\n                                  messages.xContributionsInFinalPhase,\n                              }\n                            )}\n                            values={{ ideasCount }}\n                          />\n                        )}\n                    </ListItemButton>\n                  ) : (\n                    <FormattedMessage {...messages.nothingPosted} />\n                  )}\n                </ListItem>\n              )}\n            {((projectType === 'continuous' &&\n              projectParticipationMethod === 'budgeting') ||\n              currentPhase?.attributes.participation_method === 'budgeting') &&\n              maxBudget && (\n                <ListItem>\n                  <ListItemIcon ariaHidden name=\"coin-stack\" />\n                  <ListItemButton\n                    id=\"e2e-project-sidebar-pb-budget\"\n                    onClick={scrollTo('project-ideas')}\n                  >\n                    <FormattedBudget value={maxBudget} />\n                  </ListItemButton>\n                </ListItem>\n              )}\n            {((projectType === 'continuous' &&\n              projectParticipationMethod === 'survey') ||\n              currentPhaseParticipationMethod === 'survey') && (\n              <ListItem>\n                <ListItemIcon ariaHidden name=\"survey\" />\n                {!isNilOrError(authUser) ? (\n                  <ListItemButton\n                    id=\"e2e-project-sidebar-surveys-count\"\n                    onClick={scrollTo('project-survey')}\n                  >\n                    <FormattedMessage\n                      {...(projectType === 'continuous'\n                        ? messages.xSurveys\n                        : messages.xSurveysInCurrentPhase)}\n                      values={{ surveysCount: 1 }}\n                    />\n                  </ListItemButton>\n                ) : (\n                  <FormattedMessage\n                    {...(projectType === 'continuous'\n                      ? messages.xSurveys\n                      : messages.xSurveysInCurrentPhase)}\n                    values={{ surveysCount: 1 }}\n                  />\n                )}\n              </ListItem>\n            )}\n            {((projectType === 'continuous' &&\n              projectParticipationMethod === 'poll') ||\n              currentPhaseParticipationMethod === 'poll') && (\n              <ListItem>\n                <ListItemIcon ariaHidden name=\"survey\" />\n                <ListItemButton\n                  id=\"e2e-project-sidebar-polls-count\"\n                  onClick={scrollTo('project-poll')}\n                >\n                  <FormattedMessage\n                    {...(projectType === 'continuous'\n                      ? messages.poll\n                      : messages.pollInCurrentPhase)}\n                  />\n                </ListItemButton>\n              </ListItem>\n            )}\n            {!isNilOrError(events) && events.length > 0 && (\n              <ListItem>\n                <ListItemIcon ariaHidden name=\"event\" />\n                <ListItemButton\n                  id=\"e2e-project-sidebar-eventcount\"\n                  onClick={scrollTo('project-events', false)}\n                >\n                  <FormattedMessage\n                    {...messages.xEvents}\n                    values={{ eventsCount: events.length }}\n                  />\n                </ListItemButton>\n              </ListItem>\n            )}\n            <ListItem id=\"e2e-project-sidebar-share-button\">\n              <ListItemIcon ariaHidden name=\"share\" />\n              <ListItemButton onClick={openShareModal}>\n                <FormattedMessage {...messages.share} />\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </About>\n        <StyledProjectActionButtons projectId={projectId} />\n        <ProjectSharingModal\n          projectId={project.id}\n          opened={shareModalOpened}\n          close={closeShareModal}\n        />\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default ProjectInfoSideBar;\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport IdeaCards from 'components/IdeaCards';\nimport { ProjectPageSectionTitle } from 'containers/ProjectsShowPage/styles';\n\n// resources\nimport GetPhase, { GetPhaseChildProps } from 'resources/GetPhase';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// style\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\nconst StyledProjectPageSectionTitle = styled(ProjectPageSectionTitle)`\n  margin-bottom: 20px;\n`;\n\ninterface InputProps {\n  projectId: string;\n  phaseId: string;\n  className?: string;\n}\n\ninterface DataProps {\n  phase: GetPhaseChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass IdeasContainer extends PureComponent<Props, State> {\n  render() {\n    const { projectId, phaseId, phase, className } = this.props;\n    const projectIds = [projectId];\n\n    if (!isNilOrError(phase)) {\n      const participationMethod = phase.attributes.participation_method;\n      const inputTerm = phase.attributes.input_term;\n\n      if (\n        participationMethod === 'ideation' ||\n        participationMethod === 'budgeting'\n      ) {\n        return (\n          <Container\n            id=\"project-ideas\"\n            className={`e2e-timeline-project-idea-cards ${className || ''}`}\n          >\n            <StyledProjectPageSectionTitle>\n              <FormattedMessage\n                {...getInputTermMessage(inputTerm, {\n                  idea: messages.ideas,\n                  option: messages.options,\n                  project: messages.projects,\n                  question: messages.questions,\n                  issue: messages.issues,\n                  contribution: messages.contributions,\n                })}\n              />\n            </StyledProjectPageSectionTitle>\n            <IdeaCards\n              className={participationMethod}\n              type=\"load-more\"\n              projectIds={projectIds}\n              phaseId={phaseId}\n              showViewToggle={true}\n              defaultSortingMethod={phase.attributes.ideas_order || null}\n              defaultView={phase.attributes.presentation_mode}\n              participationMethod={participationMethod}\n              participationContextId={phase.id}\n              participationContextType=\"phase\"\n              invisibleTitleMessage={messages.a11y_titleInputsPhase}\n            />\n          </Container>\n        );\n      }\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  phase: ({ phaseId, render }) => <GetPhase id={phaseId}>{render}</GetPhase>,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeasContainer {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { memo } from 'react';\n\n// components\nimport Button from 'components/UI/Button';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\n\n// style\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  height: 100%;\n  flex: 1 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 4rem;\n  font-size: ${fontSizes.large}px;\n  color: ${colors.label};\n`;\n\ninterface Props {\n  className?: string;\n}\n\nconst ProjectNotVisible = memo<Props>(({ className }) => {\n  return (\n    <Container className={className || ''}>\n      <p>\n        <FormattedMessage\n          {...messages.thisProjectIsNotPubliclyVisibleVisitHomePageToDiscover}\n        />\n      </p>\n      <Button\n        linkTo=\"/projects\"\n        text={<FormattedMessage {...messages.goBackToList} />}\n        icon=\"arrow-back\"\n      />\n    </Container>\n  );\n});\n\nexport default ProjectNotVisible;\n","import {\n  PostingDisabledReason,\n  PollDisabledReason,\n  IProjectData,\n  SurveyDisabledReason,\n} from './projects';\nimport { pastPresentOrFuture } from 'utils/dateUtils';\nimport { GetProjectChildProps } from 'resources/GetProject';\nimport { GetPhaseChildProps } from 'resources/GetPhase';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport { IPhaseData } from './phases';\nimport { isAdmin, isProjectModerator } from 'services/permissions/roles';\nimport { TAuthUser } from 'hooks/useAuthUser';\nimport { TPhase } from 'hooks/usePhase';\n\ninterface ActionPermissionHide {\n  show: false;\n  enabled: null;\n  disabledReason: null;\n  action: null;\n}\ninterface ActionPermissionEnabled {\n  show: true;\n  enabled: true;\n  disabledReason: null;\n  action: null;\n}\ninterface ActionPermissionDisabled<DisabledReasons> {\n  show: true;\n  enabled: false;\n  disabledReason: DisabledReasons;\n  action: null;\n}\ninterface ActionPermissionMaybe {\n  show: true;\n  enabled: 'maybe';\n  disabledReason: null;\n  action: IPreliminaryAction;\n}\n\nexport type ActionPermission<DisabledReasons> =\n  | ActionPermissionHide\n  | ActionPermissionMaybe\n  | ActionPermissionEnabled\n  | ActionPermissionDisabled<DisabledReasons>;\n\n/* ----------- Idea Posting ------------ */\n\n// When disabled, these are the reasons to explain to the user\nexport type IIdeaPostingDisabledReason =\n  | 'notPermitted'\n  | 'postingDisabled'\n  | 'projectInactive'\n  | 'notActivePhase'\n  | 'maybeNotPermitted'\n  | 'futureEnabled';\n\n// When disabled but user might get access, here are the next steps for this user\nexport type IPreliminaryAction =\n  | 'sign_in_up'\n  | 'verify'\n  | 'sign_in_up_and_verify';\n\nconst ideaPostingDisabledReason = (\n  backendReason: PostingDisabledReason | null,\n  signedIn: boolean,\n  futureEnabled: string | null\n): {\n  disabledReason: IIdeaPostingDisabledReason | null;\n  action: IPreliminaryAction | null;\n} => {\n  switch (backendReason) {\n    case 'not_verified':\n      return signedIn\n        ? {\n            disabledReason: null,\n            action: 'verify',\n          }\n        : {\n            disabledReason: null,\n            action: 'sign_in_up_and_verify',\n          };\n    case 'not_signed_in':\n      return {\n        disabledReason: null,\n        action: 'sign_in_up',\n      };\n    case 'project_inactive':\n      return {\n        disabledReason: futureEnabled ? 'futureEnabled' : 'projectInactive',\n        action: null,\n      };\n    case 'posting_disabled':\n      return {\n        disabledReason: 'postingDisabled',\n        action: null,\n      };\n    case 'not_permitted':\n      return {\n        disabledReason: signedIn ? 'notPermitted' : 'maybeNotPermitted',\n        action: null,\n      };\n    default:\n      return {\n        disabledReason: 'notPermitted',\n        action: null,\n      };\n  }\n};\n\n/** Should we show and/or disable the idea posting button in the given context. And with what disabledReason?\n * @param context\n *  project: The project context we are posting to.\n *  phase: The phase context in which the button is rendered. NOT necessarily the active phase. Optional.\n *  authUser: The currently authenticated user\n */\nexport const getIdeaPostingRules = ({\n  project,\n  phase,\n  authUser,\n}: {\n  project: GetProjectChildProps;\n  phase: GetPhaseChildProps | TPhase;\n  authUser: GetAuthUserChildProps | TAuthUser;\n}): ActionPermission<IIdeaPostingDisabledReason> => {\n  const signedIn = !isNilOrError(authUser);\n\n  if (!isNilOrError(project)) {\n    const {\n      disabled_reason,\n      future_enabled,\n      enabled,\n    } = project.attributes.action_descriptor.posting_idea;\n\n    if (\n      !isNilOrError(authUser) &&\n      (isAdmin({ data: authUser }) || isProjectModerator({ data: authUser }))\n    ) {\n      return {\n        show: true,\n        enabled: true,\n        disabledReason: null,\n        action: null,\n      };\n    }\n\n    // timeline\n    if (!isNilOrError(phase)) {\n      // not an enabled ideation phase\n      if (\n        !(\n          phase.attributes.participation_method === 'ideation' &&\n          phase.attributes.posting_enabled &&\n          disabled_reason !== 'not_ideation'\n        )\n      ) {\n        return {\n          show: false,\n          enabled: null,\n          disabledReason: null,\n          action: null,\n        };\n      }\n\n      // if not in current phase\n      if (\n        pastPresentOrFuture([\n          phase.attributes.start_at,\n          phase.attributes.end_at,\n        ]) !== 'present'\n      ) {\n        return {\n          show: true,\n          enabled: false,\n          disabledReason: 'notActivePhase' as IIdeaPostingDisabledReason,\n          action: null,\n        };\n      }\n    }\n\n    // continuous, not an enabled ideation project\n    if (\n      isNilOrError(phase) &&\n      !(\n        project.attributes.participation_method === 'ideation' &&\n        project.attributes.posting_enabled &&\n        disabled_reason !== 'not_ideation'\n      )\n    ) {\n      return {\n        show: false,\n        enabled: null,\n        disabledReason: null,\n        action: null,\n      };\n    }\n\n    if (enabled) {\n      return {\n        show: true,\n        enabled: true,\n        disabledReason: null,\n        action: null,\n      };\n    }\n\n    const { disabledReason, action } = ideaPostingDisabledReason(\n      disabled_reason,\n      signedIn,\n      future_enabled\n    );\n\n    if (action) {\n      return {\n        action,\n        disabledReason: null,\n        show: true,\n        enabled: 'maybe',\n      };\n    }\n\n    return {\n      disabledReason,\n      action: null,\n      show: true,\n      enabled: false,\n    } as ActionPermissionDisabled<IIdeaPostingDisabledReason>;\n    // TODO enforce the validity of this by adding a test to ensure either action or disabledReason is not null\n  }\n  // if !project\n  return {\n    show: true,\n    enabled: true,\n    disabledReason: null,\n    action: null,\n  };\n};\n\n/* ----------- Poll Taking ------------ */\n\nexport type IPollTakingDisabledReason =\n  | 'notPermitted'\n  | 'maybeNotPermitted'\n  | 'projectInactive'\n  | 'notActivePhase'\n  | 'alreadyResponded'\n  | 'notVerified'\n  | 'maybeNotVerified';\n\nconst pollTakingDisabledReason = (\n  backendReason: PollDisabledReason | null,\n  signedIn: boolean\n): IPollTakingDisabledReason => {\n  switch (backendReason) {\n    case 'project_inactive':\n      return 'projectInactive';\n    case 'already_responded':\n      return 'alreadyResponded';\n    case 'not_verified':\n      return signedIn ? 'notVerified' : 'maybeNotVerified';\n    case 'not_permitted':\n      return signedIn ? 'notPermitted' : 'maybeNotPermitted';\n    case 'not_signed_in':\n      return 'maybeNotPermitted';\n    default:\n      return 'notPermitted';\n  }\n};\n\n/** Should we enable taking the poll in the curret context? And if not, with what message?\n * @param context\n *  project: The project context we are posting to.\n *  phaseContext: The phase context in which the button is rendered. NOT necessarily the active phase. Optional.\n *  signedIn: Whether the user is currently authenticated\n */\nexport const getPollTakingRules = ({\n  project,\n  phaseContext,\n  signedIn,\n}: {\n  project: IProjectData;\n  phaseContext?: IPhaseData | null;\n  signedIn: boolean;\n}): ActionPermission<IPollTakingDisabledReason> => {\n  const {\n    enabled,\n    disabled_reason,\n  } = project.attributes.action_descriptor.taking_poll;\n\n  if (phaseContext) {\n    if (\n      phaseContext &&\n      pastPresentOrFuture([\n        phaseContext.attributes.start_at,\n        phaseContext.attributes.end_at,\n      ]) !== 'present'\n    ) {\n      return {\n        enabled: false,\n        disabledReason: 'notActivePhase',\n        show: true,\n        action: null,\n      };\n    }\n  }\n\n  if (enabled) {\n    return {\n      enabled,\n      disabledReason: null,\n      show: true,\n      action: null,\n    };\n  }\n  // if not in phase context\n  return {\n    enabled: false,\n    disabledReason: pollTakingDisabledReason(disabled_reason, !!signedIn),\n    show: true,\n    action: null,\n  };\n};\n\nexport type ISurveyTakingDisabledReason =\n  | 'notPermitted'\n  | 'maybeNotPermitted'\n  | 'maybeNotVerified'\n  | 'projectInactive'\n  | 'notActivePhase'\n  | 'notVerified';\n\nconst surveyTakingDisabledReason = (\n  backendReason: SurveyDisabledReason | null,\n  signedIn: boolean\n): ISurveyTakingDisabledReason => {\n  switch (backendReason) {\n    case 'project_inactive':\n      return 'projectInactive';\n    case 'not_signed_in':\n      return 'maybeNotPermitted';\n    case 'not_verified':\n      return signedIn ? 'notVerified' : 'maybeNotVerified';\n    case 'not_permitted':\n      return signedIn ? 'notPermitted' : 'maybeNotPermitted';\n    default:\n      return 'notPermitted';\n  }\n};\n\n/** Should we show the survey in the given context? And if not, with what message?\n * @param context\n *  project: The project context we are posting to.\n *  phaseContext: The phase context in which the button is rendered. NOT necessarily the active phase. Optional.\n *  signedIn: Whether the user is currently authenticated\n */\nexport const getSurveyTakingRules = ({\n  project,\n  phaseContext,\n  signedIn,\n}: {\n  project: IProjectData;\n  phaseContext?: IPhaseData | null;\n  signedIn: boolean;\n}): ActionPermission<ISurveyTakingDisabledReason> => {\n  if (phaseContext) {\n    const inCurrentPhase =\n      pastPresentOrFuture([\n        phaseContext.attributes.start_at,\n        phaseContext.attributes.end_at,\n      ]) === 'present';\n    const {\n      disabled_reason,\n      enabled,\n    } = project.attributes.action_descriptor.taking_survey;\n\n    if (inCurrentPhase) {\n      return {\n        enabled,\n        disabledReason: enabled\n          ? null\n          : surveyTakingDisabledReason(disabled_reason, !!signedIn),\n        action: null,\n        show: true,\n      } as\n        | ActionPermissionDisabled<ISurveyTakingDisabledReason>\n        | ActionPermissionEnabled;\n    } else {\n      // if not in current phase\n      return {\n        enabled: false,\n        disabledReason: 'notActivePhase',\n        action: null,\n        show: true,\n      };\n    }\n  } else {\n    // if not in phase context\n    const {\n      enabled,\n      disabled_reason,\n    } = project.attributes.action_descriptor.taking_survey;\n    return {\n      enabled,\n      disabledReason: enabled\n        ? null\n        : surveyTakingDisabledReason(disabled_reason, !!signedIn),\n      action: null,\n      show: true,\n    } as\n      | ActionPermissionDisabled<ISurveyTakingDisabledReason>\n      | ActionPermissionEnabled;\n  }\n};\n","import styled from 'styled-components';\nimport { media } from 'utils/styleUtils';\n\nexport default styled.section`\n  padding-top: 60px;\n  padding-bottom: 80px;\n\n  ${media.smallerThanMinTablet`\n    padding-top: 45px;\n    padding-bottom: 45px;\n  `}\n`;\n","import React, { lazy, Suspense, memo } from 'react';\n\n// components\nconst WithFiltersSidebar = lazy(() => import('./WithFiltersSidebar'));\nconst WithoutFiltersSidebar = lazy(() => import('./WithoutFiltersSidebar'));\n\n// styling\nimport styled from 'styled-components';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// typings\nimport {\n  ParticipationMethod,\n  IdeaDefaultSortMethod,\n} from 'services/participationContexts';\nimport { InputProps as GetIdeasInputProps } from 'resources/GetIdeas';\nimport { MessageDescriptor, IParticipationContextType } from 'typings';\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\ninterface Props extends GetIdeasInputProps {\n  showViewToggle?: boolean | undefined;\n  defaultView?: 'card' | 'map' | null | undefined;\n  defaultSortingMethod?: IdeaDefaultSortMethod;\n  participationMethod?: ParticipationMethod | null;\n  participationContextId?: string | null;\n  participationContextType?: IParticipationContextType | null;\n  allowProjectsFilter?: boolean;\n  showFiltersSidebar?: boolean;\n  className?: string;\n  invisibleTitleMessage?: MessageDescriptor;\n}\n\nconst IdeaCards = memo<Props>(\n  ({ className, invisibleTitleMessage, ...props }) => {\n    return (\n      <Container className={className || ''}>\n        {invisibleTitleMessage && (\n          <ScreenReaderOnly>\n            <FormattedMessage tagName=\"h2\" {...invisibleTitleMessage} />\n          </ScreenReaderOnly>\n        )}\n        <Suspense fallback={null}>\n          {props.showFiltersSidebar ? (\n            <WithFiltersSidebar {...props} />\n          ) : (\n            <WithoutFiltersSidebar {...props} />\n          )}\n        </Suspense>\n      </Container>\n    );\n  }\n);\n\nexport default IdeaCards;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  submitYourIdea: {\n    id: 'app.containers.IdeaButton.submitYourIdea',\n    defaultMessage: 'Submit your idea',\n  },\n  addAnOption: {\n    id: 'app.containers.IdeaButton.addAnOption',\n    defaultMessage: 'Add an option',\n  },\n  addAProject: {\n    id: 'app.containers.IdeaButton.addAProject',\n    defaultMessage: 'Add a project',\n  },\n  addAQuestion: {\n    id: 'app.containers.IdeaButton.addAQuestion',\n    defaultMessage: 'Add a question',\n  },\n  submitAnIssue: {\n    id: 'app.containers.IdeaButton.submitAnIssue',\n    defaultMessage: 'Submit an issue',\n  },\n  addAContribution: {\n    id: 'app.containers.IdeaButton.addAContribution',\n    defaultMessage: 'Add a contribution',\n  },\n  postingDisabled: {\n    id: 'app.containers.IdeaButton.postingDisabled',\n    defaultMessage: 'New submissions are not currently being accepted',\n  },\n  postingNoPermission: {\n    id: 'app.containers.IdeaButton.postingNoPermission',\n    defaultMessage: 'New submissions are only enabled for certain groups',\n  },\n  signInLinkText: {\n    id: 'app.containers.IdeaButton.signInLinkText',\n    defaultMessage: 'sign in',\n  },\n  signUpLinkText: {\n    id: 'app.containers.IdeaButton.signUpLinkText',\n    defaultMessage: 'sign up',\n  },\n  postingInactive: {\n    id: 'app.containers.IdeaButton.postingInactive',\n    defaultMessage: 'New submissions are not currently being accepted.',\n  },\n  postingInNonActivePhases: {\n    id: 'app.containers.IdeaButton.postingInNonActivePhases',\n    defaultMessage: 'New submissions can only be added in active phases.',\n  },\n  postingNotYetPossible: {\n    id: 'app.containers.IdeaButton.postingNotYetPossible',\n    defaultMessage: 'New submissions are not yet accepted here.',\n  },\n  postingMayNotBePermitted: {\n    id: 'app.containers.IdeaButton.postingMayNotBePermitted',\n    defaultMessage:\n      'Please {signInLink} to the platform to see what actions you can take.',\n  },\n\n  verificationLinkText: {\n    id: 'app.containers.IdeaButton.verificationLinkText',\n    defaultMessage: 'Verify your account now.',\n  },\n});\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SurveyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  .smcx-widget {\n    max-width: none;\n    z-index: 1;\n  }\n  .smcx-embed > .smcx-iframe-container {\n    max-width: none;\n  }\n`;\n\ntype Props = {\n  surveymonkeyUrl: string;\n};\n\ninterface State {}\n\nclass SurveymonekySurvey extends React.PureComponent<Props, State> {\n  surveyContainer: HTMLElement | null = null;\n\n  componentDidMount() {\n    if (!document.getElementById('smcx-sdk')) {\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.id = 'smcx-sdk';\n      script.async = true;\n      script.src = this.props.surveymonkeyUrl;\n      this.surveyContainer && this.surveyContainer.appendChild(script);\n    }\n  }\n\n  setRef = (element) => {\n    this.surveyContainer = element;\n  };\n\n  render() {\n    return (\n      <div>\n        <SurveyContainer ref={this.setRef} />\n      </div>\n    );\n  }\n}\n\nexport default SurveymonekySurvey;\n"],"sourceRoot":""}