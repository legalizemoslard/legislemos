{"version":3,"sources":["webpack:///./app/containers/Admin/projects/all/Lists/ModeratorProjectList.tsx"],"names":["memo","rootLevelAdminPublications","publicationStatusFilter","rootLevelOnly","list","isProjectFoldersEnabled","isNilOrError","length","ListHeader","HeaderTitle","FormattedMessage","messages","existingProjects","List","map","adminPublication","index","relationships","parent","data","Row","key","id","isLastItem","publicationType","publication","adminPublicationRow"],"mappings":"iQAAA,M,ybAAA,YAGA,YAGA,eACA,eAGA,YACA,eACA,YACA,eAGA,YACA,e,+HAIA,I,GAA6B,IAAAA,OAAY,WACvC,IAAcC,GAA+B,aAAqB,CAChEC,wBAAyB,CAAC,YAAa,QAAS,YAChDC,eAAe,IAFTC,KAIFC,GAA0B,aAAe,mBAe/C,QACG,IAAAC,cAAaL,IACdA,GACAA,EAA2BM,OAAS,GAEhCN,GAA8BA,EAA2BM,OAAS,EAElE,gDACE,wBAAC,EAAAC,WAAD,KACE,wBAAC,EAAAC,YAAD,KACE,wBAAC,EAAAC,iBAAqBC,UAASC,oBAInC,wBAAC,EAAAC,KAAD,KACGZ,EAA2Ba,KAAI,SAACC,EAAkBC,GACjD,OACGX,IACCU,EAAiBE,cAAcC,OAAOC,MACtC,wBAAC,EAAAC,IAAD,CACEC,IAAKL,EACLM,GAAIP,EAAiBO,GACrBC,WAAYP,IAAUf,EAA2BM,OAAS,GAnChD,SAACQ,GAC3B,MAAyC,YAArCA,EAAiBS,gBACZ,wBAAC,UAAD,CAAYC,YAAaV,IAG9B,wBAAC,UAAD,CACEO,GAAG,+DACHG,YAAaV,IA8BFW,CAAoBX,SAWhC,Q","file":"178.62f212de726be6a2c6f9.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// hooks\nimport useAdminPublications from 'hooks/useAdminPublications';\nimport useFeatureFlag from 'hooks/useFeatureFlag';\n\n// components\nimport { List, Row } from 'components/admin/ResourceList';\nimport ProjectRow from '../../components/ProjectRow';\nimport { ListHeader, HeaderTitle } from '../StyledComponents';\nimport Outlet from 'components/Outlet';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../messages';\n\ninterface Props {}\n\nconst ModeratorProjectList = memo<Props>(() => {\n  const { list: rootLevelAdminPublications } = useAdminPublications({\n    publicationStatusFilter: ['published', 'draft', 'archived'],\n    rootLevelOnly: true,\n  });\n  const isProjectFoldersEnabled = useFeatureFlag('project_folders');\n\n  const adminPublicationRow = (adminPublication) => {\n    if (adminPublication.publicationType === 'project') {\n      return <ProjectRow publication={adminPublication} />;\n    } else {\n      return (\n        <Outlet\n          id=\"app.containers.AdminPage.projects.all.projectsAndFolders.row\"\n          publication={adminPublication}\n        />\n      );\n    }\n  };\n\n  if (\n    !isNilOrError(rootLevelAdminPublications) &&\n    rootLevelAdminPublications &&\n    rootLevelAdminPublications.length > 0\n  ) {\n    if (rootLevelAdminPublications && rootLevelAdminPublications.length > 0) {\n      return (\n        <>\n          <ListHeader>\n            <HeaderTitle>\n              <FormattedMessage {...messages.existingProjects} />\n            </HeaderTitle>\n          </ListHeader>\n\n          <List>\n            {rootLevelAdminPublications.map((adminPublication, index) => {\n              return (\n                !isProjectFoldersEnabled ||\n                (!adminPublication.relationships.parent.data && (\n                  <Row\n                    key={index}\n                    id={adminPublication.id}\n                    isLastItem={index === rootLevelAdminPublications.length - 1}\n                  >\n                    {adminPublicationRow(adminPublication)}\n                  </Row>\n                ))\n              );\n            })}\n          </List>\n        </>\n      );\n    }\n  }\n\n  return null;\n});\n\nexport default ModeratorProjectList;\n"],"sourceRoot":""}