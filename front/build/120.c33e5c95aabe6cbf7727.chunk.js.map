{"version":3,"sources":["webpack:///./app/components/IdeaCards/TopicFilterDropdown.tsx","webpack:///./app/services/ideaCustomFieldsSchemas.ts","webpack:///./app/hooks/useIdeaCustomFieldsSchemas.ts","webpack:///./app/components/ProjectFilterDropdown/index.tsx","webpack:///./app/components/IdeaCards/WithoutFiltersSidebar.tsx","webpack:///./app/resources/GetIdeaCustomFieldsSchemas.tsx"],"names":["TopicFilterDropdown","memo","alignment","projectId","onChange","localize","useState","selectedValues","setSelectedValues","topics","options","useMemo","isNilOrError","filter","topic","map","text","attributes","title_multiloc","value","id","length","title","FormattedMessage","messages","topicsTitle","key","Math","floor","random","name","selected","values","newSelectedValues","multipleSelectionAllowed","last","left","undefined","mobileLeft","right","mobileRight","streamParams","apiEndpoint","API_PATH","streams","get","ideaCustomFieldsSchemas","setIdeaCustomFieldsSchemas","useEffect","observable","of","ideaFormSchemaStream","subscription","subscribe","unsubscribe","ProjectFilterDropdown","props","setState","state","this","projects","className","textColor","projectsList","project","handleOnChange","PureComponent","Data","adopt","publicationStatuses","sort","ProjectFilterDropdownWithLocalize","inputProps","dataProps","IdeasMap","lazy","Container","styled","div","Loading","defaultCardStyle","FiltersArea","isRtl","media","smallerThanMinTablet","biggerThanMinTablet","FilterArea","LeftFilterArea","RightFilterArea","DropdownFilters","DesktopViewButtons","ViewButtons","MobileViewButtons","StyledSearchInput","SearchInput","IdeasList","StyledIdeaCard","IdeaCard","EmptyContainer","IdeaIcon","Icon","colors","label","EmptyMessage","EmptyMessageLine","fontSizes","base","Footer","ShowMoreButton","Button","ListView","WithoutFiltersSidebar","trackEventByName","tracks","loadMoreIdeas","ideas","onLoadMore","search","onChangeSearchTerm","projectIds","onChangeProjects","sortingFilter","onChangeSorting","topicsFilter","onChangeTopics","selectedView","fieldCode","locale","ui_schema_multiloc","defaultView","prevProps","phaseId","participationMethod","participationContextId","participationContextType","defaultSortingMethod","windowSize","theme","allowProjectsFilter","showViewToggle","queryParameters","list","hasMore","querying","loadingMore","hasIdeas","locationEnabled","isFieldEnabled","topicsEnabled","showViewButtons","showListView","showMapView","smallerThanBigTablet","viewportWidths","largeTablet","smallerThanSmallTablet","smallTablet","biggerThanSmallTablet","biggerThanLargeTablet","smallerThan1100px","smallerThanPhone","phone","onClick","selectView","handleSearchOnChange","handleSortOnChange","projectFilterTitle","handleProjectsOnChange","handleTopicsOnChange","Spinner","idea","ideaId","hideImage","hideImagePlaceholder","hideIdeaStatus","ariaHidden","noFilteredResults","loadMore","buttonStyle","showMore","processing","height","icon","iconPos","colorText","bgColor","rgba","bgHoverColor","fontWeight","Suspense","fallback","phase","render","getIdeasInputProps","pageSize","ideaDefaultSortMethodFallback","params","projectSlug","slug","WithoutFiltersSidebarWithHoCs","withTheme","injectIntl","withRouter","ideaCustomFieldsSchema","children"],"mappings":"+SAAA,E,ybAAA,YACA,YAGA,eAMA,eACA,YACA,eAGA,e,+HAQA,IAAMA,GAAsB,IAAAC,OAC1B,YAA6E,IAA1EC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,UAAWC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,SACjC,GAA4C,IAAAC,UAAmB,IAA/D,qBAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAS,aAAUN,EAAY,CAAEA,aAAc,IAyB/CO,GAAU,IAAAC,UAAQ,kBAjBjB,IAAAC,cAAaH,GAaX,GAZkBA,EAAOI,QAC5B,SAACC,GAAD,QAAY,IAAAF,cAAaE,MAGLC,KAAI,SAACD,GACzB,MAAO,CACLE,KAAMX,EAASS,EAAMG,WAAWC,gBAChCC,MAAOL,EAAMM,SASuB,CAACX,IAE7C,OAAIC,GAAWA,EAAQW,OAAS,EAE5B,wBAAC,UAAD,CACED,GAAG,2BACHE,MACE,wBAAC,EAAAC,kBAAD,gBACMC,UAASC,YADf,CAEEC,IAAG,sBAAiBC,KAAKC,MAAsB,IAAhBD,KAAKE,cAGxCC,KAAK,SACLC,SAAUxB,EACVyB,OAAQtB,EACRN,SAtCiB,SAAC6B,GACtBzB,EAAkByB,GAClB7B,EAAS6B,IAqCLC,0BAA0B,EAC1BC,MAAM,EACNC,KAAoB,SAAdlC,EAAuB,YAASmC,EACtCC,WAA0B,SAAdpC,EAAuB,YAASmC,EAC5CE,MAAqB,UAAdrC,EAAwB,YAASmC,EACxCG,YAA2B,UAAdtC,EAAwB,YAASmC,IAK7C,Q,GAII,aAAerC,G,qMCtBvB,SACLG,GAEA,IADAsC,EACA,uDADqC,KAE/BC,EAAc,GAAH,OAAMC,WAAN,qBAA2BxC,EAA3B,yBACjB,OAAOyC,UAAQC,IAAR,GACLH,eACGD,K,6BAlEP,gBACA,e,4rBCUe,YAA0D,IAApBtC,EAAoB,EAApBA,UACnD,GAA8D,IAAAG,eAE5D+B,GAFF,qBAAOS,EAAP,KAAgCC,EAAhC,KAkBA,OAdA,IAAAC,YAAU,WACR,IAAIC,GAAkD,IAAAC,IAAG,MAErD/C,IACF8C,GAAa,IAAAE,sBAAqBhD,GAAW8C,YAG/C,IAAMG,EAAeH,EAAWI,WAAU,SAACP,GACzCC,EAA2BD,MAG7B,OAAO,kBAAMM,EAAaE,iBACzB,CAACnD,IAEG2C,G,mBA9BT,YACA,YAIA,a,4UCLA,E,ybAAA,YACA,YAGA,eAGA,eAGA,e,6kBAmBMS,E,0CAIJ,WAAYC,GAAO,kCACjB,cAAMA,IADW,gDAOF,SAACjD,GAChB,EAAKkD,SAAS,CAAElD,mBAChB,EAAKiD,MAAMpD,SAASG,MAPpB,EAAKmD,MAAQ,CACXnD,eAAgB,IAHD,E,2CAYnB,WACE,IAAQA,EAAmBoD,KAAKD,MAAxBnD,eACR,EAA4DoD,KAAKH,MAAzDI,EAAR,EAAQA,SAAUvD,EAAlB,EAAkBA,SAAUiB,EAA5B,EAA4BA,MAAOuC,EAAnC,EAAmCA,UAAWC,EAA9C,EAA8CA,UACxCC,EAAeH,EAASG,aAE9B,GAAIA,GAAgBA,EAAa1C,OAAS,EAAG,CAC3C,IAAMX,EAAUqD,EAAahD,KAAI,SAACiD,GAChC,MAAO,CACLhD,KAAMX,EAAS2D,EAAQ/C,WAAWC,gBAClCC,MAAO6C,EAAQ5C,OAInB,GAAIV,GAAWA,EAAQW,OAAS,EAC9B,OACE,wBAAC,UAAD,CACED,GAAG,8BACHyC,UAAWA,EACXvC,MAAOA,EACPQ,KAAK,WACLC,SAAUxB,EACVyB,OAAQtB,EACRN,SAAUuD,KAAKM,eACf/B,0BAA0B,EAC1BK,MAAM,QACND,WAAW,OACXwB,UAAWA,IAMnB,OAAO,S,GAhDyBI,iBAoD9BC,GAAO,IAAAC,OAA6B,CACxCR,SAAU,wBAAC,UAAD,CAAaS,oBAAqB,CAAC,aAAcC,KAAK,UAG5DC,GAAoC,aAAShB,G,UAEpC,SAACiB,GAAD,OACb,wBAACL,EAASK,GACP,SAACC,GAAD,OACC,wBAACF,GAAD,gBAAuCE,EAAeD,S,8XC1F5D,I,sBAAA,eACA,YACA,YAGA,YACA,eAGA,eACA,YACA,eACA,eACA,eACA,eACA,eACA,eAIA,eAGA,eAKA,eACA,eAGA,eAGA,eAEA,YAGA,eACA,YAQA,YAGA,YAMA,Y,khCAzCA,IAAME,IAAW,IAAAC,OAAK,kBAAM,qFA4CtBC,GAAYC,UAAOC,IAAV,uFAAGD,CAAH,iBAITE,GAAUF,UAAOC,IAAV,qFAAGD,CAAH,wFAMTG,oBAGEC,GAAcJ,UAAOC,IAAV,yFAAGD,CAAH,4MASbK,SATa,kEAiBXC,QAAMC,qBAjBK,6DAsBbD,QAAME,oBAtBO,kFA4BbF,QAAMC,qBA5BO,mHAmCXE,GAAaT,UAAOC,IAAV,wFAAGD,CAAH,sCAKVU,IAAiB,aAAOD,IAAV,4FAAG,CAAH,6CAOhBH,QAAMC,qBAPU,6GAcdI,IAAkB,aAAOF,IAAV,6FAAG,CAAH,6DASfG,GAAkBZ,UAAOC,IAAV,6FAAGD,CAAH,6DASfa,IAAqB,aAAOC,WAAV,gGAAG,CAAH,yBAGpBR,QAAMC,qBAHc,qDAQlBQ,IAAoB,aAAOD,WAAV,+FAAG,CAAH,yBAIjBE,IAAoB,aAAOC,WAAV,+FAAG,CAAH,6CAInBZ,SAJmB,8EASnBC,QAAMC,qBATa,4HAiBjBW,GAAYlB,UAAOC,IAAV,wFAAGD,CAAH,4EAMXK,SANW,mEAWTc,IAAiB,aAAOC,WAAV,6FAAG,CAAH,wDAKhBd,QAAMC,qBALU,mDAUdc,GAAiBrB,UAAOC,IAAV,6FAAGD,CAAH,iJAShBG,oBAGEmB,IAAW,aAAOC,QAAV,uFAAG,CAAH,mDAIJC,SAAOC,OAGXC,GAAe1B,UAAOC,IAAV,2FAAGD,CAAH,8EAOZ2B,GAAmB3B,UAAOC,IAAV,+FAAGD,CAAH,oFACXwB,SAAOC,MACHG,YAAUC,MAMnBC,GAAS9B,UAAOC,IAAV,qFAAGD,CAAH,uEAMRM,QAAMC,qBANE,+GAaNwB,IAAiB,aAAOC,WAAV,6FAAG,CAAH,MAEdC,GAAWjC,UAAOC,IAAV,uFAAGD,CAAH,MA6BRkC,G,2CAQJ,WAAYvD,GAAkC,kCAC5C,cAAMA,IADsC,0CAanC,YACT,IAAAwD,kBAAiBC,UAAOC,eACxB,EAAK1D,MAAM2D,MAAMC,iBAf2B,sDAkBvB,SAACC,GACtB,EAAK7D,MAAM2D,MAAMG,mBAAmBD,OAnBQ,wDAsBrB,SAACE,GACxB,EAAK/D,MAAM2D,MAAMK,iBAAiBD,OAvBU,oDA0BzB,SAACjD,IACpB,IAAA0C,kBAAiBC,UAAOQ,cAAe,CACrCnD,SAEF,EAAKd,MAAM2D,MAAMO,gBAAgBpD,OA9BW,sDAiCvB,SAAC7D,IACtB,IAAAuG,kBAAiBC,UAAOU,aAAc,CACpClH,WAEF,EAAK+C,MAAM2D,MAAMS,eAAenH,OArCY,4CAwCjC,SAACoH,GACZ,EAAKpE,SAAS,CAAEoE,qBAzC4B,gDA4C7B,SAACC,GAOhB,IAEqE,MAFrE,EAA4C,EAAKtE,MAAzCV,EAAR,EAAQA,wBAAyBiF,EAAjC,EAAiCA,OAEjC,UAAK,IAAAnH,cAAakC,MAA6B,IAAAlC,cAAamH,KAIlD,YAFN,UAAAjF,EAAwBkF,0BAAxB,mBAA6CD,UAA7C,mBAAuDD,UAAvD,eACE,iBAtDN,EAAKpE,MAAQ,CACXmE,aAAcrE,EAAMyE,aAAe,QAHO,E,uDAO9C,SAAmBC,GACbvE,KAAKH,MAAM2E,UAAYD,EAAUC,SACnCxE,KAAKF,SAAS,CAAEoE,aAAclE,KAAKH,MAAMyE,aAAe,W,oBAuD5D,WACE,IAAQJ,EAAiBlE,KAAKD,MAAtBmE,aACR,EAYIlE,KAAKH,MAXP4E,EADF,EACEA,oBACAC,EAFF,EAEEA,uBACAC,EAHF,EAGEA,yBACAC,EAJF,EAIEA,qBACAC,EALF,EAKEA,WACArB,EANF,EAMEA,MACAtD,EAPF,EAOEA,UACA4E,EARF,EAQEA,MACAC,EATF,EASEA,oBACAC,EAVF,EAUEA,eACA3E,EAXF,EAWEA,QAEM4E,EAA0DzB,EAA1DyB,gBAAiBC,EAAyC1B,EAAzC0B,KAAMC,EAAmC3B,EAAnC2B,QAASC,EAA0B5B,EAA1B4B,SAAUC,EAAgB7B,EAAhB6B,YAC5CC,IAAY,IAAArI,cAAaiI,IAASA,EAAKxH,OAAS,EAChD6H,EAAkBvF,KAAKwF,eAAe,YACtCC,EAAgBzF,KAAKwF,eAAe,aACpCE,KAAqBH,IAAmBP,GACxCW,GACHJ,GAAoBA,GAAoC,SAAjBrB,EACpC0B,EAAcL,GAAoC,QAAjBrB,EACjC2B,KACJhB,GAAcA,GAAciB,iBAAeC,aAEvCC,KACJnB,GAAcA,GAAciB,iBAAeG,aAEvCC,KACJrB,GAAcA,GAAciB,iBAAeG,aAEvCE,KACJtB,GAAcA,GAAciB,iBAAeC,aAEvCK,KAAuBvB,GAAcA,GAAc,MACnDwB,KACJxB,GAAcA,GAAciB,iBAAeQ,OAG7C,OACE,wBAACrF,GAAD,CACExD,GAAG,sBACHyC,UAAS,UAAKA,GAAa,GAAlB,YAAwB0F,EAAc,UAAY,aAE3D,wBAACtE,GAAD,CACE7D,GAAG,oBACHyC,UAAS,yBAAoB0F,EAAc,UAAY,aAEvD,wBAAChE,GAAD,KACG8D,GAAmBM,GAClB,wBAAC/D,GAAD,CACEiC,aAAcA,EACdqC,QAASvG,KAAKwG,cAIhBZ,GACA,wBAAC1D,GAAD,CACEhC,UAAU,yBACVzD,SAAUuD,KAAKyG,wBAKrB,wBAAC5E,GAAD,KACE,wBAACC,GAAD,CACE5B,UAAS,UAAK0F,EAAc,SAAW,UAA9B,YACPF,EAAkB,iBAAmB,KAGvC,wBAAC,UAAD,CACEjJ,SAAUuD,KAAK0G,mBACfnK,UAAW4J,EAAwB,QAAU,OAC7CvB,qBAAsBA,GAAwB,OAE/CG,GACC,wBAAC,UAAD,CACEpH,MAAO,wBAAC,EAAAC,iBAAqBC,UAAS8I,oBACtClK,SAAUuD,KAAK4G,yBAGlBnB,GACC,wBAAC,UAAD,CACEhJ,SAAUuD,KAAK6G,qBACftK,UAAW4J,EAAwB,QAAU,OAC7C3J,WAAY,IAAAS,cAAaoD,GAAwB,KAAbA,EAAQ5C,MAKjDiI,IAAoBM,GACnB,wBAACjE,GAAD,CACEmC,aAAcA,EACdqC,QAASvG,KAAKwG,eAMrBb,GACC,wBAACxC,GAAD,KACGiC,EACC,wBAAChE,GAAD,CAAS3D,GAAG,iBACV,wBAAC,EAAAqJ,QAAD,OAGF,gDACGxB,GAAYJ,EACX,wBAAC9C,GAAD,CAAW3E,GAAG,kBACXyH,EAAK9H,KAAI,SAAC2J,GAAD,OACR,wBAAC1E,GAAD,CACEtE,IAAKgJ,EAAKtJ,GACVuJ,OAAQD,EAAKtJ,GACbgH,oBAAqBA,EACrBC,uBAAwBA,EACxBC,yBAA0BA,EAC1BsC,UACEpB,GAAwBK,EAE1BgB,qBAAsBrB,EACtBsB,eACGhB,GAAyBC,GAC1BC,QAMR,wBAAC9D,GAAD,CAAgB9E,GAAG,eACjB,wBAAC+E,GAAD,CAAU4E,YAAU,EAACjJ,KAAK,SAC1B,wBAACyE,GAAD,KACE,wBAACC,GAAD,KACE,wBAAC,EAAAjF,iBAAqBC,UAASwJ,sBAKtClC,GACC,wBAACnC,GAAD,KACE,wBAACC,GAAD,CACExF,GAAG,kCACH8I,QAASvG,KAAKsH,SACdC,YAAY,YACZlK,KAAM,wBAAC,EAAAO,iBAAqBC,UAAS2J,UACrCC,WAAYpC,EACZqC,OAAO,OACPC,KAAK,WACLC,QAAQ,OACRzH,UAAW2E,EAAM+C,UACjBC,SAAS,IAAAC,MAAKjD,EAAM+C,UAAW,KAC/BG,cAAc,IAAAD,MAAKjD,EAAM+C,UAAW,KACpCI,WAAW,WASxBrC,GACC,wBAAC,EAAAsC,SAAD,CAAUC,UAAU,GAClB,wBAACpH,GAAD,CACE6C,WAAYqB,EAAgBhF,SAC5BuE,QAASS,EAAgBmD,c,GA7OH7H,kB,aAA9B6C,G,eAIkB,CACpB4B,gBAAgB,IAiPpB,IAAMxE,IAAO,IAAAC,OAA+C,CAC1D2D,OAAQ,wBAAC,UAAD,MACRS,WAAY,wBAAC,UAAD,MACZrB,MAAO,gBAAG6E,EAAH,EAAGA,OAAWC,GAAd,yBACL,wBAAC,WAAD,gBACMA,EADN,CAEEC,SAAU,GACV5H,KACE2H,EAAmB1D,sBAAwB4D,kCAG5CH,IAGLhI,QAAS,gBAAGoI,EAAH,EAAGA,OAAQJ,EAAX,EAAWA,OAAX,OACP,wBAAC,UAAD,CAAYK,YAAaD,EAAOE,MAAON,IAEzClJ,wBAAyB,YAAyB,IAAtBkB,EAAsB,EAAtBA,QAASgI,EAAa,EAAbA,OACnC,OACE,wBAAC,UAAD,CACE7L,WAAY,IAAAS,cAAaoD,GAAwB,KAAbA,EAAQ5C,IAE3C4K,MAMHO,IAAgC,IAAAC,YACpC,IAAAC,YAAW1F,K,IAGE,IAAA2F,aAAW,SAAClI,GAAD,OACxB,wBAACL,GAASK,GACP,SAACC,GAAD,OACC,wBAAC8H,IAAD,gBAAmC/H,EAAgBC,U,kIC3iBzD,mB,UAkBe,SAACjB,GACd,IAAMmJ,GAAyB,aAA2B,CACxDxM,UAAWqD,EAAMrD,YAEnB,OAAQqD,EAAMoJ,SAAsBD","file":"120.c33e5c95aabe6cbf7727.chunk.js","sourcesContent":["import React, { memo, useState, useMemo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport FilterSelector from 'components/FilterSelector';\n\n// services\nimport { ITopicData } from 'services/topics';\n\n// i18n\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// hooks\nimport useTopics from 'hooks/useTopics';\n\ninterface Props {\n  alignment: 'left' | 'right';\n  onChange: (value: any) => void;\n  projectId: string | null;\n}\n\nconst TopicFilterDropdown = memo(\n  ({ alignment, projectId, onChange, localize }: Props & InjectedLocalized) => {\n    const [selectedValues, setSelectedValues] = useState<string[]>([]);\n    const topics = useTopics(projectId ? { projectId } : {});\n\n    const handleOnChange = (newSelectedValues) => {\n      setSelectedValues(newSelectedValues);\n      onChange(newSelectedValues);\n    };\n\n    const getOptions = () => {\n      if (!isNilOrError(topics)) {\n        const filteredTopics = topics.filter(\n          (topic) => !isNilOrError(topic)\n        ) as ITopicData[];\n\n        return filteredTopics.map((topic) => {\n          return {\n            text: localize(topic.attributes.title_multiloc),\n            value: topic.id,\n          };\n        });\n      }\n\n      return [];\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const options = useMemo(() => getOptions(), [topics]);\n\n    if (options && options.length > 0) {\n      return (\n        <FilterSelector\n          id=\"e2e-idea-filter-selector\"\n          title={\n            <FormattedMessage\n              {...messages.topicsTitle}\n              key={`topic-title-${Math.floor(Math.random() * 100000000)}`}\n            />\n          }\n          name=\"topics\"\n          selected={selectedValues}\n          values={options}\n          onChange={handleOnChange}\n          multipleSelectionAllowed={true}\n          last={true}\n          left={alignment === 'left' ? '-5px' : undefined}\n          mobileLeft={alignment === 'left' ? '-5px' : undefined}\n          right={alignment === 'right' ? '-5px' : undefined}\n          mobileRight={alignment === 'right' ? '-5px' : undefined}\n        />\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectLocalize(TopicFilterDropdown);\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\n\nexport type CustomFieldCodes =\n  | 'title'\n  | 'body'\n  | 'topic_ids'\n  | 'location'\n  | 'images'\n  | 'attachments'\n  | 'proposed_budget';\n\nexport interface JSONSchemaObject {\n  title: string;\n  description: string;\n  type: 'string' | 'array';\n  uniqueItems?: boolean;\n  minItems?: number;\n  items?: {\n    type: 'string' | 'array';\n    format?: 'data-url' | 'string';\n  };\n}\n\nexport interface UISchemaObject {\n  'ui:widget'?: string;\n}\n\nexport interface IIdeaFormSchemas {\n  json_schema_multiloc: {\n    [locale: string]: {\n      type: 'object';\n      additionalProperties: boolean;\n      properties: {\n        title: JSONSchemaObject;\n        body: JSONSchemaObject;\n        topic_ids: JSONSchemaObject;\n        proposed_budget: JSONSchemaObject;\n        location: JSONSchemaObject;\n        images: JSONSchemaObject;\n        attachments: JSONSchemaObject;\n      };\n      required: string[];\n    };\n  };\n  ui_schema_multiloc: {\n    [locale: string]: {\n      title: UISchemaObject;\n      body: UISchemaObject;\n      topic_ids: UISchemaObject;\n      proposed_budget: UISchemaObject;\n      location: UISchemaObject;\n      images: UISchemaObject;\n      attachments: UISchemaObject;\n      'ui:order': string[];\n    };\n  };\n}\n\nexport function ideaFormSchemaStream(\n  projectId: string,\n  streamParams: IStreamParams | null = null\n) {\n  const apiEndpoint = `${API_PATH}/projects/${projectId}/custom_fields/schema`;\n  return streams.get<IIdeaFormSchemas>({\n    apiEndpoint,\n    ...streamParams,\n  });\n}\n","import { useState, useEffect } from 'react';\nimport {\n  ideaFormSchemaStream,\n  IIdeaFormSchemas,\n} from 'services/ideaCustomFieldsSchemas';\nimport { Observable, of } from 'rxjs';\n\ninterface Props {\n  projectId: string | null;\n}\n\nexport default function useIdeaCustomFieldsSchemas({ projectId }: Props) {\n  const [ideaCustomFieldsSchemas, setIdeaCustomFieldsSchemas] = useState<\n    IIdeaFormSchemas | undefined | null | Error\n  >(undefined);\n\n  useEffect(() => {\n    let observable: Observable<IIdeaFormSchemas | null> = of(null);\n\n    if (projectId) {\n      observable = ideaFormSchemaStream(projectId).observable;\n    }\n\n    const subscription = observable.subscribe((ideaCustomFieldsSchemas) => {\n      setIdeaCustomFieldsSchemas(ideaCustomFieldsSchemas);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [projectId]);\n\n  return ideaCustomFieldsSchemas;\n}\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\n\n// components\nimport FilterSelector from 'components/FilterSelector';\n\n// resources\nimport GetProjects, { GetProjectsChildProps } from 'resources/GetProjects';\n\n// i18n\nimport localize, { InjectedLocalized } from 'utils/localize';\n\ntype DataProps = {\n  projects: GetProjectsChildProps;\n};\n\ntype InputProps = {\n  title: string | JSX.Element;\n  onChange: (projectIds: string[]) => void;\n  className?: string;\n  textColor?: string;\n};\n\ntype Props = InputProps & DataProps;\n\ntype State = {\n  selectedValues: string[];\n};\n\nclass ProjectFilterDropdown extends PureComponent<\n  Props & InjectedLocalized,\n  State\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedValues: [],\n    };\n  }\n\n  handleOnChange = (selectedValues) => {\n    this.setState({ selectedValues });\n    this.props.onChange(selectedValues);\n  };\n\n  render() {\n    const { selectedValues } = this.state;\n    const { projects, localize, title, className, textColor } = this.props;\n    const projectsList = projects.projectsList;\n\n    if (projectsList && projectsList.length > 0) {\n      const options = projectsList.map((project) => {\n        return {\n          text: localize(project.attributes.title_multiloc),\n          value: project.id,\n        };\n      });\n\n      if (options && options.length > 0) {\n        return (\n          <FilterSelector\n            id=\"e2e-project-filter-selector\"\n            className={className}\n            title={title}\n            name=\"projects\"\n            selected={selectedValues}\n            values={options}\n            onChange={this.handleOnChange}\n            multipleSelectionAllowed={true}\n            right=\"-10px\"\n            mobileLeft=\"-5px\"\n            textColor={textColor}\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  projects: <GetProjects publicationStatuses={['published']} sort=\"new\" />,\n});\n\nconst ProjectFilterDropdownWithLocalize = localize(ProjectFilterDropdown);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <ProjectFilterDropdownWithLocalize {...dataProps} {...inputProps} />\n    )}\n  </Data>\n);\n","import React, { PureComponent, lazy, Suspense } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// tracks\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// components\nimport IdeaCard from 'components/IdeaCard/Compact';\nimport { Icon, Spinner } from 'cl2-component-library';\nimport TopicFilterDropdown from './TopicFilterDropdown';\nimport SelectSort from './SortFilterDropdown';\nimport ProjectFilterDropdown from 'components/ProjectFilterDropdown';\nimport SearchInput from 'components/UI/SearchInput';\nimport Button from 'components/UI/Button';\nimport ViewButtons from 'components/PostCardsComponents/ViewButtons';\nconst IdeasMap = lazy(() => import('components/IdeasMap'));\n\n// resources\nimport GetWindowSize, {\n  GetWindowSizeChildProps,\n} from 'resources/GetWindowSize';\nimport GetIdeas, {\n  Sort,\n  GetIdeasChildProps,\n  InputProps as GetIdeasInputProps,\n} from 'resources/GetIdeas';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetIdeaCustomFieldsSchemas, {\n  GetIdeaCustomFieldsSchemasChildProps,\n} from 'resources/GetIdeaCustomFieldsSchemas';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\n\n// i18n\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\n\n// style\nimport styled, { withTheme } from 'styled-components';\nimport {\n  media,\n  colors,\n  fontSizes,\n  viewportWidths,\n  defaultCardStyle,\n  isRtl,\n} from 'utils/styleUtils';\nimport { rgba } from 'polished';\n\n// typings\nimport {\n  IdeaDefaultSortMethod,\n  ParticipationMethod,\n  ideaDefaultSortMethodFallback,\n} from 'services/participationContexts';\nimport { IParticipationContextType } from 'typings';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { CustomFieldCodes } from 'services/ideaCustomFieldsSchemas';\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst Loading = styled.div`\n  width: 100%;\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${defaultCardStyle};\n`;\n\nconst FiltersArea = styled.div`\n  width: 100%;\n  min-height: 54px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n\n  &.mapView {\n    justify-content: flex-end;\n    margin-bottom: 15px;\n\n    ${media.smallerThanMinTablet`\n      margin-bottom: 0px;\n    `}\n  }\n\n  ${media.biggerThanMinTablet`\n    &.mapView {\n      margin-top: -65px;\n    }\n  `}\n\n  ${media.smallerThanMinTablet`\n    flex-direction: column;\n    align-items: stretch;\n    margin-bottom: 30px;\n  `}\n`;\n\nconst FilterArea = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst LeftFilterArea = styled(FilterArea)`\n  flex: 1 1 auto;\n\n  &.hidden {\n    display: none;\n  }\n\n  ${media.smallerThanMinTablet`\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  `}\n`;\n\nconst RightFilterArea = styled(FilterArea)`\n  display: flex;\n  align-items: center;\n\n  &.hidden {\n    display: none;\n  }\n`;\n\nconst DropdownFilters = styled.div`\n  display: flex;\n  align-items: center;\n\n  &.hidden {\n    display: none;\n  }\n`;\n\nconst DesktopViewButtons = styled(ViewButtons)`\n  margin-left: 40px;\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `}\n`;\n\nconst MobileViewButtons = styled(ViewButtons)`\n  margin-bottom: 15px;\n`;\n\nconst StyledSearchInput = styled(SearchInput)`\n  width: 300px;\n  margin-right: 30px;\n\n  ${isRtl`\n    margin-right: 0;\n    margin-left: auto;\n  `}\n\n  ${media.smallerThanMinTablet`\n    width: 100%;\n    margin-right: 0px;\n    margin-left: 0px;\n    margin-bottom: 20px;\n  `}\n`;\n\nconst IdeasList = styled.div`\n  margin-left: -12px;\n  margin-right: -12px;\n  display: flex;\n  flex-wrap: wrap;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst StyledIdeaCard = styled(IdeaCard)`\n  flex-grow: 0;\n  width: calc(50% - 20px);\n  margin: 10px;\n\n  ${media.smallerThanMinTablet`\n    width: 100%;\n  `};\n`;\n\nconst EmptyContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding-top: 100px;\n  padding-bottom: 100px;\n  ${defaultCardStyle};\n`;\n\nconst IdeaIcon = styled(Icon)`\n  flex: 0 0 26px;\n  width: 26px;\n  height: 26px;\n  fill: ${colors.label};\n`;\n\nconst EmptyMessage = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-top: 12px;\n  margin-bottom: 30px;\n`;\n\nconst EmptyMessageLine = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: normal;\n  text-align: center;\n`;\n\nconst Footer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n\n  ${media.smallerThanMinTablet`\n    flex-direction: column;\n    align-items: stretch;\n    margin-top: 0px;\n  `}\n`;\n\nconst ShowMoreButton = styled(Button)``;\n\nconst ListView = styled.div``;\n\ninterface InputProps extends GetIdeasInputProps {\n  showViewToggle?: boolean | undefined;\n  defaultSortingMethod?: IdeaDefaultSortMethod;\n  defaultView?: 'card' | 'map' | null | undefined;\n  participationMethod?: ParticipationMethod | null;\n  participationContextId?: string | null;\n  participationContextType?: IParticipationContextType | null;\n  className?: string;\n  allowProjectsFilter?: boolean;\n}\n\ninterface DataProps {\n  locale: GetLocaleChildProps;\n  windowSize: GetWindowSizeChildProps;\n  ideas: GetIdeasChildProps;\n  project: GetProjectChildProps;\n  ideaCustomFieldsSchemas: GetIdeaCustomFieldsSchemasChildProps;\n}\n\ninterface Props extends InputProps, DataProps {\n  theme: any;\n}\n\ninterface State {\n  selectedView: 'card' | 'map';\n}\n\nclass WithoutFiltersSidebar extends PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  static defaultProps = {\n    showViewToggle: false,\n  };\n\n  constructor(props: Props & InjectedIntlProps) {\n    super(props);\n    this.state = {\n      selectedView: props.defaultView || 'card',\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.phaseId !== prevProps.phaseId) {\n      this.setState({ selectedView: this.props.defaultView || 'card' });\n    }\n  }\n\n  loadMore = () => {\n    trackEventByName(tracks.loadMoreIdeas);\n    this.props.ideas.onLoadMore();\n  };\n\n  handleSearchOnChange = (search: string) => {\n    this.props.ideas.onChangeSearchTerm(search);\n  };\n\n  handleProjectsOnChange = (projectIds: string[]) => {\n    this.props.ideas.onChangeProjects(projectIds);\n  };\n\n  handleSortOnChange = (sort: Sort) => {\n    trackEventByName(tracks.sortingFilter, {\n      sort,\n    });\n    this.props.ideas.onChangeSorting(sort);\n  };\n\n  handleTopicsOnChange = (topics: string[]) => {\n    trackEventByName(tracks.topicsFilter, {\n      topics,\n    });\n    this.props.ideas.onChangeTopics(topics);\n  };\n\n  selectView = (selectedView: 'card' | 'map') => {\n    this.setState({ selectedView });\n  };\n\n  isFieldEnabled = (fieldCode: CustomFieldCodes) => {\n    /*\n      If IdeaCards are used in a location that's not inside a project,\n      and has no ideaCustomFields settings as such,\n      we fall back to true\n    */\n\n    const { ideaCustomFieldsSchemas, locale } = this.props;\n\n    if (!isNilOrError(ideaCustomFieldsSchemas) && !isNilOrError(locale)) {\n      return (\n        ideaCustomFieldsSchemas.ui_schema_multiloc?.[locale]?.[fieldCode]?.[\n          'ui:widget'\n        ] !== 'hidden'\n      );\n    }\n\n    return true;\n  };\n\n  render() {\n    const { selectedView } = this.state;\n    const {\n      participationMethod,\n      participationContextId,\n      participationContextType,\n      defaultSortingMethod,\n      windowSize,\n      ideas,\n      className,\n      theme,\n      allowProjectsFilter,\n      showViewToggle,\n      project,\n    } = this.props;\n    const { queryParameters, list, hasMore, querying, loadingMore } = ideas;\n    const hasIdeas = !isNilOrError(list) && list.length > 0;\n    const locationEnabled = this.isFieldEnabled('location');\n    const topicsEnabled = this.isFieldEnabled('topic_ids');\n    const showViewButtons = !!(locationEnabled && showViewToggle);\n    const showListView =\n      !locationEnabled || (locationEnabled && selectedView === 'card');\n    const showMapView = locationEnabled && selectedView === 'map';\n    const smallerThanBigTablet = !!(\n      windowSize && windowSize <= viewportWidths.largeTablet\n    );\n    const smallerThanSmallTablet = !!(\n      windowSize && windowSize <= viewportWidths.smallTablet\n    );\n    const biggerThanSmallTablet = !!(\n      windowSize && windowSize >= viewportWidths.smallTablet\n    );\n    const biggerThanLargeTablet = !!(\n      windowSize && windowSize >= viewportWidths.largeTablet\n    );\n    const smallerThan1100px = !!(windowSize && windowSize <= 1100);\n    const smallerThanPhone = !!(\n      windowSize && windowSize <= viewportWidths.phone\n    );\n\n    return (\n      <Container\n        id=\"e2e-ideas-container\"\n        className={`${className || ''} ${showMapView ? 'mapView' : 'listView'}`}\n      >\n        <FiltersArea\n          id=\"e2e-ideas-filters\"\n          className={`ideasContainer ${showMapView ? 'mapView' : 'listView'}`}\n        >\n          <LeftFilterArea>\n            {showViewButtons && smallerThanSmallTablet && (\n              <MobileViewButtons\n                selectedView={selectedView}\n                onClick={this.selectView}\n              />\n            )}\n\n            {!showMapView && (\n              <StyledSearchInput\n                className=\"e2e-search-ideas-input\"\n                onChange={this.handleSearchOnChange}\n              />\n            )}\n          </LeftFilterArea>\n\n          <RightFilterArea>\n            <DropdownFilters\n              className={`${showMapView ? 'hidden' : 'visible'} ${\n                showViewButtons ? 'hasViewButtons' : ''\n              }`}\n            >\n              <SelectSort\n                onChange={this.handleSortOnChange}\n                alignment={biggerThanLargeTablet ? 'right' : 'left'}\n                defaultSortingMethod={defaultSortingMethod || null}\n              />\n              {allowProjectsFilter && (\n                <ProjectFilterDropdown\n                  title={<FormattedMessage {...messages.projectFilterTitle} />}\n                  onChange={this.handleProjectsOnChange}\n                />\n              )}\n              {topicsEnabled && (\n                <TopicFilterDropdown\n                  onChange={this.handleTopicsOnChange}\n                  alignment={biggerThanLargeTablet ? 'right' : 'left'}\n                  projectId={!isNilOrError(project) ? project.id : null}\n                />\n              )}\n            </DropdownFilters>\n\n            {showViewButtons && !smallerThanSmallTablet && (\n              <DesktopViewButtons\n                selectedView={selectedView}\n                onClick={this.selectView}\n              />\n            )}\n          </RightFilterArea>\n        </FiltersArea>\n\n        {showListView && (\n          <ListView>\n            {querying ? (\n              <Loading id=\"ideas-loading\">\n                <Spinner />\n              </Loading>\n            ) : (\n              <>\n                {hasIdeas && list ? (\n                  <IdeasList id=\"e2e-ideas-list\">\n                    {list.map((idea) => (\n                      <StyledIdeaCard\n                        key={idea.id}\n                        ideaId={idea.id}\n                        participationMethod={participationMethod}\n                        participationContextId={participationContextId}\n                        participationContextType={participationContextType}\n                        hideImage={\n                          smallerThanBigTablet && biggerThanSmallTablet\n                        }\n                        hideImagePlaceholder={smallerThanBigTablet}\n                        hideIdeaStatus={\n                          (biggerThanLargeTablet && smallerThan1100px) ||\n                          smallerThanPhone\n                        }\n                      />\n                    ))}\n                  </IdeasList>\n                ) : (\n                  <EmptyContainer id=\"ideas-empty\">\n                    <IdeaIcon ariaHidden name=\"idea\" />\n                    <EmptyMessage>\n                      <EmptyMessageLine>\n                        <FormattedMessage {...messages.noFilteredResults} />\n                      </EmptyMessageLine>\n                    </EmptyMessage>\n                  </EmptyContainer>\n                )}\n                {hasMore && (\n                  <Footer>\n                    <ShowMoreButton\n                      id=\"e2e-idea-cards-show-more-button\"\n                      onClick={this.loadMore}\n                      buttonStyle=\"secondary\"\n                      text={<FormattedMessage {...messages.showMore} />}\n                      processing={loadingMore}\n                      height=\"50px\"\n                      icon=\"showMore\"\n                      iconPos=\"left\"\n                      textColor={theme.colorText}\n                      bgColor={rgba(theme.colorText, 0.08)}\n                      bgHoverColor={rgba(theme.colorText, 0.12)}\n                      fontWeight=\"500\"\n                    />\n                  </Footer>\n                )}\n              </>\n            )}\n          </ListView>\n        )}\n\n        {showMapView && (\n          <Suspense fallback={false}>\n            <IdeasMap\n              projectIds={queryParameters.projects}\n              phaseId={queryParameters.phase}\n            />\n          </Suspense>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst Data = adopt<DataProps, InputProps & WithRouterProps>({\n  locale: <GetLocale />,\n  windowSize: <GetWindowSize />,\n  ideas: ({ render, ...getIdeasInputProps }) => (\n    <GetIdeas\n      {...getIdeasInputProps}\n      pageSize={24}\n      sort={\n        getIdeasInputProps.defaultSortingMethod || ideaDefaultSortMethodFallback\n      }\n    >\n      {render}\n    </GetIdeas>\n  ),\n  project: ({ params, render }) => (\n    <GetProject projectSlug={params.slug}>{render}</GetProject>\n  ),\n  ideaCustomFieldsSchemas: ({ project, render }) => {\n    return (\n      <GetIdeaCustomFieldsSchemas\n        projectId={!isNilOrError(project) ? project.id : null}\n      >\n        {render}\n      </GetIdeaCustomFieldsSchemas>\n    );\n  },\n});\n\nconst WithoutFiltersSidebarWithHoCs = withTheme(\n  injectIntl(WithoutFiltersSidebar)\n);\n\nexport default withRouter((inputProps: InputProps & WithRouterProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <WithoutFiltersSidebarWithHoCs {...inputProps} {...dataProps} />\n    )}\n  </Data>\n));\n","import useIdeaCustomFieldsSchemas from 'hooks/useIdeaCustomFieldsSchemas';\nimport { IIdeaFormSchemas } from 'services/ideaCustomFieldsSchemas';\n\nexport type GetIdeaCustomFieldsSchemasChildProps =\n  | IIdeaFormSchemas\n  | undefined\n  | null\n  | Error;\n\ntype children = (\n  renderProps: GetIdeaCustomFieldsSchemasChildProps\n) => JSX.Element | null;\n\ninterface Props {\n  projectId: string | null;\n  children?: children;\n}\n\nexport default (props: Props) => {\n  const ideaCustomFieldsSchema = useIdeaCustomFieldsSchemas({\n    projectId: props.projectId,\n  });\n  return (props.children as children)(ideaCustomFieldsSchema);\n};\n"],"sourceRoot":""}