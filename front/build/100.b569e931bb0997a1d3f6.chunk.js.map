{"version":3,"sources":["webpack:///./app/components/PageForm/messages.js","webpack:///./app/containers/Admin/settings/pages/messages.ts","webpack:///./app/containers/Admin/settings/pages/PageEditor.tsx","webpack:///./app/containers/Admin/settings/pages/index.tsx","webpack:///./app/components/UI/QuillEditor/FormikQuillMultiloc.tsx","webpack:///./app/resources/GetResourceFileObjects.tsx","webpack:///./app/components/PageForm/index.tsx","webpack:///./app/components/UI/FormikInput/index.tsx"],"names":["defineMessages","pageTitle","id","defaultMessage","pageSlug","editContent","dontChange","fileUploadLabel","fileUploadLabelTooltip","titlePages","subtitlePages","titleLabel","buttonSave","buttonSuccess","messageSuccess","messageError","information","faq","EditorWrapper","styled","div","DeployIcon","Icon","colors","adminSecondaryTextColor","Toggle","fontSizes","base","adminTextColor","EditionForm","PageEditor","props","setState","expanded","page","remotePageFiles","slug","initialValues","isNilOrError","title_multiloc","en","body_multiloc","attributes","values","local_page_files","localPageFiles","pageId","filesToAdd","filesToAddPromises","Array","isArray","filter","localPageFile","some","remotePageFile","filename","length","map","fileToAdd","addPageFile","base64","name","filesToRemove","filesToRemovePromises","fileToRemove","deletePageFile","setSubmitting","setErrors","setStatus","resetForm","undefined","fieldValues","getFilesToAddPromises","getFilesToRemovePromises","filePromises","createPage","updatePage","Promise","all","setTimeout","isCLErrorJSON","apiErrors","json","errors","state","pageFiles","pageFilesToRemove","this","className","onClick","toggleDeploy","messages","FormattedMessage","in","timeout","mountOnEnter","unmountOnExit","enter","exit","classNames","Formik","enableReinitialize","validateOnChange","validateOnBlur","onSubmit","handleSubmit","validate","PageForm","mode","hideTitle","PureComponent","Data","adopt","render","resourceId","resourceType","withRouter","inputProps","dataProps","AdminSettingsPages","SectionTitle","SectionDescription","LEGAL_PAGES_ALLOWED_TO_EDIT","key","FormikQuillMultiloc","newValue","form","setFieldValue","field","setFieldTouched","valueMultiloc","value","onChange","handleOnChange","onBlur","handleOnBlur","GetResourceFileObjects","files","resetOnChange","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","tap","isString","switchMap","streamFn","projectFilesStream","phaseFilesStream","eventFilesStream","pageFilesStream","ideaFilesStream","initiativeFilesStream","observable","data","combineLatest","file","convertUrlToUploadFileObservable","url","of","subscribe","forEach","subscription","unsubscribe","children","React","Component","StyledSection","Section","label","fieldName","withCTAButton","onFileAdd","handlePageFileOnAdd","onFileRemove","handlePageFileOnRemove","isSubmitting","isValid","touched","status","Form","SectionField","Field","component","FormikInputMultilocWithLocaleSwitcher","renderQuill","Label","FormikInput","IconTooltip","content","renderFileUploader","every","isEmpty","error","_locale","Input"],"mappings":"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","file":"100.b569e931bb0997a1d3f6.chunk.js","sourcesContent":["/*\n * Components.PagesForm Messages\n *\n * This contains all the text for the Pages Form component.\n */\n\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  pageTitle: {\n    id: 'app.components.PagesForm.pageTitle',\n    defaultMessage: 'Title',\n  },\n  pageSlug: {\n    id: 'app.components.PagesForm.pageSlug',\n    defaultMessage: 'Slug',\n  },\n  editContent: {\n    id: 'app.components.PagesForm.editContent',\n    defaultMessage: 'Content',\n  },\n  dontChange: {\n    id: 'app.components.PagesForm.dontChange',\n    defaultMessage:\n      \"Don't change this! (unless you really know what you're doing)\",\n  },\n  fileUploadLabel: {\n    id: 'app.components.PagesForm.fileUploadLabel',\n    defaultMessage: 'Add files to this page',\n  },\n  fileUploadLabelTooltip: {\n    id: 'app.components.PagesForm.fileUploadLabelTooltip',\n    defaultMessage:\n      'Files should not be larger than 50Mb. Added files will be shown on the bottom of this page.',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  titlePages: {\n    id: 'app.containers.AdminPage.PagesEdition.titlePages',\n    defaultMessage: 'Legal and About pages',\n  },\n  subtitlePages: {\n    id: 'app.containers.AdminPage.PagesEdition.subtitlePages',\n    defaultMessage:\n      'Personalise the general ‘About’ page by adding titles, images, videos, lists, hyperlinks. You can change the content whenever you like.',\n  },\n  titleLabel: {\n    id: 'app.containers.AdminPage.PagesEdition.titleLabel',\n    defaultMessage: 'Page Title',\n  },\n  buttonSave: {\n    id: 'app.containers.AdminPage.PagesEdition.buttonSave',\n    defaultMessage: 'Save',\n  },\n  buttonSuccess: {\n    id: 'app.containers.AdminPage.PagesEdition.buttonSuccess',\n    defaultMessage: 'Saved',\n  },\n  messageSuccess: {\n    id: 'app.containers.AdminPage.PagesEdition.messageSuccess',\n    defaultMessage: 'Your page has been saved successfully',\n  },\n  messageError: {\n    id: 'app.containers.AdminPage.PagesEdition.messageError',\n    defaultMessage: 'There was an error saving your page',\n  },\n  information: {\n    id: 'app.containers.AdminPage.PagesEdition.information',\n    defaultMessage: 'Information',\n  },\n  fileUploadLabel: {\n    id: 'app.containers.AdminPage.PagesEdition.fileUploadLabel',\n    defaultMessage: 'Add files to the About page',\n  },\n  'terms-and-conditions': {\n    id: 'app.containers.AdminPage.PagesEdition.terms-and-conditions',\n    defaultMessage: 'Terms and Conditions',\n  },\n  'privacy-policy': {\n    id: 'app.containers.AdminPage.PagesEdition.privacy-policy',\n    defaultMessage: 'Privacy Policy',\n  },\n  'cookie-policy': {\n    id: 'app.containers.AdminPage.PagesEdition.cookie-policy',\n    defaultMessage: 'Cookie Policy',\n  },\n  faq: {\n    id: 'app.containers.AdminPage.PagesEdition.faq',\n    defaultMessage: 'Frequently Asked Questions (FAQ)',\n  },\n});\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport { Formik, FormikProps } from 'formik';\nimport { adopt } from 'react-adopt';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// Components\nimport { Icon } from 'cl2-component-library';\nimport PageForm, { FormValues } from 'components/PageForm';\n\n// Services\nimport { createPage, updatePage } from 'services/pages';\nimport { addPageFile, deletePageFile } from 'services/pageFiles';\n\n// Resources\nimport GetPage, { GetPageChildProps } from 'resources/GetPage';\nimport GetResourceFileObjects, {\n  GetResourceFileObjectsChildProps,\n} from 'resources/GetResourceFileObjects';\n\n// Utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// Animations\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\n// Styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// Typings\nimport { CLErrorsJSON, UploadFile } from 'typings';\nimport { isCLErrorJSON } from 'utils/errorUtils';\n\nconst timeout = 350;\n\nconst EditorWrapper = styled.div`\n  margin-bottom: 35px;\n\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n\nconst DeployIcon = styled(Icon)`\n  height: 12px;\n  width: 8px;\n  fill: ${colors.adminSecondaryTextColor};\n  margin-right: 12px;\n  transition: transform 200ms ease-out;\n  transform: rotate(0deg);\n`;\n\nconst Toggle = styled.div`\n  color: ${colors.adminSecondaryTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  user-select: none;\n\n  &:hover,\n  &.deployed {\n    color: ${colors.adminTextColor};\n\n    ${DeployIcon} {\n      fill: ${colors.adminTextColor};\n    }\n  }\n\n  &.deployed {\n    ${DeployIcon} {\n      transform: rotate(90deg);\n    }\n  }\n`;\n\nconst EditionForm = styled.div`\n  overflow: hidden;\n  transition: all 350ms cubic-bezier(0.165, 0.84, 0.44, 1);\n  margin-top: 15px;\n  max-width: 830px;\n\n  &.page-enter {\n    max-height: 0px;\n\n    &.page-enter-active {\n      max-height: 1000vh;\n    }\n  }\n\n  &.page-exit {\n    max-height: 1000vh;\n\n    &.page-exit-active {\n      max-height: 0px;\n    }\n  }\n`;\n\ninterface DataProps {\n  page: GetPageChildProps;\n  remotePageFiles: GetResourceFileObjectsChildProps;\n}\n\ninterface InputProps {\n  className?: string;\n  slug: string;\n}\n\ninterface Props extends DataProps, InputProps {}\n\ninterface State {\n  expanded: boolean;\n  pageFiles: UploadFile[];\n  pageFilesToRemove: UploadFile[];\n}\n\nclass PageEditor extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      pageFiles: [],\n      pageFilesToRemove: [],\n    };\n  }\n\n  toggleDeploy = () => {\n    this.setState(({ expanded }) => ({ expanded: !expanded }));\n  };\n\n  initialValues = () => {\n    const { page, remotePageFiles, slug } = this.props;\n    let initialValues = {};\n\n    if (!isNilOrError(page)) {\n      initialValues = {\n        title_multiloc: page.attributes.title_multiloc,\n        slug: page.attributes.slug,\n        body_multiloc: page.attributes.body_multiloc,\n      };\n    } else {\n      initialValues = {\n        title_multiloc: {\n          en: slug,\n        },\n        body_multiloc: {},\n      };\n    }\n\n    if (!isNilOrError(remotePageFiles)) {\n      initialValues['local_page_files'] = remotePageFiles;\n    } else {\n      initialValues['local_page_files'] = [];\n    }\n\n    return initialValues;\n  };\n\n  getFilesToAddPromises = (values: FormValues) => {\n    const { local_page_files } = values;\n    const localPageFiles = [...local_page_files];\n    const { page, remotePageFiles } = this.props;\n    const pageId = !isNilOrError(page) ? page.id : null;\n    let filesToAdd = localPageFiles;\n    let filesToAddPromises: Promise<any>[] = [];\n\n    if (!isNilOrError(localPageFiles) && Array.isArray(remotePageFiles)) {\n      // localPageFiles = local state of files\n      // This means those previously uploaded + files that have been added/removed\n      // remotePageFiles = last saved state of files (remote)\n\n      filesToAdd = localPageFiles.filter((localPageFile) => {\n        return !remotePageFiles.some((remotePageFile) =>\n          remotePageFile\n            ? remotePageFile.filename === localPageFile.filename\n            : true\n        );\n      });\n    }\n\n    if (pageId && !isNilOrError(filesToAdd) && filesToAdd.length > 0) {\n      filesToAddPromises = filesToAdd.map((fileToAdd: any) =>\n        addPageFile(pageId as string, fileToAdd.base64, fileToAdd.name)\n      );\n    }\n\n    return filesToAddPromises;\n  };\n\n  getFilesToRemovePromises = (values: FormValues) => {\n    const { local_page_files } = values;\n    const localPageFiles = [...local_page_files];\n    const { page, remotePageFiles } = this.props;\n    const pageId = !isNilOrError(page) ? page.id : null;\n    let filesToRemove = remotePageFiles;\n    let filesToRemovePromises: Promise<any>[] = [];\n\n    if (!isNilOrError(localPageFiles) && Array.isArray(remotePageFiles)) {\n      // localPageFiles = local state of files\n      // This means those previously uploaded + files that have been added/removed\n      // remotePageFiles = last saved state of files (remote)\n\n      filesToRemove = remotePageFiles.filter((remotePageFile) => {\n        return !localPageFiles.some((localPageFile) =>\n          remotePageFile\n            ? localPageFile.filename === remotePageFile.filename\n            : true\n        );\n      });\n    }\n\n    if (pageId && !isNilOrError(filesToRemove) && filesToRemove.length > 0) {\n      filesToRemovePromises = filesToRemove.map((fileToRemove: any) =>\n        deletePageFile(pageId as string, fileToRemove.id)\n      );\n    }\n\n    return filesToRemovePromises;\n  };\n\n  handleSubmit = async (\n    values: FormValues,\n    { setSubmitting, setErrors, setStatus, resetForm }\n  ) => {\n    const { page } = this.props;\n\n    if (page !== undefined) {\n      try {\n        const { slug, title_multiloc, body_multiloc } = values;\n        const fieldValues = { slug, title_multiloc, body_multiloc };\n        const filesToAddPromises = this.getFilesToAddPromises(values);\n        const filesToRemovePromises = this.getFilesToRemovePromises(values);\n        const filePromises = [...filesToAddPromises, ...filesToRemovePromises];\n        await (isNilOrError(page)\n          ? createPage(fieldValues)\n          : updatePage(page.id, fieldValues));\n        await Promise.all(filePromises);\n        setTimeout(() => {\n          resetForm();\n          setStatus('success');\n        }, 50);\n      } catch (errorResponse) {\n        if (isCLErrorJSON(errorResponse)) {\n          const apiErrors = (errorResponse as CLErrorsJSON).json.errors;\n          setErrors(apiErrors);\n        } else {\n          setStatus('error');\n        }\n        setSubmitting(false);\n      }\n    }\n  };\n\n  render() {\n    const { expanded } = this.state;\n    const { className, slug, page } = this.props;\n\n    return (\n      <EditorWrapper className={`${className} e2e-page-editor editor-${slug}`}>\n        <Toggle\n          onClick={this.toggleDeploy}\n          className={`${expanded && 'deployed'}`}\n        >\n          <DeployIcon name=\"chevron-right\" />\n          {messages[slug] ? <FormattedMessage {...messages[slug]} /> : slug}\n        </Toggle>\n\n        <CSSTransition\n          in={expanded}\n          timeout={timeout}\n          mountOnEnter={true}\n          unmountOnExit={true}\n          enter={true}\n          exit={true}\n          classNames=\"page\"\n        >\n          <EditionForm>\n            {page !== undefined && (\n              <Formik\n                initialValues={this.initialValues() as any}\n                enableReinitialize={true}\n                validateOnChange={false}\n                validateOnBlur={false}\n                onSubmit={this.handleSubmit}\n                validate={PageForm.validate}\n              >\n                {(props: FormikProps<FormValues>) => {\n                  return (\n                    <PageForm\n                      {...props}\n                      slug={slug}\n                      mode=\"simple\"\n                      hideTitle={slug !== 'information'}\n                    />\n                  );\n                }}\n              </Formik>\n            )}\n          </EditionForm>\n        </CSSTransition>\n      </EditorWrapper>\n    );\n  }\n}\n\nconst Data = adopt<DataProps, InputProps & WithRouterProps>({\n  page: ({ slug, render }) => <GetPage slug={slug}>{render}</GetPage>,\n  remotePageFiles: ({ page, render }) => (\n    <GetResourceFileObjects\n      resourceId={!isNilOrError(page) ? page.id : null}\n      resourceType=\"page\"\n    >\n      {render}\n    </GetResourceFileObjects>\n  ),\n});\n\nexport default withRouter((inputProps: InputProps & WithRouterProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <PageEditor {...inputProps} {...dataProps} />}\n  </Data>\n));\n","import React, { PureComponent } from 'react';\nimport { LEGAL_PAGES_ALLOWED_TO_EDIT } from 'services/pages';\nimport PageEditor from './PageEditor';\nimport { SectionTitle, SectionDescription } from 'components/admin/Section';\n\n// intl\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nexport default class AdminSettingsPages extends PureComponent {\n  render() {\n    return (\n      <>\n        <SectionTitle>\n          <FormattedMessage {...messages.titlePages} />\n        </SectionTitle>\n        <SectionDescription>\n          <FormattedMessage {...messages.subtitlePages} />\n        </SectionDescription>\n        {LEGAL_PAGES_ALLOWED_TO_EDIT.map((slug) => (\n          <PageEditor key={slug} slug={slug} />\n        ))}\n      </>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { FieldProps } from 'formik';\n\n// components\nimport QuillMultilocWithLocaleSwitcher, {\n  Props,\n} from 'components/UI/QuillEditor/QuillMultilocWithLocaleSwitcher';\n\n// typings\nimport { Multiloc } from 'typings';\n\nexport default class FormikQuillMultiloc extends PureComponent<\n  FieldProps & Props\n> {\n  handleOnChange = (newValue: Multiloc) => {\n    this.props.form.setFieldValue(this.props.field.name, newValue);\n    this.props.form.setStatus('enabled');\n  };\n\n  handleOnBlur = () => {\n    this.props.form.setFieldTouched(this.props.field.name);\n  };\n\n  render() {\n    const { field } = this.props;\n\n    return (\n      <QuillMultilocWithLocaleSwitcher\n        {...this.props}\n        valueMultiloc={field.value}\n        onChange={this.handleOnChange}\n        onBlur={this.handleOnBlur}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport {\n  Subscription,\n  BehaviorSubject,\n  combineLatest,\n  of,\n  Observable,\n} from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { projectFilesStream, IProjectFiles } from 'services/projectFiles';\nimport { phaseFilesStream, IPhaseFiles } from 'services/phaseFiles';\nimport { pageFilesStream, IPageFiles } from 'services/pageFiles';\nimport { eventFilesStream, IEventFiles } from 'services/eventFiles';\nimport { ideaFilesStream, IIdeaFiles } from 'services/ideaFiles';\nimport {\n  initiativeFilesStream,\n  IInitiativeFiles,\n} from 'services/initiativeFiles';\nimport { convertUrlToUploadFileObservable } from 'utils/fileTools';\nimport { UploadFile } from 'typings';\n\n// Converted file objects (to JS objects of type File).\n// Useful when you combining local files and remote files,\n// so you don't have to convert (file uploader)\n\ninterface InputProps {\n  resetOnChange?: boolean;\n  resourceType: 'project' | 'phase' | 'event' | 'page' | 'idea' | 'initiative';\n  resourceId: string | null;\n}\n\ntype Children = (\n  renderProps: GetResourceFileObjectsChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: Children;\n}\n\ninterface State {\n  files: UploadFile[] | undefined | null | Error;\n}\n\nexport type GetResourceFileObjectsChildProps = State['files'];\n\nexport default class GetResourceFileObjects extends React.Component<\n  Props,\n  State\n> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  public static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      files: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ resourceId, resourceType });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ files: undefined })),\n          filter(({ resourceId }) => isString(resourceId)),\n          switchMap(\n            ({\n              resourceId,\n              resourceType,\n            }: {\n              resourceId: string;\n              resourceType: InputProps['resourceType'];\n            }) => {\n              let streamFn;\n              if (resourceType === 'project') {\n                streamFn = projectFilesStream;\n              }\n              if (resourceType === 'phase') {\n                streamFn = phaseFilesStream;\n              }\n              if (resourceType === 'event') {\n                streamFn = eventFilesStream;\n              }\n              if (resourceType === 'page') {\n                streamFn = pageFilesStream;\n              }\n              if (resourceType === 'idea') {\n                streamFn = ideaFilesStream;\n              }\n              if (resourceType === 'initiative') {\n                streamFn = initiativeFilesStream;\n              }\n\n              return streamFn(resourceId).observable as Observable<\n                | IProjectFiles\n                | IPhaseFiles\n                | IEventFiles\n                | IPageFiles\n                | IIdeaFiles\n                | IInitiativeFiles\n                | null\n              >;\n            }\n          ),\n          switchMap((files) => {\n            if (files && files.data && files.data.length > 0) {\n              return combineLatest(\n                files.data.map((file) =>\n                  convertUrlToUploadFileObservable(\n                    file.attributes.file.url,\n                    file.id,\n                    file.attributes.name\n                  )\n                )\n              );\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((files) => {\n          this.setState({\n            files: files\n              ? (files.filter((file) => !isNilOrError(file)) as UploadFile[])\n              : null,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n    this.inputProps$.next({ resourceId, resourceType, resetOnChange });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { files } = this.state;\n    return (children as Children)(files);\n  }\n}\n","import React from 'react';\nimport { isEmpty, values as getValues, every } from 'lodash-es';\nimport { Form, Field, InjectedFormikProps, FormikErrors } from 'formik';\nimport styled from 'styled-components';\n\n// Components\nimport FormikInput from 'components/UI/FormikInput';\nimport FormikInputMultilocWithLocaleSwitcher from 'components/UI/FormikInputMultilocWithLocaleSwitcher';\nimport FormikQuillMultiloc from 'components/UI/QuillEditor/FormikQuillMultiloc';\nimport FormikSubmitWrapper from 'components/admin/FormikSubmitWrapper';\nimport { Section, SectionField } from 'components/admin/Section';\nimport ErrorComponent from 'components/UI/Error';\nimport { Label, IconTooltip } from 'cl2-component-library';\nimport Warning from 'components/UI/Warning';\nimport FileUploader from 'components/UI/FileUploader';\n\n// I18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// Typings\nimport { Multiloc, UploadFile } from 'typings';\n\nconst StyledSection = styled(Section)`\n  margin-bottom: 30px;\n`;\n\nexport interface FormValues {\n  title_multiloc: Multiloc;\n  body_multiloc: Multiloc;\n  local_page_files: UploadFile[] | [];\n  slug?: any;\n}\n\nexport interface Props {\n  slug?: string;\n  mode: 'simple' | 'edit';\n  hideTitle?: boolean;\n  pageId?: string;\n}\n\nclass PageForm extends React.Component<InjectedFormikProps<Props, FormValues>> {\n  public static validate = (values: FormValues): FormikErrors<FormValues> => {\n    const errors: FormikErrors<FormValues> = {};\n\n    if (every(getValues(values.title_multiloc), isEmpty)) {\n      errors.title_multiloc = [{ error: 'blank' }] as any;\n    }\n\n    if (every(getValues(values.body_multiloc), isEmpty)) {\n      errors.body_multiloc = [{ error: 'blank' }] as any;\n    }\n\n    return errors;\n  };\n\n  renderQuill = (props) => {\n    return (\n      <FormikQuillMultiloc\n        label={<FormattedMessage {...messages.editContent} />}\n        id={`${this.props.slug}-${props.fieldName}`}\n        {...props}\n        withCTAButton\n      />\n    );\n  };\n\n  renderFileUploader = (values: FormValues) => () => {\n    const { local_page_files } = values;\n\n    return (\n      <FileUploader\n        onFileAdd={this.handlePageFileOnAdd}\n        onFileRemove={this.handlePageFileOnRemove}\n        files={local_page_files}\n      />\n    );\n  };\n\n  handlePageFileOnAdd = (fileToAdd: UploadFile) => {\n    const { setFieldValue, setStatus, values } = this.props;\n    setFieldValue('local_page_files', [...values.local_page_files, fileToAdd]);\n    setStatus('enabled');\n  };\n\n  handlePageFileOnRemove = (fileToRemove: UploadFile) => {\n    const { setFieldValue, setStatus, values } = this.props;\n    const localPageFiles = [...values.local_page_files];\n    const filteredLocalPageFiles = localPageFiles.filter(\n      (file) => file !== fileToRemove\n    );\n    setFieldValue('local_page_files', filteredLocalPageFiles);\n    setStatus('enabled');\n  };\n\n  render() {\n    const {\n      isSubmitting,\n      errors,\n      isValid,\n      touched,\n      mode,\n      hideTitle,\n      values,\n      status,\n    } = this.props;\n    return (\n      <Form>\n        <StyledSection>\n          {!hideTitle && (\n            <SectionField>\n              <Field\n                name=\"title_multiloc\"\n                component={FormikInputMultilocWithLocaleSwitcher}\n                label={<FormattedMessage {...messages.pageTitle} />}\n              />\n              {touched.title_multiloc && (\n                <ErrorComponent\n                  fieldName=\"title_multiloc\"\n                  apiErrors={errors.title_multiloc as any}\n                />\n              )}\n            </SectionField>\n          )}\n\n          <SectionField className=\"fullWidth\">\n            <Field name=\"body_multiloc\" render={this.renderQuill} />\n            {touched.body_multiloc && (\n              <ErrorComponent\n                fieldName=\"body_multiloc\"\n                apiErrors={errors.body_multiloc as any}\n              />\n            )}\n          </SectionField>\n\n          {mode === 'edit' && (\n            <SectionField>\n              <Label>\n                <FormattedMessage {...messages.pageSlug} />\n              </Label>\n              <Field\n                name=\"slug\"\n                component={FormikInput}\n                label={<FormattedMessage {...messages.pageSlug} />}\n              />\n              {touched.slug && (\n                <ErrorComponent\n                  fieldName=\"slug\"\n                  apiErrors={errors.slug as any}\n                />\n              )}\n              <Warning>\n                <FormattedMessage {...messages.dontChange} />\n              </Warning>\n            </SectionField>\n          )}\n          <SectionField>\n            <Label>\n              <FormattedMessage {...messages.fileUploadLabel} />\n              <IconTooltip\n                content={\n                  <FormattedMessage {...messages.fileUploadLabelTooltip} />\n                }\n              />\n            </Label>\n            <Field name=\"page_files\" render={this.renderFileUploader(values)} />\n          </SectionField>\n        </StyledSection>\n\n        <FormikSubmitWrapper {...{ isValid, isSubmitting, status, touched }} />\n      </Form>\n    );\n  }\n}\n\nexport default PageForm;\n","import React, { PureComponent } from 'react';\nimport { Input, InputProps } from 'cl2-component-library';\nimport { FieldProps } from 'formik';\nimport { Locale } from 'typings';\n\nclass FormikInput extends PureComponent<FieldProps & InputProps> {\n  handleOnChange = (newValue: string, _locale: Locale | undefined) => {\n    this.props.form.setFieldValue(this.props.field.name, newValue);\n  };\n\n  render() {\n    const { name, value } = this.props.field;\n    return (\n      <Input\n        {...this.props}\n        name={name}\n        value={value}\n        onChange={this.handleOnChange}\n      />\n    );\n  }\n}\n\nexport default FormikInput;\n"],"sourceRoot":""}