{"version":3,"sources":["webpack:///./app/containers/Admin/projects/all/index.tsx"],"names":["ModeratorProjectList","React","lazy","AdminProjectList","Container","styled","div","CreateAndEditProjectsContainer","CreateProjectWrapper","ListsContainer","ListHeader","memo","className","authUser","userIsAdmin","isNilOrError","isAdmin","data","useState","containerOutletRendered","setContainerOutletRendered","PageTitle","FormattedMessage","messages","overviewPageTitle","SectionDescription","item","type","path","action","overviewPageSubtitle","No","overviewPageSubtitleModerator","id","Suspense","fallback","Spinner","onRender","hasRendered"],"mappings":"iSAAA,M,ybAAA,YACA,YAGA,eAGA,YACA,eAGA,YAGA,eACA,eACA,YACA,eACA,YACA,eAQA,e,+HANA,IAAMA,EAAuBC,UAAMC,MAAK,kBACtC,0CAEIC,EAAmBF,UAAMC,MAAK,kBAAM,0CAKpCE,EAAYC,UAAOC,IAAV,qEAAGD,CAAH,MAETE,EAAiCF,UAAOC,IAAV,0FAAGD,CAAH,6BAM9BG,EAAuBH,UAAOC,IAAV,gFAAGD,CAAH,yBAIpBI,EAAiBJ,UAAOC,IAAV,0EAAGD,CAAH,sBAIPK,EAAaL,UAAOC,IAAV,sEAAGD,CAAH,2G,eAevB,I,GAA0B,IAAAM,OAAK,YAA0B,IAAvBC,EAAuB,EAAvBA,UAC1BC,GAAW,eACXC,IAAe,IAAAC,cAAaF,KAC9B,IAAAG,SAAQ,CAAEC,KAAMJ,IAEpB,GAA8D,IAAAK,WAAS,GAAvE,qBAAOC,EAAP,KAAgCC,EAAhC,KAKA,OACE,wBAAChB,EAAD,CAAWQ,UAAWA,GACpB,wBAACL,EAAD,CACEK,UAAWO,EAA0B,SAAW,IAEhD,wBAAC,EAAAE,UAAD,KACE,wBAAC,EAAAC,iBAAqBC,UAASC,oBAGjC,wBAAC,EAAAC,mBAAD,KACE,wBAAC,UAAD,CACEC,KAAM,CAAEC,KAAM,QAASC,KAAM,uBAC7BC,OAAO,UAEP,wBAAC,EAAAP,iBAAqBC,UAASO,sBAC/B,wBAAC,UAAcC,GAAf,KACE,wBAAC,EAAAT,iBAAqBC,UAASS,kCAKrC,wBAACxB,EAAD,KACGM,EACC,wBAAC,UAAD,MAEA,wBAAC,UAAD,CAAQmB,GAAG,iEAIf,wBAAC,UAAD,KACE,wBAACxB,EAAD,KACE,wBAAC,EAAAyB,SAAD,CAAUC,SAAU,wBAAC,EAAAC,QAAD,OACjBtB,EAAc,wBAACX,EAAD,MAAuB,wBAACH,EAAD,UAK9C,wBAAC,UAAD,CACEiC,GAAG,8CACHI,SA3CgC,SAACC,GACrClB,EAA2BkB,U","file":"179.6ade1f3bcea2a0034db5.chunk.js","sourcesContent":["import React, { memo, Suspense, useState } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// resources\nimport useAuthUser from 'hooks/useAuthUser';\n\n// localisation\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// utils\nimport { isAdmin } from 'services/permissions/roles';\n\n// components\nimport CreateProject from './CreateProject';\nimport PageWrapper from 'components/admin/PageWrapper';\nimport { PageTitle, SectionDescription } from 'components/admin/Section';\nimport HasPermission from 'components/HasPermission';\nimport { Spinner } from 'cl2-component-library';\nimport Outlet from 'components/Outlet';\n\nconst ModeratorProjectList = React.lazy(() =>\n  import('./Lists/ModeratorProjectList')\n);\nconst AdminProjectList = React.lazy(() => import('./Lists/AdminProjectList'));\n\n// style\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\nconst CreateAndEditProjectsContainer = styled.div`\n  &.hidden {\n    display: none;\n  }\n`;\n\nconst CreateProjectWrapper = styled.div`\n  margin-bottom: 18px;\n`;\n\nconst ListsContainer = styled.div`\n  min-height: 80vh;\n`;\n\nexport const ListHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  margin-bottom: 25px;\n\n  & ~ & {\n    margin-top: 70px;\n  }\n`;\n\nexport interface Props {\n  className?: string;\n}\n\nconst AdminProjectsList = memo(({ className }: Props) => {\n  const authUser = useAuthUser();\n  const userIsAdmin = !isNilOrError(authUser)\n    ? isAdmin({ data: authUser })\n    : false;\n  const [containerOutletRendered, setContainerOutletRendered] = useState(false);\n  const handleContainerOutletOnRender = (hasRendered: boolean) => {\n    setContainerOutletRendered(hasRendered);\n  };\n\n  return (\n    <Container className={className}>\n      <CreateAndEditProjectsContainer\n        className={containerOutletRendered ? 'hidden' : ''}\n      >\n        <PageTitle>\n          <FormattedMessage {...messages.overviewPageTitle} />\n        </PageTitle>\n\n        <SectionDescription>\n          <HasPermission\n            item={{ type: 'route', path: '/admin/projects/new' }}\n            action=\"access\"\n          >\n            <FormattedMessage {...messages.overviewPageSubtitle} />\n            <HasPermission.No>\n              <FormattedMessage {...messages.overviewPageSubtitleModerator} />\n            </HasPermission.No>\n          </HasPermission>\n        </SectionDescription>\n\n        <CreateProjectWrapper>\n          {userIsAdmin ? (\n            <CreateProject />\n          ) : (\n            <Outlet id=\"app.containers.AdminPage.projects.all.createProjectNotAdmin\" />\n          )}\n        </CreateProjectWrapper>\n\n        <PageWrapper>\n          <ListsContainer>\n            <Suspense fallback={<Spinner />}>\n              {userIsAdmin ? <AdminProjectList /> : <ModeratorProjectList />}\n            </Suspense>\n          </ListsContainer>\n        </PageWrapper>\n      </CreateAndEditProjectsContainer>\n      <Outlet\n        id=\"app.containers.Admin.projects.all.container\"\n        onRender={handleContainerOutletOnRender}\n      />\n    </Container>\n  );\n});\n\nexport default AdminProjectsList;\n"],"sourceRoot":""}