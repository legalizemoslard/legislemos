{"version":3,"sources":["webpack:///./app/components/admin/DateRangePicker/index.tsx","webpack:///./app/containers/Admin/dashboard/tracks.ts","webpack:///./app/components/admin/DateRangePicker/messages.ts","webpack:///./app/services/stats.ts","webpack:///./app/containers/Admin/dashboard/components/ChartFilters.tsx","webpack:///./app/containers/Admin/dashboard/components/TimeControl.tsx"],"names":["StylingWrapper","styled","div","props","theme","borderRadius","colors","border","hoveredBorder","text","fontSizes","base","OurDateRangePicker","focusedInput","setState","state","className","this","DateRangePicker","omit","startDateId","endDateId","onFocusChange","handleFocusChange","startDatePlaceholderText","intl","formatMessage","messages","startDatePlaceholder","endDatePlaceholderText","endDatePlaceholder","isOutsideRange","handleIsOutsideRange","PureComponent","injectIntl","clickedSummaryTab","name","clickedUsersTab","clickedAcquisitionTab","filteredOnGroup","filteredOnProject","filteredOnTopic","choseResource","defineMessages","id","defaultMessage","streamParams","streams","get","apiEndpoint","userId","API_PATH","ideasByStatusXlsxEndpoint","ideasByTimeXlsxEndpoint","ideasByTimeCumulativeXlsxEndpoint","ideasByTopicXlsxEndpoint","ideasByProjectXlsxEndpoint","userXlsxEndpoint","usersByTimeXlsxEndpoint","usersByTimeCumulativeXlsxEndpoint","activeUsersByTimeXlsxEndpoint","activeUsersByTimeCumulativeXlsxEndpoint","commentsByTimeCumulativeXlsxEndpoint","commentsByTopicXlsxEndpoint","commentsByProjectXlsxEndpoint","votesByTimeXlsxEndpoint","votesByTopicXlsxEndpoint","votesByProjectXlsxEndpoint","Container","FilterContainer","ChartFilters","currentProjectFilter","currentGroupFilter","currentTopicFilter","projectFilterOptions","groupFilterOptions","topicFilterOptions","onProjectFilter","onGroupFilter","onTopicFilter","HiddenLabel","FormattedMessage","hiddenLabelProjectFilter","Select","onChange","value","options","hiddenLabelGroupFilter","hiddenLabelTopicFilter","DropdownContainer","StyledButton","Button","DropdownItemIcon","Icon","label","DropdownListItem","button","clDropdownHoverBackground","TimeControl","allTime","endAt","startAt","previousWeek","subtract","previous30Days","previous90Days","previousYear","dropdownOpened","startDate","endDate","startAtMoment","endAtMoment","presets","find","preset","undefined","isSame","activePreset","findActivePreset","buttonStyle","onClick","toggleDropdown","padding","customDateRange","Dropdown","width","top","opened","onClickOutside","content","map","key","handlePresetClick","role","onDatesChange","handleDatesChange"],"mappings":"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","file":"29.c0f8cc2ddf51f3d9d377.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Omit } from 'typings';\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker, DateRangePickerShape } from 'react-dates';\n\n// styles\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\n\n// i18n\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport { omit } from 'lodash-es';\n\ninterface Props\n  extends Omit<\n    DateRangePickerShape,\n    'focusedInput' | 'onFocusChange' | 'renderMonthText'\n  > {\n  className?: string;\n}\n\ninterface State {\n  focusedInput: 'startDate' | 'endDate' | null;\n}\n\nconst StylingWrapper = styled.div`\n  .DateRangePickerInput {\n    border-radius: ${(props: any) => props.theme.borderRadius};\n    border: solid 1px ${colors.border};\n\n    &:hover {\n      border-color: ${colors.hoveredBorder};\n    }\n\n    .DateInput,\n    .DateInput_input {\n      color: ${colors.text};\n      font-size: ${fontSizes.base}px;\n      line-height: normal;\n      font-weight: 400;\n      background: transparent;\n    }\n  }\n`;\n\n/** Light wrapper around react-dates DateRangePicker that autonomously deals with focusing and styling */\nclass OurDateRangePicker extends PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focusedInput: null,\n    };\n  }\n\n  handleFocusChange = (focusedInput: 'startDate' | 'endDate') => {\n    this.setState({ focusedInput });\n  };\n\n  handleIsOutsideRange = () => {\n    return false;\n  };\n\n  render() {\n    return (\n      <StylingWrapper className={this.props.className}>\n        <DateRangePicker\n          {...omit(this.props, 'intl')}\n          startDateId=\"startAt\"\n          endDateId=\"endAt\"\n          focusedInput={this.state.focusedInput}\n          onFocusChange={this.handleFocusChange}\n          startDatePlaceholderText={this.props.intl.formatMessage(\n            messages.startDatePlaceholder\n          )}\n          endDatePlaceholderText={this.props.intl.formatMessage(\n            messages.endDatePlaceholder\n          )}\n          isOutsideRange={this.handleIsOutsideRange}\n        />\n      </StylingWrapper>\n    );\n  }\n}\n\nexport default injectIntl(OurDateRangePicker);\n","export default {\n  // Dashboard events\n  clickedSummaryTab: {\n    name: 'Clicked Summary Tab',\n  },\n  clickedUsersTab: {\n    name: 'Clicked Users Tab',\n  },\n  clickedAcquisitionTab: {\n    name: 'Clicked Acquisition Tab',\n  },\n  filteredOnGroup: {\n    name: 'Filtered on Group',\n  },\n  filteredOnProject: {\n    name: 'Filtered on Project',\n  },\n  filteredOnTopic: {\n    name: 'Filtered on Topic',\n  },\n  choseResource: {\n    name: 'Changed resource type in select graph',\n  },\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  startDatePlaceholder: {\n    id: 'app.components.admin.DateRangePicker.startDatePlaceholder',\n    defaultMessage: 'Start Date',\n  },\n  endDatePlaceholder: {\n    id: 'app.components.admin.DateRangePicker.endDatePlaceholder',\n    defaultMessage: 'End Date',\n  },\n});\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { Multiloc } from 'typings';\n\nconst apiEndpoint = `${API_PATH}/stats`;\n\nexport type IResourceByTime =\n  | IIdeasByTime\n  | IUsersByTime\n  | ICommentsByTime\n  | IVotesByTime;\n\n// Ideas\nexport interface IIdeasByTime {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n}\nexport interface IIdeasByStatus {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n  idea_status: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n      color: string;\n      ordering: number;\n    };\n  };\n}\n\nexport interface IIdeasByTopic {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n  topics: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IIdeasByProject {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n  projects: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IIdeasCount {\n  count: number;\n}\n\nexport interface ICount {\n  count: number;\n}\n\nexport function ideasByStatusStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasByStatus>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_status`,\n    ...streamParams,\n  });\n}\nexport const ideasByStatusXlsxEndpoint = `${apiEndpoint}/ideas_by_status_as_xlsx`;\n\nexport const ideasByTimeXlsxEndpoint = `${apiEndpoint}/ideas_by_time_as_xlsx`;\n\nexport function ideasByTimeStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasByTime>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const ideasByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/ideas_by_time_cumulative_as_xlsx`;\n\nexport function ideasByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IIdeasByTime>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport const ideasByTopicXlsxEndpoint = `${apiEndpoint}/ideas_by_topic_as_xlsx`;\n\nexport function ideasByTopicStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasByTopic>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_topic`,\n    ...streamParams,\n  });\n}\n\nexport const ideasByProjectXlsxEndpoint = `${apiEndpoint}/ideas_by_project_as_xlsx`;\n\nexport function ideasByProjectStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IIdeasByProject>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_project`,\n    ...streamParams,\n  });\n}\n\nexport function ideasCount(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasCount>({\n    apiEndpoint: `${apiEndpoint}/ideas_count`,\n    ...streamParams,\n  });\n}\n\nexport function ideasCountForUser(userId: string) {\n  return streams.get<ICount>({\n    apiEndpoint: `${API_PATH}/users/${userId}/ideas_count`,\n  });\n}\n\n// Users\n\nexport interface IUsersCount {\n  count: number;\n}\n\nexport interface IUsersByTime {\n  series: {\n    users: {\n      [key: string]: number;\n    };\n  };\n}\nexport interface IUserEngagementScores {\n  data: IUserEngagementScore[];\n}\n\nexport interface IUserEngagementScore {\n  id: string;\n  type: string;\n  attributes: {\n    sum_score: number;\n  };\n  relationships: {\n    user: {\n      data: {\n        id: string;\n        type: 'user';\n      };\n    };\n  };\n}\n\nexport const userXlsxEndpoint = `${apiEndpoint}/users_count_as_xlsx`;\n\nexport function usersCount(streamParams: IStreamParams | null = null) {\n  return streams.get<IUsersCount>({\n    apiEndpoint: `${apiEndpoint}/users_count`,\n    ...streamParams,\n  });\n}\n\nexport const usersByTimeXlsxEndpoint = `${apiEndpoint}/users_by_time_as_xlsx`;\n\nexport function usersByTimeStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/users_by_time`,\n    ...streamParams,\n  });\n}\n\nexport function commentsByTimeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByTime>({\n    apiEndpoint: `${apiEndpoint}/comments_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const usersByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/users_by_time_cumulative_as_xlsx`;\n\nexport function usersByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/users_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport const activeUsersByTimeXlsxEndpoint = `${apiEndpoint}/active_users_by_time_as_xlsx`;\n\nexport function activeUsersByTimeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/active_users_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const activeUsersByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/active_users_by_time_cumulative_as_xlsx`;\n\nexport function activeUsersByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/active_users_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport function userEngagementScoresStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUserEngagementScores>({\n    apiEndpoint: `${apiEndpoint}/users_engagement_scores`,\n    ...streamParams,\n  });\n}\n\n// Comments\nexport interface ICommentsByTime {\n  series: {\n    comments: {\n      [key: string]: number;\n    };\n  };\n}\n\nexport interface ICommentsByTopic {\n  series: {\n    comments: {\n      [key: string]: number;\n    };\n  };\n  topics: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface ICommentsByProject {\n  series: {\n    comments: {\n      [key: string]: number;\n    };\n  };\n  projects: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport const commentsByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/comments_by_time_cumulative_as_xlsx`;\n\nexport function commentsByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByTime>({\n    apiEndpoint: `${apiEndpoint}/comments_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport const commentsByTopicXlsxEndpoint = `${apiEndpoint}/comments_by_topic_as_xlsx`;\n\nexport function commentsByTopicStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByTopic>({\n    apiEndpoint: `${apiEndpoint}/comments_by_topic`,\n    ...streamParams,\n  });\n}\n\nexport const commentsByProjectXlsxEndpoint = `${apiEndpoint}/comments_by_project_as_xlsx`;\n\nexport function commentsByProjectStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByProject>({\n    apiEndpoint: `${apiEndpoint}/comments_by_project`,\n    ...streamParams,\n  });\n}\n\nexport function commentsCountForUser(userId: string) {\n  return streams.get<ICount>({\n    apiEndpoint: `${API_PATH}/users/${userId}/comments_count`,\n  });\n}\n\n// Votes\nexport interface IVotesByTime {\n  series: {\n    up: { [key: string]: number };\n    down: { [key: string]: number };\n    total: { [key: string]: number };\n  };\n}\n\nexport interface IVotesByTopic {\n  series: {\n    votes: {\n      [key: string]: number;\n    };\n  };\n  topics: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IVotesByProject {\n  series: {\n    total: {\n      [key: string]: number;\n    };\n  };\n  projects: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IVotesByTimeCumulative {\n  series: {\n    up: { [key: string]: number };\n    down: { [key: string]: number };\n    total: { [key: string]: number };\n  };\n}\n\nexport function votesByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IVotesByTimeCumulative>({\n    apiEndpoint: `${apiEndpoint}/votes_by_time_cumulative`,\n    ...streamParams,\n  });\n}\nexport const votesByTimeXlsxEndpoint = `${apiEndpoint}/votes_by_time_as_xlsx`;\n\nexport function votesByTimeStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IVotesByTime>({\n    apiEndpoint: `${apiEndpoint}/votes_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const votesByTopicXlsxEndpoint = `${apiEndpoint}/votes_by_topic_as_xlsx`;\n\nexport function votesByTopicStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IVotesByTopic>({\n    apiEndpoint: `${apiEndpoint}/votes_by_topic`,\n    ...streamParams,\n  });\n}\n\nexport const votesByProjectXlsxEndpoint = `${apiEndpoint}/votes_by_project_as_xlsx`;\n\nexport function votesByProjectStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IVotesByProject>({\n    apiEndpoint: `${apiEndpoint}/votes_by_project`,\n    ...streamParams,\n  });\n}\n\nexport interface IInitiativesCount {\n  count: number;\n}\n\nexport function initiativesCount(streamParams: IStreamParams | null = null) {\n  return streams.get<IInitiativesCount>({\n    apiEndpoint: `${apiEndpoint}/initiatives_count`,\n    ...streamParams,\n  });\n}\n\n// -----\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\n// components\nimport { Select } from 'cl2-component-library';\nimport { HiddenLabel } from 'utils/a11y';\n\n// typings\nimport { IOption } from 'typings';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../messages';\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst FilterContainer = styled.div`\n  width: 32%;\n`;\n\ninterface Props {\n  currentProjectFilter?: string | null;\n  currentGroupFilter?: string | null;\n  currentTopicFilter?: string | null;\n\n  projectFilterOptions?: IOption[] | null;\n  groupFilterOptions?: IOption[] | null;\n  topicFilterOptions?: IOption[] | null;\n\n  onProjectFilter?: ((filter: IOption) => void) | null;\n  onGroupFilter?: ((filter: IOption) => void) | null;\n  onTopicFilter?: ((filter: IOption) => void) | null;\n}\n\nexport default class ChartFilters extends PureComponent<Props> {\n  render() {\n    const {\n      currentProjectFilter,\n      currentGroupFilter,\n      currentTopicFilter,\n      projectFilterOptions,\n      groupFilterOptions,\n      topicFilterOptions,\n      onProjectFilter,\n      onGroupFilter,\n      onTopicFilter,\n    } = this.props;\n\n    return (\n      <Container>\n        {projectFilterOptions && onProjectFilter && (\n          <FilterContainer>\n            <HiddenLabel>\n              <FormattedMessage {...messages.hiddenLabelProjectFilter} />\n              <Select\n                id=\"projectFilter\"\n                onChange={onProjectFilter}\n                value={currentProjectFilter || ''}\n                options={projectFilterOptions}\n              />\n            </HiddenLabel>\n          </FilterContainer>\n        )}\n\n        {groupFilterOptions && onGroupFilter && (\n          <FilterContainer>\n            <HiddenLabel>\n              <FormattedMessage {...messages.hiddenLabelGroupFilter} />\n              <Select\n                id=\"groupFilter\"\n                onChange={onGroupFilter}\n                value={currentGroupFilter || ''}\n                options={groupFilterOptions}\n              />\n            </HiddenLabel>\n          </FilterContainer>\n        )}\n\n        {topicFilterOptions && onTopicFilter && (\n          <FilterContainer>\n            <HiddenLabel>\n              <FormattedMessage {...messages.hiddenLabelTopicFilter} />\n              <Select\n                id=\"topicFilter\"\n                onChange={onTopicFilter}\n                value={currentTopicFilter || ''}\n                options={topicFilterOptions}\n              />\n            </HiddenLabel>\n          </FilterContainer>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport moment, { Moment } from 'moment';\n\n// components\nimport Button from 'components/UI/Button';\nimport { Icon, Dropdown } from 'cl2-component-library';\nimport DateRangePicker from 'components/admin/DateRangePicker';\n\n// i18n\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\n\n// styling\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  display: flex;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  align-items: center;\n`;\n\nconst DropdownContainer = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: 15px;\n`;\n\nconst DropdownItemIcon = styled(Icon)`\n  width: 11px;\n  height: 6px;\n  fill: ${colors.label};\n  margin-top: 1px;\n  margin-left: 4px;\n`;\n\nconst DropdownListItem = styled.button`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin: 0px;\n  margin-bottom: 4px;\n  padding: 10px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  cursor: pointer;\n  transition: all 80ms ease-out;\n\n  &:hover,\n  &:focus,\n  &.selected {\n    background: ${colors.clDropdownHoverBackground};\n  }\n`;\n\ntype Props = {\n  startAtMoment?: Moment | null;\n  endAtMoment: Moment | null;\n  onChange: (\n    startAtMoment: Moment | null | undefined,\n    endAtMoment: Moment | null\n  ) => void;\n};\n\ntype State = {\n  dropdownOpened: boolean;\n};\n\nclass TimeControl extends PureComponent<Props & InjectedIntlProps, State> {\n  private presets = [\n    {\n      id: 'allTime',\n      label: <FormattedMessage {...messages.allTime} />,\n      endAt: () => moment(),\n      startAt: () => undefined,\n    },\n    {\n      id: 'previousWeek',\n      label: <FormattedMessage {...messages.previousWeek} />,\n      endAt: () => moment(),\n      startAt: () => moment().subtract(7, 'd'),\n    },\n    {\n      id: 'previous30Days',\n      label: <FormattedMessage {...messages.previous30Days} />,\n      endAt: () => moment(),\n      startAt: () => moment().subtract(30, 'd'),\n    },\n    {\n      id: 'previous90Days',\n      label: <FormattedMessage {...messages.previous90Days} />,\n      endAt: () => moment(),\n      startAt: () => moment().subtract(90, 'd'),\n    },\n    {\n      id: 'previousYear',\n      label: <FormattedMessage {...messages.previousYear} />,\n      endAt: () => moment(),\n      startAt: () => moment().subtract(1, 'y'),\n    },\n  ];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpened: false,\n    };\n  }\n\n  toggleDropdown = () => {\n    this.setState({ dropdownOpened: !this.state.dropdownOpened });\n  };\n\n  handleDatesChange = ({\n    startDate,\n    endDate,\n  }: {\n    startDate: Moment | null;\n    endDate: Moment | null;\n  }) => {\n    this.props.onChange(startDate, endDate);\n  };\n\n  findActivePreset = () => {\n    const { startAtMoment, endAtMoment } = this.props;\n\n    if (!endAtMoment) return null;\n\n    return this.presets.find((preset) => {\n      const startAt = preset.startAt();\n      if (startAt === undefined) {\n        return (\n          startAtMoment === undefined &&\n          preset.endAt().isSame(endAtMoment, 'day')\n        );\n      } else {\n        return (\n          !!startAtMoment &&\n          startAt.isSame(startAtMoment, 'day') &&\n          preset.endAt().isSame(endAtMoment, 'day')\n        );\n      }\n    });\n  };\n\n  handlePresetClick = (preset) => () => {\n    this.props.onChange(preset.startAt(), preset.endAt());\n  };\n\n  render() {\n    const { dropdownOpened } = this.state;\n    const { startAtMoment, endAtMoment } = this.props;\n    const activePreset = this.findActivePreset();\n\n    return (\n      <Container>\n        <DropdownContainer>\n          <StyledButton\n            buttonStyle=\"text\"\n            onClick={this.toggleDropdown}\n            padding=\"0px\"\n            className=\"e2e-open-time-presets\"\n          >\n            {activePreset ? (\n              activePreset.label\n            ) : (\n              <FormattedMessage {...messages.customDateRange} />\n            )}\n            <DropdownItemIcon name=\"dropdown\" />\n          </StyledButton>\n          <Dropdown\n            width=\"200px\"\n            top=\"45px\"\n            opened={dropdownOpened}\n            onClickOutside={this.toggleDropdown}\n            className=\"e2e-preset-items\"\n            content={\n              <>\n                {this.presets.map((preset) => (\n                  <DropdownListItem\n                    key={preset.id}\n                    onClick={this.handlePresetClick(preset)}\n                    role=\"navigation\"\n                    className={\n                      activePreset && activePreset.id === preset.id\n                        ? 'selected'\n                        : ''\n                    }\n                  >\n                    {preset.label}\n                  </DropdownListItem>\n                ))}\n              </>\n            }\n          />\n        </DropdownContainer>\n\n        <DateRangePicker\n          startDateId={'startAt'}\n          endDateId={'endAt'}\n          startDate={startAtMoment === undefined ? null : startAtMoment}\n          endDate={endAtMoment}\n          onDatesChange={this.handleDatesChange}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default injectIntl<Props>(TimeControl);\n"],"sourceRoot":""}