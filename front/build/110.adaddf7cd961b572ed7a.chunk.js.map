{"version":3,"sources":["webpack:///./app/components/UI/SideModal/messages.ts","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Idea/LazyIdeaContent.ts","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Idea/LazyIdeaEdit.tsx","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/PostPreview.tsx","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Initiative/LazyInitiativeContent.ts","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Initiative/LazyInitiativeEdit.ts","webpack:///./app/components/UI/SideModal/index.tsx"],"names":["defineMessages","closeButtonAria","id","defaultMessage","lazy","Container","styled","div","Top","colors","separation","Content","PostPreview","props","setState","opened","setTimeout","postId","onClose","type","onSwitchPreviewMode","mode","postType","state","view","idea","ideaId","closePreview","handleClickEdit","initiative","initiativeId","edit","goBack","prevProps","this","close","Suspense","fallback","previewComponent","PureComponent","easing","ModalWrapper","clickOutside","ModalContainer","CloseIcon","Icon","label","CloseButton","button","media","smallerThanMinTablet","Overlay","ModalContent","HiddenSpan","span","hideVisually","SideModal","document","getElementById","event","preventDefault","stopPropagation","innerModalOpened","el","createElement","subscriptions","ModalPortal","appendChild","console","log","eventEmitter","observeEvent","subscribe","removeChild","forEach","subscription","unsubscribe","children","modalPortalElement","createPortal","classNames","in","timeout","enter","enterTimeout","exit","exitTimeout","mountOnEnter","unmountOnExit","className","role","onClickOutside","clickOutsideModal","closeOnClickOutsideEnabled","FocusOn","onClick","clickCloseButton","FormattedMessage","messages","name"],"mappings":"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","file":"110.adaddf7cd961b572ed7a.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  closeButtonAria: {\n    id: 'app.components.SideModal.closeButtonAria',\n    defaultMessage: 'Close',\n  },\n});\n","import { lazy } from 'react';\n\nexport default lazy(() => import('./IdeaContent'));\n","import { lazy } from 'react';\n\nexport default lazy(() => import('./IdeaEdit'));\n","import React, { Suspense, PureComponent } from 'react';\n\n// components\nimport SideModal from 'components/UI/SideModal';\nimport FullPageSpinner from 'components/UI/FullPageSpinner';\nimport LazyIdeaEdit from './Idea/LazyIdeaEdit';\nimport LazyIdeaContent from './Idea/LazyIdeaContent';\nimport LazyInitiativeEdit from './Initiative/LazyInitiativeEdit';\nimport LazyInitiativeContent from './Initiative/LazyInitiativeContent';\n\n// styling\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\n\n// typings\nimport { ManagerType } from '../..';\n\nexport const Container = styled.div`\n  min-height: 100%;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Top = styled.div`\n  background-color: white;\n  border-bottom: 1px solid ${colors.separation};\n  display: flex;\n  align-items: center;\n  position: sticky;\n  top: 0;\n  left: 0;\n  height: 50px;\n  width: 100%;\n  padding-left: 15px;\n  padding-right: 50px;\n  z-index: 1001;\n`;\n\nexport const Content = styled.div`\n  padding: 30px;\n  padding-left: 35px;\n  padding-right: 35px;\n  margin-top: 0px;\n  width: 100%;\n\n  &.idea-form {\n    background: #f4f4f4;\n  }\n`;\n\ninterface DataProps {}\n\ninterface InputProps {\n  type: ManagerType;\n  onClose: () => void;\n  postId: string | null;\n  onSwitchPreviewMode: () => void;\n  mode: 'edit' | 'view';\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  postId: string | null;\n  opened: boolean;\n}\n\nexport default class PostPreview extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      postId: props.postId,\n      opened: false,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.postId !== this.props.postId && this.props.postId) {\n      this.setState({ opened: true });\n      setTimeout(() => this.setState({ postId: this.props.postId }), 200);\n    }\n  }\n\n  onClose = () => {\n    this.setState({ opened: false });\n    setTimeout(() => {\n      this.setState({ postId: null });\n      this.props.onClose();\n    }, 450);\n  };\n\n  previewComponent = () => {\n    const { type, onSwitchPreviewMode, mode } = this.props;\n    const postType =\n      type === 'AllIdeas' || type === 'ProjectIdeas' ? 'idea' : 'initiative';\n    const { postId } = this.state;\n\n    if (postId) {\n      return {\n        view: {\n          idea: (\n            <LazyIdeaContent\n              ideaId={postId}\n              closePreview={this.onClose}\n              handleClickEdit={onSwitchPreviewMode}\n            />\n          ),\n          initiative: (\n            <LazyInitiativeContent\n              initiativeId={postId}\n              closePreview={this.onClose}\n              handleClickEdit={onSwitchPreviewMode}\n            />\n          ),\n        },\n        edit: {\n          idea: <LazyIdeaEdit ideaId={postId} goBack={onSwitchPreviewMode} />,\n          initiative: (\n            <LazyInitiativeEdit\n              initiativeId={postId}\n              goBack={onSwitchPreviewMode}\n            />\n          ),\n        },\n      }[mode][postType];\n    }\n\n    return null;\n  };\n\n  render() {\n    const { opened } = this.state;\n\n    return (\n      <SideModal opened={opened} close={this.onClose}>\n        <Suspense fallback={<FullPageSpinner />}>\n          {this.previewComponent()}\n        </Suspense>\n      </SideModal>\n    );\n  }\n}\n","import { lazy } from 'react';\n\nexport default lazy(() => import('./InitiativeContent'));\n","import { lazy } from 'react';\n\nexport default lazy(() => import('./InitiativeEdit'));\n","import React, { PureComponent } from 'react';\nimport { createPortal } from 'react-dom';\nimport eventEmitter from 'utils/eventEmitter';\nimport { Subscription } from 'rxjs';\nimport { FocusOn } from 'react-focus-on';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport clickOutside from 'utils/containers/clickOutside';\n\n// animations\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\n// Translation\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors } from 'utils/styleUtils';\nimport { hideVisually } from 'polished';\n\nconst enterTimeout = 350;\nconst enterDelay = 0;\nconst exitTimeout = 350;\nconst exitDelay = 0;\nconst easing = 'cubic-bezier(0.165, 0.84, 0.44, 1)';\n\nconst ModalWrapper = styled(clickOutside)``;\n\nconst ModalContainer = styled.div`\n  width: 940px;\n  height: 100vh;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  outline: none;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  right: 0;\n  will-change: opacity, transform;\n`;\n\nconst CloseIcon = styled(Icon)`\n  flex: 0 0 16px;\n  width: 16px;\n  height: 16px;\n  fill: ${colors.label};\n  z-index: 2;\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 35px;\n  height: 30px;\n  width: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  opacity: 0;\n  z-index: 1001;\n\n  &:hover,\n  &:focus {\n    ${CloseIcon} {\n      fill: #000;\n    }\n  }\n\n  ${media.smallerThanMinTablet`\n    height: 18px;\n    width: 18px;\n  `}\n`;\n\nconst Overlay = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.75);\n  overflow: hidden;\n  z-index: 1000000;\n  will-change: opacity;\n\n  &.modal-enter {\n    opacity: 0;\n\n    ${ModalContainer} {\n      opacity: 0;\n      transform: translateX(940px);\n    }\n\n    &.modal-enter-active {\n      opacity: 1;\n      transition: all ${enterTimeout}ms ${easing} ${enterDelay}ms;\n\n      ${ModalContainer} {\n        opacity: 1;\n        transform: translateX(0px);\n        transition: all ${enterTimeout}ms ${easing} ${enterDelay}ms;\n      }\n    }\n  }\n\n  &.modal-enter-done {\n    ${CloseButton} {\n      opacity: 1;\n    }\n  }\n\n  &.modal-exit {\n    opacity: 1;\n\n    ${ModalContainer} {\n      opacity: 1;\n      transform: translateX(0px);\n    }\n\n    ${CloseButton} {\n      opacity: 0;\n    }\n\n    &.modal-exit-active {\n      opacity: 1;\n      transition: opacity ${exitTimeout}ms ${easing} ${exitDelay}ms;\n\n      ${ModalContainer} {\n        opacity: 1;\n        transform: translateX(940px);\n        transition: all ${exitTimeout}ms ${easing} ${exitDelay}ms;\n      }\n    }\n  }\n`;\n\nconst ModalContent = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`;\n\nconst HiddenSpan = styled.span`\n  ${hideVisually()}\n`;\n\ntype Props = {\n  opened: boolean;\n  close: () => void;\n  className?: string;\n  label?: string;\n  children?: any;\n};\n\ntype State = {\n  innerModalOpened: boolean;\n};\n\nexport default class SideModal extends PureComponent<Props, State> {\n  private el: HTMLDivElement;\n  private ModalPortal = document.getElementById('modal-portal');\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      innerModalOpened: false,\n    };\n    this.el = document.createElement('div');\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    if (!this.ModalPortal) {\n      // eslint-disable-next-line no-console\n      console.log(\n        'There was no Portal to insert the modal. Please make sure you have a Portal root'\n      );\n    } else {\n      this.ModalPortal.appendChild(this.el);\n    }\n\n    this.subscriptions = [\n      eventEmitter.observeEvent('modalOpened').subscribe(() => {\n        this.setState({ innerModalOpened: true });\n      }),\n      eventEmitter.observeEvent('modalClosed').subscribe(() => {\n        this.setState({ innerModalOpened: false });\n      }),\n    ];\n  }\n\n  componentWillUnmount() {\n    if (!this.ModalPortal) {\n      // eslint-disable-next-line no-console\n      console.log(\n        'There was no Portal to insert the modal. Please make sure you have a Portal root'\n      );\n    } else {\n      this.ModalPortal.removeChild(this.el);\n    }\n\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  clickOutsideModal = () => {\n    this.props.close();\n  };\n\n  clickCloseButton = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.close();\n  };\n\n  render(): React.ReactNode {\n    const { children, opened, label } = this.props;\n    const modalPortalElement = document?.getElementById('modal-portal');\n\n    if (modalPortalElement) {\n      return createPortal(\n        <CSSTransition\n          classNames=\"modal\"\n          in={opened}\n          timeout={{\n            enter: enterTimeout + enterDelay,\n            exit: exitTimeout + exitDelay,\n          }}\n          mountOnEnter={true}\n          unmountOnExit={true}\n          enter={true}\n          exit={true}\n        >\n          <Overlay\n            id=\"e2e-modal-container\"\n            className={this.props.className}\n            aria-modal=\"true\"\n            role=\"dialog\"\n            aria-label={label}\n          >\n            <ModalWrapper\n              onClickOutside={this.clickOutsideModal}\n              closeOnClickOutsideEnabled={!this.state.innerModalOpened}\n            >\n              <FocusOn>\n                <ModalContainer>\n                  <ModalContent id=\"e2e-side-modal-content\">\n                    {children}\n                  </ModalContent>\n                </ModalContainer>\n                <CloseButton\n                  className=\"e2e-modal-close-button\"\n                  onClick={this.clickCloseButton}\n                >\n                  <HiddenSpan>\n                    <FormattedMessage {...messages.closeButtonAria} />\n                  </HiddenSpan>\n                  <CloseIcon name=\"close\" />\n                </CloseButton>\n              </FocusOn>\n            </ModalWrapper>\n          </Overlay>\n        </CSSTransition>,\n        modalPortalElement\n      );\n    }\n\n    return null;\n  }\n}\n"],"sourceRoot":""}