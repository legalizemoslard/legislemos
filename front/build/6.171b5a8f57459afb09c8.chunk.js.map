{"version":3,"sources":["webpack:///./app/components/PostShowComponents/Comments/CommentVote.tsx","webpack:///./app/components/PostShowComponents/Comments/CommentHeader.tsx","webpack:///./app/components/PostShowComponents/Comments/CommentsAdminDeletionModal.tsx","webpack:///./app/components/PostShowComponents/Comments/Comments.tsx","webpack:///./app/components/UI/FormikTextArea/index.tsx","webpack:///./app/components/UI/FormikRadio/index.tsx","webpack:///./app/components/PostShowComponents/Comments/ParentComment.tsx","webpack:///./app/components/PostShowComponents/Comments/CommentFooter.tsx","webpack:///./app/components/PostShowComponents/Comments/index.tsx","webpack:///./app/services/commentVotes.ts","webpack:///./app/components/PostShowComponents/Comments/AdminBadge.tsx","webpack:///./app/components/PostShowComponents/Comments/CommentsMoreActions.tsx","webpack:///./app/resources/GetPost.tsx","webpack:///./app/resources/GetCommentVote.tsx","webpack:///./app/components/PostShowComponents/Comments/Comment.tsx","webpack:///./app/components/PostShowComponents/Comments/ChildCommentForm.tsx","webpack:///./app/components/Author/messages.ts","webpack:///./app/components/PostShowComponents/Comments/CommentSorting.tsx","webpack:///./app/components/PostShowComponents/Comments/CommentingInitiativeDisabled.tsx","webpack:///./app/components/PostShowComponents/Comments/CommentReplyButton.tsx","webpack:///./app/components/PostShowComponents/Comments/ParentCommentForm.tsx","webpack:///./app/components/PostShowComponents/Comments/CommentingDisabled.tsx","webpack:///./app/components/Author/index.tsx"],"names":["Container","styled","li","UpvoteIcon","Icon","colors","label","UpvoteButton","button","fontSizes","small","clGreen","lighten","UpvoteCount","div","CommentVote","props","postId","postType","commentId","commentType","authUser","comment","commentVote","oldVotedValue","cloneDeep","state","voted","oldUpvoteCount","upvoteCount","isNilOrError","setState","addCommentVote","user_id","id","mode","trackEventByName","tracks","clickParentCommentUpvoteButton","clickChildCommentUpvoteButton","clickCommentUpvoteButton","deleteCommentVote","clickParentCommentCancelUpvoteButton","clickChildCommentCancelUpvoteButton","clickCommentCancelUpvoteButton","event","preventDefault","post","commentVotingPermissionInitiative","commentingDisabledReason","get","authUserIsVerified","attributes","verified","openSignUpInModal","verification","action","handleVoteClick","openVerificationModal","vote","verificationContext","type","context","enabled","this","upvotes_count","prevProps","_prevState","prevUpvoteCount","isNumber","className","formatMessage","intl","commentingVotingDisabledReason","isSignedIn","disabled","onClick","name","title","messages","a11y_undoUpvote","upvoteComment","ScreenReaderOnly","LiveMessage","message","a11y_upvoteCount","PureComponent","CommentVoteWithHOCs","injectIntl","Data","adopt","render","voteId","relationships","user_vote","data","undefined","inputProps","dataProps","isRtl","Left","Right","media","smallerThanMinTablet","StyledAuthor","Author","CommentHeader","projectId","authorId","commentCreatedAt","moderator","hasAuthorId","isLinkToProfile","size","showModeration","createdAt","avatarBadgeBgColor","horizontalLayout","color","fontSize","base","fontWeight","underline","ButtonsWrapper","DeleteReason","values","errors","reason_code","other_reason","Formik","initialValues","onSubmit","onDeleteComment","validate","validateForm","isSubmitting","isValid","Form","noValidate","SectionField","Object","keys","DeleteReasonCode","map","code","value","FormattedMessage","key","classNames","timeout","enter","exit","buttonStyle","onCloseDeleteModal","adminCommentDeletionCancelButton","processing","adminCommentDeletionConfirmButton","SpinnerWrapper","StyledParentComment","ParentComment","CommentsSection","memo","allComments","loading","useState","commentPostedMessage","setCommentPostedMessage","commentDeletedMessage","setCommentDeletedMessage","useEffect","subscriptions","commentAdded$","subscribe","a11y_commentPosted","setTimeout","commentDeleted$","a11y_commentDeleted","forEach","subscription","unsubscribe","parentComments","useMemo","filter","parent","Spinner","parentComment","_index","childCommentIds","publication_status","formikContext","setFieldValue","FormikConsumer","onChange","handleOnChange","React","Component","Radio","currentValue","ParentCommentContainer","StyledChildCommentForm","ChildCommentForm","LoadMoreButton","Button","isLoadingMore","clickParentCommentLoadMoreButton","loadMore$","next","canLoadMore","hasLoadedMore","childComments","BehaviorSubject","pipe","distinctUntilChanged","loadMore","tap","switchMap","childCommentsStream","queryParameters","observable","_prevProps","currentComment","children_count","commentingPermissionInitiative","theme","commentDeleted","commentingEnabled","showCommentForm","hasChildComments","length","showLoadMore","bgColor","textColor","colorText","bgHoverColor","textHoverColor","darken","borderColor","borderThickness","loadMoreComments","childCommentId","index","last","parentId","waitForChildCommentsRefetch","ParentCommentWithHoC","withTheme","footerHeight","footerTopMargin","ul","StyledCommentVote","StyledCommentReplyButton","CommentReplyButton","StyledCommentsMoreActions","CommentsMoreActions","CommentFooter","onEditing","author","tenantLocales","locale","onCommentEdit","ariaLabel","showMoreActions","CommentFooterWithHoCs","StyledParentCommentForm","ParentCommentForm","Header","Title","h1","xxl","smallerThanMaxTablet","CommentCount","span","StyledCommentSorting","CommentSorting","LoadMore","LoadingMore","LoadingMoreMessage","medium","comments","project","sortOrder","setSortOrder","posting","setPosting","commentsList","hasMore","onLoadMore","loadingInital","loadingMore","onChangeSort","handleSortOrderChange","useCallback","clickCommentsSortOrder","handleIntersection","unobserve","isIntersecting","handleCommentPosting","isPosting","isUndefined","phaseId","current_phase","commentCount","comments_count","invisibleTitleComments","selectedValue","postingComment","rootMargin","loadingMoreComments","streamParams","streams","apiEndpoint","API_PATH","object","add","response","fetchAllWith","delete","clRedError","xs","borderRadius","official","CancelButton","AcceptButton","modalVisible_delete","deleteCommentModalClosed","reason","reasonObj","loading_deleteComment","markForDeletion","modalVisible_spam","actions","comment$","combineLatest","hasPermission","item","canReport","canDelete","canEdit","push","reportAsSpam","handler","openSpamModal","deleteComment","openDeleteModal","editComment","opened","close","closeDeleteModal","header","confirmCommentDeletion","No","commentDeletionCancelButton","commentDeletionConfirmButton","closeSpamModal","reportAsSpamModalTitle","resourceId","resourceType","GetPost","slug","resetOnChange","inputProps$","prev","isString","ideaByIdStream","initiativeByIdStream","ideaBySlugStream","initiativeBySlugStream","of","children","GetCommentVote","commentVoteStream","ContainerInner","Content","BodyAndFooter","DeletedComment","DeletedIcon","Comment","editing","lastComment","canModerateProject","created_at","onCommentSaved","onCancelEditing","commentDeletedPlaceholder","hasChildComment","CommentWithHoCs","StyledAvatar","Avatar","FormContainer","clickOutside","form","border","hoveredBorder","focussedBorder","defaultStyles","boxShadowFocused","HiddenLabel","hideVisually","ButtonWrapper","inputValue","hasEmptyError","trim","focused","hasApiError","profanityApiError","canSubmit","focusChildCommentEditor","extra","appConfiguration","commentBodyMultiloc","replace","clickChildCommentPublish","content","addCommentToIdeaComment","addCommentToInitiativeComment","commentAdded","apiErrors","find","apiError","error","childCommentProfanityError","profaneMessage","location","userId","host","element","textareaElement","scrollIntoView","behavior","block","inline","focus","setCaretAtEnd","childCommentBodyPlaceholder","profanityError","guidelinesLink","to","target","guidelinesLinkText","addCommentError","commentReplyButtonClicked$","eventValue","parentCommentId","authorFirstName","authorLastName","authorSlug","tag","setSelectionRange","textContent","windowSize","isModerator","smallerThanSmallTablet","viewportWidths","smallTablet","onClickOutside","onCancel","closeOnClickOutsideEnabled","replyToComment","placeholder","rows","getErrorMessage","onFocus","padding","boxShadow","getTextareaRef","setRef","cancel","publishComment","ChildCommentFormWithHoCs","defineMessages","a11y_postedBy","defaultMessage","commentsSortTitle","text","oldestToNewest","mostUpvoted","selected","sortOptions","multipleSelectionAllowed","width","right","mobileLeft","CommentingInitiativesDisabled","commetingPermissions","isLoggedIn","disabledReason","commentingInitiativeNotPermitted","commentingDisabledUnverified","signInToCommentInitiative","signInAndVerifyToCommentInitiative","commentingInitiativeMaybeNotPermitted","flow","signUpIn","messageDescriptor","calculateMessageDescriptor","signUpLink","signUp","signUpLinkText","signInLink","signIn","signInLinkText","verificationLink","onVerify","verifyIdentityLinkText","ReplyButton","onReply","first_name","last_name","clickChildCommentReplyButton","clickParentCommentReplyButton","loggedIn","commentReplyButtonClicked","isCommentDeleted","commentReplyButton","Anchor","focusParentCommentEditor","blur","clickParentCommentPublish","addCommentToIdea","then","document","getElementById","addCommentToInitiative","parentCommentProfanityError","prevState","canComment","htmlFor","yourComment","ParentCommentFormWithHoCs","CommentingDisabled","commentingDisabledInactiveProject","commentingDisabledProject","commentingDisabledInCurrentPhase","signInToComment","commentingMaybeNotPermitted","pcType","pcId","projectTitle","title_multiloc","verifyIdentityLink","projectName","smallPhone","AuthorContainer","AuthorMeta","AuthorNameContainer","TimeAgo","showAvatar","authorCanModerate","canModerate","FormattedRelative"],"mappings":"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","file":"6.171b5a8f57459afb09c8.chunk.js","sourcesContent":["import React, { PureComponent, MouseEvent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { cloneDeep, isNumber, get } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { LiveMessage } from 'react-aria-live';\n\n// components\nimport { Icon } from 'cl2-component-library';\n\n// services\nimport { addCommentVote, deleteCommentVote } from 'services/commentVotes';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetPost, { GetPostChildProps } from 'resources/GetPost';\nimport GetComment, { GetCommentChildProps } from 'resources/GetComment';\nimport GetCommentVote, {\n  GetCommentVoteChildProps,\n} from 'resources/GetCommentVote';\nimport GetInitiativesPermissions, {\n  GetInitiativesPermissionsChildProps,\n} from 'resources/GetInitiativesPermissions';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// events\nimport { openSignUpInModal } from 'components/SignUpIn/events';\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { lighten } from 'polished';\n\n// a11y\nimport { ScreenReaderOnly } from 'utils/a11y';\n\nconst Container = styled.li`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  margin: 0;\n  margin-left: 1px;\n  padding: 0;\n`;\n\nconst UpvoteIcon = styled(Icon)`\n  fill: ${colors.label};\n  flex: 0 0 17px;\n  width: 17px;\n  height: 17px;\n  margin-top: -2px;\n`;\n\nconst UpvoteButton = styled.button`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: transparent;\n  margin: 0;\n  padding: 0;\n  border: none;\n  cursor: pointer;\n\n  &.disabled {\n    cursor: auto;\n  }\n\n  &.enabled:not(.voted):hover {\n    color: #000;\n\n    ${UpvoteIcon} {\n      fill: #000;\n    }\n  }\n\n  &.enabled.voted {\n    color: ${colors.clGreen};\n\n    ${UpvoteIcon} {\n      fill: ${colors.clGreen};\n    }\n  }\n\n  &.disabled:not(.voted) {\n    color: ${lighten(0.25, colors.label)};\n\n    ${UpvoteIcon} {\n      fill: ${lighten(0.25, colors.label)};\n    }\n  }\n\n  &.disabled.voted {\n    color: ${lighten(0.25, colors.clGreen)};\n\n    ${UpvoteIcon} {\n      fill: ${lighten(0.25, colors.clGreen)};\n    }\n  }\n`;\n\nconst UpvoteCount = styled.div`\n  margin-left: 6px;\n`;\n\ninterface InputProps {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  commentId: string;\n  commentType: 'parent' | 'child' | undefined;\n  className?: string;\n}\n\ninterface DataProps {\n  commentVotingPermissionInitiative: GetInitiativesPermissionsChildProps;\n  authUser: GetAuthUserChildProps;\n  post: GetPostChildProps;\n  comment: GetCommentChildProps;\n  commentVote: GetCommentVoteChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  voted: boolean;\n  upvoteCount: number;\n}\n\nclass CommentVote extends PureComponent<Props & InjectedIntlProps, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      voted: false,\n      upvoteCount: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { comment, commentVote } = this.props;\n\n    this.setState({\n      voted: !isNilOrError(commentVote),\n      upvoteCount: !isNilOrError(comment)\n        ? comment.attributes.upvotes_count\n        : 0,\n    });\n  }\n\n  componentDidUpdate(prevProps: Props, _prevState: State) {\n    const { comment, commentVote } = this.props;\n    const { voted } = this.state;\n    const prevUpvoteCount = !isNilOrError(prevProps.comment)\n      ? prevProps.comment?.attributes?.upvotes_count\n      : 0;\n    const upvoteCount = !isNilOrError(comment)\n      ? comment?.attributes?.upvotes_count\n      : 0;\n\n    // Whenever the upvote count number returned by the GetComment resource component has changed\n    // we update the value kept in the state to make sure we always use the correct and up-to-date upvote count coming back from the server\n    if (upvoteCount !== prevUpvoteCount && isNumber(upvoteCount)) {\n      this.setState({ upvoteCount });\n    }\n\n    if (\n      voted === false &&\n      isNilOrError(prevProps.commentVote) &&\n      !isNilOrError(commentVote)\n    ) {\n      this.setState({ voted: true });\n    }\n\n    if (\n      voted === true &&\n      !isNilOrError(prevProps.commentVote) &&\n      isNilOrError(commentVote)\n    ) {\n      this.setState({ voted: false });\n    }\n  }\n\n  vote = async () => {\n    const {\n      postId,\n      postType,\n      commentId,\n      commentType,\n      authUser,\n      comment,\n      commentVote,\n    } = this.props;\n    const oldVotedValue = cloneDeep(this.state.voted);\n    const oldUpvoteCount = cloneDeep(this.state.upvoteCount);\n    if (!isNilOrError(authUser)) {\n      if (!oldVotedValue) {\n        try {\n          this.setState((state) => ({\n            voted: true,\n            upvoteCount: state.upvoteCount + 1,\n          }));\n\n          await addCommentVote(postId, postType, commentId, {\n            user_id: authUser.id,\n            mode: 'up',\n          });\n\n          if (commentType === 'parent') {\n            trackEventByName(tracks.clickParentCommentUpvoteButton);\n          } else if (commentType === 'child') {\n            trackEventByName(tracks.clickChildCommentUpvoteButton);\n          } else {\n            trackEventByName(tracks.clickCommentUpvoteButton);\n          }\n        } catch (error) {\n          this.setState({ voted: oldVotedValue, upvoteCount: oldUpvoteCount });\n        }\n      }\n\n      if (\n        oldVotedValue &&\n        !isNilOrError(comment) &&\n        !isNilOrError(commentVote)\n      ) {\n        try {\n          this.setState((state) => ({\n            voted: false,\n            upvoteCount: state.upvoteCount - 1,\n          }));\n          await deleteCommentVote(comment.id, commentVote.id);\n\n          if (commentType === 'parent') {\n            trackEventByName(tracks.clickParentCommentCancelUpvoteButton);\n          } else if (commentType === 'child') {\n            trackEventByName(tracks.clickChildCommentCancelUpvoteButton);\n          } else {\n            trackEventByName(tracks.clickCommentCancelUpvoteButton);\n          }\n        } catch (error) {\n          this.setState({ voted: oldVotedValue, upvoteCount: oldUpvoteCount });\n        }\n      }\n    }\n  };\n\n  handleVoteClick = async (event?: MouseEvent) => {\n    event?.preventDefault();\n\n    const {\n      post,\n      postType,\n      authUser,\n      commentVotingPermissionInitiative,\n    } = this.props;\n\n    const commentingDisabledReason = get(\n      post,\n      'attributes.action_descriptor.commenting_idea.disabled_reason'\n    );\n\n    const authUserIsVerified =\n      !isNilOrError(authUser) && authUser.attributes.verified;\n\n    if (postType === 'idea') {\n      if (!isNilOrError(authUser) && !commentingDisabledReason) {\n        this.vote();\n      } else if (\n        !isNilOrError(authUser) &&\n        !authUserIsVerified &&\n        commentingDisabledReason === 'not_verified'\n      ) {\n        openVerificationModal();\n      } else if (!authUser) {\n        openSignUpInModal({\n          verification: commentingDisabledReason === 'not_verified',\n          action: () => this.handleVoteClick(),\n        });\n      }\n    } else {\n      if (commentVotingPermissionInitiative?.action === 'sign_in_up') {\n        openSignUpInModal({\n          action: () => this.handleVoteClick(),\n        });\n      } else if (\n        commentVotingPermissionInitiative?.action === 'sign_in_up_and_verify'\n      ) {\n        openSignUpInModal({\n          action: () => this.handleVoteClick(),\n          verification: true,\n          verificationContext: {\n            action: 'commenting_initiative',\n            type: 'initiative',\n          },\n        });\n      } else if (commentVotingPermissionInitiative?.action === 'verify') {\n        openVerificationModal({\n          context: {\n            action: 'commenting_initiative',\n            type: 'initiative',\n          },\n        });\n      } else if (commentVotingPermissionInitiative?.enabled === true) {\n        this.vote();\n      }\n    }\n  };\n\n  render() {\n    const {\n      authUser,\n      post,\n      postType,\n      className,\n      comment,\n      commentVotingPermissionInitiative,\n      intl: { formatMessage },\n    } = this.props;\n    const { voted, upvoteCount } = this.state;\n\n    if (!isNilOrError(comment)) {\n      const commentingVotingDisabledReason = get(\n        post,\n        'attributes.action_descriptor.comment_voting_idea.disabled_reason'\n      );\n      const isSignedIn = !isNilOrError(authUser);\n      const disabled =\n        postType === 'initiative'\n          ? !commentVotingPermissionInitiative?.enabled\n          : isSignedIn && commentingVotingDisabledReason === 'not_permitted';\n\n      if (!disabled || upvoteCount > 0) {\n        return (\n          <Container className={`vote ${className || ''}`}>\n            <UpvoteButton\n              onClick={this.handleVoteClick}\n              disabled={disabled}\n              className={`\n                e2e-comment-vote\n                ${voted ? 'voted' : 'notVoted'}\n                ${disabled ? 'disabled' : 'enabled'}\n              `}\n            >\n              <UpvoteIcon\n                name=\"upvote\"\n                className={`\n                  ${voted ? 'voted' : 'notVoted'}\n                  ${disabled ? 'disabled' : 'enabled'}\n                `}\n                title={\n                  !voted\n                    ? formatMessage(messages.upvoteComment)\n                    : formatMessage(messages.a11y_undoUpvote)\n                }\n              />\n              {upvoteCount > 0 && (\n                <UpvoteCount\n                  className={`\n                ${voted ? 'voted' : 'notVoted'}\n                ${disabled ? 'disabled' : 'enabled'}\n              `}\n                >\n                  {upvoteCount}\n                </UpvoteCount>\n              )}\n            </UpvoteButton>\n\n            {!disabled && (\n              <ScreenReaderOnly>\n                {!voted\n                  ? formatMessage(messages.upvoteComment)\n                  : formatMessage(messages.a11y_undoUpvote)}\n              </ScreenReaderOnly>\n            )}\n\n            <LiveMessage\n              message={formatMessage(messages.a11y_upvoteCount, {\n                upvoteCount,\n              })}\n              aria-live=\"polite\"\n            />\n          </Container>\n        );\n      }\n    }\n\n    return null;\n  }\n}\n\nconst CommentVoteWithHOCs = injectIntl(CommentVote);\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  post: ({ postId, postType, render }) => (\n    <GetPost id={postId} type={postType}>\n      {render}\n    </GetPost>\n  ),\n  comment: ({ commentId, render }) => (\n    <GetComment id={commentId}>{render}</GetComment>\n  ),\n  commentVote: ({ comment, render }) => (\n    <GetCommentVote\n      voteId={\n        !isNilOrError(comment)\n          ? comment?.relationships?.user_vote?.data?.id\n          : undefined\n      }\n    >\n      {render}\n    </GetCommentVote>\n  ),\n  commentVotingPermissionInitiative: (\n    <GetInitiativesPermissions action=\"comment_voting_initiative\" />\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <CommentVoteWithHOCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { PureComponent } from 'react';\n\n// components\nimport Author from 'components/Author';\nimport AdminBadge from './AdminBadge';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors, fontSizes, isRtl } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 2px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst Left = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `}\n`;\n\nconst StyledAuthor = styled(Author)`\n  margin-left: -4px;\n`;\n\ninterface InputProps {\n  className?: string;\n  projectId?: string | null;\n  authorId: string | null;\n  commentId: string;\n  commentType: 'parent' | 'child';\n  commentCreatedAt: string;\n  moderator: boolean;\n}\n\ninterface Props extends InputProps {}\n\ninterface State {}\n\nexport default class CommentHeader extends PureComponent<Props, State> {\n  render() {\n    const {\n      projectId,\n      authorId,\n      commentType,\n      commentCreatedAt,\n      moderator,\n      className,\n    } = this.props;\n    const hasAuthorId = !!authorId;\n\n    return (\n      <Container className={className || ''}>\n        <Left>\n          <StyledAuthor\n            authorId={authorId}\n            isLinkToProfile={hasAuthorId}\n            size={30}\n            projectId={projectId}\n            showModeration={moderator}\n            createdAt={commentCreatedAt}\n            avatarBadgeBgColor={commentType === 'child' ? '#fbfbfb' : '#fff'}\n            horizontalLayout={true}\n            color={colors.label}\n            fontSize={fontSizes.base}\n            fontWeight={400}\n            underline={true}\n          />\n        </Left>\n        <Right>{moderator && <AdminBadge />}</Right>\n      </Container>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Services\nimport { DeleteReasonCode } from 'services/comments';\n\n// Components\nimport FormikTextArea from 'components/UI/FormikTextArea';\nimport { Formik, Form } from 'formik';\nimport FormikRadio from 'components/UI/FormikRadio';\nimport Button from 'components/UI/Button';\nimport { SectionField } from 'components/admin/Section';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// animation\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\n\n// Styling\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 30px;\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n\n  .Button {\n    margin-right: 1rem;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst timeout = 300;\n\nconst DeleteReason = styled.div`\n  transition: all ${timeout}ms cubic-bezier(0.165, 0.84, 0.44, 1);\n  overflow: hidden;\n\n  &.reason-enter {\n    max-height: 0px;\n    opacity: 0;\n\n    &.reason-enter-active {\n      max-height: 180px;\n      opacity: 1;\n    }\n  }\n\n  &.reason-exit {\n    max-height: 180px;\n    opacity: 1;\n\n    &.reason-exit-active {\n      max-height: 0px;\n      opacity: 0;\n    }\n  }\n`;\n\nexport interface Props {\n  onDeleteComment: (values) => void;\n  onCloseDeleteModal: () => void;\n}\n\nexport interface State {}\n\nclass CommentsAdminDeletionForm extends PureComponent<Props, State> {\n  validateForm = (values) => {\n    const errors: { reason_code?: any; other_reason?: any } = {};\n\n    if (!values.reason_code) {\n      errors.reason_code = 'Required';\n    }\n\n    if (values.reason_code === 'other' && !values.other_reason) {\n      errors.other_reason = 'Required';\n    }\n\n    return errors;\n  };\n\n  render() {\n    return (\n      <Container>\n        <Formik\n          initialValues={{ reason_code: null, other_reason: null }}\n          onSubmit={this.props.onDeleteComment}\n          validate={this.validateForm}\n        >\n          {({ values, isSubmitting, isValid }) => (\n            <Form noValidate>\n              <SectionField>\n                {Object.keys(DeleteReasonCode).map((code) => (\n                  <FormikRadio\n                    value={code}\n                    name=\"reason_code\"\n                    id={`reason_code-${code}`}\n                    label={\n                      <FormattedMessage {...messages[`deleteReason_${code}`]} />\n                    }\n                    key={code}\n                  />\n                ))}\n              </SectionField>\n\n              <TransitionGroup>\n                {values.reason_code === 'other' ? (\n                  <CSSTransition\n                    classNames=\"reason\"\n                    timeout={timeout}\n                    enter={true}\n                    exit={true}\n                  >\n                    <DeleteReason>\n                      <SectionField>\n                        <FormikTextArea name=\"other_reason\" />\n                      </SectionField>\n                    </DeleteReason>\n                  </CSSTransition>\n                ) : null}\n              </TransitionGroup>\n\n              <ButtonsWrapper>\n                <Button\n                  buttonStyle=\"secondary\"\n                  onClick={this.props.onCloseDeleteModal}\n                >\n                  <FormattedMessage\n                    {...messages.adminCommentDeletionCancelButton}\n                  />\n                </Button>\n                <Button\n                  disabled={!isValid}\n                  buttonStyle=\"primary\"\n                  processing={isSubmitting}\n                >\n                  <FormattedMessage\n                    {...messages.adminCommentDeletionConfirmButton}\n                  />\n                </Button>\n              </ButtonsWrapper>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    );\n  }\n}\n\nexport default CommentsAdminDeletionForm;\n","import React, { memo, useEffect, useMemo, useState } from 'react';\n\n// components\nimport ParentComment from './ParentComment';\nimport { Spinner } from 'cl2-component-library';\n\n// services\nimport { ICommentData } from 'services/comments';\n\n// events\nimport { commentAdded$, commentDeleted$ } from './events';\n\n// style\nimport styled from 'styled-components';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\nimport messages from './messages';\n\n// a11y\nimport { LiveMessage } from 'react-aria-live';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst SpinnerWrapper = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 40px;\n  left: 0;\n  right: 0;\n  z-index: 2;\n`;\n\nconst StyledParentComment = styled(ParentComment)`\n  &.loading {\n    opacity: 0;\n  }\n`;\n\ninterface Props {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  allComments: ICommentData[];\n  loading: boolean;\n  className?: string;\n}\n\nconst CommentsSection = memo<Props & InjectedIntlProps>(\n  ({\n    postId,\n    postType,\n    allComments,\n    loading,\n    className,\n    intl: { formatMessage },\n  }) => {\n    const [commentPostedMessage, setCommentPostedMessage] = useState('');\n    const [commentDeletedMessage, setCommentDeletedMessage] = useState('');\n\n    useEffect(() => {\n      const subscriptions = [\n        commentAdded$.subscribe(() => {\n          setCommentPostedMessage(formatMessage(messages.a11y_commentPosted));\n          setTimeout(() => setCommentPostedMessage(''), 1000);\n        }),\n        commentDeleted$.subscribe(() => {\n          setCommentDeletedMessage(formatMessage(messages.a11y_commentDeleted));\n          setTimeout(() => setCommentDeletedMessage(''), 1000);\n        }),\n      ];\n\n      return () =>\n        subscriptions.forEach((subscription) => subscription.unsubscribe());\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const parentComments = useMemo(() => {\n      return allComments.filter(\n        (comment) => comment.relationships.parent.data === null\n      );\n    }, [allComments]);\n\n    return (\n      <Container className={`e2e-comments-container ${className}`}>\n        <LiveMessage\n          message={commentPostedMessage || commentDeletedMessage}\n          aria-live=\"polite\"\n        />\n\n        {loading && (\n          <SpinnerWrapper>\n            <Spinner />\n          </SpinnerWrapper>\n        )}\n\n        {parentComments.map((parentComment, _index) => {\n          const childCommentIds = allComments\n            .filter((comment) => {\n              if (\n                comment.relationships.parent.data &&\n                comment.relationships.parent.data.id === parentComment.id &&\n                comment.attributes.publication_status !== 'deleted'\n              ) {\n                return true;\n              }\n\n              return false;\n            })\n            .map((comment) => comment.id);\n\n          return (\n            <StyledParentComment\n              key={parentComment.id}\n              postId={postId}\n              postType={postType}\n              commentId={parentComment.id}\n              childCommentIds={childCommentIds}\n              className={loading ? 'loading' : ''}\n            />\n          );\n        })}\n      </Container>\n    );\n  }\n);\n\nexport default injectIntl(CommentsSection);\n","// Libraries\nimport React from 'react';\nimport { FormikConsumer, FormikContext } from 'formik';\nimport Textarea, { Props as VanillaProps } from 'components/UI/TextArea';\n\n// Typings\nexport interface Props {\n  name: string;\n}\n\nexport interface State {}\n\nclass FormikTextArea extends React.Component<Props & VanillaProps, State> {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleOnChange = (formikContext: FormikContext<any>) => (value: string) => {\n    formikContext.setFieldValue(this.props.name, value);\n  };\n\n  render() {\n    return (\n      <FormikConsumer>\n        {(formikContext) => (\n          <Textarea\n            {...this.props}\n            value={formikContext.values[this.props.name] || ''}\n            onChange={this.handleOnChange(formikContext)}\n          />\n        )}\n      </FormikConsumer>\n    );\n  }\n}\n\nexport default FormikTextArea;\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport { FormikConsumer, FormikContext } from 'formik';\nimport { Radio, RadioProps } from 'cl2-component-library';\n\n// Typings\ntype Props = RadioProps & {\n  name: string;\n};\n\nclass FormikRadio extends PureComponent<Props> {\n  handleOnChange = (formikContext: FormikContext<any>) => (value: string) => {\n    formikContext.setFieldValue(this.props.name, value);\n  };\n\n  render() {\n    return (\n      <FormikConsumer>\n        {(formikContext) => {\n          return (\n            <Radio\n              {...this.props}\n              currentValue={formikContext.values[this.props.name]}\n              onChange={this.handleOnChange(formikContext)}\n            />\n          );\n        }}\n      </FormikConsumer>\n    );\n  }\n}\n\nexport default FormikRadio;\n","import React, { PureComponent, FormEvent, MouseEvent } from 'react';\nimport { get } from 'lodash-es';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, filter, tap } from 'rxjs/operators';\n\n// components\nimport Comment from './Comment';\nimport ChildCommentForm from './ChildCommentForm';\nimport { Spinner } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\n\n// services\nimport { childCommentsStream, IComments } from 'services/comments';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetComment, { GetCommentChildProps } from 'resources/GetComment';\nimport GetPost, { GetPostChildProps } from 'resources/GetPost';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// style\nimport styled, { withTheme } from 'styled-components';\nimport { darken } from 'polished';\nimport GetInitiativesPermissions, {\n  GetInitiativesPermissionsChildProps,\n} from 'resources/GetInitiativesPermissions';\n\nconst Container = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n`;\n\nconst ParentCommentContainer = styled.div`\n  position: relative;\n`;\n\nconst StyledChildCommentForm = styled(ChildCommentForm)`\n  margin-top: 30px;\n  margin-left: 38px;\n`;\n\nconst LoadMoreButton = styled(Button)`\n  margin-top: 20px;\n  margin-left: 38px;\n`;\n\ninterface InputProps {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  commentId: string;\n  childCommentIds: string[] | false;\n  className?: string;\n}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  comment: GetCommentChildProps;\n  post: GetPostChildProps;\n  commentingPermissionInitiative: GetInitiativesPermissionsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {\n  theme: any;\n}\n\ninterface State {\n  canLoadMore: boolean;\n  isLoadingMore: boolean;\n  hasLoadedMore: boolean;\n  childComments: IComments | null;\n}\n\nclass ParentComment extends PureComponent<Props, State> {\n  private loadMore$: BehaviorSubject<boolean>;\n  private subscriptions: Subscription[];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      canLoadMore: false,\n      isLoadingMore: false,\n      hasLoadedMore: false,\n      childComments: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadMore$ = new BehaviorSubject(false);\n\n    this.subscriptions = [\n      this.loadMore$\n        .pipe(\n          distinctUntilChanged(),\n          filter((loadMore) => loadMore),\n          tap(() => this.setState({ isLoadingMore: true })),\n          switchMap(() => {\n            return childCommentsStream(this.props.commentId, {\n              queryParameters: {\n                'page[number]': 1,\n                'page[size]': 500,\n              },\n            }).observable;\n          })\n        )\n        .subscribe((childComments) => {\n          this.setState({\n            childComments,\n            isLoadingMore: false,\n            hasLoadedMore: true,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate(_prevProps: Props) {\n    const currentComment = this.props.comment;\n\n    if (\n      !isNilOrError(currentComment) &&\n      currentComment.attributes.children_count > 5 &&\n      !this.state.canLoadMore\n    ) {\n      this.setState({ canLoadMore: true });\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  loadMore = (event: FormEvent<any>) => {\n    if (!this.state.isLoadingMore) {\n      event.preventDefault();\n      trackEventByName(tracks.clickParentCommentLoadMoreButton);\n      this.loadMore$.next(true);\n    }\n  };\n\n  removeFocus = (event: MouseEvent) => {\n    event.preventDefault();\n  };\n\n  render() {\n    const {\n      postId,\n      postType,\n      commentId,\n      authUser,\n      comment,\n      post,\n      className,\n      commentingPermissionInitiative,\n      theme,\n    } = this.props;\n    const {\n      canLoadMore,\n      isLoadingMore,\n      hasLoadedMore,\n      childComments,\n    } = this.state;\n\n    if (!isNilOrError(comment) && !isNilOrError(post)) {\n      const projectId: string | null = get(\n        post,\n        'relationships.project.data.id',\n        null\n      );\n      const commentDeleted =\n        comment.attributes.publication_status === 'deleted';\n      const commentingEnabled =\n        postType === 'initiative'\n          ? commentingPermissionInitiative?.enabled === true\n          : get(\n              post,\n              'attributes.action_descriptor.commenting_idea.enabled',\n              true\n            );\n      const showCommentForm = authUser && commentingEnabled && !commentDeleted;\n      const hasChildComments =\n        this.props.childCommentIds && this.props.childCommentIds.length > 0;\n      const childCommentIds = !isNilOrError(childComments)\n        ? childComments.data\n            .filter(\n              (comment) => comment.attributes.publication_status !== 'deleted'\n            )\n            .map((comment) => comment.id)\n        : this.props.childCommentIds;\n      const showLoadMore = canLoadMore && !hasLoadedMore;\n\n      // hide parent comments that are deleted when they have no children\n      if (\n        comment.attributes.publication_status === 'deleted' &&\n        !hasChildComments\n      ) {\n        return null;\n      }\n\n      return (\n        <Container\n          id=\"e2e-parent-and-childcomments\"\n          className={className || ''}\n        >\n          <ParentCommentContainer className={commentDeleted ? 'deleted' : ''}>\n            <Comment\n              postId={postId}\n              postType={postType}\n              projectId={projectId}\n              commentId={commentId}\n              commentType=\"parent\"\n              hasChildComments={hasChildComments}\n            />\n          </ParentCommentContainer>\n\n          {showLoadMore && (\n            <LoadMoreButton\n              onClick={this.loadMore}\n              className={!isLoadingMore ? 'clickable' : ''}\n              disabled={isLoadingMore}\n              bgColor=\"white\"\n              textColor={theme.colorText}\n              bgHoverColor=\"white\"\n              textHoverColor={darken(0.1, theme.colorText)}\n              fontWeight=\"bold\"\n              borderColor=\"#E0E0E0\"\n              borderThickness=\"2px\"\n            >\n              {!isLoadingMore ? (\n                <FormattedMessage {...messages.loadMoreComments} />\n              ) : (\n                <Spinner size=\"25px\" />\n              )}\n            </LoadMoreButton>\n          )}\n\n          {childCommentIds &&\n            childCommentIds.length > 0 &&\n            childCommentIds.map((childCommentId, index) => (\n              <Comment\n                postId={postId}\n                postType={postType}\n                projectId={projectId}\n                key={childCommentId}\n                commentId={childCommentId}\n                commentType=\"child\"\n                last={index === childCommentIds.length - 1}\n              />\n            ))}\n\n          {showCommentForm && (\n            <StyledChildCommentForm\n              postId={postId}\n              postType={postType}\n              projectId={projectId}\n              parentId={commentId}\n              waitForChildCommentsRefetch={!isNilOrError(childComments)}\n            />\n          )}\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst ParentCommentWithHoC = withTheme(ParentComment);\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  comment: ({ commentId, render }) => (\n    <GetComment id={commentId}>{render}</GetComment>\n  ),\n  post: ({ comment, postType, render }) => (\n    <GetPost id={get(comment, 'relationships.post.data.id')} type={postType}>\n      {render}\n    </GetPost>\n  ),\n  commentingPermissionInitiative: (\n    <GetInitiativesPermissions action=\"commenting_initiative\" />\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <ParentCommentWithHoC {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { PureComponent } from 'react';\nimport { get } from 'lodash-es';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport CommentVote from './CommentVote';\nimport CommentReplyButton from './CommentReplyButton';\nimport CommentsMoreActions from './CommentsMoreActions';\n\n// resources\nimport GetAppConfigurationLocales, {\n  GetAppConfigurationLocalesChildProps,\n} from 'resources/GetAppConfigurationLocales';\nimport GetComment, { GetCommentChildProps } from 'resources/GetComment';\nimport GetPost, { GetPostChildProps } from 'resources/GetPost';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetUser, { GetUserChildProps } from 'resources/GetUser';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetInitiativesPermissions, {\n  GetInitiativesPermissionsChildProps,\n} from 'resources/GetInitiativesPermissions';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes, isRtl } from 'utils/styleUtils';\nimport Outlet from 'components/Outlet';\n\nconst footerHeight = '30px';\nconst footerTopMargin = '6px';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst Left = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n\n  & li {\n    margin-right: 12px;\n\n    &:after {\n      color: ${colors.label};\n      font-size: ${fontSizes.small}px;\n      font-weight: 400;\n      content: '•';\n      margin-left: 12px;\n    }\n\n    ${isRtl`\n        margin-left: 0;\n        margin-right: 12px;\n\n        &:after {\n          content: '';\n        }\n\n        &:before {\n          color: ${colors.label};\n          font-size: ${fontSizes.small}px;\n          font-weight: 400;\n          content: '•';\n          margin-right: 12px;\n        }\n    `}\n\n    &:last-child {\n      &:after,\n      &:before {\n        margin-left: 0px;\n        margin-right: 0px;\n        content: '';\n      }\n    }\n  }\n`;\n\nconst StyledCommentVote = styled(CommentVote)`\n  height: ${footerHeight};\n  margin-top: ${footerTopMargin};\n`;\n\nconst StyledCommentReplyButton = styled(CommentReplyButton)`\n  height: ${footerHeight};\n  margin-top: ${footerTopMargin};\n`;\n\nconst StyledCommentsMoreActions = styled(CommentsMoreActions)`\n  height: ${footerHeight};\n  margin-top: ${footerTopMargin};\n`;\n\nconst Right = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\ninterface InputProps {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  projectId?: string | null;\n  commentId: string;\n  commentType: 'parent' | 'child';\n  onEditing: () => void;\n  className?: string;\n}\n\ninterface DataProps {\n  tenantLocales: GetAppConfigurationLocalesChildProps;\n  locale: GetLocaleChildProps;\n  authUser: GetAuthUserChildProps;\n  post: GetPostChildProps;\n  comment: GetCommentChildProps;\n  author: GetUserChildProps;\n  commentingPermissionInitiative: GetInitiativesPermissionsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass CommentFooter extends PureComponent<Props & InjectedIntlProps, State> {\n  onCommentEdit = () => {\n    this.props.onEditing();\n  };\n\n  render() {\n    const {\n      authUser,\n      author,\n      commentType,\n      postId,\n      postType,\n      projectId,\n      commentId,\n      className,\n      comment,\n      tenantLocales,\n      locale,\n      post,\n      intl: { formatMessage },\n      commentingPermissionInitiative,\n    } = this.props;\n    if (\n      !isNilOrError(post) &&\n      !isNilOrError(comment) &&\n      !isNilOrError(locale) &&\n      !isNilOrError(tenantLocales)\n    ) {\n      return (\n        <Container className={className || ''}>\n          <Left>\n            <StyledCommentVote\n              postId={postId}\n              postType={postType}\n              commentId={commentId}\n              commentType={commentType}\n            />\n            <StyledCommentReplyButton\n              postId={postId}\n              postType={postType}\n              commentId={commentId}\n              commentType={commentType}\n              authUser={authUser}\n              author={author}\n              post={post}\n              comment={comment}\n              commentingPermissionInitiative={commentingPermissionInitiative}\n            />\n            <Outlet\n              id=\"app.components.PostShowComponents.CommentFooter.left\"\n              comment={comment}\n              locale={locale}\n              tenantLocales={tenantLocales}\n            />\n          </Left>\n          <Right>\n            <StyledCommentsMoreActions\n              projectId={projectId}\n              comment={comment}\n              onCommentEdit={this.onCommentEdit}\n              ariaLabel={formatMessage(messages.showMoreActions)}\n            />\n          </Right>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  tenantLocales: <GetAppConfigurationLocales />,\n  locale: <GetLocale />,\n  authUser: <GetAuthUser />,\n  post: ({ postId, postType, render }) => (\n    <GetPost id={postId} type={postType}>\n      {render}\n    </GetPost>\n  ),\n  comment: ({ commentId, render }) => (\n    <GetComment id={commentId}>{render}</GetComment>\n  ),\n  author: ({ comment, render }) => (\n    <GetUser id={get(comment, 'relationships.author.data.id')}>\n      {render}\n    </GetUser>\n  ),\n  commentingPermissionInitiative: (\n    <GetInitiativesPermissions action=\"commenting_initiative\" />\n  ),\n});\n\nconst CommentFooterWithHoCs = injectIntl<Props>(CommentFooter);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <CommentFooterWithHoCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","// libraries\nimport React, { memo, useState, useCallback } from 'react';\nimport { get, isUndefined } from 'lodash-es';\nimport { adopt } from 'react-adopt';\nimport Observer from '@researchgate/react-intersection-observer';\n\n// resources\nimport GetPost, { GetPostChildProps } from 'resources/GetPost';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetComments, { GetCommentsChildProps } from 'resources/GetComments';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport ParentCommentForm from './ParentCommentForm';\nimport Comments from './Comments';\nimport CommentingDisabled from './CommentingDisabled';\nimport CommentSorting from './CommentSorting';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes, media, isRtl } from 'utils/styleUtils';\n\n// typings\nimport { CommentsSort } from 'services/comments';\nimport { IdeaCommentingDisabledReason } from 'services/ideas';\nimport CommentingInitiativeDisabled from './CommentingInitiativeDisabled';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\nconst Container = styled.div``;\n\nconst StyledParentCommentForm = styled(ParentCommentForm)`\n  margin-bottom: 25px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 30px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst Title = styled.h1`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.xxl}px;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n  padding: 0;\n  display: flex;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n\n  ${media.smallerThanMaxTablet`\n    font-size: ${fontSizes.xxl}px;\n  `}\n`;\n\nconst CommentCount = styled.span`\n  margin-left: 5px;\n`;\n\nconst StyledCommentSorting = styled(CommentSorting)`\n  display: flex;\n  justify-content: flex-end;\n\n  ${media.smallerThanMinTablet`\n    justify-content: flex-start;\n  `}\n`;\n\nconst LoadMore = styled.div`\n  width: 100%;\n  height: 0px;\n`;\n\nconst LoadingMore = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nconst LoadingMoreMessage = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.medium}px;\n  font-weight: 400;\n`;\n\nexport interface InputProps {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  className?: string;\n}\n\ninterface DataProps {\n  post: GetPostChildProps;\n  comments: GetCommentsChildProps;\n  project: GetProjectChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst CommentsSection = memo<Props>(\n  ({ postId, postType, post, comments, project, className }) => {\n    const [sortOrder, setSortOrder] = useState<CommentsSort>('-new');\n    const [posting, setPosting] = useState(false);\n    const {\n      commentsList,\n      hasMore,\n      onLoadMore,\n      loadingInital,\n      loadingMore,\n      onChangeSort,\n    } = comments;\n\n    const handleSortOrderChange = useCallback((sortOrder: CommentsSort) => {\n      trackEventByName(tracks.clickCommentsSortOrder);\n      onChangeSort(sortOrder);\n      setSortOrder(sortOrder);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleIntersection = useCallback(\n      (event: IntersectionObserverEntry, unobserve: () => void) => {\n        if (event.isIntersecting) {\n          onLoadMore();\n          unobserve();\n        }\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      []\n    );\n\n    const handleCommentPosting = useCallback((isPosting: boolean) => {\n      setPosting(isPosting);\n    }, []);\n\n    if (\n      !isNilOrError(post) &&\n      !isNilOrError(commentsList) &&\n      !isUndefined(project)\n    ) {\n      const commentingEnabled = get(\n        post,\n        'attributes.action_descriptor.commenting_idea.enabled',\n        true\n      ) as boolean;\n      const commentingDisabledReason = get(\n        post,\n        'attributes.action_descriptor.commenting_idea.disabled_reason',\n        null\n      ) as IdeaCommentingDisabledReason | null;\n      const phaseId = isNilOrError(project)\n        ? undefined\n        : project.relationships?.current_phase?.data?.id;\n      const commentCount = post.attributes.comments_count;\n\n      return (\n        <Container className={className || ''}>\n          <Header>\n            <Title id=\"comments-main-title\">\n              <FormattedMessage {...messages.invisibleTitleComments} />\n              {commentCount > 0 && (\n                <CommentCount>({commentCount})</CommentCount>\n              )}\n            </Title>\n            <StyledCommentSorting\n              onChange={handleSortOrderChange}\n              selectedValue={[sortOrder]}\n            />\n          </Header>\n\n          {postType === 'idea' ? (\n            <CommentingDisabled\n              commentingEnabled={commentingEnabled}\n              commentingDisabledReason={commentingDisabledReason}\n              projectId={get(post, 'relationships.project.data.id')}\n              phaseId={phaseId}\n              postId={postId}\n              postType={postType}\n            />\n          ) : (\n            <CommentingInitiativeDisabled />\n          )}\n\n          <StyledParentCommentForm\n            postId={postId}\n            postType={postType}\n            postingComment={handleCommentPosting}\n          />\n\n          <Comments\n            postId={postId}\n            postType={postType}\n            allComments={commentsList}\n            loading={loadingInital}\n          />\n\n          {hasMore && !loadingMore && (\n            <Observer onChange={handleIntersection} rootMargin=\"3000px\">\n              <LoadMore />\n            </Observer>\n          )}\n\n          {loadingMore && !posting && (\n            <LoadingMore>\n              <LoadingMoreMessage>\n                <FormattedMessage {...messages.loadingMoreComments} />\n              </LoadingMoreMessage>\n            </LoadingMore>\n          )}\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  post: ({ postId, postType, render }) => (\n    <GetPost id={postId} type={postType}>\n      {render}\n    </GetPost>\n  ),\n  comments: ({ postId, postType, render }) => (\n    <GetComments postId={postId} postType={postType}>\n      {render}\n    </GetComments>\n  ),\n  project: ({ post, render }) => (\n    <GetProject projectId={get(post, 'relationships.project.data.id')}>\n      {render}\n    </GetProject>\n  ),\n});\n\nexport default memo<InputProps>((inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <CommentsSection {...inputProps} {...dataProps} />}\n  </Data>\n));\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\n\nexport interface ICommentVoteData {\n  id: string;\n  type: 'vote';\n  attributes: {\n    mode: 'up';\n  };\n  relationships: {\n    votable: {\n      data: {\n        id: string;\n        type: 'comment';\n      };\n    };\n    user: {\n      data: {\n        id: string;\n        type: 'user';\n      };\n    };\n  };\n}\n\ninterface ILinks {\n  self: string;\n  first: string;\n  prev: string;\n  next: string;\n  last: string;\n}\n\nexport interface ICommentVotes {\n  data: ICommentVoteData[];\n  links: ILinks;\n}\n\nexport interface ICommentVote {\n  data: ICommentVoteData;\n}\n\nexport interface INewCommentVote {\n  user_id?: string;\n  mode: 'up';\n}\n\nexport function commentVoteStream(\n  voteId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentVote>({\n    apiEndpoint: `${API_PATH}/votes/${voteId}`,\n    ...streamParams,\n  });\n}\n\nexport function commentVotesStream(\n  commentId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentVote>({\n    apiEndpoint: `${API_PATH}/comments/${commentId}/votes`,\n    ...streamParams,\n  });\n}\n\nexport async function addCommentVote(\n  postId: string,\n  postType: 'idea' | 'initiative',\n  commentId: string,\n  object: INewCommentVote\n) {\n  const response = await streams.add<ICommentVote>(\n    `${API_PATH}/comments/${commentId}/votes`,\n    { vote: object }\n  );\n  const voteId = response.data.id;\n  await streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/${postType}s/${postId}/comments`,\n      `${API_PATH}/comments/${commentId}`,\n      `${API_PATH}/votes/${voteId}`,\n    ],\n  });\n  return response;\n}\n\nexport async function deleteCommentVote(commentId: string, voteId: string) {\n  const response = await streams.delete(`${API_PATH}/votes/${voteId}`, voteId);\n  await streams.fetchAllWith({\n    apiEndpoint: [`${API_PATH}/comments/${commentId}`],\n  });\n  return response;\n}\n","import React from 'react';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { lighten } from 'polished';\n\nconst Container = styled.span`\n  color: ${colors.clRedError};\n  font-size: ${fontSizes.xs}px;\n  line-height: 16px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  text-transform: uppercase;\n  text-align: center;\n  font-weight: 600;\n  background: ${lighten(0.52, colors.clRedError)};\n  border: none;\n  padding: 4px 8px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n`;\n\ninterface Props {\n  className?: string;\n}\n\nexport default (props: Props) => (\n  <Container className={props.className}>\n    <FormattedMessage {...messages.official} />\n  </Container>\n);\n","// Libraries\nimport React, { PureComponent, FormEvent } from 'react';\nimport { BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { get } from 'lodash-es';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport injectIntl from 'utils/cl-intl/injectIntl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// Services\nimport { ICommentData, markForDeletion } from 'services/comments';\nimport { hasPermission } from 'services/permissions';\n\n// Components\nimport MoreActionsMenu, { IAction } from 'components/UI/MoreActionsMenu';\nimport Modal from 'components/UI/Modal';\nimport SpamReportForm from 'containers/SpamReport';\nimport Button from 'components/UI/Button';\nimport HasPermission from 'components/HasPermission';\nimport CommentsAdminDeletionModal from './CommentsAdminDeletionModal';\n\n// events\nimport { deleteCommentModalClosed, commentDeleted } from './events';\n\n// Styling\nimport styled from 'styled-components';\nimport { isRtl } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  margin-top: 10px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 30px;\n`;\n\nconst CancelButton = styled(Button)`\n  margin-right: 10px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nconst AcceptButton = styled(Button)`\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\n// Typing\nexport interface Props {\n  projectId?: string | null;\n  comment: ICommentData;\n  onCommentEdit: () => void;\n  className?: string;\n  ariaLabel?: string;\n}\n\nexport interface State {\n  modalVisible_spam: boolean;\n  modalVisible_delete: boolean;\n  loading_deleteComment: boolean;\n  actions: IAction[] | null;\n}\n\nclass CommentsMoreActions extends PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  private comment$: BehaviorSubject<ICommentData>;\n  private subscriptions: Subscription[];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible_spam: false,\n      modalVisible_delete: false,\n      loading_deleteComment: false,\n      actions: null,\n    };\n  }\n\n  componentDidMount() {\n    const { projectId, onCommentEdit, comment } = this.props;\n\n    this.comment$ = new BehaviorSubject(comment);\n\n    this.subscriptions = [\n      this.comment$\n        .pipe(\n          switchMap((comment) => {\n            return combineLatest([\n              hasPermission({\n                item: comment,\n                action: 'markAsSpam',\n                context: { projectId },\n              }),\n              hasPermission({\n                item: comment,\n                action: 'delete',\n                context: { projectId },\n              }),\n              hasPermission({\n                item: comment,\n                action: 'edit',\n                context: { projectId },\n              }),\n            ]);\n          }),\n          map(([canReport, canDelete, canEdit]) => {\n            const actions: IAction[] = [];\n\n            // Actions based on permissions\n            if (canReport) {\n              actions.push({\n                label: <FormattedMessage {...messages.reportAsSpam} />,\n                handler: this.openSpamModal,\n              });\n            }\n            if (canDelete) {\n              actions.push({\n                label: <FormattedMessage {...messages.deleteComment} />,\n                handler: this.openDeleteModal,\n              });\n            }\n            if (canEdit) {\n              actions.push({\n                label: <FormattedMessage {...messages.editComment} />,\n                handler: onCommentEdit,\n              });\n            }\n\n            return actions;\n          })\n        )\n        .subscribe((actions) => {\n          this.setState({ actions });\n        }),\n    ];\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.comment !== this.props.comment) {\n      this.comment$.next(this.props.comment);\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  openDeleteModal = () => {\n    this.setState({ modalVisible_delete: true });\n  };\n\n  closeDeleteModal = (event?: FormEvent) => {\n    event && event.preventDefault();\n    this.setState({ modalVisible_delete: false });\n    deleteCommentModalClosed();\n  };\n\n  deleteComment = async (reason) => {\n    const { projectId, comment } = this.props;\n    const commentId = comment.id;\n    const authorId = get(comment, 'relationships.author.data.id', undefined);\n    const reasonObj = get(reason, 'reason_code') ? reason : undefined;\n    this.setState({ loading_deleteComment: true });\n    await markForDeletion(commentId, authorId, projectId, reasonObj);\n    deleteCommentModalClosed();\n    commentDeleted();\n  };\n\n  openSpamModal = () => {\n    this.setState({ modalVisible_spam: true });\n  };\n\n  closeSpamModal = () => {\n    this.setState({ modalVisible_spam: false });\n  };\n\n  render() {\n    const { projectId, ariaLabel, comment, className } = this.props;\n    const {\n      actions,\n      modalVisible_delete,\n      loading_deleteComment,\n      modalVisible_spam,\n    } = this.state;\n\n    if (!comment || !actions) {\n      return null;\n    }\n\n    return (\n      <>\n        <Container className={className || ''}>\n          <MoreActionsMenu ariaLabel={ariaLabel} actions={actions} />\n        </Container>\n\n        <Modal\n          opened={modalVisible_delete}\n          close={this.closeDeleteModal}\n          className=\"e2e-comment-deletion-modal\"\n          header={<FormattedMessage {...messages.confirmCommentDeletion} />}\n        >\n          <HasPermission\n            item={comment}\n            action=\"justifyDeletion\"\n            context={{ projectId }}\n          >\n            {/* Justification required for the deletion */}\n            <CommentsAdminDeletionModal\n              onCloseDeleteModal={this.closeDeleteModal}\n              onDeleteComment={this.deleteComment}\n            />\n\n            {/* No justification required */}\n            <HasPermission.No>\n              <ButtonsWrapper>\n                <CancelButton\n                  buttonStyle=\"secondary\"\n                  onClick={this.closeDeleteModal}\n                >\n                  <FormattedMessage {...messages.commentDeletionCancelButton} />\n                </CancelButton>\n                <AcceptButton\n                  buttonStyle=\"primary\"\n                  processing={loading_deleteComment}\n                  className=\"e2e-confirm-deletion\"\n                  onClick={this.deleteComment}\n                >\n                  <FormattedMessage\n                    {...messages.commentDeletionConfirmButton}\n                  />\n                </AcceptButton>\n              </ButtonsWrapper>\n            </HasPermission.No>\n          </HasPermission>\n        </Modal>\n\n        <Modal\n          opened={modalVisible_spam}\n          close={this.closeSpamModal}\n          header={<FormattedMessage {...messages.reportAsSpamModalTitle} />}\n        >\n          <SpamReportForm resourceId={comment.id} resourceType=\"comments\" />\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default injectIntl(CommentsMoreActions);\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { Subscription, BehaviorSubject, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { IIdeaData, ideaByIdStream, ideaBySlugStream } from 'services/ideas';\nimport {\n  IInitiativeData,\n  initiativeByIdStream,\n  initiativeBySlugStream,\n} from 'services/initiatives';\nimport { GetIdeaChildProps } from 'resources/GetIdea';\nimport { GetInitiativeChildProps } from 'resources/GetInitiative';\n\nexport type PostType = 'idea' | 'initiative';\ninterface InputProps {\n  id?: string | null;\n  slug?: string | null;\n  type: PostType;\n  resetOnChange?: boolean;\n}\n\ntype children = (renderProps: GetPostChildProps) => JSX.Element | null;\n\nexport type GetPostChildProps = GetIdeaChildProps | GetInitiativeChildProps;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  post: IIdeaData | IInitiativeData | undefined | null | Error;\n}\n\nexport default class GetPost extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      post: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id, slug, resetOnChange, type } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id, slug, type });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ post: undefined })),\n          switchMap(({ id, slug, type }) => {\n            if (isString(id) && type === 'idea') {\n              return ideaByIdStream(id).observable;\n            }\n\n            if (isString(id) && type === 'initiative') {\n              return initiativeByIdStream(id).observable;\n            }\n\n            if (isString(slug) && type === 'idea') {\n              return ideaBySlugStream(slug).observable;\n            }\n\n            if (isString(slug) && type === 'initiative') {\n              return initiativeBySlugStream(slug).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((post) => {\n          this.setState({ post: !isNilOrError(post) ? post.data : post });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id, slug, type } = this.props;\n    this.inputProps$.next({ id, slug, type });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { post } = this.state;\n    return (children as children)(post);\n  }\n}\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { ICommentVoteData, commentVoteStream } from 'services/commentVotes';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  voteId?: string;\n  resetOnChange?: boolean;\n}\n\ntype children = (renderProps: GetCommentVoteChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  commentVote: ICommentVoteData | undefined | null | Error;\n}\n\nexport type GetCommentVoteChildProps =\n  | ICommentVoteData\n  | undefined\n  | null\n  | Error;\n\nexport default class GetCommentVote extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      commentVote: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { voteId, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ voteId });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ commentVote: undefined })),\n          switchMap(({ voteId }) => {\n            if (isString(voteId)) {\n              return commentVoteStream(voteId).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((commentVote) =>\n          this.setState({\n            commentVote: !isNilOrError(commentVote)\n              ? commentVote.data\n              : commentVote,\n          })\n        ),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { voteId } = this.props;\n    this.inputProps$.next({ voteId });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { commentVote } = this.state;\n    return (children as children)(commentVote);\n  }\n}\n","// libraries\nimport React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { get } from 'lodash-es';\n\n// components\nimport CommentHeader from './CommentHeader';\nimport CommentBody from './CommentBody';\nimport CommentFooter from './CommentFooter';\nimport { Icon } from 'cl2-component-library';\n\n// services\nimport { canModerateProject } from 'services/permissions/rules/projectPermissions';\n\n// resources\nimport GetComment, { GetCommentChildProps } from 'resources/GetComment';\nimport GetUser, { GetUserChildProps } from 'resources/GetUser';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\nconst Container = styled.div``;\n\nconst ContainerInner = styled.div`\n  position: relative;\n\n  &.child {\n    margin-top: 20px;\n    margin-left: 38px;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  margin-left: 39px;\n`;\n\nconst BodyAndFooter = styled.div`\n  flex: 1;\n`;\n\nconst DeletedComment = styled.div`\n  color: ${colors.label};\n  display: flex;\n  align-items: center;\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  font-style: italic;\n`;\n\nconst DeletedIcon = styled(Icon)`\n  width: 18px;\n  height: 18px;\n  margin-right: 12px;\n  fill: ${colors.label};\n`;\n\ninterface InputProps {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  projectId?: string | null;\n  commentId: string;\n  commentType: 'parent' | 'child';\n  hasChildComments?: boolean;\n  last?: boolean;\n  className?: string;\n}\n\ninterface DataProps {\n  comment: GetCommentChildProps;\n  author: GetUserChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  editing: boolean;\n}\n\nclass Comment extends PureComponent<Props & InjectedIntlProps, State> {\n  static defaultProps = {\n    hasChildComment: false,\n    last: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n    };\n  }\n\n  onEditing = () => {\n    this.setState({ editing: true });\n  };\n\n  onCancelEditing = () => {\n    this.setState({ editing: false });\n  };\n\n  onCommentSaved = () => {\n    this.setState({ editing: false });\n  };\n\n  render() {\n    const {\n      postId,\n      postType,\n      projectId,\n      commentType,\n      comment,\n      author,\n      hasChildComments,\n      last,\n      className,\n    } = this.props;\n    const { editing } = this.state;\n\n    if (!isNilOrError(comment)) {\n      const commentId = comment.id;\n      const authorId = !isNilOrError(author) ? author.id : null;\n      const lastComment =\n        (commentType === 'parent' && !hasChildComments) ||\n        (commentType === 'child' && last === true);\n      const moderator =\n        !isNilOrError(author) &&\n        canModerateProject(projectId, { data: author });\n\n      return (\n        <Container\n          id={commentId}\n          className={`${className || ''} ${commentType} ${\n            commentType === 'parent' ? 'e2e-parentcomment' : 'e2e-childcomment'\n          } e2e-comment`}\n        >\n          <ContainerInner\n            className={`${commentType} ${lastComment ? 'lastComment' : ''}`}\n          >\n            {comment.attributes.publication_status === 'published' && (\n              <>\n                <CommentHeader\n                  projectId={projectId}\n                  authorId={authorId}\n                  commentId={commentId}\n                  commentType={commentType}\n                  commentCreatedAt={comment.attributes.created_at}\n                  moderator={moderator}\n                  className={commentType === 'parent' ? 'marginBottom' : ''}\n                />\n\n                <Content>\n                  <BodyAndFooter>\n                    <CommentBody\n                      commentId={commentId}\n                      commentType={commentType}\n                      editing={editing}\n                      onCommentSaved={this.onCommentSaved}\n                      onCancelEditing={this.onCancelEditing}\n                    />\n                    <CommentFooter\n                      className={commentType}\n                      postId={postId}\n                      postType={postType}\n                      projectId={projectId}\n                      commentId={commentId}\n                      commentType={commentType}\n                      onEditing={this.onEditing}\n                    />\n                  </BodyAndFooter>\n                </Content>\n              </>\n            )}\n\n            {comment.attributes.publication_status === 'deleted' && (\n              <DeletedComment>\n                <DeletedIcon name=\"delete\" />\n                <FormattedMessage {...messages.commentDeletedPlaceholder} />\n              </DeletedComment>\n            )}\n          </ContainerInner>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  comment: ({ commentId, render }) => (\n    <GetComment id={commentId}>{render}</GetComment>\n  ),\n  author: ({ comment, render }) => (\n    <GetUser id={get(comment, 'relationships.author.data.id')}>\n      {render}\n    </GetUser>\n  ),\n});\n\nconst CommentWithHoCs = injectIntl<Props>(Comment);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <CommentWithHoCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","// libraries\nimport React, { PureComponent } from 'react';\nimport { Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\nimport { get } from 'lodash-es';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Button from 'components/UI/Button';\nimport MentionsTextArea from 'components/UI/MentionsTextArea';\nimport Avatar from 'components/Avatar';\nimport clickOutside from 'utils/containers/clickOutside';\nimport Link from 'utils/cl-router/Link';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// services\nimport {\n  addCommentToIdeaComment,\n  addCommentToInitiativeComment,\n} from 'services/comments';\nimport { canModerateProject } from 'services/permissions/rules/projectPermissions';\n\n// resources\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetWindowSize, {\n  GetWindowSizeChildProps,\n} from 'resources/GetWindowSize';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\n\n// events\nimport { commentReplyButtonClicked$, commentAdded } from './events';\n\n// style\nimport styled from 'styled-components';\nimport { hideVisually } from 'polished';\nimport { colors, defaultStyles, viewportWidths } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin-left: -4px;\n  margin-right: 5px;\n  margin-top: 3px;\n`;\n\nconst FormContainer = styled(clickOutside)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst Form = styled.form`\n  flex: 1;\n  background: #fff;\n  border: 1px solid ${colors.border};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  &:not(.focused):hover {\n    border-color: ${colors.hoveredBorder};\n  }\n\n  &.focused {\n    border-color: ${colors.focussedBorder};\n    box-shadow: ${defaultStyles.boxShadowFocused};\n  }\n`;\n\nconst HiddenLabel = styled.span`\n  ${hideVisually()}\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 14px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n`;\n\nconst CancelButton = styled(Button)`\n  margin-right: 8px;\n`;\n\ninterface InputProps {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  projectId?: string | null;\n  parentId: string;\n  waitForChildCommentsRefetch: boolean;\n  className?: string;\n}\n\ninterface DataProps {\n  locale: GetLocaleChildProps;\n  authUser: GetAuthUserChildProps;\n  windowSize: GetWindowSizeChildProps;\n  appConfiguration: GetAppConfigurationChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  inputValue: string;\n  focused: boolean;\n  processing: boolean;\n  canSubmit: boolean;\n  profanityApiError: boolean;\n  hasApiError: boolean;\n}\n\nclass ChildCommentForm extends PureComponent<Props & InjectedIntlProps, State> {\n  textareaElement: HTMLTextAreaElement;\n  subscriptions: Subscription[] = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      focused: false,\n      processing: false,\n      canSubmit: false,\n      hasApiError: false,\n      profanityApiError: false,\n    };\n  }\n\n  componentDidMount() {\n    this.subscriptions = [\n      commentReplyButtonClicked$\n        .pipe(\n          tap(() => this.setState({ inputValue: '', focused: false })),\n          filter(({ eventValue }) => {\n            const { commentId, parentCommentId } = eventValue;\n            return (\n              commentId === this.props.parentId ||\n              parentCommentId === this.props.parentId\n            );\n          })\n        )\n        .subscribe(({ eventValue }) => {\n          const { authorFirstName, authorLastName, authorSlug } = eventValue;\n          const tag = `@[${authorFirstName} ${authorLastName}](${authorSlug}) `;\n          this.setState({ inputValue: tag, focused: true });\n        }),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  setCaretAtEnd(element: HTMLTextAreaElement) {\n    if (element.setSelectionRange && element.textContent) {\n      element.setSelectionRange(\n        element.textContent.length,\n        element.textContent.length\n      );\n    }\n  }\n\n  onChange = (inputValue: string) => {\n    const hasEmptyError = inputValue.trim() === '';\n\n    this.setState(({ focused }) => ({\n      inputValue,\n      hasApiError: false,\n      profanityApiError: false,\n      canSubmit: focused && !hasEmptyError,\n    }));\n  };\n\n  onFocus = () => {\n    const { postId, postType, parentId } = this.props;\n\n    trackEventByName(tracks.focusChildCommentEditor, {\n      extra: {\n        postId,\n        postType,\n        parentId,\n      },\n    });\n\n    this.setState({ focused: true });\n  };\n\n  onCancel = () => {\n    this.setState({ focused: false, inputValue: '' });\n  };\n\n  onSubmit = async () => {\n    const {\n      postId,\n      postType,\n      projectId,\n      parentId,\n      waitForChildCommentsRefetch,\n      locale,\n      authUser,\n      appConfiguration,\n    } = this.props;\n    const { inputValue, canSubmit } = this.state;\n\n    if (!isNilOrError(locale) && !isNilOrError(authUser) && canSubmit) {\n      const commentBodyMultiloc = {\n        [locale]: inputValue.replace(/@\\[(.*?)\\]\\((.*?)\\)/gi, '@$2'),\n      };\n\n      this.setState({\n        processing: true,\n        canSubmit: false,\n      });\n\n      trackEventByName(tracks.clickChildCommentPublish, {\n        extra: {\n          postId,\n          postType,\n          parentId,\n          content: inputValue,\n        },\n      });\n\n      try {\n        if (postType === 'idea' && projectId) {\n          await addCommentToIdeaComment(\n            postId,\n            projectId,\n            authUser.id,\n            parentId,\n            commentBodyMultiloc,\n            waitForChildCommentsRefetch\n          );\n        }\n\n        if (postType === 'initiative') {\n          await addCommentToInitiativeComment(\n            postId,\n            authUser.id,\n            parentId,\n            commentBodyMultiloc,\n            waitForChildCommentsRefetch\n          );\n        }\n\n        commentAdded();\n\n        this.setState({\n          inputValue: '',\n          processing: false,\n          focused: false,\n        });\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        if (process.env.NODE_ENV === 'development') console.log(error);\n        const apiErrors = get(error, 'json.errors');\n        const profanityApiError = apiErrors.base.find(\n          (apiError) => apiError.error === 'includes_banned_words'\n        );\n\n        this.setState({\n          hasApiError: true,\n          processing: false,\n        });\n\n        if (profanityApiError) {\n          trackEventByName(tracks.childCommentProfanityError.name, {\n            locale,\n            postId,\n            postType,\n            projectId,\n            profaneMessage: commentBodyMultiloc[locale],\n            location: 'InitiativesNewFormWrapper (citizen side)',\n            userId: authUser.id,\n            host: !isNilOrError(appConfiguration)\n              ? appConfiguration.attributes.host\n              : null,\n          });\n\n          this.setState({\n            profanityApiError: true,\n          });\n        }\n      }\n    }\n  };\n\n  setRef = (element: HTMLTextAreaElement) => {\n    this.textareaElement = element;\n\n    if (this.textareaElement) {\n      this.textareaElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n        inline: 'center',\n      });\n\n      setTimeout(() => {\n        this.textareaElement.focus();\n      }, 100);\n\n      setTimeout(() => {\n        this.setCaretAtEnd(this.textareaElement);\n      }, 200);\n    }\n  };\n\n  placeholder = this.props.intl.formatMessage(\n    messages.childCommentBodyPlaceholder\n  );\n\n  getErrorMessage = () => {\n    const { hasApiError, profanityApiError } = this.state;\n    const {\n      intl: { formatMessage },\n    } = this.props;\n\n    if (hasApiError) {\n      // Profanity error is the only error we're checking specifically\n      // at the moment to provide a specific error message.\n      // All other api errors are generalized to 1 error message\n      if (profanityApiError) {\n        return (\n          <FormattedMessage\n            {...messages.profanityError}\n            values={{\n              guidelinesLink: (\n                <Link to=\"/pages/faq\" target=\"_blank\">\n                  {formatMessage(messages.guidelinesLinkText)}\n                </Link>\n              ),\n            }}\n          />\n        );\n      }\n\n      return <FormattedMessage {...messages.addCommentError} />;\n    }\n\n    return null;\n  };\n\n  render() {\n    const { focused } = this.state;\n    const {\n      postId,\n      postType,\n      parentId,\n      authUser,\n      windowSize,\n      className,\n    } = this.props;\n\n    if (!isNilOrError(authUser) && focused) {\n      const { inputValue, canSubmit, processing, focused } = this.state;\n      const isModerator =\n        !isNilOrError(authUser) &&\n        canModerateProject(postId, { data: authUser });\n      const smallerThanSmallTablet =\n        !isNilOrError(windowSize) && windowSize <= viewportWidths.smallTablet;\n\n      return (\n        <Container className={`${className || ''} e2e-childcomment-form`}>\n          <StyledAvatar\n            userId={authUser?.id}\n            size={30}\n            isLinkToProfile={!!authUser?.id}\n            moderator={isModerator}\n          />\n          <FormContainer\n            onClickOutside={this.onCancel}\n            closeOnClickOutsideEnabled={false}\n          >\n            <Form className={focused ? 'focused' : ''}>\n              <label>\n                <HiddenLabel>\n                  <FormattedMessage {...messages.replyToComment} />\n                </HiddenLabel>\n                <MentionsTextArea\n                  className={`childcommentform-${parentId}`}\n                  name=\"comment\"\n                  placeholder={this.placeholder}\n                  rows={3}\n                  postId={postId}\n                  postType={postType}\n                  value={inputValue}\n                  error={this.getErrorMessage()}\n                  onChange={this.onChange}\n                  onFocus={this.onFocus}\n                  fontWeight=\"300\"\n                  padding=\"10px\"\n                  borderRadius=\"none\"\n                  border=\"none\"\n                  boxShadow=\"none\"\n                  getTextareaRef={this.setRef}\n                />\n                <ButtonWrapper>\n                  <CancelButton\n                    disabled={processing}\n                    onClick={this.onCancel}\n                    buttonStyle=\"secondary\"\n                    padding={smallerThanSmallTablet ? '6px 12px' : undefined}\n                  >\n                    <FormattedMessage {...messages.cancel} />\n                  </CancelButton>\n                  <Button\n                    className=\"e2e-submit-childcomment\"\n                    processing={processing}\n                    onClick={this.onSubmit}\n                    disabled={!canSubmit}\n                    padding={smallerThanSmallTablet ? '6px 12px' : undefined}\n                  >\n                    <FormattedMessage {...messages.publishComment} />\n                  </Button>\n                </ButtonWrapper>\n              </label>\n            </Form>\n          </FormContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst ChildCommentFormWithHoCs = injectIntl<Props>(ChildCommentForm);\n\nconst Data = adopt<DataProps, InputProps>({\n  locale: <GetLocale />,\n  authUser: <GetAuthUser />,\n  windowSize: <GetWindowSize />,\n  appConfiguration: <GetAppConfiguration />,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <ChildCommentFormWithHoCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  a11y_postedBy: {\n    id: 'app.components.Author.a11y_postedBy',\n    defaultMessage: 'Posted by: ',\n  },\n});\n","import React, { PureComponent } from 'react';\nimport FilterSelector from 'components/FilterSelector';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport styled from 'styled-components';\nimport { CommentsSort } from 'services/comments';\n\nconst Container = styled.div``;\n\ninterface Props {\n  id?: string | undefined;\n  onChange: (value: CommentsSort) => void;\n  selectedValue: CommentsSort[];\n  className?: string;\n}\n\ninterface State {}\n\nexport default class CommentSorting extends PureComponent<Props, State> {\n  handleOnChange = (selectedValue: [CommentsSort]) => {\n    this.setState({ selectedValue });\n    this.props.onChange(selectedValue[0]);\n  };\n\n  title = (<FormattedMessage {...messages.commentsSortTitle} />);\n\n  sortOptions = [\n    { text: <FormattedMessage {...messages.oldestToNewest} />, value: '-new' },\n    {\n      text: <FormattedMessage {...messages.mostUpvoted} />,\n      value: '-upvotes_count',\n    },\n  ];\n\n  render() {\n    const { className, selectedValue } = this.props;\n\n    return (\n      <Container className={className}>\n        <FilterSelector\n          id=\"e2e-comments-sort-filter\"\n          title={this.title}\n          name=\"sort\"\n          selected={selectedValue}\n          values={this.sortOptions}\n          onChange={this.handleOnChange}\n          multipleSelectionAllowed={false}\n          width=\"180px\"\n          right=\"-10px\"\n          mobileLeft=\"-5px\"\n        />\n      </Container>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Warning from 'components/UI/Warning';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// events\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\nimport { openSignUpInModal } from 'components/SignUpIn/events';\n\n// styling\nimport styled from 'styled-components';\nimport GetInitiativesPermissions, {\n  GetInitiativesPermissionsChildProps,\n} from 'resources/GetInitiativesPermissions';\n\nconst Container = styled.div`\n  margin-bottom: 30px;\n`;\n\ninterface InputProps {}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  commetingPermissions: GetInitiativesPermissionsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nclass CommentingInitiativesDisabled extends PureComponent<Props> {\n  calculateMessageDescriptor = () => {\n    const { authUser, commetingPermissions } = this.props;\n    const isLoggedIn = !isNilOrError(authUser);\n    if (commetingPermissions?.enabled === true) {\n      return null;\n    } else if (\n      commetingPermissions?.disabledReason === 'notPermitted' &&\n      !isLoggedIn\n    ) {\n      return messages.commentingInitiativeMaybeNotPermitted;\n    } else if (\n      commetingPermissions?.disabledReason === 'notPermitted' &&\n      isLoggedIn\n    ) {\n      return messages.commentingInitiativeNotPermitted;\n    } else if (commetingPermissions?.action === 'verify') {\n      return messages.commentingDisabledUnverified;\n    } else if (commetingPermissions?.action === 'sign_in_up') {\n      return messages.signInToCommentInitiative;\n    } else if (commetingPermissions?.action === 'sign_in_up_and_verify') {\n      return messages.signInAndVerifyToCommentInitiative;\n    }\n    return;\n  };\n\n  onVerify = () => {\n    const { commetingPermissions } = this.props;\n    if (commetingPermissions?.action === 'verify') {\n      openVerificationModal({\n        context: {\n          action: 'commenting_initiative',\n          type: 'initiative',\n        },\n      });\n    }\n  };\n\n  signUpIn = (flow: 'signin' | 'signup') => {\n    const { authUser, commetingPermissions } = this.props;\n\n    if (isNilOrError(authUser)) {\n      openSignUpInModal({\n        flow,\n        verification: commetingPermissions?.action === 'sign_in_up_and_verify',\n        verificationContext:\n          commetingPermissions?.action === 'sign_in_up_and_verify'\n            ? {\n                action: 'commenting_initiative',\n                type: 'initiative',\n              }\n            : undefined,\n      });\n    }\n  };\n\n  signIn = () => {\n    this.signUpIn('signin');\n  };\n\n  signUp = () => {\n    this.signUpIn('signup');\n  };\n\n  render() {\n    const messageDescriptor = this.calculateMessageDescriptor();\n\n    if (messageDescriptor) {\n      return (\n        <Container className=\"e2e-commenting-disabled\">\n          <Warning>\n            <FormattedMessage\n              {...messageDescriptor}\n              values={{\n                signUpLink: (\n                  <button onClick={this.signUp}>\n                    <FormattedMessage {...messages.signUpLinkText} />\n                  </button>\n                ),\n                signInLink: (\n                  <button onClick={this.signIn}>\n                    <FormattedMessage {...messages.signInLinkText} />\n                  </button>\n                ),\n                verificationLink: (\n                  <button onClick={this.onVerify}>\n                    <FormattedMessage {...messages.verifyIdentityLinkText} />\n                  </button>\n                ),\n              }}\n            />\n          </Warning>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  commetingPermissions: (\n    <GetInitiativesPermissions action=\"commenting_initiative\" />\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <CommentingInitiativesDisabled {...inputProps} {...dataProps} />\n    )}\n  </Data>\n);\n","import React, { memo, useCallback } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { get } from 'lodash-es';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// events\nimport { commentReplyButtonClicked } from './events';\nimport { openSignUpInModal } from 'components/SignUpIn/events';\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// types\nimport { GetUserChildProps } from 'resources/GetUser';\nimport { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport { GetCommentChildProps } from 'resources/GetComment';\nimport { GetPostChildProps } from 'resources/GetPost';\nimport { GetInitiativesPermissionsChildProps } from 'resources/GetInitiativesPermissions';\n\nconst Container = styled.li`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ReplyButton = styled.button`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  white-space: nowrap;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  border: none;\n\n  &:hover {\n    color: #000;\n    text-decoration: underline;\n  }\n`;\n\ninterface Props {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  commentId: string;\n  commentType: 'parent' | 'child' | undefined;\n  authUser: GetAuthUserChildProps;\n  author: GetUserChildProps;\n  post: GetPostChildProps;\n  comment: GetCommentChildProps;\n  commentingPermissionInitiative: GetInitiativesPermissionsChildProps;\n  className?: string;\n}\n\nconst CommentReplyButton = memo<Props>(\n  ({\n    postType,\n    commentType,\n    authUser,\n    author,\n    post,\n    comment,\n    commentingPermissionInitiative,\n    className,\n  }) => {\n    const onReply = useCallback(() => {\n      if (!isNilOrError(post) && !isNilOrError(comment)) {\n        const commentId = !isNilOrError(comment) ? comment.id : null;\n        const parentCommentId = !isNilOrError(comment)\n          ? comment.relationships.parent.data?.id || null\n          : null;\n        const authorFirstName = !isNilOrError(author)\n          ? author.attributes.first_name\n          : null;\n        const authorLastName = !isNilOrError(author)\n          ? author.attributes.last_name\n          : null;\n        const authorSlug = !isNilOrError(author)\n          ? author.attributes.slug\n          : null;\n\n        if (post.type === 'idea') {\n          const {\n            clickChildCommentReplyButton,\n            clickParentCommentReplyButton,\n          } = tracks;\n          const commentingDisabledReason = get(\n            post,\n            'attributes.action_descriptor.commenting_idea.disabled_reason'\n          );\n          const authUserIsVerified =\n            !isNilOrError(authUser) && authUser.attributes.verified;\n\n          trackEventByName(\n            commentType === 'child'\n              ? clickChildCommentReplyButton\n              : clickParentCommentReplyButton,\n            {\n              loggedIn: !!authUser,\n            }\n          );\n\n          if (!isNilOrError(authUser) && !commentingDisabledReason) {\n            commentReplyButtonClicked({\n              commentId,\n              parentCommentId,\n              authorFirstName,\n              authorLastName,\n              authorSlug,\n            });\n          } else if (\n            !isNilOrError(authUser) &&\n            !authUserIsVerified &&\n            commentingDisabledReason === 'not_verified'\n          ) {\n            openVerificationModal();\n          } else if (!authUser) {\n            openSignUpInModal({\n              verification: commentingDisabledReason === 'not_verified',\n              action: () => onReply(),\n            });\n          }\n        } else {\n          if (commentingPermissionInitiative?.action === 'sign_in_up') {\n            openSignUpInModal({\n              action: () => onReply(),\n            });\n          } else if (\n            commentingPermissionInitiative?.action === 'sign_in_up_and_verify'\n          ) {\n            openSignUpInModal({\n              action: () => onReply(),\n              verification: true,\n              verificationContext: {\n                action: 'commenting_initiative',\n                type: 'initiative',\n              },\n            });\n          } else if (commentingPermissionInitiative?.action === 'verify') {\n            openVerificationModal({\n              context: {\n                action: 'commenting_initiative',\n                type: 'initiative',\n              },\n            });\n          } else if (commentingPermissionInitiative?.enabled === true) {\n            commentReplyButtonClicked({\n              commentId,\n              parentCommentId,\n              authorFirstName,\n              authorLastName,\n              authorSlug,\n            });\n          }\n        }\n      }\n    }, [\n      authUser,\n      author,\n      commentType,\n      post,\n      comment,\n      commentingPermissionInitiative,\n    ]);\n\n    if (!isNilOrError(comment)) {\n      const commentingDisabledReason = get(\n        post,\n        'attributes.action_descriptor.commenting_idea.disabled_reason'\n      );\n      const isCommentDeleted =\n        comment.attributes.publication_status === 'deleted';\n      const isSignedIn = !isNilOrError(authUser);\n      const disabled =\n        postType === 'initiative'\n          ? !commentingPermissionInitiative?.enabled\n          : isSignedIn && commentingDisabledReason === 'not_permitted';\n\n      if (!isCommentDeleted && !disabled) {\n        return (\n          <Container className={`reply ${className || ''}`}>\n            <ReplyButton onClick={onReply} className=\"e2e-comment-reply-button\">\n              <FormattedMessage {...messages.commentReplyButton} />\n            </ReplyButton>\n          </Container>\n        );\n      }\n    }\n\n    return null;\n  }\n);\n\nexport default CommentReplyButton;\n","import React, { PureComponent } from 'react';\nimport { isString, trim, get } from 'lodash-es';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Button from 'components/UI/Button';\nimport MentionsTextArea from 'components/UI/MentionsTextArea';\nimport Avatar from 'components/Avatar';\nimport clickOutside from 'utils/containers/clickOutside';\nimport Link from 'utils/cl-router/Link';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport messages from './messages';\n\n// services\nimport { addCommentToIdea, addCommentToInitiative } from 'services/comments';\nimport { canModerateProject } from 'services/permissions/rules/projectPermissions';\n\n// resources\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetPost, { GetPostChildProps } from 'resources/GetPost';\nimport GetWindowSize, {\n  GetWindowSizeChildProps,\n} from 'resources/GetWindowSize';\n\n// events\nimport { commentAdded } from './events';\n\n// style\nimport styled from 'styled-components';\nimport { hideVisually } from 'polished';\nimport { colors, defaultStyles, viewportWidths } from 'utils/styleUtils';\nimport GetInitiativesPermissions, {\n  GetInitiativesPermissionsChildProps,\n} from 'resources/GetInitiativesPermissions';\nimport { GetAppConfigurationChildProps } from 'resources/GetAppConfiguration';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin-left: -4px;\n  margin-right: 5px;\n  margin-top: 3px;\n`;\n\nconst FormContainer = styled(clickOutside)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  position: relative;\n`;\n\nconst Anchor = styled.div`\n  width: 1px;\n  height: 1px;\n  position: absolute;\n  top: -100px;\n  left: 0px;\n`;\n\nconst Form = styled.form`\n  flex: 1;\n  border: 1px solid ${colors.border};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  overflow: hidden;\n\n  &:not(.focused):hover {\n    border-color: ${colors.hoveredBorder};\n  }\n\n  &.focused {\n    border-color: ${colors.focussedBorder};\n    box-shadow: ${defaultStyles.boxShadowFocused};\n  }\n`;\n\nconst HiddenLabel = styled.span`\n  ${hideVisually()}\n`;\n\nconst ButtonWrapper = styled.div`\n  justify-content: flex-end;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  display: none;\n\n  &.visible {\n    display: flex;\n  }\n`;\n\nconst CancelButton = styled(Button)`\n  margin-right: 8px;\n`;\n\ninterface InputProps {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  postingComment: (arg: boolean) => void;\n  className?: string;\n}\n\ninterface DataProps {\n  commentingPermissionInitiative: GetInitiativesPermissionsChildProps;\n  locale: GetLocaleChildProps;\n  authUser: GetAuthUserChildProps;\n  post: GetPostChildProps;\n  windowSize: GetWindowSizeChildProps;\n  appConfiguration: GetAppConfigurationChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  inputValue: string;\n  focused: boolean;\n  processing: boolean;\n  profanityApiError: boolean;\n  hasEmptyError: boolean;\n  hasApiError: boolean;\n}\n\nclass ParentCommentForm extends PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  textareaElement: HTMLTextAreaElement | null = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      focused: false,\n      processing: false,\n      hasApiError: false,\n      profanityApiError: false,\n      hasEmptyError: true,\n    };\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.processing !== this.state.processing) {\n      this.props.postingComment(this.state.processing);\n    }\n  }\n\n  onChange = (inputValue: string) => {\n    this.setState({\n      inputValue,\n      focused: true,\n      hasApiError: false,\n      profanityApiError: false,\n      hasEmptyError: inputValue.trim().length < 1,\n    });\n  };\n\n  onFocus = () => {\n    const { postId, postType } = this.props;\n\n    trackEventByName(tracks.focusParentCommentEditor, {\n      extra: {\n        postId,\n        postType,\n      },\n    });\n\n    this.setState({ focused: true });\n  };\n\n  close = () => {\n    if (!this.state.processing) {\n      this.setState({ focused: false, inputValue: '' });\n      this.textareaElement?.blur();\n    }\n  };\n\n  onSubmit = async () => {\n    const {\n      locale,\n      authUser,\n      postId,\n      postType,\n      post,\n      appConfiguration,\n    } = this.props;\n    const { inputValue } = this.state;\n    const projectId: string | null = get(\n      post,\n      'relationships.project.data.id',\n      null\n    );\n\n    this.setState({\n      focused: false,\n      processing: true,\n    });\n\n    if (locale && authUser && isString(inputValue) && trim(inputValue) !== '') {\n      const commentBodyMultiloc = {\n        [locale]: inputValue.replace(/@\\[(.*?)\\]\\((.*?)\\)/gi, '@$2'),\n      };\n\n      trackEventByName(tracks.clickParentCommentPublish, {\n        extra: {\n          postId,\n          postType,\n          content: inputValue,\n        },\n      });\n\n      try {\n        this.setState({ processing: true });\n\n        if (postType === 'idea' && projectId) {\n          await addCommentToIdea(\n            postId,\n            projectId,\n            authUser.id,\n            commentBodyMultiloc\n          ).then((comment) => {\n            const parentComment = document.getElementById(comment.data.id);\n            if (parentComment) {\n              setTimeout(() => {\n                parentComment.scrollIntoView({ behavior: 'smooth' });\n              }, 100);\n            }\n          });\n        }\n\n        if (postType === 'initiative') {\n          await addCommentToInitiative(\n            postId,\n            authUser.id,\n            commentBodyMultiloc\n          ).then((comment) => {\n            const parentComment = document.getElementById(comment.data.id);\n            if (parentComment) {\n              setTimeout(() => {\n                parentComment.scrollIntoView({ behavior: 'smooth' });\n              }, 100);\n            }\n          });\n        }\n\n        commentAdded();\n        this.setState({ processing: false });\n        this.close();\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        if (process.env.NODE_ENV === 'development') console.log(error);\n        const apiErrors = get(error, 'json.errors');\n        const profanityApiError = apiErrors.base.find(\n          (apiError) => apiError.error === 'includes_banned_words'\n        );\n\n        this.setState({\n          hasApiError: true,\n          processing: false,\n        });\n\n        if (profanityApiError) {\n          trackEventByName(tracks.parentCommentProfanityError.name, {\n            locale,\n            postId,\n            postType,\n            projectId,\n            profaneMessage: commentBodyMultiloc[locale],\n            location: 'InitiativesNewFormWrapper (citizen side)',\n            userId: authUser.id,\n            host: !isNilOrError(appConfiguration)\n              ? appConfiguration.attributes.host\n              : null,\n          });\n\n          this.setState({\n            profanityApiError: true,\n          });\n        }\n\n        throw error;\n      }\n    }\n  };\n\n  setRef = (element: HTMLTextAreaElement) => {\n    this.textareaElement = element;\n  };\n\n  getErrorMessage = () => {\n    const { hasApiError, profanityApiError } = this.state;\n    const {\n      intl: { formatMessage },\n    } = this.props;\n\n    if (hasApiError) {\n      // Profanity error is the only error we're checking specifically\n      // at the moment to provide a specific error message.\n      // All other api errors are generalized to 1 error message\n      if (profanityApiError) {\n        return (\n          <FormattedMessage\n            {...messages.profanityError}\n            values={{\n              guidelinesLink: (\n                <Link to=\"/pages/faq\" target=\"_blank\">\n                  {formatMessage(messages.guidelinesLinkText)}\n                </Link>\n              ),\n            }}\n          />\n        );\n      }\n\n      return <FormattedMessage {...messages.addCommentError} />;\n    }\n\n    return null;\n  };\n\n  render() {\n    const {\n      authUser,\n      post,\n      postId,\n      postType,\n      className,\n      intl: { formatMessage },\n      commentingPermissionInitiative,\n      windowSize,\n    } = this.props;\n    const { inputValue, focused, processing, hasEmptyError } = this.state;\n    const commentingEnabled =\n      postType === 'initiative'\n        ? commentingPermissionInitiative?.enabled === true\n        : get(\n            post,\n            'attributes.action_descriptor.commenting_idea.enabled',\n            true\n          );\n    const projectId: string | null = get(\n      post,\n      'relationships.project.data.id',\n      null\n    );\n    const isModerator =\n      !isNilOrError(authUser) &&\n      canModerateProject(projectId, { data: authUser });\n    const canComment = authUser && commentingEnabled;\n    const placeholder = formatMessage(\n      messages[`${postType}CommentBodyPlaceholder`]\n    );\n    const smallerThanSmallTablet =\n      !isNilOrError(windowSize) && windowSize <= viewportWidths.smallTablet;\n\n    if (!isNilOrError(authUser) && canComment) {\n      return (\n        <Container className={className || ''}>\n          <StyledAvatar\n            userId={authUser?.id}\n            size={30}\n            isLinkToProfile={!!authUser?.id}\n            moderator={isModerator}\n          />\n          <FormContainer\n            className=\"ideaCommentForm\"\n            onClickOutside={this.close}\n            closeOnClickOutsideEnabled={false}\n          >\n            <Anchor id=\"submit-comment-anchor\" />\n            <Form className={focused ? 'focused' : ''}>\n              <label htmlFor=\"submit-comment\">\n                <HiddenLabel>\n                  <FormattedMessage {...messages.yourComment} />\n                </HiddenLabel>\n                <MentionsTextArea\n                  id=\"submit-comment\"\n                  className=\"e2e-parent-comment-form\"\n                  name=\"comment\"\n                  placeholder={placeholder}\n                  rows={focused || processing ? 4 : 1}\n                  postId={postId}\n                  postType={postType}\n                  value={inputValue}\n                  error={this.getErrorMessage()}\n                  onChange={this.onChange}\n                  onFocus={this.onFocus}\n                  fontWeight=\"300\"\n                  padding=\"10px\"\n                  borderRadius=\"none\"\n                  border=\"none\"\n                  boxShadow=\"none\"\n                  getTextareaRef={this.setRef}\n                />\n                <ButtonWrapper\n                  className={focused || processing ? 'visible' : ''}\n                >\n                  <CancelButton\n                    disabled={processing}\n                    onClick={this.close}\n                    buttonStyle=\"secondary\"\n                    padding={smallerThanSmallTablet ? '6px 12px' : undefined}\n                  >\n                    <FormattedMessage {...messages.cancel} />\n                  </CancelButton>\n                  <Button\n                    className=\"e2e-submit-parentcomment\"\n                    processing={processing}\n                    onClick={this.onSubmit}\n                    disabled={hasEmptyError}\n                    padding={smallerThanSmallTablet ? '6px 12px' : undefined}\n                  >\n                    <FormattedMessage {...messages.publishComment} />\n                  </Button>\n                </ButtonWrapper>\n              </label>\n            </Form>\n          </FormContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  locale: <GetLocale />,\n  authUser: <GetAuthUser />,\n  windowSize: <GetWindowSize />,\n  post: ({ postId, postType, render }) => (\n    <GetPost id={postId} type={postType}>\n      {render}\n    </GetPost>\n  ),\n  commentingPermissionInitiative: (\n    <GetInitiativesPermissions action=\"commenting_initiative\" />\n  ),\n});\n\nconst ParentCommentFormWithHoCs = injectIntl<Props>(ParentCommentForm);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <ParentCommentFormWithHoCs {...inputProps} {...dataProps} />\n    )}\n  </Data>\n);\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Warning from 'components/UI/Warning';\nimport T from 'components/T';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\n\n// services\nimport { IdeaCommentingDisabledReason } from 'services/ideas';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// events\nimport { openVerificationModal } from 'components/Verification/verificationModalEvents';\nimport { openSignUpInModal } from 'components/SignUpIn/events';\n\n// styling\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 15px;\n  margin-bottom: 30px;\n`;\n\ninterface InputProps {\n  projectId: string | null;\n  phaseId: string | undefined;\n  postId: string;\n  postType: 'idea' | 'initiative';\n  commentingEnabled: boolean | null;\n  commentingDisabledReason: IdeaCommentingDisabledReason | null;\n}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  project: GetProjectChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nclass CommentingDisabled extends PureComponent<Props> {\n  calculateMessageDescriptor = () => {\n    const {\n      authUser,\n      commentingEnabled,\n      commentingDisabledReason,\n    } = this.props;\n    const isLoggedIn = !isNilOrError(authUser);\n    if (commentingEnabled) {\n      return null;\n    } else if (commentingDisabledReason === 'project_inactive') {\n      return messages.commentingDisabledInactiveProject;\n    } else if (commentingDisabledReason === 'commenting_disabled') {\n      return messages.commentingDisabledProject;\n    } else if (commentingDisabledReason === 'idea_not_in_current_phase') {\n      return messages.commentingDisabledInCurrentPhase;\n    } else if (isLoggedIn && commentingDisabledReason === 'not_verified') {\n      return messages.commentingDisabledUnverified;\n    } else if (isLoggedIn && commentingDisabledReason === 'not_permitted') {\n      return messages.commentingDisabledProject;\n    } else if (!isLoggedIn) {\n      return messages.commentingMaybeNotPermitted;\n    }\n\n    return messages.signInToComment;\n  };\n\n  onVerify = () => {\n    const { projectId, phaseId, commentingDisabledReason } = this.props;\n    const pcType = phaseId ? 'phase' : projectId ? 'project' : null;\n    const pcId =\n      pcType === 'phase' ? phaseId : pcType === 'project' ? projectId : null;\n\n    if (pcId && pcType && commentingDisabledReason === 'not_verified') {\n      openVerificationModal({\n        context: {\n          action: 'commenting_idea',\n          id: pcId,\n          type: pcType,\n        },\n      });\n    }\n  };\n\n  signUpIn = (flow: 'signin' | 'signup') => {\n    const { projectId, phaseId, commentingDisabledReason } = this.props;\n    const pcType = phaseId ? 'phase' : projectId ? 'project' : null;\n    const pcId =\n      pcType === 'phase' ? phaseId : pcType === 'project' ? projectId : null;\n\n    openSignUpInModal({\n      flow,\n      verification: commentingDisabledReason === 'not_verified',\n      verificationContext:\n        commentingDisabledReason === 'not_verified' && pcId && pcType\n          ? {\n              action: 'commenting_idea',\n              id: pcId,\n              type: pcType,\n            }\n          : undefined,\n    });\n  };\n\n  signIn = () => {\n    this.signUpIn('signin');\n  };\n\n  signUp = () => {\n    this.signUpIn('signup');\n  };\n\n  render() {\n    const { project } = this.props;\n    const messageDescriptor = this.calculateMessageDescriptor();\n    const projectTitle = !isNilOrError(project)\n      ? project.attributes.title_multiloc\n      : null;\n\n    if (messageDescriptor) {\n      return (\n        <Container className=\"e2e-commenting-disabled\">\n          <Warning>\n            <FormattedMessage\n              {...messageDescriptor}\n              values={{\n                signUpLink: (\n                  <button onClick={this.signUp}>\n                    <FormattedMessage {...messages.signUpLinkText} />\n                  </button>\n                ),\n                signInLink: (\n                  <button onClick={this.signIn}>\n                    <FormattedMessage {...messages.signInLinkText} />\n                  </button>\n                ),\n                verifyIdentityLink: (\n                  <button onClick={this.onVerify}>\n                    <FormattedMessage {...messages.verifyIdentityLinkText} />\n                  </button>\n                ),\n                projectName: projectTitle && <T value={projectTitle} />,\n              }}\n            />\n          </Warning>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <CommentingDisabled {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Avatar from 'components/Avatar';\nimport UserName from 'components/UI/UserName';\n\n// services\nimport { canModerateProject } from 'services/permissions/rules/projectPermissions';\n\n// hooks\nimport useUser from 'hooks/useUser';\n\n// i18n\nimport { FormattedRelative } from 'react-intl';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors, fontSizes, isRtl } from 'utils/styleUtils';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  ${isRtl`\n    justify-content: flex-end;\n  `}\n\n  ${media.smallPhone`\n    flex-direction: column;\n  `}\n`;\n\nconst AuthorContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin-right: 6px;\n  margin-bottom: 1px;\n\n  ${isRtl`\n    margin-right: 0;\n    margin-left: 6px;\n  `}\n`;\n\nconst AuthorMeta = styled.div`\n  &.horizontalLayout {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n\n    ${isRtl`\n        flex-direction: row-reverse;\n    `}\n  }\n`;\n\nconst AuthorNameContainer = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  line-height: 16px;\n  text-decoration: none;\n\n  &.horizontalLayout {\n    margin-right: 10px;\n\n    ${isRtl`\n        margin-right: 0;\n        margin-left: 10px;\n    `}\n  }\n`;\n\nconst TimeAgo = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  line-height: 16px;\n  margin-top: 3px;\n\n  &.horizontalLayout {\n    margin-top: 2px;\n  }\n`;\n\nexport interface Props {\n  authorId: string | null;\n  createdAt?: string;\n  size: number;\n  isLinkToProfile?: boolean;\n  projectId?: string | null;\n  showAvatar?: boolean;\n  avatarBadgeBgColor?: string;\n  showModeration?: boolean; // will show red styling on admins and moderators of projectId\n  fontWeight?: number;\n  fontSize?: number;\n  className?: string;\n  horizontalLayout?: boolean;\n  underline?: boolean;\n  color?: string;\n}\n\nconst Author = memo(\n  ({\n    authorId,\n    createdAt,\n    size,\n    isLinkToProfile,\n    projectId,\n    showAvatar = true,\n    showModeration,\n    className,\n    avatarBadgeBgColor,\n    fontWeight,\n    fontSize,\n    horizontalLayout,\n    color,\n    underline,\n  }: Props) => {\n    const author = useUser({ userId: authorId });\n    const authorCanModerate =\n      !isNilOrError(author) &&\n      showModeration &&\n      canModerateProject(projectId, { data: author });\n\n    return (\n      <Container className={className}>\n        <AuthorContainer>\n          {showAvatar && (\n            <StyledAvatar\n              userId={authorId}\n              size={size}\n              isLinkToProfile={isLinkToProfile}\n              moderator={authorCanModerate}\n              bgColor={avatarBadgeBgColor}\n            />\n          )}\n\n          <AuthorMeta className={horizontalLayout ? 'horizontalLayout' : ''}>\n            <AuthorNameContainer\n              className={horizontalLayout ? 'horizontalLayout' : ''}\n            >\n              <ScreenReaderOnly>\n                <FormattedMessage {...messages.a11y_postedBy} />:\n              </ScreenReaderOnly>\n              <UserName\n                userId={authorId}\n                isLinkToProfile={isLinkToProfile}\n                canModerate={authorCanModerate}\n                fontWeight={fontWeight}\n                fontSize={fontSize}\n                color={color}\n                underline={underline}\n              />\n            </AuthorNameContainer>\n\n            {createdAt && (\n              <TimeAgo className={horizontalLayout ? 'horizontalLayout' : ''}>\n                <FormattedRelative value={createdAt} />\n              </TimeAgo>\n            )}\n          </AuthorMeta>\n        </AuthorContainer>\n      </Container>\n    );\n  }\n);\n\nexport default Author;\n"],"sourceRoot":""}