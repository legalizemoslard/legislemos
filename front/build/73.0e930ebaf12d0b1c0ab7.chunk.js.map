{"version":3,"sources":["webpack:///./app/modules/commercial/insights/hooks/useInsightsCategories.tsx","webpack:///./app/modules/commercial/insights/admin/components/Navigation/index.tsx","webpack:///./app/modules/commercial/insights/utils/getInputsCategoryFilter.ts","webpack:///./app/components/UI/CheckboxWithPartialCheck/index.tsx","webpack:///./app/modules/commercial/insights/hooks/useInsightsInputsCount.tsx","webpack:///./app/modules/commercial/insights/admin/components/Category/index.tsx","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/InputDetails/index.tsx","webpack:///./app/modules/commercial/insights/services/batchAssignment.ts","webpack:///./app/components/UI/SideModal/messages.ts","webpack:///./app/modules/commercial/insights/hooks/useInsightsInput.ts","webpack:///./app/modules/commercial/insights/admin/components/Idea/index.tsx","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/InputsTable/ScanCategory.tsx","webpack:///./app/modules/commercial/insights/services/insightsCategoriesSuggestionsTasks.ts","webpack:///./app/components/Pagination/index.tsx","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/InputsTable/EmptyState.tsx","webpack:///./app/modules/commercial/insights/hooks/useInsightsCategoriesSuggestionsTasks.tsx","webpack:///./app/hooks/useKeyPress.ts","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/index.tsx","webpack:///./app/modules/commercial/insights/hooks/useInsightsInputs.ts","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/InputsTable/TableTitle.tsx","webpack:///./app/modules/commercial/insights/services/insightsInputs.ts","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/InputsTable/Actions.tsx","webpack:///./app/components/admin/Divider.tsx","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/Categories/index.tsx","webpack:///./app/modules/commercial/insights/services/insightsInputsCount.ts","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/RenameCategory.tsx","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/InputsTable/index.tsx","webpack:///./app/modules/commercial/insights/hooks/useInsightsCategory.tsx","webpack:///./app/modules/commercial/insights/admin/containers/Insights/tracks.ts","webpack:///./app/modules/commercial/insights/admin/containers/Insights/Edit/InputsTable/InputsTableRow.tsx","webpack:///./app/components/UI/SideModal/index.tsx","webpack:///./node_modules/react-select/creatable/dist/react-select.esm.js"],"names":["viewId","useState","undefined","insightsCategories","setInsightsCategories","useEffect","subscription","insightsCategoriesStream","observable","subscribe","data","unsubscribe","StyledNavigation","styled","div","StyledChevronButton","Button","moveUp","moveDown","isMoveUpDisabled","isMoveDownDisabled","upArrow","downArrow","iconSize","locale","icon","buttonStyle","onClick","disabled","id","categoryQuery","processedQuery","Container","isRtl","size","parseInt","CustomInputWrapper","colors","separationDark","props","theme","borderRadius","checked","clGreen","clBlueLightest","CheckmarkIcon","Icon","Label","label","fontSizes","base","CheckboxWithPartialCheck","event","targetElement","get","parentElement","targetElementIsLink","hasAttribute","parentElementIsLink","preventDefault","onChange","keyCode","this","className","notFocusable","testid","onMouseDown","removeFocus","handleOnClick","onKeyDown","handleOnKeyDown","role","tabIndex","ariaHidden","name","PureComponent","queryParameters","insightsInputsCount","setInsightsInputsCount","category","search","processed","insightsInputsCountStream","withRouter","inputId","variant","params","withAction","loading","setLoading","isNilOrError","handleCategoryAction","deleteInsightsInputCategory","addInsightsInputCategory","attributes","onIconClick","CategoryList","FormContainer","form","StyledPlus","LoadingContainer","injectIntl","formatMessage","intl","previewedInputId","selectRef","useRef","selectedOption","setSelectedOption","isSelectFocused","setIsSelectFocused","nlpFeatureFlag","categories","previewedInput","Spinner","ideaId","relationships","source","options","filter","map","includes","value","handleCreate","addInsightsCategory","result","trackEventByName","tracks","createCategoryFromInput","handleSubmit","current","blur","addCategoryFromInput","suggested_categories","key","htmlFor","messages","addCategoryLabel","styles","selectStyles","placeholder","addCategoryPlaceholder","onCreateOption","option","formatCreateLabel","createCategoryPrompt","onFocus","onBlur","e","ref","fontSize","xxxl","bgColor","adminTextColor","padding","processing","getInsightsBatchEndpoint","insightsViewId","inputs","streams","add","API_PATH","res","fetchAllWith","partialApiEndpoint","defineMessages","closeButtonAria","defaultMessage","insightsInput","setInsightsInput","insightsInputStream","IdeaTitle","h2","xl","IdeaBody","idea","title_multiloc","body_multiloc","supportHtml","ScanContainer","small","query","location","useMemo","categorySuggestionsPendingTasks","length","suggestCategories","insightsTriggerCategoriesSuggestionsTasks","scanForSuggestions","categoriesEmptyScanTitle","categoriesEmptyScanDescription","categoriesEmptyScanButton","textColor","getInsightsCategorySuggestionsTasksEndpoint","insightsCategoriesSuggestionsTasksStream","streamParams","apiEndpoint","cacheStream","pollingStream","interval","response","pipe","skip","takeWhile","finalize","ContainerInner","ChevronIcon","NavigateButton","button","clIconAccent","Next","Back","Pages","Item","useColorsTheme","colorText","lightGreyishBlue","colorMain","rgba","item","loadPage","page","totalPages","currentPage","l","last","left","right","range","rangeWithDots","i","push","forEach","pageItems","calculateMenuItems","goTo","handleItemClick","toString","StyledEmptyState","inputsCategoryFilter","inputsTableNoResults","inputsTableNoResultsDescription","inputsTableEmpty","inputsTableNotCategorized","inputsTableCategoryTitle","inputsTableCategoryDescription","inputsTableRecentlyPosted","insightsCategoriesSuggestions","setInsightsCategoriesSuggestions","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","stylingConsts","menuHeight","topBarHeight","media","smallerThan1280px","insightsInputs","setInsightsInputs","lastPage","setLastPage","pageNumber","pageSize","sort","insightsInputsStream","getPageNumberFromUrl","links","list","StyledHeader","large","StyledTooltipContent","p","DropdownWrapper","TitleContainer","pathname","renameCategoryModalOpened","setRenameCategoryModalOpened","isCategoryMenuOpened","setCategoryMenuOpened","closeCategoryRenameModal","handleDeleteCategory","deleteMessage","deleteCategoryConfirmation","confirm","deleteInsightsCategory","clHistory","stringify","addQueryPrefix","selectedCategory","find","iconColor","iconHoverColor","boxShadow","boxShadowHover","bgHoverColor","notCategorized","IconTooltip","content","notCategorizedTooltip","allInput","allInputTooltip","recentlyPosted","recentlyPostedTooltip","Dropdown","opened","onClickOutside","DropdownListItem","editCategoryName","deleteCategory","close","closeRenameModal","originalCategoryName","getInsightsInputsEndpoint","skipSanitizationFor","insightsInputId","insightsCategoryId","delete","type","ActionButtons","StyledIcon","ActionButtonWrapper","DropdownListItemText","DropdownList","clDropdownHoverBackground","DropdownFooterButton","selectedInputs","selectedInputsIds","input","dropdownOpened","setDropdownOpened","toggleDropdown","Set","categorySelection","setCategorySelection","setProcessing","processingBulkApprove","setProcessingBulkApprove","assign","batchAssignCategories","approveSuggestedCategories","addInsightsInputCategories","unassign","deleteFromCategories","categoryName","selectedCount","batchUnassignCategories","otherCategories","FormattedMessage","bulkAssignCategory","top","Checkbox","has","categoryId","newSelection","footer","fullWidth","whiteSpace","assignCategoriesButton","bulkApprove","bulkUnassign","StyledHr","hr","separation","aside","DetectButton","ResetButton","CategoriesLabel","xs","CategoryButton","CategoryInfoBox","ButtonsContainer","loadingAdd","setLoadingAdd","loadingReset","setLoadingReset","errors","setErrors","allInputsCount","uncategorizedInputsCount","recentlyPostedInputsCount","setName","handleCategorySubmit","json","selectRecentlyPosted","handleResetCategories","resetCategoriesConfimation","deleteInsightsCategories","resetCategories","linkTo","detectCategories","darken","textHoverColor","count","Input","addCategory","apiErrors","fieldName","categoryInfoBox","values","bold","categoryInfoBoxBold","inputs_count","Title","h1","xxl","Form","ButtonContainer","updateInsightsCategory","editCategory","renameCategoryModalTitle","renameCategoryModalNameLabel","renameCategoryModalSave","renameCategoryModalCancel","Inputs","TitleRow","StyledActions","Actions","StyledDivider","Divider","StyledTable","Table","background","StyledSort","StyledPagination","Pagination","SearchContainer","RecentlyPostedInfoBox","clBlue","selectedRows","setSelectedRows","isSideModalOpen","setIsSideModalOpen","previewedInputIndex","setPreviewedInputIndex","isPreviewedInputInTable","setIsMoveDownDisabled","movedUpDown","setMovedUpDown","isInTable","replace","useCallback","hasToLoadPrevPage","prevSelectedIndex","defaultPageSize","hasToLoadNextPage","onSearch","newSearch","toggleInputSelected","previewInput","indexOf","inputsDone","inputsTableRecentlyPostedInfoBox","Box","display","justifyContent","span","style","width","inputsTableInputs","as","inputsTableCategories","inputsTableAlsoIn","selected","changeSelected","onPreview","newPageNumber","insightsCategory","setInsightsCategory","insightsCategoryStream","export","suggestedCategories","onKeyPress","stopLabelPropagation","maxLength","easing","ModalWrapper","clickOutside","ModalContainer","CloseIcon","CloseButton","smallerThanMinTablet","Overlay","ModalContent","HiddenSpan","hideVisually","SideModal","document","getElementById","stopPropagation","state","innerModalOpened","el","createElement","subscriptions","ModalPortal","appendChild","console","log","eventEmitter","observeEvent","setState","removeChild","children","modalPortalElement","createPortal","classNames","in","timeout","enter","enterTimeout","exit","exitTimeout","mountOnEnter","unmountOnExit","clickOutsideModal","closeOnClickOutsideEnabled","FocusOn","clickCloseButton","compareOption","inputValue","arguments","accessors","candidate","String","toLowerCase","optionValue","getOptionValue","optionLabel","getOptionLabel","builtins","concat","isValidNewOption","selectValue","selectOptions","some","getNewOptionData","__isNew__","defaultProps","allowCreateWhileLoading","createOptionPosition","makeCreatableSelect","SelectComponent","_class","_temp","_Component","Creatable","_super","_this","call","select","newValue","actionMeta","_this$props","isMulti","action","newOption","valueArray","Array","isArray","newOptionData","newActionMeta","focus","_this2","_ref","isLoading","SelectCreatable"],"mappings":"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","file":"73.0e930ebaf12d0b1c0ab7.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  insightsCategoriesStream,\n  IInsightsCategoryData,\n} from '../services/insightsCategories';\n\nconst useInsightsCategories = (viewId: string) => {\n  const [insightsCategories, setInsightsCategories] = useState<\n    IInsightsCategoryData[] | undefined | null | Error\n  >(undefined);\n\n  useEffect(() => {\n    const subscription = insightsCategoriesStream(viewId).observable.subscribe(\n      (insightsCategories) => {\n        setInsightsCategories(insightsCategories.data);\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, [viewId]);\n\n  return insightsCategories;\n};\n\nexport default useInsightsCategories;\n","import React, { useEffect } from 'react';\nimport useKeyPress from 'hooks/useKeyPress';\n\nimport { Button } from 'cl2-component-library';\n\n// styles\nimport styled from 'styled-components';\n\nconst StyledNavigation = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 20px;\n`;\n\nconst StyledChevronButton = styled(Button)`\n  max-width: 8px;\n  margin: 2px;\n  button {\n    padding: 8px 12px !important;\n  }\n`;\n\nexport type NavigationProps = {\n  moveUp: () => void;\n  moveDown: () => void;\n  isMoveUpDisabled: boolean;\n  isMoveDownDisabled: boolean;\n};\n\nconst Navigation = ({\n  moveUp,\n  moveDown,\n  isMoveUpDisabled,\n  isMoveDownDisabled,\n}: NavigationProps) => {\n  const upArrow = useKeyPress('ArrowUp');\n  const downArrow = useKeyPress('ArrowDown');\n\n  // Keyboard navigations\n  useEffect(() => {\n    if (upArrow && !isMoveUpDisabled) {\n      moveUp();\n    }\n  }, [upArrow, moveUp, isMoveUpDisabled]);\n\n  useEffect(() => {\n    if (downArrow && !isMoveDownDisabled) {\n      moveDown();\n    }\n  }, [downArrow, moveDown, isMoveDownDisabled]);\n\n  return (\n    <StyledNavigation data-testid=\"insightsInputDetailNavigation\">\n      <StyledChevronButton\n        iconSize=\"8px\"\n        locale=\"en\"\n        icon=\"chevron-up\"\n        buttonStyle=\"secondary-outlined\"\n        onClick={moveUp}\n        disabled={isMoveUpDisabled}\n        id=\"insightsInputDetailNavigationUp\"\n      />\n      <StyledChevronButton\n        iconSize=\"8px\"\n        locale=\"en\"\n        icon=\"chevron-down\"\n        buttonStyle=\"secondary-outlined\"\n        onClick={moveDown}\n        disabled={isMoveDownDisabled}\n        id=\"insightsInputDetailNavigationDown\"\n      />\n    </StyledNavigation>\n  );\n};\n\nexport default Navigation;\n","const getSelectedCategoryFilter = (\n  categoryQuery?: string,\n  processedQuery?: string\n) =>\n  processedQuery === 'false'\n    ? 'recentlyPosted'\n    : categoryQuery\n    ? 'category'\n    : categoryQuery === ''\n    ? 'notCategorized'\n    : 'allInput';\n\nexport default getSelectedCategoryFilter;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { colors, fontSizes, isRtl } from 'utils/styleUtils';\nimport { Icon } from 'cl2-component-library';\nimport { get } from 'lodash-es';\n// https://www.w3.org/TR/2016/WD-wai-aria-practices-1.1-20160317/examples/checkbox/checkbox-2.html\n\nconst Container = styled.div<{ size: string }>`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n\n  &.hasNoLabel {\n    flex: 0 0 ${({ size }) => parseInt(size, 10) + 2}px;\n    width: ${({ size }) => parseInt(size, 10) + 2}px;\n    height: ${({ size }) => parseInt(size, 10) + 2}px;\n  }\n\n  label {\n    cursor: pointer;\n  }\n\n  &.disabled {\n    cursor: not-allowed;\n    label {\n      cursor: not-allowed;\n    }\n  }\n`;\n\nconst CustomInputWrapper = styled.div<{\n  checked: boolean | 'mixed';\n  size: string;\n}>`\n  position: relative;\n  flex: 0 0 ${({ size }) => parseInt(size, 10)}px;\n  width: ${({ size }) => parseInt(size, 10)}px;\n  height: ${({ size }) => parseInt(size, 10)}px;\n  color: #fff;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: solid 1px ${colors.separationDark};\n  border-radius: ${(props) => props.theme.borderRadius};\n  background: ${(props) => (props.checked ? colors.clGreen : '#fff')};\n  border-color: ${(props) => (props.checked ? colors.clGreen : '#aaa')};\n  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.15);\n\n  &:hover {\n    border-color: ${(props) =>\n      props.checked === 'mixed'\n        ? colors.clBlueLightest\n        : props.checked\n        ? colors.clGreen\n        : '#333'};\n  }\n`;\n\nconst CheckmarkIcon = styled(Icon)`\n  fill: #fff;\n  width: 15px;\n`;\n\nconst Label = styled.label`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  margin-left: 10px;\n\n  ${isRtl`\n    margin-left: 0;\n    margin-right: 10px;\n  `}\n`;\n\ntype DefaultProps = {\n  size?: string;\n};\n\n/**\n * If we have a label, an id is required. Otherwise id is optional.\n */\ntype LabelProps =\n  | {\n      label: string | JSX.Element | null;\n      id: string;\n    }\n  | {\n      label?: undefined;\n      id?: string | undefined;\n    };\n\ntype Props = DefaultProps &\n  LabelProps & {\n    checked: boolean | 'mixed';\n    onChange: (event: React.MouseEvent | React.KeyboardEvent) => void;\n    className?: string;\n    notFocusable?: boolean;\n    disabled?: boolean;\n    'data-testid'?: string;\n  };\n\nexport default class CheckboxWithPartialCheck extends PureComponent<Props> {\n  static defaultProps: DefaultProps = {\n    size: '22px',\n  };\n\n  handleOnClick = (event: React.MouseEvent) => {\n    const { disabled } = this.props;\n    if (!disabled) {\n      const targetElement = get(event, 'target') as any;\n      const parentElement = get(event, 'target.parentElement');\n      const targetElementIsLink =\n        targetElement &&\n        targetElement.hasAttribute &&\n        targetElement.hasAttribute('href');\n      const parentElementIsLink =\n        parentElement &&\n        parentElement.hasAttribute &&\n        parentElement.hasAttribute('href');\n\n      if (!targetElementIsLink && !parentElementIsLink) {\n        event && event.preventDefault();\n        this.props.onChange(event);\n      }\n    }\n  };\n\n  handleOnKeyDown = (event: React.KeyboardEvent) => {\n    const { disabled } = this.props;\n    if (!disabled) {\n      const targetElement = get(event, 'target') as any;\n      const parentElement = get(event, 'target.parentElement');\n      const targetElementIsLink =\n        targetElement &&\n        targetElement.hasAttribute &&\n        targetElement.hasAttribute('href');\n      const parentElementIsLink =\n        parentElement &&\n        parentElement.hasAttribute &&\n        parentElement.hasAttribute('href');\n\n      // if key = Space\n      if (\n        !targetElementIsLink &&\n        !parentElementIsLink &&\n        event.keyCode === 32\n      ) {\n        event && event.preventDefault();\n        this.props.onChange(event);\n      }\n    }\n  };\n\n  removeFocus = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  render() {\n    const {\n      label,\n      size,\n      checked,\n      className,\n      notFocusable,\n      'data-testid': testid,\n    } = this.props;\n\n    return (\n      <Container\n        size={size as string}\n        onMouseDown={this.removeFocus}\n        onClick={this.handleOnClick}\n        onKeyDown={this.handleOnKeyDown}\n        className={`${className ? className : ''} ${\n          label ? 'hasLabel' : 'hasNoLabel'\n        }`}\n        role=\"checkbox\"\n        aria-checked={checked}\n        tabIndex={notFocusable ? -1 : 0}\n        data-testid={testid}\n      >\n        <CustomInputWrapper size={size as string} checked={checked}>\n          {checked === 'mixed' ? (\n            <CheckmarkIcon ariaHidden name=\"more-options\" />\n          ) : (\n            checked && <CheckmarkIcon ariaHidden name=\"checkmark\" />\n          )}\n        </CustomInputWrapper>\n\n        <Label>{label}</Label>\n      </Container>\n    );\n  }\n}\n","import { useState, useEffect } from 'react';\nimport {\n  insightsInputsCountStream,\n  IInsightsInputsCount,\n} from '../services/insightsInputsCount';\n\nexport type QueryParameters = {\n  category: string;\n  search: string;\n  processed: boolean;\n};\n\nconst useInsightsInputsCount = (\n  viewId: string,\n  queryParameters?: Partial<QueryParameters>\n) => {\n  const [insightsInputsCount, setInsightsInputsCount] = useState<\n    IInsightsInputsCount | undefined | null | Error\n  >(undefined);\n\n  const category = queryParameters?.category;\n  const search = queryParameters?.search;\n  const processed = queryParameters?.processed;\n\n  useEffect(() => {\n    const subscription = insightsInputsCountStream(viewId, {\n      queryParameters: {\n        category,\n        search,\n        processed,\n      },\n    }).observable.subscribe((insightsInputsCount) => {\n      setInsightsInputsCount(insightsInputsCount);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [viewId, category, search, processed]);\n\n  return insightsInputsCount;\n};\n\nexport default useInsightsInputsCount;\n","import React, { useState } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\nimport useCategory from 'modules/commercial/insights/hooks/useInsightsCategory';\nimport Tag, {\n  TagProps,\n} from 'modules/commercial/insights/admin/components/Tag';\nimport {\n  deleteInsightsInputCategory,\n  addInsightsInputCategory,\n} from 'modules/commercial/insights/services/insightsInputs';\n\nimport { withRouter, WithRouterProps } from 'react-router';\n\nexport type CategoryProps = {\n  id: string;\n  inputId: string;\n  variant: 'suggested' | 'approved';\n  size?: TagProps['size'];\n  withAction?: boolean;\n} & WithRouterProps;\n\nconst Category = ({\n  id,\n  inputId,\n  variant,\n  size,\n  params: { viewId },\n  withAction = true,\n}: CategoryProps) => {\n  const [loading, setLoading] = useState(false);\n  const category = useCategory(viewId, id);\n\n  if (isNilOrError(category)) {\n    return null;\n  }\n  const handleCategoryAction = async () => {\n    setLoading(true);\n    try {\n      if (variant === 'approved') {\n        await deleteInsightsInputCategory(viewId, inputId, id);\n      } else if (variant === 'suggested') {\n        await addInsightsInputCategory(viewId, inputId, id);\n      }\n    } catch {\n      // Do nothing\n    }\n  };\n\n  return (\n    <Tag\n      variant={variant === 'suggested' ? 'default' : 'primary'}\n      label={category.attributes.name}\n      onIconClick={withAction ? handleCategoryAction : undefined}\n      loading={loading}\n      size={size}\n    />\n  );\n};\n\nexport default withRouter(Category);\n","import React, { useState, useRef } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// services\nimport { addInsightsInputCategory } from 'modules/commercial/insights/services/insightsInputs';\nimport { addInsightsCategory } from 'modules/commercial/insights/services/insightsCategories';\n\n// components\nimport Category from 'modules/commercial/insights/admin/components/Category';\nimport Idea from 'modules/commercial/insights/admin/components/Idea';\nimport { Label, Spinner } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\nimport Creatable from 'react-select/creatable';\nimport selectStyles from 'components/UI/MultipleSelect/styles';\nimport Navigation, {\n  NavigationProps,\n} from 'modules/commercial/insights/admin/components/Navigation';\n\n// hooks\nimport useInsightsCategories from 'modules/commercial/insights/hooks/useInsightsCategories';\nimport useInsightsInput from 'modules/commercial/insights/hooks/useInsightsInput';\nimport useFeatureFlag from 'hooks/useFeatureFlag';\n\n// styles\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// intl\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../messages';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from 'modules/commercial/insights/admin/containers/Insights/tracks';\n\ntype InputDetailsProps = {\n  previewedInputId: string;\n} & NavigationProps &\n  WithRouterProps &\n  InjectedIntlProps;\n\nconst Container = styled.div`\n  padding: 48px;\n  padding-right: 100px;\n  position: relative;\n  height: 100%;\n`;\n\nconst CategoryList = styled.div`\n  margin-bottom: 16px;\n  > * {\n    margin-right: 8px;\n    margin-bottom: 8px;\n  }\n`;\n\nconst FormContainer = styled.form`\n  display: flex;\n  align-items: flex-end;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  .categoryInput {\n    flex: 1;\n  }\n\n  .addButton {\n    margin-left: 4px;\n  }\n`;\n\nconst StyledPlus = styled.div`\n  width: 24px;\n  text-align: center;\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-context: center;\n  align-items: center;\n`;\n\ntype OptionProps = {\n  label: string;\n  value: string;\n};\n\nconst InputDetails = ({\n  params: { viewId },\n  intl: { formatMessage },\n  previewedInputId,\n  moveUp,\n  moveDown,\n  isMoveUpDisabled,\n  isMoveDownDisabled,\n}: InputDetailsProps) => {\n  const selectRef = useRef<Creatable<{ label: string; value: string }, false>>(\n    null\n  );\n  const [selectedOption, setSelectedOption] = useState<null | OptionProps>();\n  const [isSelectFocused, setIsSelectFocused] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const nlpFeatureFlag = useFeatureFlag('insights_nlp_flow');\n  const categories = useInsightsCategories(viewId);\n  const previewedInput = useInsightsInput(viewId, previewedInputId);\n\n  // Loading state\n  if (previewedInput === undefined) {\n    return (\n      <LoadingContainer data-testid=\"insightsEditDetailsLoading\">\n        <Spinner />\n      </LoadingContainer>\n    );\n  }\n\n  if (isNilOrError(categories) || isNilOrError(previewedInput)) {\n    return null;\n  }\n\n  const ideaId = previewedInput.relationships?.source.data.id;\n\n  const options = categories\n    // Filter out already selected categories\n    .filter((category) => {\n      const selectedCategoriesIds = previewedInput.relationships?.categories\n        ? previewedInput.relationships?.categories.data.map(\n            (category) => category.id\n          )\n        : [];\n\n      return !selectedCategoriesIds.includes(category.id);\n    })\n    .map((category) => ({\n      label: category.attributes.name,\n      value: category.id,\n    }));\n\n  const handleChange = (option: OptionProps) => {\n    setSelectedOption(option);\n  };\n\n  const handleCreate = async (value: string) => {\n    setLoading(true);\n    try {\n      const result = await addInsightsCategory(viewId, value);\n      await addInsightsInputCategory(viewId, previewedInput.id, result.data.id);\n      setSelectedOption(null);\n    } catch {\n      // Do nothing\n    }\n    trackEventByName(tracks.createCategoryFromInput);\n    setLoading(false);\n  };\n\n  const handleEnterPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n\n    try {\n      if (selectedOption) {\n        await addInsightsInputCategory(\n          viewId,\n          previewedInput.id,\n          selectedOption.value\n        );\n        setSelectedOption(null);\n        selectRef.current?.blur();\n      }\n    } catch {\n      // Do nothing\n    }\n    setLoading(false);\n    trackEventByName(tracks.addCategoryFromInput);\n  };\n\n  const formatCreateLabel = (value: string) => {\n    return `${formatMessage(messages.createCategoryPrompt)} \"${value}\"`;\n  };\n\n  // Keep track of select focus to prevent keyboard navigation from switching inputs while the select is open\n  const onSelectFocus = () => setIsSelectFocused(true);\n  const onSelectBlur = () => setIsSelectFocused(false);\n\n  return (\n    <>\n      <Container data-testid=\"insightsInputDetails\">\n        {nlpFeatureFlag && (\n          <CategoryList>\n            {previewedInput.relationships?.suggested_categories.data.map(\n              (category) => (\n                <Category\n                  id={category.id}\n                  key={category.id}\n                  inputId={previewedInput.id}\n                  variant=\"suggested\"\n                  size=\"large\"\n                />\n              )\n            )}\n          </CategoryList>\n        )}\n        <FormContainer>\n          <div className=\"categoryInput\">\n            <Label htmlFor=\"categorySelect\">\n              {formatMessage(messages.addCategoryLabel)}\n            </Label>\n            <Creatable\n              inputId=\"categorySelect\"\n              styles={selectStyles}\n              placeholder={formatMessage(messages.addCategoryPlaceholder)}\n              options={options}\n              onCreateOption={handleCreate}\n              onChange={handleChange}\n              value={selectedOption}\n              formatCreateLabel={formatCreateLabel}\n              onFocus={onSelectFocus}\n              onBlur={onSelectBlur}\n              onKeyDown={handleEnterPress}\n              ref={selectRef}\n            />\n          </div>\n          <Button\n            fontSize={`${fontSizes.xxxl}px`}\n            bgColor={colors.adminTextColor}\n            className=\"addButton\"\n            padding=\"12px 22px\"\n            size=\"2\"\n            onClick={handleSubmit}\n            disabled={!selectedOption}\n            processing={loading}\n          >\n            <StyledPlus>+</StyledPlus>\n          </Button>\n        </FormContainer>\n        <CategoryList>\n          {previewedInput.relationships?.categories.data.map((category) => (\n            <Category\n              id={category.id}\n              key={category.id}\n              inputId={previewedInput.id}\n              variant=\"approved\"\n            />\n          ))}\n        </CategoryList>\n        {ideaId && <Idea ideaId={ideaId} />}\n      </Container>\n      <Navigation\n        moveDown={moveDown}\n        moveUp={moveUp}\n        isMoveUpDisabled={isMoveUpDisabled || isSelectFocused}\n        isMoveDownDisabled={isMoveDownDisabled || isSelectFocused}\n      />\n    </>\n  );\n};\n\nexport default withRouter(injectIntl(InputDetails));\n","import { API_PATH } from 'containers/App/constants';\nimport streams from 'utils/streams';\n\nconst getInsightsBatchEndpoint = (viewId: string) =>\n  `insights/views/${viewId}/batch/`;\n\n// Batch category assignment.\n//\n// Batch assignment is idempotent. It will not complain if some of the\n// assignments already exist.\n//\n// Batch assignment is transactional. Either it succeeds at assigning all\n// categories to all inputs, or the DB is rolled back to its previous state.\n\nexport async function batchAssignCategories(\n  insightsViewId: string,\n  inputs: string[],\n  categories: string[]\n) {\n  const res = await streams.add(\n    `${API_PATH}/${getInsightsBatchEndpoint(insightsViewId)}assign_categories`,\n    {\n      inputs,\n      categories,\n    }\n  );\n  streams.fetchAllWith({\n    partialApiEndpoint: [\n      `insights/views/${insightsViewId}/inputs`,\n      `insights/views/${insightsViewId}/categories`,\n      `insights/views/${insightsViewId}/stats/inputs_count`,\n    ],\n  });\n  return res;\n}\n\nexport async function batchUnassignCategories(\n  insightsViewId: string,\n  inputs: string[],\n  categories: string[]\n) {\n  const res = await streams.add(\n    `${API_PATH}/${getInsightsBatchEndpoint(insightsViewId)}remove_categories`,\n    {\n      inputs,\n      categories,\n    }\n  );\n  streams.fetchAllWith({\n    partialApiEndpoint: [\n      `insights/views/${insightsViewId}/inputs`,\n      `insights/views/${insightsViewId}/categories`,\n      `insights/views/${insightsViewId}/stats/inputs_count`,\n    ],\n  });\n  return res;\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  closeButtonAria: {\n    id: 'app.components.SideModal.closeButtonAria',\n    defaultMessage: 'Close',\n  },\n});\n","import { useState, useEffect } from 'react';\nimport {\n  insightsInputStream,\n  IInsightsInputData,\n} from '../services/insightsInputs';\n\nconst useInsightsInput = (viewId: string, inputId: string) => {\n  const [insightsInput, setInsightsInput] = useState<\n    IInsightsInputData | undefined | null | Error\n  >(undefined);\n\n  useEffect(() => {\n    const subscription = insightsInputStream(\n      viewId,\n      inputId\n    ).observable.subscribe((insightsInput) => {\n      setInsightsInput(insightsInput.data);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [viewId, inputId]);\n\n  return insightsInput;\n};\n\nexport default useInsightsInput;\n","import React from 'react';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport T from 'components/T';\n\n// hooks\nimport useIdea from 'hooks/useIdea';\n\n// styles\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\ntype IdeaProps = {\n  ideaId: string;\n};\n\nconst IdeaTitle = styled.h2`\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.xl}px;\n  margin-top: 16px;\n  margin-bottom: 24px;\n`;\n\nconst IdeaBody = styled.div`\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  padding-bottom: 24px;\n`;\n\nconst Idea = ({ ideaId }: IdeaProps) => {\n  const idea = useIdea({ ideaId });\n\n  if (isNilOrError(idea)) {\n    return null;\n  }\n\n  return (\n    <div data-testid=\"insightsIdea\">\n      <IdeaTitle data-testid=\"insightsIdeaTitle\">\n        <T value={idea.attributes.title_multiloc} />\n      </IdeaTitle>\n      <IdeaBody data-testid=\"insightsIdeaBody\">\n        <T value={idea.attributes.body_multiloc} supportHtml />\n      </IdeaBody>\n    </div>\n  );\n};\n\nexport default Idea;\n","import React, { useMemo, useEffect, useState } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// styles\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\n\n// intl\nimport messages from '../../messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Button from 'components/UI/Button';\n\n// services\nimport { insightsTriggerCategoriesSuggestionsTasks } from 'modules/commercial/insights/services/insightsCategoriesSuggestionsTasks';\nimport useInsightsCategoriesSuggestionsTasks from 'modules/commercial/insights/hooks/useInsightsCategoriesSuggestionsTasks';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from 'modules/commercial/insights/admin/containers/Insights/tracks';\n\n// hooks\nimport useFeatureFlag from 'hooks/useFeatureFlag';\n\nconst ScanContainer = styled.div`\n  width: 100%;\n  background-color: ${colors.clBlueLightest};\n  padding: 32px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${colors.adminTextColor};\n  text-align: left;\n  border-radius: 3px;\n  .scanContent {\n    margin-right: 40px;\n  }\n  .scanTitle {\n    font-weight: bold;\n    font-size: ${fontSizes.base}px;\n    padding-bottom: 8px;\n    margin: 0;\n  }\n  .scanDescription {\n    font-size: ${fontSizes.small}px;\n  }\n`;\n\ntype ScanCategoryVariant = 'button' | 'banner';\n\ntype ScanCategoryProps = {\n  variant: ScanCategoryVariant;\n} & InjectedIntlProps &\n  WithRouterProps;\n\nconst ScanCategory = ({\n  intl: { formatMessage },\n  params: { viewId },\n  location: { query },\n  variant,\n}: ScanCategoryProps) => {\n  const [loading, setLoading] = useState(false);\n  const nlpFeatureFlag = useFeatureFlag('insights_nlp_flow');\n  const categories = useMemo(() => [query.category], [query.category]);\n  const categorySuggestionsPendingTasks = useInsightsCategoriesSuggestionsTasks(\n    viewId,\n    { categories }\n  );\n\n  useEffect(() => {\n    if (\n      !isNilOrError(categorySuggestionsPendingTasks) &&\n      categorySuggestionsPendingTasks.length > 0\n    ) {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n  }, [categorySuggestionsPendingTasks, categories]);\n\n  const suggestCategories = async () => {\n    try {\n      setLoading(true);\n      await insightsTriggerCategoriesSuggestionsTasks(viewId, categories);\n    } catch {\n      // Do nothing\n    }\n    trackEventByName(tracks.scanForSuggestions);\n  };\n\n  if (isNilOrError(categorySuggestionsPendingTasks) || !nlpFeatureFlag) {\n    return null;\n  }\n\n  return variant === 'banner' ? (\n    <ScanContainer data-testid=\"insightsScanCategory-banner\">\n      <div className=\"scanContent\">\n        <p className=\"scanTitle\">\n          {formatMessage(messages.categoriesEmptyScanTitle)}\n        </p>\n        <p className=\"scanDescription\">\n          {formatMessage(messages.categoriesEmptyScanDescription)}\n        </p>\n      </div>\n\n      <Button\n        buttonStyle=\"admin-dark\"\n        onClick={suggestCategories}\n        disabled={loading}\n        processing={loading}\n      >\n        {formatMessage(messages.categoriesEmptyScanButton)}\n      </Button>\n    </ScanContainer>\n  ) : (\n    <div data-testid=\"insightsScanCategory-button\">\n      <Button\n        buttonStyle=\"secondary\"\n        textColor={colors.adminTextColor}\n        onClick={suggestCategories}\n        disabled={loading}\n        processing={loading}\n      >\n        {formatMessage(messages.categoriesEmptyScanButton)}\n      </Button>\n    </div>\n  );\n};\n\nexport default withRouter(injectIntl(ScanCategory));\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { IRelationship } from 'typings';\n\nimport { interval } from 'rxjs';\nimport { takeWhile, skip, finalize } from 'rxjs/operators';\n\nconst getInsightsCategorySuggestionsTasksEndpoint = (viewId: string) =>\n  `insights/views/${viewId}/tasks/category_suggestions`;\n\nexport interface IInsightsCategoriesSuggestionTasksData {\n  id: string;\n  type: string;\n  attributes: {\n    created_at: string;\n  };\n  relationships?: {\n    categories: {\n      data: IRelationship[];\n    };\n    inputs: {\n      data: IRelationship[];\n    };\n  };\n}\n\nexport interface IInsightsCategoriesSuggestionTasks {\n  data: IInsightsCategoriesSuggestionTasksData;\n}\n\nexport interface IInsightsCategorySuggestionsTasks {\n  data: IInsightsCategoriesSuggestionTasksData[];\n}\n\nexport function insightsCategoriesSuggestionsTasksStream(\n  insightsViewId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInsightsCategorySuggestionsTasks>({\n    apiEndpoint: `${API_PATH}/${getInsightsCategorySuggestionsTasksEndpoint(\n      insightsViewId\n    )}`,\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n\nexport async function insightsTriggerCategoriesSuggestionsTasks(\n  insightsViewId: string,\n  categories?: string[],\n  inputs?: string[]\n) {\n  const pollingStream = interval(3000);\n\n  const response = await streams.add(\n    `${API_PATH}/${getInsightsCategorySuggestionsTasksEndpoint(\n      insightsViewId\n    )}`,\n    {\n      inputs,\n      categories,\n    }\n  );\n\n  // Refetch pending tasks at an interval\n  const subscription = pollingStream.subscribe(() => {\n    streams.fetchAllWith({\n      partialApiEndpoint: [\n        `insights/views/${insightsViewId}/tasks/category_suggestions`,\n      ],\n    });\n  });\n\n  insightsCategoriesSuggestionsTasksStream(insightsViewId, {\n    queryParameters: { categories, inputs },\n  })\n    .observable.pipe(\n      // Ignore the first emitted value coming from the hook\n      skip(1),\n      // Poll while there are pending tasks\n      takeWhile((response) => {\n        return response.data.length > 0;\n      }),\n      // Refetch inputs when there are no pending tasks\n      finalize(() => {\n        streams.fetchAllWith({\n          apiEndpoint: [\n            `${API_PATH}/insights/views/${insightsViewId}/categories`,\n          ],\n          partialApiEndpoint: [`insights/views/${insightsViewId}/inputs`],\n        });\n        subscription.unsubscribe();\n      })\n    )\n    .subscribe();\n\n  return response;\n}\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'cl2-component-library';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { rgba } from 'polished';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ContainerInner = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ChevronIcon = styled(Icon)`\n  height: 12px;\n  fill: ${colors.adminTextColor};\n`;\n\nconst NavigateButton = styled.button`\n  width: 38px;\n  height: 38px;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  &.disabled {\n    color: #bbb;\n    cursor: not-allowed;\n\n    ${ChevronIcon} {\n      fill: #bbb;\n    }\n  }\n\n  &:not(.disabled) {\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      ${ChevronIcon} {\n        fill: ${colors.clIconAccent};\n      }\n    }\n  }\n`;\n\nconst Next = styled(NavigateButton)``;\n\nconst Back = styled(NavigateButton)`\n  ${ChevronIcon} {\n    transform: rotate(180deg);\n  }\n`;\n\nconst Pages = styled.div`\n  margin-left: 14px;\n  margin-right: 14px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.button<{ useColorsTheme?: boolean }>`\n  min-width: 38px;\n  height: 38px;\n  color: ${({ useColorsTheme, theme }) =>\n    useColorsTheme ? theme.colorText : colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin-left: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  transition: all 80ms ease-out;\n\n  &:first-child {\n    margin-left: 0px;\n  }\n\n  &:not(.disabled) {\n    border-radius: ${(props: any) => props.theme.borderRadius};\n    background: ${colors.lightGreyishBlue};\n    cursor: pointer;\n\n    &.active {\n      color: #fff;\n      background: ${({ useColorsTheme, theme }) =>\n        useColorsTheme ? theme.colorMain : colors.adminTextColor};\n    }\n\n    &:not(.active) {\n      &:hover,\n      &:focus {\n        background: ${({ useColorsTheme, theme }) =>\n          rgba(useColorsTheme ? theme.colorMain : colors.adminTextColor, 0.2)};\n      }\n    }\n  }\n`;\n\nexport interface Props {\n  currentPage: number;\n  totalPages: number;\n  loadPage: (page: number) => void;\n  className?: string;\n  useColorsTheme?: boolean;\n}\n\nclass Pagination extends PureComponent<Props> {\n  calculateMenuItems(currentPage: number, totalPages: number) {\n    const current = currentPage;\n    const last = totalPages;\n    const delta = 2;\n    const left = current - delta;\n    const right = current + delta + 1;\n    const range: number[] = [];\n    const rangeWithDots: number[] = [];\n    let l: number;\n\n    for (let i = 1; i <= last; i += 1) {\n      if (i === 1 || i === last || (i >= left && i < right)) {\n        range.push(i);\n      }\n    }\n\n    range.forEach((i) => {\n      if (l) {\n        if (i - l === 2) {\n          rangeWithDots.push(l + 1);\n        } else if (i - l !== 1) {\n          rangeWithDots.push(-i);\n        }\n      }\n\n      rangeWithDots.push(i);\n\n      l = i;\n    });\n\n    return rangeWithDots;\n  }\n\n  handleItemClick = (item: number) => () => {\n    this.props.loadPage(item);\n  };\n\n  goTo = (page: number) => () => {\n    if (page > 0 && page <= this.props.totalPages) {\n      this.props.loadPage(page);\n    }\n  };\n\n  removeFocus = (event: React.MouseEvent) => {\n    event.preventDefault();\n  };\n\n  render() {\n    const { currentPage, totalPages, className, useColorsTheme } = this.props;\n    const pageItems = this.calculateMenuItems(currentPage, totalPages);\n\n    if (totalPages > 1) {\n      return (\n        <Container className={className} data-testid=\"pagination\">\n          <ContainerInner>\n            <Back\n              onMouseDown={this.removeFocus}\n              onClick={this.goTo(currentPage - 1)}\n              disabled={currentPage === 1}\n              className={currentPage === 1 ? 'disabled' : ''}\n            >\n              <ChevronIcon name=\"chevron-right\" />\n            </Back>\n\n            <Pages>\n              {pageItems.map((item) => (\n                <Item\n                  key={item}\n                  className={`${item === currentPage ? 'active' : ''} ${\n                    item < 0 ? 'disabled' : ''\n                  }`}\n                  onMouseDown={this.removeFocus}\n                  onClick={this.handleItemClick(item)}\n                  disabled={item < 0}\n                  useColorsTheme={useColorsTheme}\n                >\n                  <span>{item < 0 ? '...' : item.toString()}</span>\n                </Item>\n              ))}\n            </Pages>\n\n            <Next\n              onMouseDown={this.removeFocus}\n              onClick={this.goTo(currentPage + 1)}\n              disabled={currentPage === totalPages}\n              className={currentPage === totalPages ? 'disabled' : ''}\n            >\n              <ChevronIcon name=\"chevron-right\" />\n            </Next>\n          </ContainerInner>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Pagination;\n","import React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// styles\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\n\n// intl\nimport messages from '../../messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport ScanCategory from './ScanCategory';\n\nimport getInputsCategoryFilter from 'modules/commercial/insights/utils/getInputsCategoryFilter';\n\nconst StyledEmptyState = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  svg {\n    margin-top: 92px;\n    margin-bottom: 20px;\n    height: 35px;\n  }\n  h1 {\n    font-weight: bold;\n    line-height: 25px;\n    font-size: ${fontSizes.base}px;\n    color: ${colors.label};\n  }\n  p {\n    font-weight: normal;\n    font-size: ${fontSizes.small}px;\n  }\n`;\n\nconst EmptyState = ({\n  intl: { formatMessage },\n  location: { query },\n}: InjectedIntlProps & WithRouterProps) => {\n  const inputsCategoryFilter = getInputsCategoryFilter(\n    query.category,\n    query.processed\n  );\n  return (\n    <StyledEmptyState data-testid=\"insightsInputsTableEmptyState\">\n      {inputsCategoryFilter === 'category' && !query.search && (\n        <ScanCategory variant=\"banner\" />\n      )}\n      <Icon name=\"blankPage\" />\n      {query.search ? (\n        <div data-testid=\"insightsInputsTableEmptyNoResults\">\n          <h1>{formatMessage(messages.inputsTableNoResults)}</h1>\n          <p>{formatMessage(messages.inputsTableNoResultsDescription)}</p>\n        </div>\n      ) : (\n        <>\n          {inputsCategoryFilter === 'allInput' && (\n            <p data-testid=\"insightsInputsTableEmptyAllInputs\">\n              {formatMessage(messages.inputsTableEmpty)}\n            </p>\n          )}\n          {inputsCategoryFilter === 'notCategorized' && (\n            <p data-testid=\"insightsInputsTableEmptyNotCategorized\">\n              {formatMessage(messages.inputsTableNotCategorized)}\n            </p>\n          )}\n          {inputsCategoryFilter === 'category' && (\n            <div data-testid=\"insightsInputsTableEmptyNoInputInCategory\">\n              <h1>{formatMessage(messages.inputsTableCategoryTitle)}</h1>\n              <p>{formatMessage(messages.inputsTableCategoryDescription)}</p>\n            </div>\n          )}\n          {inputsCategoryFilter === 'recentlyPosted' && (\n            <div data-testid=\"insightsInputsTableRecentlyPosted\">\n              <p>{formatMessage(messages.inputsTableRecentlyPosted)}</p>\n            </div>\n          )}\n        </>\n      )}\n    </StyledEmptyState>\n  );\n};\n\nexport default withRouter(injectIntl(EmptyState));\n","import { useState, useEffect } from 'react';\nimport {\n  insightsCategoriesSuggestionsTasksStream,\n  IInsightsCategoriesSuggestionTasksData,\n} from '../services/insightsCategoriesSuggestionsTasks';\n\nexport type QueryParameters = {\n  inputs: string[];\n  categories: string[];\n};\nconst useInsightsCatgeoriesSuggestionsTasks = (\n  viewId: string,\n  queryParameters?: Partial<QueryParameters>\n) => {\n  const [\n    insightsCategoriesSuggestions,\n    setInsightsCategoriesSuggestions,\n  ] = useState<\n    IInsightsCategoriesSuggestionTasksData[] | undefined | null | Error\n  >(undefined);\n  const categories = queryParameters?.categories;\n  const inputs = queryParameters?.inputs;\n\n  useEffect(() => {\n    const subscription = insightsCategoriesSuggestionsTasksStream(viewId, {\n      queryParameters: { categories, inputs },\n    }).observable.subscribe((insightsCategories) => {\n      setInsightsCategoriesSuggestions(insightsCategories.data);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [viewId, categories, inputs]);\n\n  return insightsCategoriesSuggestions;\n};\n\nexport default useInsightsCatgeoriesSuggestionsTasks;\n","import { useState, useEffect } from 'react';\n\n// Hook\nconst useKeyPress = (targetKey: string) => {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import React from 'react';\n\n// styles\nimport styled from 'styled-components';\nimport { stylingConsts, media } from 'utils/styleUtils';\n\n// components\nimport TopBar, { topBarHeight } from '../../../components/TopBar';\nimport InputsTable from './InputsTable';\nimport Categories from './Categories';\n\nconst Container = styled.div`\n  height: calc(100vh - ${stylingConsts.menuHeight + topBarHeight}px);\n  display: flex;\n  position: fixed;\n  right: 0;\n  top: ${stylingConsts.menuHeight + topBarHeight}px;\n  left: 210px;\n  bottom: 0;\n  ${media.smallerThan1280px`\n    left: 80px;\n  `}\n`;\n\nconst EditInsightsView = () => {\n  return (\n    <div data-testid=\"insightsEdit\">\n      <TopBar />\n      <Container>\n        <Categories />\n        <InputsTable />\n      </Container>\n    </div>\n  );\n};\n\nexport default EditInsightsView;\n","import { useState, useEffect } from 'react';\nimport { getPageNumberFromUrl } from 'utils/paginationUtils';\nimport {\n  insightsInputsStream,\n  IInsightsInputData,\n} from '../services/insightsInputs';\n\nexport const defaultPageSize = 20;\n\nexport type QueryParameters = {\n  category: string;\n  pageSize: number;\n  pageNumber: number;\n  search: string;\n  processed: boolean;\n  sort: 'approval' | '-approval';\n};\n\nexport interface IUseInpightsInputsOutput {\n  list: IInsightsInputData[] | Error | undefined | null;\n  loading: boolean;\n  currentPage: number;\n}\n\nconst useInsightsInputs = (\n  viewId: string,\n  queryParameters?: Partial<QueryParameters>\n) => {\n  const [insightsInputs, setInsightsInputs] = useState<\n    IInsightsInputData[] | undefined | null | Error\n  >(undefined);\n  const [lastPage, setLastPage] = useState<number | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const pageNumber = queryParameters?.pageNumber;\n  const pageSize = queryParameters?.pageSize;\n  const category = queryParameters?.category;\n  const search = queryParameters?.search;\n  const sort = queryParameters?.sort;\n  const processed = queryParameters?.processed;\n\n  useEffect(() => {\n    setLoading(true);\n    const subscription = insightsInputsStream(viewId, {\n      queryParameters: {\n        category,\n        search,\n        processed,\n        sort: sort || 'approval',\n        'page[number]': pageNumber || 1,\n        'page[size]': pageSize || defaultPageSize,\n      },\n    }).observable.subscribe((insightsInputs) => {\n      setInsightsInputs(insightsInputs.data);\n      setLastPage(getPageNumberFromUrl(insightsInputs.links?.last));\n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [viewId, pageNumber, category, search, sort, pageSize, processed]);\n\n  return {\n    lastPage,\n    loading,\n    setLoading,\n    list: insightsInputs,\n  };\n};\n\nexport default useInsightsInputs;\n","import React, { useState } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// intl\nimport messages from '../../messages';\nimport { InjectedIntlProps } from 'react-intl';\n\n// hooks\nimport useInsightsCategories from 'modules/commercial/insights/hooks/useInsightsCategories';\n\n// services\nimport { deleteInsightsCategory } from 'modules/commercial/insights/services/insightsCategories';\n\n// styles\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// utils\nimport clHistory from 'utils/cl-router/history';\nimport { stringify } from 'qs';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { injectIntl } from 'utils/cl-intl';\n\n// components\nimport Modal from 'components/UI/Modal';\nimport { Dropdown, DropdownListItem, IconTooltip } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\nimport RenameCategory from '../RenameCategory';\n\nimport getInputsCategoryFilter from 'modules/commercial/insights/utils/getInputsCategoryFilter';\n\nconst StyledHeader = styled.h2`\n  display: flex;\n  align-items: center;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.large}px;\n  margin-bottom: 0;\n  button {\n    margin-left: 20px;\n  }\n`;\n\nconst StyledTooltipContent = styled.p`\n  font-weight: normal;\n`;\n\nconst DropdownWrapper = styled.div`\n  margin-top: 40px;\n  margin-left: -40px;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n`;\n\nconst TableTitle = ({\n  intl: { formatMessage },\n  params: { viewId },\n  location: { query, pathname },\n}: InjectedIntlProps & WithRouterProps) => {\n  const categories = useInsightsCategories(viewId);\n\n  const [renameCategoryModalOpened, setRenameCategoryModalOpened] = useState(\n    false\n  );\n  const [isCategoryMenuOpened, setCategoryMenuOpened] = useState(false);\n\n  if (isNilOrError(categories)) {\n    return null;\n  }\n\n  const closeCategoryRenameModal = () => setRenameCategoryModalOpened(false);\n  const openCategoryRenameModal = () => setRenameCategoryModalOpened(true);\n\n  const toggleCategoryMenu = () => {\n    setCategoryMenuOpened(!isCategoryMenuOpened);\n  };\n\n  const closeCategoryMenu = () => {\n    setCategoryMenuOpened(false);\n  };\n\n  const handleDeleteCategory = async () => {\n    {\n      const deleteMessage = formatMessage(messages.deleteCategoryConfirmation);\n      if (window.confirm(deleteMessage)) {\n        try {\n          await deleteInsightsCategory(viewId, query.category);\n        } catch {\n          // Do nothing\n        }\n      }\n      clHistory.push({\n        pathname,\n        search: stringify(\n          { ...query, category: undefined },\n          { addQueryPrefix: true }\n        ),\n      });\n      setCategoryMenuOpened(false);\n    }\n  };\n\n  const selectedCategory = categories?.find(\n    (category) => category.id === query.category\n  );\n\n  const inputsCategoryFilter = getInputsCategoryFilter(\n    query.category,\n    query.processed\n  );\n\n  return (\n    <>\n      <StyledHeader data-testid=\"insightsInputsHeader\">\n        {inputsCategoryFilter === 'category' && (\n          <>\n            {selectedCategory?.attributes.name}\n            <Button\n              icon=\"more-options\"\n              iconColor={colors.label}\n              iconHoverColor={colors.label}\n              boxShadow=\"none\"\n              boxShadowHover=\"none\"\n              bgColor=\"transparent\"\n              bgHoverColor=\"transparent\"\n              padding=\"0px 20px\"\n              onClick={toggleCategoryMenu}\n            />\n          </>\n        )}\n        {inputsCategoryFilter === 'notCategorized' && (\n          <TitleContainer data-testid=\"insightsTableHeaderNotCategorized\">\n            {formatMessage(messages.notCategorized)}\n            <IconTooltip\n              content={\n                <StyledTooltipContent>\n                  {formatMessage(messages.notCategorizedTooltip)}\n                </StyledTooltipContent>\n              }\n            />\n          </TitleContainer>\n        )}\n        {inputsCategoryFilter === 'allInput' && (\n          <TitleContainer data-testid=\"insightsTableHeaderAllInput\">\n            {formatMessage(messages.allInput)}\n            <IconTooltip\n              content={\n                <StyledTooltipContent>\n                  {formatMessage(messages.allInputTooltip)}\n                </StyledTooltipContent>\n              }\n            />\n          </TitleContainer>\n        )}\n        {inputsCategoryFilter === 'recentlyPosted' && (\n          <TitleContainer data-testid=\"insightsTableHeaderRecentlyPosted\">\n            {formatMessage(messages.recentlyPosted)}\n            <IconTooltip\n              content={\n                <StyledTooltipContent>\n                  {formatMessage(messages.recentlyPostedTooltip)}\n                </StyledTooltipContent>\n              }\n            />\n          </TitleContainer>\n        )}\n      </StyledHeader>\n      <DropdownWrapper>\n        <Dropdown\n          opened={isCategoryMenuOpened}\n          onClickOutside={closeCategoryMenu}\n          className=\"dropdown\"\n          content={\n            <>\n              <DropdownListItem onClick={openCategoryRenameModal}>\n                {formatMessage(messages.editCategoryName)}\n              </DropdownListItem>\n              <DropdownListItem onClick={handleDeleteCategory}>\n                {formatMessage(messages.deleteCategory)}\n              </DropdownListItem>\n            </>\n          }\n        />\n      </DropdownWrapper>\n      <Modal\n        opened={renameCategoryModalOpened}\n        close={closeCategoryRenameModal}\n      >\n        {selectedCategory && (\n          <RenameCategory\n            closeRenameModal={closeCategoryRenameModal}\n            originalCategoryName={selectedCategory.attributes.name}\n          />\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default withRouter(injectIntl(TableTitle));\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { IRelationship } from 'typings';\n\nexport interface IInsightsInputData {\n  id: string;\n  type: string;\n  relationships: {\n    categories: { data: IRelationship[] };\n    suggested_categories: { data: IRelationship[] };\n    source: {\n      data: IRelationship;\n    };\n  };\n}\n\nexport interface IInsightsInput {\n  data: IInsightsInputData;\n}\n\nexport interface IInsightsInputLinks {\n  self: string;\n  first: string;\n  prev: string | null;\n  next: string | null;\n  last: string;\n}\n\nexport interface IInsightsInputs {\n  data: IInsightsInputData[];\n  links: IInsightsInputLinks;\n}\n\nconst getInsightsInputsEndpoint = (viewId: string) =>\n  `insights/views/${viewId}/inputs`;\n\nexport function insightsInputsStream(\n  insightsViewId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInsightsInputs>({\n    apiEndpoint: `${API_PATH}/${getInsightsInputsEndpoint(insightsViewId)}`,\n    ...streamParams,\n    skipSanitizationFor: ['category'],\n    cacheStream: false,\n  });\n}\n\nexport function insightsInputStream(\n  insightsViewId: string,\n  insightsInputId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInsightsInput>({\n    apiEndpoint: `${API_PATH}/${getInsightsInputsEndpoint(\n      insightsViewId\n    )}/${insightsInputId}`,\n    skipSanitizationFor: ['category'],\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n\nexport async function deleteInsightsInputCategory(\n  insightsViewId: string,\n  insightsInputId: string,\n  insightsCategoryId: string\n) {\n  const response = await streams.delete(\n    `${API_PATH}/${getInsightsInputsEndpoint(\n      insightsViewId\n    )}/${insightsInputId}/categories/${insightsCategoryId}`,\n    insightsCategoryId\n  );\n\n  streams.fetchAllWith({\n    partialApiEndpoint: [\n      `${API_PATH}/${getInsightsInputsEndpoint(insightsViewId)}`,\n      `insights/views/${insightsViewId}/categories`,\n      `insights/views/${insightsViewId}/stats/inputs_count`,\n    ],\n  });\n\n  return response;\n}\n\nexport async function addInsightsInputCategory(\n  insightsViewId: string,\n  insightsInputId: string,\n  insightsCategoryId: string\n) {\n  const response = await streams.add(\n    `${API_PATH}/${getInsightsInputsEndpoint(\n      insightsViewId\n    )}/${insightsInputId}/categories`,\n    { data: [{ id: insightsCategoryId, type: 'category' }] }\n  );\n\n  streams.fetchAllWith({\n    partialApiEndpoint: [\n      `${API_PATH}/${getInsightsInputsEndpoint(insightsViewId)}`,\n      `insights/views/${insightsViewId}/categories`,\n      `insights/views/${insightsViewId}/stats/inputs_count`,\n    ],\n  });\n\n  return response;\n}\n\nexport async function addInsightsInputCategories(\n  insightsViewId: string,\n  insightsInputId: string,\n  insightsCategories: { id: string; type: string }[]\n) {\n  const response = await streams.add(\n    `${API_PATH}/${getInsightsInputsEndpoint(\n      insightsViewId\n    )}/${insightsInputId}/categories`,\n    { data: insightsCategories }\n  );\n\n  await streams.fetchAllWith({\n    partialApiEndpoint: [\n      `${API_PATH}/${getInsightsInputsEndpoint(insightsViewId)}`,\n      `insights/views/${insightsViewId}/categories`,\n      `insights/views/${insightsViewId}/stats/inputs_count`,\n    ],\n  });\n\n  return response;\n}\n","// Libraries\nimport React, { useState } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// Components\nimport { Icon, Dropdown, Checkbox } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\n\n// Hooks\nimport useFeatureFlag from 'hooks/useFeatureFlag';\nimport useInsightsCategories from 'modules/commercial/insights/hooks/useInsightsCategories';\n\n// Services\nimport {\n  batchAssignCategories,\n  batchUnassignCategories,\n} from 'modules/commercial/insights/services/batchAssignment';\nimport {\n  addInsightsInputCategories,\n  IInsightsInputData,\n} from 'modules/commercial/insights/services/insightsInputs';\n\n// I18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport messages from '../../messages';\n\n// Styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\nconst ActionButtons = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIcon = styled(Icon)`\n  flex: 0 0 22px;\n  height: 22px;\n  margin-right: 10px;\n`;\n\nconst ActionButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  position: relative;\n`;\n\nconst DropdownListItemText = styled.div`\n  width: 80%;\n  flex: 1 1 auto;\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: normal;\n  text-align: left;\n  margin-right: 10px;\n`;\n\nconst DropdownList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst DropdownListItem = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0px;\n  margin-bottom: 4px;\n  padding: 10px;\n  background: #fff;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  outline: none;\n  cursor: pointer;\n  transition: all 80ms ease-out;\n\n  &.last {\n    margin-bottom: 0px;\n  }\n\n  &:hover,\n  &:focus,\n  &.selected {\n    background: ${colors.clDropdownHoverBackground};\n\n    ${DropdownListItemText} {\n      color: #000;\n    }\n  }\n`;\n\nconst DropdownFooterButton = styled(Button)`\n  .Button {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n`;\n\n// Typings\nimport { InjectedIntlProps } from 'react-intl';\nimport { withRouter, WithRouterProps } from 'react-router';\n\ninterface Props {\n  className?: string;\n  selectedInputs: IInsightsInputData[];\n}\n\nconst Actions = ({\n  className,\n  selectedInputs,\n  params: { viewId },\n  location: { query },\n  intl: { formatMessage },\n}: Props & InjectedIntlProps & WithRouterProps) => {\n  const nlpFeatureFlag = useFeatureFlag('insights_nlp_flow');\n  const categories = useInsightsCategories(viewId);\n  const selectedInputsIds = selectedInputs.map((input) => input.id);\n  const [dropdownOpened, setDropdownOpened] = useState(false);\n  const toggleDropdown = () => {\n    setDropdownOpened(!dropdownOpened);\n  };\n\n  const [categorySelection, setCategorySelection] = useState(new Set<string>());\n  const toggleCategory = (categoryId: string) => () => {\n    if (categorySelection.has(categoryId)) {\n      const newSelection = new Set(categorySelection);\n      newSelection.delete(categoryId);\n      setCategorySelection(newSelection);\n    } else {\n      const newSelection = new Set(categorySelection);\n      newSelection.add(categoryId);\n      setCategorySelection(newSelection);\n    }\n  };\n\n  const [processing, setProcessing] = useState(false);\n  const [processingBulkApprove, setProcessingBulkApprove] = useState(false);\n  // assigns selectedCategories to selectedInputs\n  const assign = async () => {\n    if (selectedInputs.length > 0 && categorySelection.size > 0) {\n      try {\n        setProcessing(true);\n        await batchAssignCategories(\n          viewId,\n          [...selectedInputsIds],\n          [...categorySelection]\n        );\n        setCategorySelection(new Set());\n      } catch {\n        // do nothing\n      }\n      setProcessing(false);\n      setDropdownOpened(false);\n    }\n  };\n\n  const approveSuggestedCategories = async () => {\n    setProcessingBulkApprove(true);\n\n    for (const input of selectedInputs) {\n      try {\n        if (input.relationships.suggested_categories.data.length > 0) {\n          await addInsightsInputCategories(\n            viewId,\n            input.id,\n            input.relationships.suggested_categories.data\n          );\n        }\n      } catch {\n        // do nothing\n      }\n    }\n    setProcessingBulkApprove(false);\n  };\n\n  if (isNilOrError(categories)) {\n    return null;\n  }\n\n  const selectedCategory = categories?.find(\n    (category) => category.id === query.category\n  );\n\n  // unassigns categoryFilter from selectedInputs, with confirmation\n  const unassign = async () => {\n    if (selectedInputs.length > 0 && selectedCategory) {\n      const deleteMessage = formatMessage(messages.deleteFromCategories, {\n        categoryName: selectedCategory.attributes.name,\n        selectedCount: selectedInputs.length,\n      });\n      if (window.confirm(deleteMessage)) {\n        try {\n          setProcessing(true);\n          await batchUnassignCategories(\n            viewId,\n            [...selectedInputsIds],\n            [selectedCategory.id]\n          );\n        } catch {\n          // do nothing\n        }\n        setProcessing(false);\n        setDropdownOpened(false);\n      }\n    }\n  };\n\n  const otherCategories = categories.filter(\n    (category) => category.id !== selectedCategory?.id\n  );\n\n  return (\n    <ActionButtons className={className} data-testid=\"insightsTableActions\">\n      {selectedInputs.length > 0 && (\n        <>\n          {otherCategories.length > 0 && (\n            <ActionButtonWrapper data-testid=\"insightsTableActionsBulkAssign\">\n              <Button onClick={toggleDropdown} buttonStyle=\"admin-dark-text\">\n                <StyledIcon name=\"moveFolder\" />\n                <FormattedMessage {...messages.bulkAssignCategory} />\n              </Button>\n\n              <Dropdown\n                top=\"45px\"\n                opened={dropdownOpened}\n                onClickOutside={toggleDropdown}\n                content={\n                  <DropdownList>\n                    {otherCategories.map((category) => (\n                      <DropdownListItem\n                        key={category.id}\n                        className=\"e2e-dropdown-item\"\n                      >\n                        <DropdownListItemText>\n                          {category.attributes.name}\n                        </DropdownListItemText>\n                        <Checkbox\n                          checked={categorySelection.has(category.id)}\n                          onChange={toggleCategory(category.id)}\n                        />\n                      </DropdownListItem>\n                    ))}\n                  </DropdownList>\n                }\n                footer={\n                  <DropdownFooterButton\n                    className=\"e2e-dropdown-submit\"\n                    buttonStyle=\"cl-blue\"\n                    onClick={assign}\n                    processing={processing}\n                    fullWidth={true}\n                    padding=\"12px\"\n                    whiteSpace=\"normal\"\n                    disabled={categorySelection.size === 0}\n                  >\n                    <FormattedMessage {...messages.assignCategoriesButton} />\n                  </DropdownFooterButton>\n                }\n              />\n            </ActionButtonWrapper>\n          )}\n          {nlpFeatureFlag && (\n            <Button\n              onClick={approveSuggestedCategories}\n              className=\"hasLeftMargin\"\n              buttonStyle=\"admin-dark-text\"\n              processing={processingBulkApprove}\n            >\n              <StyledIcon name=\"checkmark-full\" />\n              <FormattedMessage {...messages.bulkApprove} />\n            </Button>\n          )}\n          {selectedCategory && (\n            <Button\n              onClick={unassign}\n              className=\"hasLeftMargin\"\n              buttonStyle=\"admin-dark-text\"\n              processing={processing}\n            >\n              <StyledIcon name=\"trash\" />\n              <FormattedMessage {...messages.bulkUnassign} />\n            </Button>\n          )}\n        </>\n      )}\n    </ActionButtons>\n  );\n};\n\nexport default withRouter<Props>(injectIntl<Props & WithRouterProps>(Actions));\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\n\nconst StyledHr = styled.hr`\n  display: block;\n  height: 1px;\n  border: 0;\n  border-top: 1px solid ${colors.separation};\n  margin: 1em 0;\n  padding: 0;\n`;\n\nconst Divider = ({ className }: { className?: string }) => (\n  <StyledHr className={className} />\n);\n\nexport default Divider;\n","import React, { useState } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { stringify } from 'qs';\n\n// styles\nimport styled from 'styled-components';\nimport { darken } from 'polished';\n\n// components\nimport { Button, Input, Spinner } from 'cl2-component-library';\nimport Divider from 'components/admin/Divider';\n\nimport Error from 'components/UI/Error';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport clHistory from 'utils/cl-router/history';\nimport getInputsCategoryFilter from 'modules/commercial/insights/utils/getInputsCategoryFilter';\n\n// hooks\nimport useFeatureFlag from 'hooks/useFeatureFlag';\nimport useLocale from 'hooks/useLocale';\nimport useInsightsCategories from 'modules/commercial/insights/hooks/useInsightsCategories';\nimport useInsightsInputsCount from 'modules/commercial/insights/hooks/useInsightsInputsCount';\n\n// intl\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../messages';\n\n// types\nimport { CLErrors } from 'typings';\n\n// services\nimport {\n  addInsightsCategory,\n  deleteInsightsCategories,\n} from 'modules/commercial/insights/services/insightsCategories';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from 'modules/commercial/insights/admin/containers/Insights/tracks';\n\nconst Container = styled.aside`\n  padding: 24px;\n  max-width: 300px;\n  flex: 0 0 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  overflow-y: auto;\n`;\n\nconst DetectButton = styled(Button)`\n  margin-bottom: 8px;\n`;\n\nconst ResetButton = styled(Button)`\n  margin-bottom: 20px;\n`;\n\nconst CategoriesLabel = styled.p`\n  text-transform: uppercase;\n  font-size: ${fontSizes.xs}px;\n  color: ${colors.adminTextColor};\n  font-weight: bold;\n  padding: 16px;\n`;\n\nconst FormContainer = styled.form`\n  display: flex;\n  align-items: center;\n  margin-bottom: 28px;\n  .addButton {\n    margin-left: 4px;\n  }\n`;\n\nconst CategoryButton = styled(Button)`\n  display: block;\n  .button {\n    display: flex;\n    justify-content: space-between;\n  }\n  .buttonText {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    > div:first-child {\n      white-space: nowrap;\n      width: 80%;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nconst CategoryInfoBox = styled.div`\n  background-color: ${colors.clBlueLightest};\n  font-size: ${fontSizes.base};\n  color: ${colors.adminTextColor};\n  border-radius: 3px;\n  padding: 8px 20px;\n`;\n\nconst StyledPlus = styled.div`\n  width: 22px;\n  text-align: center;\n`;\n\nconst ButtonsContainer = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nconst Categories = ({\n  intl: { formatMessage },\n  params: { viewId },\n  location: { query, pathname },\n}: InjectedIntlProps & WithRouterProps) => {\n  const nlpFeatureFlag = useFeatureFlag('insights_nlp_flow');\n  const locale = useLocale();\n  const [loadingAdd, setLoadingAdd] = useState(false);\n  const [loadingReset, setLoadingReset] = useState(false);\n  const [errors, setErrors] = useState<CLErrors | undefined>();\n  const allInputsCount = useInsightsInputsCount(viewId, { processed: true });\n  const uncategorizedInputsCount = useInsightsInputsCount(viewId, {\n    category: '',\n    processed: true,\n  });\n  const recentlyPostedInputsCount = useInsightsInputsCount(viewId, {\n    processed: false,\n  });\n\n  const categories = useInsightsCategories(viewId);\n  const [name, setName] = useState<string | null>();\n\n  if (isNilOrError(locale) || isNilOrError(categories)) {\n    return null;\n  }\n\n  const onChangeName = (value: string) => {\n    setName(value);\n    setErrors(undefined);\n  };\n\n  const handleCategorySubmit = async () => {\n    if (name) {\n      setLoadingAdd(true);\n      try {\n        await addInsightsCategory(viewId, name);\n      } catch (errors) {\n        setErrors(errors.json.errors);\n      }\n      setLoadingAdd(false);\n      setName('');\n    }\n  };\n\n  const selectAllInput = () => {\n    clHistory.push({\n      pathname,\n      search: stringify(\n        { ...query, pageNumber: 1, category: undefined, processed: true },\n        { addQueryPrefix: true }\n      ),\n    });\n  };\n\n  const selectUncategorizedInput = () => {\n    clHistory.push({\n      pathname,\n      search: stringify(\n        { ...query, pageNumber: 1, category: '', processed: true },\n        { addQueryPrefix: true }\n      ),\n    });\n  };\n\n  const selectCategory = (categoryId?: string) => () => {\n    clHistory.push({\n      pathname,\n      search: stringify(\n        { ...query, pageNumber: 1, category: categoryId, processed: undefined },\n        { addQueryPrefix: true }\n      ),\n    });\n  };\n\n  const selectRecentlyPosted = () => {\n    clHistory.push({\n      pathname,\n      search: stringify(\n        { ...query, pageNumber: 1, category: undefined, processed: false },\n        { addQueryPrefix: true }\n      ),\n    });\n  };\n\n  const inputsCategoryFilter = getInputsCategoryFilter(\n    query.category,\n    query.processed\n  );\n\n  const handleResetCategories = async () => {\n    const deleteMessage = formatMessage(messages.resetCategoriesConfimation);\n\n    setLoadingReset(true);\n    if (window.confirm(deleteMessage)) {\n      try {\n        await deleteInsightsCategories(viewId);\n      } catch {\n        // Do nothing\n      }\n    }\n    trackEventByName(tracks.resetCategories);\n    setLoadingReset(false);\n    selectRecentlyPosted();\n  };\n\n  return (\n    <Container data-testid=\"insightsCategories\">\n      {nlpFeatureFlag && (\n        <div data-testid=\"insightsDetectCategories\">\n          <DetectButton\n            buttonStyle=\"white\"\n            locale={locale}\n            textColor={colors.adminTextColor}\n            linkTo={`/admin/insights/${viewId}/detect`}\n          >\n            {formatMessage(messages.detectCategories)}\n          </DetectButton>\n        </div>\n      )}\n      <ResetButton\n        buttonStyle=\"white\"\n        locale={locale}\n        textColor={colors.adminTextColor}\n        onClick={handleResetCategories}\n      >\n        {loadingReset ? (\n          <Spinner size=\"22px\" />\n        ) : (\n          formatMessage(messages.resetCategories)\n        )}\n      </ResetButton>\n      <Divider />\n      <ButtonsContainer>\n        <CategoryButton\n          locale={locale}\n          bgColor={\n            inputsCategoryFilter === 'allInput'\n              ? darken(0.05, colors.lightGreyishBlue)\n              : 'transparent'\n          }\n          textColor={colors.label}\n          textHoverColor={colors.adminTextColor}\n          bgHoverColor={darken(0.05, colors.lightGreyishBlue)}\n          onClick={selectAllInput}\n        >\n          <div> {formatMessage(messages.allInput)}</div>\n          {!isNilOrError(allInputsCount) && (\n            <div data-testid=\"insightsAllInputsCount\">\n              {allInputsCount.count}\n            </div>\n          )}\n        </CategoryButton>\n        <CategoryButton\n          locale={locale}\n          bgColor={\n            inputsCategoryFilter === 'recentlyPosted'\n              ? darken(0.05, colors.lightGreyishBlue)\n              : 'transparent'\n          }\n          textColor={colors.label}\n          textHoverColor={colors.adminTextColor}\n          bgHoverColor={darken(0.05, colors.lightGreyishBlue)}\n          onClick={selectRecentlyPosted}\n        >\n          <div>{formatMessage(messages.recentlyPosted)}</div>\n          {!isNilOrError(recentlyPostedInputsCount) && (\n            <div data-testid=\"insightsRecentlyPostedInputsCount\">\n              {recentlyPostedInputsCount.count}\n            </div>\n          )}\n        </CategoryButton>\n        <CategoryButton\n          locale={locale}\n          bgColor={\n            inputsCategoryFilter === 'notCategorized'\n              ? darken(0.05, colors.lightGreyishBlue)\n              : 'transparent'\n          }\n          textColor={colors.label}\n          textHoverColor={colors.adminTextColor}\n          bgHoverColor={darken(0.05, colors.lightGreyishBlue)}\n          onClick={selectUncategorizedInput}\n        >\n          <div>{formatMessage(messages.notCategorized)}</div>\n          {!isNilOrError(uncategorizedInputsCount) && (\n            <div data-testid=\"insightsUncategorizedInputsCount\">\n              {uncategorizedInputsCount.count}\n            </div>\n          )}\n        </CategoryButton>\n      </ButtonsContainer>\n      <CategoriesLabel>{formatMessage(messages.categories)}</CategoriesLabel>\n      <FormContainer>\n        <Input\n          type=\"text\"\n          value={name}\n          onChange={onChangeName}\n          placeholder={formatMessage(messages.addCategory)}\n          size=\"small\"\n        />\n        <Button\n          locale={locale}\n          fontSize={`${fontSizes.xxxl}px`}\n          bgColor={colors.adminTextColor}\n          className=\"addButton\"\n          padding=\"8px\"\n          onClick={handleCategorySubmit}\n          disabled={!name || loadingAdd}\n        >\n          {loadingAdd ? <Spinner size=\"22px\" /> : <StyledPlus>+</StyledPlus>}\n        </Button>\n      </FormContainer>\n      <div>\n        {errors && (\n          <Error apiErrors={errors['name']} fieldName=\"category_name\" />\n        )}\n      </div>\n      {categories.length === 0 ? (\n        <CategoryInfoBox data-testid=\"insightsNoCategories\">\n          <p>\n            <FormattedMessage\n              {...messages.categoryInfoBox}\n              values={{\n                bold: <b>{formatMessage(messages.categoryInfoBoxBold)}</b>,\n              }}\n            />\n          </p>\n        </CategoryInfoBox>\n      ) : (\n        categories.map((category) => (\n          <div data-testid=\"insightsCategory\" key={category.id}>\n            <CategoryButton\n              locale={locale}\n              bgColor={\n                category.id === query.category\n                  ? darken(0.05, colors.lightGreyishBlue)\n                  : 'transparent'\n              }\n              textColor={colors.label}\n              textHoverColor={colors.adminTextColor}\n              bgHoverColor={darken(0.05, colors.lightGreyishBlue)}\n              onClick={selectCategory(category.id)}\n            >\n              <div>{category.attributes.name}</div>\n              <div data-testid=\"insightsCategoryCount\">\n                {category.attributes.inputs_count}\n              </div>\n            </CategoryButton>\n          </div>\n        ))\n      )}\n    </Container>\n  );\n};\nexport default withRouter(injectIntl(Categories));\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\n\nconst getInsightsInputsEndpoint = (viewId: string) =>\n  `insights/views/${viewId}/stats/inputs_count`;\n\nexport interface IInsightsInputsCount {\n  count: number;\n}\n\nexport function insightsInputsCountStream(\n  insightsViewId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInsightsInputsCount>({\n    apiEndpoint: `${API_PATH}/${getInsightsInputsEndpoint(insightsViewId)}`,\n    ...streamParams,\n    skipSanitizationFor: ['category'],\n  });\n}\n","import React, { useState } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\n// styles\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// intl\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\nimport { injectIntl } from 'utils/cl-intl';\n\n// components\nimport { Button, Input } from 'cl2-component-library';\nimport Error from 'components/UI/Error';\n\n// services\nimport { updateInsightsCategory } from 'modules/commercial/insights/services/insightsCategories';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// types\nimport { CLErrors } from 'typings';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from 'modules/commercial/insights/admin/containers/Insights/tracks';\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 400px;\n  margin: 40px auto;\n  color: ${colors.adminTextColor};\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  font-size: ${fontSizes.xxl}px;\n`;\n\nconst Form = styled.form`\n  margin-top: 40px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n\n  > :not(:first-child) {\n    margin-left: 5px;\n  }\n`;\n\ntype RenameCategoryProps = {\n  closeRenameModal: () => void;\n  originalCategoryName: string;\n} & InjectedIntlProps &\n  WithRouterProps;\n\nconst RenameCategory = ({\n  closeRenameModal,\n  originalCategoryName,\n  intl: { formatMessage },\n  params: { viewId },\n  location: { query },\n}: RenameCategoryProps) => {\n  const locale = useLocale();\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<CLErrors | undefined>();\n\n  const [name, setName] = useState<string>(originalCategoryName);\n  const onChangeName = (value: string) => {\n    setName(value);\n    setErrors(undefined);\n  };\n\n  const handleSubmit = async () => {\n    if (name) {\n      setLoading(true);\n      try {\n        const result = await updateInsightsCategory(\n          viewId,\n          query.category,\n          name\n        );\n        if (!isNilOrError(result)) {\n          closeRenameModal();\n        }\n      } catch (errors) {\n        setErrors(errors.json.errors);\n        setLoading(false);\n      }\n      trackEventByName(tracks.editCategory);\n    }\n  };\n\n  if (isNilOrError(locale)) return null;\n\n  return (\n    <Container data-testid=\"insights\">\n      <Title>{formatMessage(messages.renameCategoryModalTitle)}</Title>\n      <Form>\n        <Input\n          type=\"text\"\n          value={name}\n          onChange={onChangeName}\n          label={formatMessage(messages.renameCategoryModalNameLabel)}\n        />\n        {errors && (\n          <Error apiErrors={errors['name']} fieldName=\"category_name\" />\n        )}\n\n        <ButtonContainer>\n          <Button\n            processing={loading}\n            disabled={!name}\n            locale={locale}\n            onClick={handleSubmit}\n            bgColor={colors.adminTextColor}\n          >\n            {formatMessage(messages.renameCategoryModalSave)}\n          </Button>\n          <Button\n            locale={locale}\n            onClick={closeRenameModal}\n            buttonStyle=\"secondary\"\n          >\n            {formatMessage(messages.renameCategoryModalCancel)}\n          </Button>\n        </ButtonContainer>\n      </Form>\n    </Container>\n  );\n};\n\nexport default withRouter(injectIntl<RenameCategoryProps>(RenameCategory));\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { stringify } from 'qs';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\nimport clHistory from 'utils/cl-router/history';\nimport getInputsCategoryFilter from 'modules/commercial/insights/utils/getInputsCategoryFilter';\n\n// hooks\nimport useInsightsInputs, {\n  defaultPageSize,\n} from 'modules/commercial/insights/hooks/useInsightsInputs';\nimport { IInsightsInputData } from 'modules/commercial/insights/services/insightsInputs';\n\n// components\nimport { Table, Icon, Box } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\nimport InputsTableRow from './InputsTableRow';\nimport EmptyState from './EmptyState';\nimport CheckboxWithPartialCheck from 'components/UI/CheckboxWithPartialCheck';\nimport SideModal from 'components/UI/SideModal';\nimport InputDetails from '../InputDetails';\nimport Divider from 'components/admin/Divider';\nimport Actions from './Actions';\nimport Pagination from 'components/Pagination';\nimport SearchInput from 'components/UI/SearchInput';\nimport TableTitle from './TableTitle';\nimport ScanCategory from './ScanCategory';\n\n// styles\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// intl\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../messages';\n\nconst Inputs = styled.div`\n  flex: 1;\n  background: #fff;\n  overflow-x: auto;\n  overflow-y: auto;\n  padding: 40px;\n  border-left: 1px solid ${colors.separation};\n`;\n\nconst TitleRow = styled.div`\n  display: flex;\n  min-height: 43px;\n`;\n\nconst StyledActions = styled(Actions)`\n  margin-left: 60px;\n`;\n\nconst StyledDivider = styled(Divider)`\n  margin-top: 6px;\n`;\n\nconst StyledTable = styled(Table)`\n  thead {\n    tr {\n      th {\n        padding: 12px 4px;\n        font-weight: bold;\n      }\n    }\n  }\n  tbody {\n    tr {\n      cursor: pointer;\n      height: 56px;\n\n      td {\n        padding: 12px 4px;\n        color: ${colors.label};\n        font-size: ${fontSizes.small}px;\n        > * {\n          margin: 0;\n        }\n      }\n    }\n    tr:hover {\n      background-color: ${colors.background};\n    }\n  }\n`;\n\nconst StyledSort = styled.div`\n  display: flex;\n  align-items: center !important;\n  cursor: pointer;\n  font-weight: bold;\n  svg {\n    width: 10px;\n    margin-left: 4px;\n  }\n`;\n\nconst StyledPagination = styled(Pagination)`\n  display: block;\n  margin-top: 12px;\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-content: center;\n  margin-bottom: 40px;\n`;\n\nconst RecentlyPostedInfoBox = styled.div`\n  color: ${colors.adminTextColor};\n  background-color: ${colors.clBlueLightest};\n  padding: 20px;\n  border-radius: 3px;\n  text-align: center;\n  margin-bottom: 28px;\n  svg {\n    fill: ${colors.clBlue};\n    margin-right: 8px;\n  }\n`;\n\nconst InputsTable = ({\n  params: { viewId },\n  location: { pathname, query },\n  intl: { formatMessage },\n}: WithRouterProps & InjectedIntlProps) => {\n  // State\n  const [selectedRows, setSelectedRows] = useState<Set<string>>(new Set());\n  const [isSideModalOpen, setIsSideModalOpen] = useState(false);\n  const [previewedInputIndex, setPreviewedInputIndex] = useState<number | null>(\n    null\n  );\n  // Use ref for isPreviewedInputInTable to avoid dependencies in moveUp and moveDown\n  const isPreviewedInputInTable = useRef(true);\n  const [isMoveDownDisabled, setIsMoveDownDisabled] = useState(false);\n  const [movedUpDown, setMovedUpDown] = useState(false);\n\n  // Data fetching -------------------------------------------------------------\n  const pageNumber = parseInt(query?.pageNumber, 10);\n  const selectedCategory = query.category;\n  const search = query.search;\n  const inputsCategoryFilter = getInputsCategoryFilter(\n    selectedCategory,\n    query.processed\n  );\n  const sort = query.sort;\n\n  const { list: inputs, lastPage, loading, setLoading } = useInsightsInputs(\n    viewId,\n    {\n      pageNumber,\n      search,\n      sort,\n      processed:\n        // Include non-processed input in recently posted\n        inputsCategoryFilter === 'recentlyPosted'\n          ? false\n          : // Include both processed and unprocessed input in category\n          inputsCategoryFilter === 'category'\n          ? undefined\n          : // Include only processed input everywhere else\n            true,\n\n      category: selectedCategory,\n    }\n  );\n\n  // Callbacks and Effects -----------------------------------------------------\n\n  // Table Selection\n  // Reset selection on page change\n  useEffect(() => {\n    setSelectedRows(new Set());\n  }, [selectedCategory, pageNumber]);\n\n  // Update isPreviewedInputInTable ref value\n  useEffect(() => {\n    if (!isNilOrError(inputs)) {\n      const inputsIds = inputs.map((input) => input.id);\n      const isInTable = inputsIds.includes(query.previewedInputId);\n\n      isPreviewedInputInTable.current = isInTable;\n\n      setIsMoveDownDisabled(\n        isInTable && pageNumber === lastPage\n          ? previewedInputIndex === inputs.length - 1\n          : previewedInputIndex === inputs.length\n      );\n    }\n  }, [\n    inputs,\n    query.previewedInputId,\n    previewedInputIndex,\n    pageNumber,\n    lastPage,\n  ]);\n\n  // Navigate to correct index when moving up and down\n  useEffect(() => {\n    if (\n      !isNilOrError(inputs) &&\n      !isNilOrError(previewedInputIndex) &&\n      !isNilOrError(inputs[previewedInputIndex]) &&\n      movedUpDown &&\n      !loading\n    ) {\n      clHistory.replace({\n        pathname,\n        search: stringify(\n          {\n            ...query,\n            previewedInputId: inputs[previewedInputIndex].id,\n          },\n          { addQueryPrefix: true }\n        ),\n      });\n      setMovedUpDown(false);\n    }\n  }, [inputs, pathname, previewedInputIndex, query, movedUpDown, loading]);\n\n  // Side Modal Preview\n  // Use callback to keep references for moveUp and moveDown stable\n  const moveUp = useCallback(() => {\n    let hasToLoadPrevPage = false;\n\n    setPreviewedInputIndex((prevSelectedIndex) => {\n      hasToLoadPrevPage = pageNumber !== 1 && prevSelectedIndex === 0;\n\n      return hasToLoadPrevPage\n        ? defaultPageSize - 1\n        : !isNilOrError(prevSelectedIndex)\n        ? prevSelectedIndex - 1\n        : prevSelectedIndex;\n    });\n    setMovedUpDown(true);\n\n    if (hasToLoadPrevPage) {\n      clHistory.replace({\n        pathname,\n        search: stringify(\n          {\n            sort,\n            search,\n            category: selectedCategory,\n            processed: query.processed,\n            pageNumber: pageNumber - 1,\n          },\n          { addQueryPrefix: true }\n        ),\n      });\n      // Setting the loading state here to ensure it is true in the useEffect that navigates to the selected index\n      setLoading(true);\n    }\n  }, [\n    pageNumber,\n    pathname,\n    selectedCategory,\n    sort,\n    search,\n    query.processed,\n    setLoading,\n  ]);\n\n  const moveDown = useCallback(() => {\n    let hasToLoadNextPage = false;\n\n    setPreviewedInputIndex((prevSelectedIndex) => {\n      hasToLoadNextPage = !isNilOrError(inputs)\n        ? lastPage !== pageNumber && isPreviewedInputInTable.current\n          ? prevSelectedIndex === inputs.length - 1\n          : prevSelectedIndex === inputs.length\n        : false;\n\n      return hasToLoadNextPage\n        ? 0\n        : !isNilOrError(prevSelectedIndex) && isPreviewedInputInTable.current\n        ? prevSelectedIndex + 1\n        : prevSelectedIndex;\n    });\n\n    setMovedUpDown(true);\n\n    if (hasToLoadNextPage) {\n      clHistory.replace({\n        pathname,\n        search: stringify(\n          {\n            sort,\n            search,\n            category: selectedCategory,\n            processed: query.processed,\n            pageNumber: pageNumber + 1,\n          },\n          { addQueryPrefix: true }\n        ),\n      });\n      // Setting the loading state here to ensure it is true in the useEffect that navigates to the selected index\n      setLoading(true);\n    }\n  }, [\n    inputs,\n    pageNumber,\n    lastPage,\n    pathname,\n    selectedCategory,\n    sort,\n    search,\n    query.processed,\n    setLoading,\n  ]);\n\n  // Search\n  const onSearch = useCallback(\n    (newSearch: string) => {\n      if (newSearch !== search) {\n        clHistory.replace({\n          pathname,\n          search: stringify(\n            {\n              sort,\n              search: newSearch,\n              category: selectedCategory,\n              processed: query.processed,\n              pageNumber: 1,\n            },\n            { addQueryPrefix: true }\n          ),\n        });\n      }\n    },\n    [pathname, selectedCategory, sort, search, query.processed]\n  );\n\n  // From this point we need data ----------------------------------------------\n  if (isNilOrError(inputs)) {\n    return null;\n  }\n\n  // Pagination ----------------------------------------------------------------\n  const handlePaginationClick = (newPageNumber: number) => {\n    clHistory.push({\n      pathname,\n      search: stringify(\n        { ...query, pageNumber: newPageNumber },\n        { addQueryPrefix: true }\n      ),\n    });\n  };\n\n  // Selection and Actions -----------------------------------------------------\n  const handleCheckboxChange = () => {\n    if (selectedRows.size === 0) {\n      const newSelection = new Set(inputs.map((input) => input.id));\n      setSelectedRows(newSelection);\n    } else {\n      const newSelection = new Set<string>();\n      setSelectedRows(newSelection);\n    }\n  };\n\n  const toggleInputSelected = (input: IInsightsInputData) => () => {\n    const newSelection = new Set(selectedRows);\n    if (selectedRows.has(input.id)) {\n      newSelection.delete(input.id);\n      setSelectedRows(newSelection);\n    } else {\n      newSelection.add(input.id);\n      setSelectedRows(newSelection);\n    }\n  };\n\n  // Side Modal Preview --------------------------------------------------------\n  const closeSideModal = () => setIsSideModalOpen(false);\n\n  const openSideModal = () => setIsSideModalOpen(true);\n\n  const previewInput = (input: IInsightsInputData) => () => {\n    setPreviewedInputIndex(inputs.indexOf(input));\n    clHistory.replace({\n      pathname,\n      search: stringify(\n        { ...query, previewedInputId: input.id },\n        { addQueryPrefix: true }\n      ),\n    });\n    openSideModal();\n  };\n\n  const onSort = () => {\n    clHistory.push({\n      pathname,\n      search: stringify(\n        {\n          ...query,\n          sort: query.sort === '-approval' ? 'approval' : '-approval',\n        },\n        { addQueryPrefix: true }\n      ),\n    });\n  };\n\n  return (\n    <Inputs data-testid=\"insightsInputsTable\">\n      <SearchContainer>\n        <SearchInput onChange={onSearch} />\n        <Button\n          buttonStyle=\"admin-dark\"\n          bgColor={colors.clBlue}\n          linkTo={`/admin/insights`}\n        >\n          {formatMessage(messages.inputsDone)}\n        </Button>\n      </SearchContainer>\n      {inputsCategoryFilter === 'recentlyPosted' && inputs.length !== 0 && (\n        <RecentlyPostedInfoBox data-testid=\"insightsRecentlyAddedInfobox\">\n          <Icon name=\"showMore\" />\n          {formatMessage(messages.inputsTableRecentlyPostedInfoBox)}\n        </RecentlyPostedInfoBox>\n      )}\n      {inputsCategoryFilter === 'category' && inputs.length !== 0 && (\n        <Box display=\"flex\" justifyContent=\"flex-end\">\n          <ScanCategory variant=\"button\" />\n        </Box>\n      )}\n      <TitleRow>\n        <TableTitle />\n        {inputs.length !== 0 && (\n          <StyledActions\n            selectedInputs={inputs.filter((input) =>\n              selectedRows.has(input.id)\n            )}\n          />\n        )}\n      </TitleRow>\n      <StyledDivider />\n      {inputs.length === 0 ? (\n        <EmptyState />\n      ) : (\n        <>\n          <StyledTable>\n            <colgroup>\n              <col span={1} style={{ width: '2.5%' }} />\n              <col span={1} style={{ width: '30%' }} />\n              {query.category ? (\n                <col span={1} style={{ width: '2.5%' }} />\n              ) : null}\n              <col span={1} style={{ width: '65%' }} />\n            </colgroup>\n            <thead>\n              <tr>\n                <th>\n                  <CheckboxWithPartialCheck\n                    onChange={handleCheckboxChange}\n                    checked={\n                      selectedRows.size === inputs.length\n                        ? true\n                        : selectedRows.size === 0\n                        ? false\n                        : 'mixed'\n                    }\n                    data-testid=\"headerCheckBox\"\n                  />\n                </th>\n                <th>{formatMessage(messages.inputsTableInputs)}</th>\n                <th>\n                  {query.category ? (\n                    <StyledSort\n                      onClick={onSort}\n                      as=\"button\"\n                      data-testid=\"insightsSortButton\"\n                    >\n                      {formatMessage(messages.inputsTableCategories)}\n                      <Icon\n                        name={\n                          query.sort === '-approval'\n                            ? 'chevron-up'\n                            : 'chevron-down'\n                        }\n                      />\n                    </StyledSort>\n                  ) : (\n                    formatMessage(messages.inputsTableCategories)\n                  )}\n                </th>\n                {query.category ? (\n                  <th>{formatMessage(messages.inputsTableAlsoIn)}</th>\n                ) : null}\n              </tr>\n            </thead>\n            <tbody>\n              {inputs.map((input) => (\n                <InputsTableRow\n                  input={input}\n                  key={input.id}\n                  selected={selectedRows.has(input.id)}\n                  changeSelected={toggleInputSelected(input)}\n                  onPreview={previewInput(input)}\n                />\n              ))}\n            </tbody>\n          </StyledTable>\n          <StyledPagination\n            currentPage={pageNumber || 1}\n            totalPages={lastPage || 1}\n            loadPage={handlePaginationClick}\n          />\n        </>\n      )}\n      <SideModal opened={isSideModalOpen} close={closeSideModal}>\n        {query.previewedInputId && (\n          <InputDetails\n            // Rely on url query for previewedInputId\n            previewedInputId={query.previewedInputId}\n            moveUp={moveUp}\n            moveDown={moveDown}\n            isMoveUpDisabled={previewedInputIndex === 0 && pageNumber === 1}\n            isMoveDownDisabled={isMoveDownDisabled}\n          />\n        )}\n      </SideModal>\n    </Inputs>\n  );\n};\n\nexport default withRouter(injectIntl(InputsTable));\n","import { useState, useEffect } from 'react';\nimport {\n  insightsCategoryStream,\n  IInsightsCategoryData,\n} from '../services/insightsCategories';\n\nconst useInsightsCategory = (viewId: string, id: string) => {\n  const [insightsCategory, setInsightsCategory] = useState<\n    IInsightsCategoryData | undefined | null | Error\n  >(undefined);\n\n  useEffect(() => {\n    const subscription = insightsCategoryStream(\n      viewId,\n      id\n    ).observable.subscribe((insightsCategory) => {\n      setInsightsCategory(insightsCategory.data);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [viewId, id]);\n\n  return insightsCategory;\n};\n\nexport default useInsightsCategory;\n","export default {\n  export: 'Exported insights inputs data',\n  resetCategories: 'Reset insights categories',\n  editCategory: 'Edited an insights category',\n  scanForSuggestions: 'Scanned for insights category suggestions',\n  addCategoryFromInput: 'Added an insights category from input side modal',\n  createCategoryFromInput: 'Created an insights category from input side modal',\n};\n","import React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// services\nimport { IInsightsInputData } from 'modules/commercial/insights/services/insightsInputs';\n\n// hooks\nimport useIdea from 'hooks/useIdea';\nimport useFeatureFlag from 'hooks/useFeatureFlag';\n\n// styles\nimport styled from 'styled-components';\n\n// components\nimport { Checkbox } from 'cl2-component-library';\nimport T from 'components/T';\nimport Category from 'modules/commercial/insights/admin/components/Category';\n\nconst CategoryList = styled.div`\n  > *:not(:only-of-type) {\n    margin-right: 8px;\n    margin-top: 4px;\n    margin-bottom: 4px;\n  }\n`;\n\ntype InputsTableRowProps = {\n  input: IInsightsInputData;\n  selected: boolean;\n  changeSelected: () => void;\n  onPreview: () => void;\n};\n\nconst InputsTableRow = ({\n  input,\n  selected,\n  changeSelected,\n  onPreview,\n  location: { query },\n}: InputsTableRowProps & WithRouterProps) => {\n  const nlpFeatureFlag = useFeatureFlag('insights_nlp_flow');\n  const idea = useIdea({ ideaId: input.relationships?.source.data.id });\n\n  if (isNilOrError(idea)) {\n    return null;\n  }\n\n  const handleEnterPress = (\n    event: React.KeyboardEvent<HTMLTableRowElement>\n  ) => {\n    if (event.key === 'Enter') {\n      onPreview();\n    }\n  };\n\n  const categories = input.relationships?.categories.data;\n  const suggestedCategories = nlpFeatureFlag\n    ? input.relationships?.suggested_categories.data\n    : [];\n\n  return (\n    <tr\n      data-testid=\"insightsInputsTableRow\"\n      tabIndex={0}\n      onKeyPress={handleEnterPress}\n      onClick={onPreview}\n    >\n      <td>\n        <Checkbox\n          checked={selected}\n          onChange={changeSelected}\n          stopLabelPropagation\n        />\n      </td>\n      <td>\n        <T value={idea.attributes.title_multiloc} maxLength={30} />\n      </td>\n      <td>\n        <CategoryList>\n          {(query.category\n            ? categories.filter((category) => category.id === query.category)\n            : categories\n          ).map((category) => (\n            <Category\n              id={category.id}\n              variant=\"approved\"\n              inputId={input.id}\n              key={category.id}\n            />\n          ))}\n\n          {(query.category\n            ? suggestedCategories.filter(\n                (category) => category.id === query.category\n              )\n            : suggestedCategories\n          ).map((category) => (\n            <Category\n              id={category.id}\n              variant=\"suggested\"\n              inputId={input.id}\n              key={category.id}\n            />\n          ))}\n        </CategoryList>\n      </td>\n      {query.category ? (\n        <td>\n          <CategoryList>\n            {categories\n              .filter((category) => category.id !== query.category)\n              .map((category) => (\n                <Category\n                  id={category.id}\n                  variant=\"approved\"\n                  inputId={input.id}\n                  key={category.id}\n                />\n              ))}\n            {suggestedCategories\n              .filter((category) => category.id !== query.category)\n              .map((category) => (\n                <Category\n                  id={category.id}\n                  variant=\"suggested\"\n                  inputId={input.id}\n                  key={category.id}\n                />\n              ))}\n          </CategoryList>\n        </td>\n      ) : null}\n    </tr>\n  );\n};\n\nexport default withRouter(InputsTableRow);\n","import React, { PureComponent } from 'react';\nimport { createPortal } from 'react-dom';\nimport eventEmitter from 'utils/eventEmitter';\nimport { Subscription } from 'rxjs';\nimport { FocusOn } from 'react-focus-on';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport clickOutside from 'utils/containers/clickOutside';\n\n// animations\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\n// Translation\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors } from 'utils/styleUtils';\nimport { hideVisually } from 'polished';\n\nconst enterTimeout = 350;\nconst enterDelay = 0;\nconst exitTimeout = 350;\nconst exitDelay = 0;\nconst easing = 'cubic-bezier(0.165, 0.84, 0.44, 1)';\n\nconst ModalWrapper = styled(clickOutside)``;\n\nconst ModalContainer = styled.div`\n  width: 940px;\n  height: 100vh;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  outline: none;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  right: 0;\n  will-change: opacity, transform;\n`;\n\nconst CloseIcon = styled(Icon)`\n  flex: 0 0 16px;\n  width: 16px;\n  height: 16px;\n  fill: ${colors.label};\n  z-index: 2;\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 35px;\n  height: 30px;\n  width: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  opacity: 0;\n  z-index: 1001;\n\n  &:hover,\n  &:focus {\n    ${CloseIcon} {\n      fill: #000;\n    }\n  }\n\n  ${media.smallerThanMinTablet`\n    height: 18px;\n    width: 18px;\n  `}\n`;\n\nconst Overlay = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.75);\n  overflow: hidden;\n  z-index: 1000000;\n  will-change: opacity;\n\n  &.modal-enter {\n    opacity: 0;\n\n    ${ModalContainer} {\n      opacity: 0;\n      transform: translateX(940px);\n    }\n\n    &.modal-enter-active {\n      opacity: 1;\n      transition: all ${enterTimeout}ms ${easing} ${enterDelay}ms;\n\n      ${ModalContainer} {\n        opacity: 1;\n        transform: translateX(0px);\n        transition: all ${enterTimeout}ms ${easing} ${enterDelay}ms;\n      }\n    }\n  }\n\n  &.modal-enter-done {\n    ${CloseButton} {\n      opacity: 1;\n    }\n  }\n\n  &.modal-exit {\n    opacity: 1;\n\n    ${ModalContainer} {\n      opacity: 1;\n      transform: translateX(0px);\n    }\n\n    ${CloseButton} {\n      opacity: 0;\n    }\n\n    &.modal-exit-active {\n      opacity: 1;\n      transition: opacity ${exitTimeout}ms ${easing} ${exitDelay}ms;\n\n      ${ModalContainer} {\n        opacity: 1;\n        transform: translateX(940px);\n        transition: all ${exitTimeout}ms ${easing} ${exitDelay}ms;\n      }\n    }\n  }\n`;\n\nconst ModalContent = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`;\n\nconst HiddenSpan = styled.span`\n  ${hideVisually()}\n`;\n\ntype Props = {\n  opened: boolean;\n  close: () => void;\n  className?: string;\n  label?: string;\n  children?: any;\n};\n\ntype State = {\n  innerModalOpened: boolean;\n};\n\nexport default class SideModal extends PureComponent<Props, State> {\n  private el: HTMLDivElement;\n  private ModalPortal = document.getElementById('modal-portal');\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      innerModalOpened: false,\n    };\n    this.el = document.createElement('div');\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    if (!this.ModalPortal) {\n      // eslint-disable-next-line no-console\n      console.log(\n        'There was no Portal to insert the modal. Please make sure you have a Portal root'\n      );\n    } else {\n      this.ModalPortal.appendChild(this.el);\n    }\n\n    this.subscriptions = [\n      eventEmitter.observeEvent('modalOpened').subscribe(() => {\n        this.setState({ innerModalOpened: true });\n      }),\n      eventEmitter.observeEvent('modalClosed').subscribe(() => {\n        this.setState({ innerModalOpened: false });\n      }),\n    ];\n  }\n\n  componentWillUnmount() {\n    if (!this.ModalPortal) {\n      // eslint-disable-next-line no-console\n      console.log(\n        'There was no Portal to insert the modal. Please make sure you have a Portal root'\n      );\n    } else {\n      this.ModalPortal.removeChild(this.el);\n    }\n\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  clickOutsideModal = () => {\n    this.props.close();\n  };\n\n  clickCloseButton = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.close();\n  };\n\n  render(): React.ReactNode {\n    const { children, opened, label } = this.props;\n    const modalPortalElement = document?.getElementById('modal-portal');\n\n    if (modalPortalElement) {\n      return createPortal(\n        <CSSTransition\n          classNames=\"modal\"\n          in={opened}\n          timeout={{\n            enter: enterTimeout + enterDelay,\n            exit: exitTimeout + exitDelay,\n          }}\n          mountOnEnter={true}\n          unmountOnExit={true}\n          enter={true}\n          exit={true}\n        >\n          <Overlay\n            id=\"e2e-modal-container\"\n            className={this.props.className}\n            aria-modal=\"true\"\n            role=\"dialog\"\n            aria-label={label}\n          >\n            <ModalWrapper\n              onClickOutside={this.clickOutsideModal}\n              closeOnClickOutsideEnabled={!this.state.innerModalOpened}\n            >\n              <FocusOn>\n                <ModalContainer>\n                  <ModalContent id=\"e2e-side-modal-content\">\n                    {children}\n                  </ModalContent>\n                </ModalContainer>\n                <CloseButton\n                  className=\"e2e-modal-close-button\"\n                  onClick={this.clickCloseButton}\n                >\n                  <HiddenSpan>\n                    <FormattedMessage {...messages.closeButtonAria} />\n                  </HiddenSpan>\n                  <CloseIcon name=\"close\" />\n                </CloseButton>\n              </FocusOn>\n            </ModalWrapper>\n          </Overlay>\n        </CSSTransition>,\n        modalPortalElement\n      );\n    }\n\n    return null;\n  }\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport { a as _objectSpread2, _ as _createSuper, E as cleanValue } from '../../dist/index-4bd03571.esm.js';\nimport React, { Component } from 'react';\nimport { S as Select, g as getOptionValue, a as getOptionLabel } from '../../dist/Select-dbb12e54.esm.js';\nimport { m as manageState } from '../../dist/stateManager-845a3300.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/typeof';\nimport 'react-input-autosize';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport 'memoize-one';\n\nvar compareOption = function compareOption() {\n  var inputValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var option = arguments.length > 1 ? arguments[1] : undefined;\n  var accessors = arguments.length > 2 ? arguments[2] : undefined;\n  var candidate = String(inputValue).toLowerCase();\n  var optionValue = String(accessors.getOptionValue(option)).toLowerCase();\n  var optionLabel = String(accessors.getOptionLabel(option)).toLowerCase();\n  return optionValue === candidate || optionLabel === candidate;\n};\n\nvar builtins = {\n  formatCreateLabel: function formatCreateLabel(inputValue) {\n    return \"Create \\\"\".concat(inputValue, \"\\\"\");\n  },\n  isValidNewOption: function isValidNewOption(inputValue, selectValue, selectOptions, accessors) {\n    return !(!inputValue || selectValue.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }) || selectOptions.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }));\n  },\n  getNewOptionData: function getNewOptionData(inputValue, optionLabel) {\n    return {\n      label: optionLabel,\n      value: inputValue,\n      __isNew__: true\n    };\n  },\n  getOptionValue: getOptionValue,\n  getOptionLabel: getOptionLabel\n};\nvar defaultProps = _objectSpread2({\n  allowCreateWhileLoading: false,\n  createOptionPosition: 'last'\n}, builtins);\nvar makeCreatableSelect = function makeCreatableSelect(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class = /*#__PURE__*/function (_Component) {\n    _inherits(Creatable, _Component);\n\n    var _super = _createSuper(Creatable);\n\n    function Creatable(props) {\n      var _this;\n\n      _classCallCheck(this, Creatable);\n\n      _this = _super.call(this, props);\n      _this.select = void 0;\n\n      _this.onChange = function (newValue, actionMeta) {\n        var _this$props = _this.props,\n            getNewOptionData = _this$props.getNewOptionData,\n            inputValue = _this$props.inputValue,\n            isMulti = _this$props.isMulti,\n            onChange = _this$props.onChange,\n            onCreateOption = _this$props.onCreateOption,\n            value = _this$props.value,\n            name = _this$props.name;\n\n        if (actionMeta.action !== 'select-option') {\n          return onChange(newValue, actionMeta);\n        }\n\n        var newOption = _this.state.newOption;\n        var valueArray = Array.isArray(newValue) ? newValue : [newValue];\n\n        if (valueArray[valueArray.length - 1] === newOption) {\n          if (onCreateOption) onCreateOption(inputValue);else {\n            var newOptionData = getNewOptionData(inputValue, inputValue);\n            var newActionMeta = {\n              action: 'create-option',\n              name: name,\n              option: newOptionData\n            };\n\n            if (isMulti) {\n              onChange([].concat(_toConsumableArray(cleanValue(value)), [newOptionData]), newActionMeta);\n            } else {\n              onChange(newOptionData, newActionMeta);\n            }\n          }\n          return;\n        }\n\n        onChange(newValue, actionMeta);\n      };\n\n      var options = props.options || [];\n      _this.state = {\n        newOption: undefined,\n        options: options\n      };\n      return _this;\n    }\n\n    _createClass(Creatable, [{\n      key: \"focus\",\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: \"blur\",\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var options = this.state.options;\n        return /*#__PURE__*/React.createElement(SelectComponent, _extends({}, this.props, {\n          ref: function ref(_ref) {\n            _this2.select = _ref;\n          },\n          options: options,\n          onChange: this.onChange\n        }));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, state) {\n        var allowCreateWhileLoading = props.allowCreateWhileLoading,\n            createOptionPosition = props.createOptionPosition,\n            formatCreateLabel = props.formatCreateLabel,\n            getNewOptionData = props.getNewOptionData,\n            inputValue = props.inputValue,\n            isLoading = props.isLoading,\n            isValidNewOption = props.isValidNewOption,\n            value = props.value,\n            getOptionValue = props.getOptionValue,\n            getOptionLabel = props.getOptionLabel;\n        var options = props.options || [];\n        var newOption = state.newOption;\n\n        if (isValidNewOption(inputValue, cleanValue(value), options, {\n          getOptionValue: getOptionValue,\n          getOptionLabel: getOptionLabel\n        })) {\n          newOption = getNewOptionData(inputValue, formatCreateLabel(inputValue));\n        } else {\n          newOption = undefined;\n        }\n\n        return {\n          newOption: newOption,\n          options: (allowCreateWhileLoading || !isLoading) && newOption ? createOptionPosition === 'first' ? [newOption].concat(_toConsumableArray(options)) : [].concat(_toConsumableArray(options), [newOption]) : options\n        };\n      }\n    }]);\n\n    return Creatable;\n  }(Component), _class.defaultProps = defaultProps, _temp;\n}; // TODO: do this in package entrypoint\n\nvar SelectCreatable = makeCreatableSelect(Select);\nvar Creatable = manageState(SelectCreatable);\n\nexport default Creatable;\nexport { defaultProps, makeCreatableSelect };\n"],"sourceRoot":""}