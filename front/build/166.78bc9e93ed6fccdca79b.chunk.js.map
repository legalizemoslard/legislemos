{"version":3,"sources":["webpack:///./app/hooks/useIdeaStatus.ts","webpack:///./app/modules/commercial/custom_idea_statuses/admin/containers/edit.tsx"],"names":["statusId","useState","ideaStatus","setIdeaStatus","useEffect","subscription","ideaStatusStream","observable","subscribe","response","data","unsubscribe","StyledGoBackButton","GoBackButton","StyledSectionTitle","SectionTitle","withRouter","params","id","tenantLocales","goBack","clHistory","push","isNilOrError","attributes","color","title_multiloc","description_multiloc","code","onClick","Section","FormattedMessage","messages","editIdeaStatus","Formik","initialValues","onSubmit","values","setErrors","setSubmitting","setStatus","updateIdeaStatus","then","_response","catch","errorResponse","isCLErrorJSON","apiErrors","json","errors","render","props","validate"],"mappings":"0KAGe,YAAqC,IAAZA,EAAY,EAAZA,SACtC,GAAoC,IAAAC,UAClC,MADF,qBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAVA,IAAAC,YAAU,WACR,IAEMC,GAFa,IAAAC,kBAAiBN,GAAUO,WAEdC,WAAU,SAACC,GACzCN,EAAcM,EAASC,SAGzB,OAAO,kBAAML,EAAaM,iBACzB,CAACX,IAEGE,G,mBAlBT,YACA,a,sMCDA,mBACA,eACA,YAEA,eACA,YAGA,eACA,eACA,YACA,YAEA,YACA,eACA,YAGA,YACA,eACA,E,ybAAA,Y,+HAKA,IAAMU,GAAqB,aAAOC,WAAV,2EAAG,CAAH,yBAIlBC,GAAqB,aAAOC,gBAAV,2EAAG,CAAH,yB,GAuET,IAAAC,aAnEF,SAAC,GAAgC,IAChChB,EADgC,EAA9BiB,OACNC,GACFhB,GAAa,aAAc,CAAEF,aAC7BmB,GAAgB,eA2BhBC,EAAS,WACbC,UAAUC,KAAK,0BAGjB,KAAK,IAAAC,cAAarB,MAAgB,IAAAqB,cAAaJ,GAAgB,CAC7D,MAKIjB,EAAWsB,WAJbC,EADF,EACEA,MACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,qBACAC,EAJF,EAIEA,KAEF,OACE,gDACE,wBAAChB,EAAD,CAAoBiB,QAAST,IAC7B,wBAAC,EAAAU,QAAD,KACE,wBAAChB,EAAD,KACE,wBAAC,EAAAiB,iBAAqBC,UAASC,iBAEjC,wBAAC,EAAAC,OAAD,CACEC,cAAe,CACbV,QACAC,iBACAC,uBACAC,QAEFQ,SAlDW,SACnBC,EADmB,GAGhB,IADDC,EACC,EADDA,UAAWC,EACV,EADUA,cAAeC,EACzB,EADyBA,UAEjBvB,EAAX,iBAAsBoB,IAEtB,IAAAI,kBAAiBzC,EAAUiB,GACxByB,MAAK,SAACC,GACLvB,OAEDwB,OAAM,SAACC,GACN,IAAI,IAAAC,eAAcD,GAAgB,CAChC,IAAME,EAAaF,EAA+BG,KAAKC,OACvDX,EAAUS,QAEVP,EAAU,SAEZD,GAAc,OAkCVW,OA9BO,SAACC,GAChB,OAAO,wBAAC,UAAmBA,IA8BnBC,UAAU,IAAAA,UAASjC,OAO7B,OAAO,Q","file":"166.78bc9e93ed6fccdca79b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { IIdeaStatusData, ideaStatusStream } from 'services/ideaStatuses';\n\nexport default function useIdeaStatus({ statusId }) {\n  const [ideaStatus, setIdeaStatus] = useState<IIdeaStatusData | Error | null>(\n    null\n  );\n\n  useEffect(() => {\n    const observable = ideaStatusStream(statusId).observable;\n\n    const subscription = observable.subscribe((response) => {\n      setIdeaStatus(response.data);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [statusId]);\n\n  return ideaStatus;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { CLErrorsJSON } from 'typings';\nimport clHistory from 'utils/cl-router/history';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// hooks\nimport useIdeaStatus from 'hooks/useIdeaStatus';\nimport useAppConfigurationLocales from 'hooks/useAppConfigurationLocales';\nimport { Formik } from 'formik';\nimport { updateIdeaStatus } from 'services/ideaStatuses';\n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { isCLErrorJSON } from 'utils/errorUtils';\n\n// components\nimport { Section, SectionTitle } from 'components/admin/Section';\nimport GoBackButton from 'components/UI/GoBackButton';\nimport IdeaStatusForm, {\n  FormValues,\n  validate,\n} from '../components/IdeaStatusForm';\n\nconst StyledGoBackButton = styled(GoBackButton)`\n  margin-bottom: 25px;\n`;\n\nconst StyledSectionTitle = styled(SectionTitle)`\n  margin-bottom: 20px;\n`;\n\nconst Edit = ({ params }: WithRouterProps) => {\n  const { id: statusId } = params;\n  const ideaStatus = useIdeaStatus({ statusId });\n  const tenantLocales = useAppConfigurationLocales();\n\n  const handleSubmit = (\n    values: FormValues,\n    { setErrors, setSubmitting, setStatus }\n  ) => {\n    const { ...params } = values;\n\n    updateIdeaStatus(statusId, params)\n      .then((_response) => {\n        goBack();\n      })\n      .catch((errorResponse) => {\n        if (isCLErrorJSON(errorResponse)) {\n          const apiErrors = (errorResponse as CLErrorsJSON).json.errors;\n          setErrors(apiErrors);\n        } else {\n          setStatus('error');\n        }\n        setSubmitting(false);\n      });\n  };\n\n  const renderFn = (props) => {\n    return <IdeaStatusForm {...props} />;\n  };\n\n  const goBack = () => {\n    clHistory.push('/admin/ideas/statuses');\n  };\n\n  if (!isNilOrError(ideaStatus) && !isNilOrError(tenantLocales)) {\n    const {\n      color,\n      title_multiloc,\n      description_multiloc,\n      code,\n    } = ideaStatus.attributes;\n    return (\n      <>\n        <StyledGoBackButton onClick={goBack} />\n        <Section>\n          <StyledSectionTitle>\n            <FormattedMessage {...messages.editIdeaStatus} />\n          </StyledSectionTitle>\n          <Formik\n            initialValues={{\n              color,\n              title_multiloc,\n              description_multiloc,\n              code,\n            }}\n            onSubmit={handleSubmit}\n            render={renderFn}\n            validate={validate(tenantLocales)}\n          />\n        </Section>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default withRouter(Edit);\n"],"sourceRoot":""}