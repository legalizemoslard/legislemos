{"version":3,"sources":["webpack:///./app/components/admin/PostManager/components/LazyPostPreview/messages.ts","webpack:///./app/resources/GetResourceFiles.tsx","webpack:///./app/components/UI/CollapsibleBox/index.tsx","webpack:///./app/resources/GetInitiativeAllowedTransitions.tsx","webpack:///./app/components/PostShowComponents/DropdownMap/index.tsx","webpack:///./app/resources/GetInitiativeImages.tsx","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Initiative/FeedbackSettings.tsx","webpack:///./app/components/admin/PostManager/events.ts","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Initiative/InitiativeContent.tsx","webpack:///./app/containers/InitiativesShow/messages.ts","webpack:///./app/containers/InitiativesShow/PostedBy.tsx","webpack:///./app/resources/GetComments.tsx"],"names":["defineMessages","edit","id","defaultMessage","delete","deleteInputConfirmation","deleteInputInTimelineConfirmation","deleteInitiativeConfirmation","voteCounts","currentStatus","assignee","picks","pbItemCountTooltip","cancelEdit","noOne","save","submitError","postedIn","xDaysLeft","proposedBudgetTitle","bodyTitle","GetResourceFiles","props","state","files","undefined","this","resourceId","resourceType","resetOnChange","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","tap","setState","filter","isString","switchMap","streamFn","projectFilesStream","phaseFilesStream","eventFilesStream","pageFilesStream","ideaFilesStream","initiativeFilesStream","observable","subscribe","isNilOrError","data","forEach","subscription","unsubscribe","children","React","Component","Container","styled","div","colors","separation","theme","borderRadius","Title","TitleIcon","Icon","label","media","smallerThanMinTablet","ContentLabel","fontSizes","base","ContentToggleButton","button","colorText","darken","ArrowIcon","Wrapper","contentBackgroundColor","largePhone","memo","useState","showContent","setShowContent","handleContentToggle","useCallback","className","titleIconName","title","e2eId","onClick","name","classNames","in","timeout","mountOnEnter","unmountOnExit","exit","Suspense","fallback","GetInitiativeAllowedTransitions","initiativeAllowedTransitions","initiativeAllowedTransitionsStream","of","Map","lazy","address","position","projectId","GetInitiativeImages","initiativeImages","initiativeId","initiativeImagesStream","StyledLabel","Label","FeedbackSettings","statuses","allowedTransitions","localize","map","status","value","attributes","title_multiloc","isDisabled","memoize","initiative","relationships","initiative_status","initiativeStatus","find","get","color","JSON","stringify","statusesId","prospectAssignees","formatMessage","intl","usersList","assigneeOptions","first_name","last_name","push","messages","statusOption","tenant","authUser","adminAtWorkId","tenantId","eventEmitter","emit","events","statusChangeModalOpen","newStatusId","trackEventByName","tracks","initiativeStatusChange","location","adminAtWork","assigneeOption","assigneeId","updateInitiative","assignee_id","changeInitiativeAssignment","statusOptions","getStatusOptions","initiativeStatusOption","getInitiativeStatusOption","getAssigneeOptions","initiativeAssigneeOption","FormattedMessage","htmlFor","Select","options","onChange","onStatusChange","onAssigneeChange","PureComponent","Data","adopt","render","canAdmin","FeedbackSettingsWithHOCs","injectIntl","inputProps","dataProps","ModalEvents","StyledTitle","Row","Left","Image","img","StyledBody","Body","StyledMap","DropdownMap","StyledOfficialFeedback","OfficialFeedback","StyledComments","Comments","Right","adminTextColor","VotePreview","DaysLeft","InitiativeContent","closePreview","message","window","confirm","deleteInitiative","initiativeFiles","handleClickEdit","locale","initiativeTitle","initiativeImageLarge","length","initiativeGeoPosition","location_point_geojson","initiativeAddress","location_description","daysLeft","getDaysRemainingUntil","expires_at","Top","icon","buttonStyle","textColor","handleClickDelete","Content","postId","postType","src","alt","authorId","showAboutInitiatives","body","body_multiloc","permissionToPost","values","x","InitiativeContentWithHOCs","metaTitle","invisibleTitleContent","metaOgTitle","initiativeOgDescription","learnMore","postedBy","postedByShort","twitterMessage","whatsAppMessage","emailSharingSubject","emailSharingBody","allInitiatives","moreOptions","reportAsSpam","editInitiative","reportAsSpamModalTitle","skipSharing","shareTitle","shareSubtitle","a11y_voteControl","InitiativesIcon","PostedByWrapper","PostedByText","AboutInitiativesLink","Link","small","clGreyOnGreyBackground","authorName","userId","fontWeight","isLinkToProfile","hideLastName","to","GetComments","pageNumber","pageSize","sort","hasMore","loadMore$","sort$","commentsList","loadingInital","loadingMore","postId$","postType$","initialQueryParameters","combineLatest","mergeScan","commentsForIdeaStream","commentsForInitiativeStream","queryParameters","comments","selfLink","lastLink","unionBy","onLoadMore","loadMore","onChangeSort","changeSort"],"mappings":"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","file":"83.e3ed17c7d53304d3ceb8.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  edit: {\n    id: 'app.components.admin.PostManager.PostPreview.edit',\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: 'app.components.admin.PostManager.PostPreview.delete',\n    defaultMessage: 'Delete',\n  },\n  deleteInputConfirmation: {\n    id: 'app.components.admin.PostManager.PostPreview.deleteInputConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? This action cannot be undone.',\n  },\n  deleteInputInTimelineConfirmation: {\n    id:\n      'app.components.admin.PostManager.PostPreview.deleteInputInTimelineConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? The input will be deleted from all project phases and cannot be recovered.',\n  },\n  deleteInitiativeConfirmation: {\n    id:\n      'app.components.admin.PostManager.PostPreview.deleteInitiativeConfirmation',\n    defaultMessage: 'Are you sure you want to delete this initiative?',\n  },\n  voteCounts: {\n    id: 'app.components.admin.PostManager.PostPreview.voteCounts',\n    defaultMessage: 'Vote counts:',\n  },\n  currentStatus: {\n    id: 'app.components.admin.PostManager.PostPreview.currentStatus',\n    defaultMessage: 'Current status',\n  },\n  assignee: {\n    id: 'app.components.admin.PostManager.PostPreview.assignee',\n    defaultMessage: 'Assignee',\n  },\n  picks: {\n    id: 'app.components.admin.PostManager.PostPreview.picks',\n    defaultMessage: 'Picks: {picksNumber}',\n  },\n  pbItemCountTooltip: {\n    id: 'app.components.admin.PostManager.PostPreview.pbItemCountTooltip',\n    defaultMessage:\n      \"The number of times this has been included in other participants' participatory budgets\",\n  },\n  cancelEdit: {\n    id: 'app.components.admin.PostManager.PostPreview.cancelEdit',\n    defaultMessage: 'Cancel edit',\n  },\n  noOne: {\n    id: 'app.components.admin.PostManager.PostPreview.noOne',\n    defaultMessage: 'Unassigned',\n  },\n  save: {\n    id: 'app.components.admin.PostManager.PostPreview.save',\n    defaultMessage: 'Save',\n  },\n  submitError: {\n    id: 'app.components.admin.PostManager.PostPreview.submitError',\n    defaultMessage: 'Error',\n  },\n  postedIn: {\n    id: 'app.containers.IdeasShow.postedIn',\n    defaultMessage: 'Posted in {projectLink}',\n  },\n  xDaysLeft: {\n    id: 'app.containers.IdeasShow.xDaysLeft',\n    defaultMessage:\n      '{x, plural, =0 {Less than a day} one {One day} other {# days}} left',\n  },\n  proposedBudgetTitle: {\n    id: 'app.containers.IdeasShow.proposedBudgetTitle',\n    defaultMessage: 'Proposed budget',\n  },\n  bodyTitle: {\n    id: 'app.containers.IdeasShow.bodyTitle',\n    defaultMessage: 'Description',\n  },\n});\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { Subscription, BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport {\n  projectFilesStream,\n  IProjectFileData,\n  IProjectFiles,\n} from 'services/projectFiles';\nimport {\n  phaseFilesStream,\n  IPhaseFileData,\n  IPhaseFiles,\n} from 'services/phaseFiles';\nimport {\n  eventFilesStream,\n  IEventFileData,\n  IEventFiles,\n} from 'services/eventFiles';\nimport { pageFilesStream, IPageFileData, IPageFiles } from 'services/pageFiles';\nimport { ideaFilesStream, IIdeaFileData, IIdeaFiles } from 'services/ideaFiles';\nimport {\n  initiativeFilesStream,\n  IInitiativeFileData,\n  IInitiativeFiles,\n} from 'services/initiativeFiles';\n\nimport { isNilOrError } from 'utils/helperUtils';\n\nexport type ResourceType =\n  | 'project'\n  | 'phase'\n  | 'event'\n  | 'page'\n  | 'idea'\n  | 'initiative';\n\nexport type IResourceFileData =\n  | IProjectFileData\n  | IPhaseFileData\n  | IEventFileData\n  | IPageFileData\n  | IIdeaFileData\n  | IInitiativeFileData;\n\nexport type IResourceFiles =\n  | IProjectFiles\n  | IPhaseFiles\n  | IEventFiles\n  | IPageFiles\n  | IIdeaFiles\n  | IInitiativeFiles;\n\ninterface InputProps {\n  resetOnChange?: boolean;\n  resourceType: ResourceType;\n  resourceId: string | null;\n}\n\ntype Children = (renderProps: GetResourceFilesChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: Children;\n}\n\ninterface State {\n  files: IResourceFileData[] | undefined | null | Error;\n}\n\nexport type GetResourceFilesChildProps = State['files'];\n\nexport default class GetResourceFiles extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  public static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      files: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ resourceId, resourceType });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ files: undefined })),\n          filter(({ resourceId }) => isString(resourceId)),\n          switchMap(\n            ({\n              resourceId,\n              resourceType,\n            }: {\n              resourceId: string;\n              resourceType: InputProps['resourceType'];\n            }) => {\n              let streamFn;\n              if (resourceType === 'project') {\n                streamFn = projectFilesStream;\n              }\n              if (resourceType === 'phase') {\n                streamFn = phaseFilesStream;\n              }\n              if (resourceType === 'event') {\n                streamFn = eventFilesStream;\n              }\n              if (resourceType === 'page') {\n                streamFn = pageFilesStream;\n              }\n              if (resourceType === 'idea') {\n                streamFn = ideaFilesStream;\n              }\n              if (resourceType === 'initiative') {\n                streamFn = initiativeFilesStream;\n              }\n\n              return streamFn(resourceId)\n                .observable as Observable<IResourceFiles | null>;\n            }\n          )\n        )\n        .subscribe((files) => {\n          this.setState({ files: !isNilOrError(files) ? files.data : files });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n    this.inputProps$.next({ resourceId, resourceType, resetOnChange });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { files } = this.state;\n    return (children as Children)(files);\n  }\n}\n","import React, { memo, useCallback, useState, Suspense } from 'react';\n\n// components\nimport { Icon, IconNames } from 'cl2-component-library';\n\n// animations\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes, media } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\nconst timeout = 300;\n\nconst Container = styled.div`\n  background: #fff;\n  border: 1px solid ${colors.separation};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TitleIcon = styled(Icon)`\n  flex: 0 0 16px;\n  width: 16px;\n  height: 23px;\n  fill: ${colors.label};\n  margin-right: 13px;\n\n  ${media.smallerThanMinTablet`\n    flex: 0 0 14px;\n    width: 14px;\n    height: 20px;\n  `}\n`;\n\nconst ContentLabel = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  margin-right: 6px;\n  text-align: left;\n  transition: all 100ms ease-out;\n`;\n\nconst ContentToggleButton = styled.button`\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  padding-left: 18px;\n  padding-right: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: 24px;\n  font-weight: 600;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  &:hover {\n    ${ContentLabel} {\n      color: ${darken(0.2, colors.label)};\n    }\n  }\n`;\n\nconst ArrowIcon = styled(Icon)`\n  flex: 0 0 13px;\n  width: 13px;\n  height: 13px;\n  fill: ${colors.label};\n  transform: rotate(90deg);\n  transition: all 0.2s linear;\n\n  &.open {\n    transform: rotate(0deg);\n  }\n`;\n\nconst Wrapper = styled.div<{ contentBackgroundColor?: string }>`\n  position: relative;\n  overflow: hidden;\n  z-index: 2;\n  padding: 20px;\n  background-color: ${(props) => props.contentBackgroundColor || '#fff'};\n  margin-top: 1px;\n\n  ${media.largePhone`\n    padding: 30px 20px;\n  `}\n\n  &.content-enter {\n    height: 0;\n    opacity: 0;\n\n    &.content-enter-active {\n      height: 100%;\n      opacity: 1;\n      transition: all ${timeout}ms ease-out;\n    }\n  }\n\n  &.content-exit {\n    height: 100%;\n    opacity: 1;\n\n    &.content-exit-active {\n      height: 0;\n      opacity: 0;\n      transition: all ${timeout}ms ease-out;\n    }\n  }\n`;\n\nexport interface Props {\n  className?: string;\n  titleIconName?: IconNames;\n  title: string | JSX.Element;\n  contentBackgroundColor?: string;\n  e2eId?: string;\n  /* children should be lazy-loaded. Search code for examples */\n  children: React.ReactNode;\n}\n\nconst CollapsibleBox = memo<Props>((props) => {\n  const [showContent, setShowContent] = useState<boolean>(false);\n\n  const handleContentToggle = useCallback(() => {\n    setShowContent(!showContent);\n  }, [showContent]);\n\n  const {\n    className,\n    titleIconName,\n    title,\n    children,\n    contentBackgroundColor,\n    e2eId,\n  } = props;\n\n  return (\n    <Container className={className}>\n      <ContentToggleButton\n        id={e2eId || ''}\n        aria-expanded={showContent}\n        onClick={handleContentToggle}\n      >\n        <Title>\n          {titleIconName && <TitleIcon name={titleIconName} />}\n          <ContentLabel>{title}</ContentLabel>\n        </Title>\n        <ArrowIcon name=\"dropdown\" className={showContent ? 'open' : ''} />\n      </ContentToggleButton>\n      <CSSTransition\n        classNames=\"content\"\n        in={showContent}\n        timeout={timeout}\n        mountOnEnter={true}\n        unmountOnExit={true}\n        exit={true}\n      >\n        <Wrapper contentBackgroundColor={contentBackgroundColor}>\n          <Suspense fallback={null}>{children}</Suspense>\n        </Wrapper>\n      </CSSTransition>\n    </Container>\n  );\n});\n\nexport default CollapsibleBox;\n","import React from 'react';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport {\n  IInitiativeAllowedTransitions,\n  initiativeAllowedTransitionsStream,\n} from 'services/initiatives';\nimport { isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  id: string | null;\n}\n\ntype children = (\n  renderProps: GetInitiativeAllowedTransitionsChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  initiativeAllowedTransitions:\n    | IInitiativeAllowedTransitions\n    | undefined\n    | null;\n}\n\nexport type GetInitiativeAllowedTransitionsChildProps =\n  | IInitiativeAllowedTransitions\n  | undefined\n  | null;\n\nexport default class GetInitiativeAllowedTransitions extends React.Component<\n  Props,\n  State\n> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      initiativeAllowedTransitions: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          filter(({ id }) => isString(id)),\n          switchMap(({ id }: { id: string }) => {\n            if (isString(id)) {\n              return initiativeAllowedTransitionsStream(id).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((initiativeAllowedTransitions) =>\n          this.setState({\n            initiativeAllowedTransitions: !isNilOrError(\n              initiativeAllowedTransitions\n            )\n              ? initiativeAllowedTransitions\n              : null,\n          })\n        ),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    this.inputProps$.next({ id });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { initiativeAllowedTransitions } = this.state;\n    return (children as children)(initiativeAllowedTransitions);\n  }\n}\n","import React, { memo } from 'react';\n\n// components\nimport CollapsibleBox from 'components/UI/CollapsibleBox';\nconst Map = React.lazy(() => import('./Map'));\n\nexport interface Props {\n  address: string;\n  position: GeoJSON.Point;\n  className?: string;\n  projectId?: string | null;\n}\n\nconst DropdownMap = memo<Props>(\n  ({ address, position, className, projectId }) => {\n    return (\n      <CollapsibleBox\n        e2eId=\"e2e-map-toggle\"\n        className={className}\n        titleIconName=\"position\"\n        title={address}\n      >\n        <Map position={position} projectId={projectId} />\n      </CollapsibleBox>\n    );\n  }\n);\n\nexport default DropdownMap;\n","import React from 'react';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport {\n  IInitiativeImageData,\n  initiativeImagesStream,\n} from 'services/initiativeImages';\nimport { isString } from 'lodash-es';\n\ninterface InputProps {\n  initiativeId: string | null;\n}\n\ntype children = (\n  renderProps: GetInitiativeImagesChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  initiativeImages: IInitiativeImageData[] | undefined | null;\n}\n\nexport type GetInitiativeImagesChildProps =\n  | IInitiativeImageData[]\n  | undefined\n  | null;\n\nexport default class GetInitiativeImages extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      initiativeImages: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { initiativeId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ initiativeId });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          switchMap(({ initiativeId }) => {\n            if (isString(initiativeId)) {\n              return initiativeImagesStream(initiativeId).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((initiativeImages) => {\n          this.setState({\n            initiativeImages: initiativeImages ? initiativeImages.data : null,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { initiativeId } = this.props;\n    this.inputProps$.next({ initiativeId });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { initiativeImages } = this.state;\n    return (children as children)(initiativeImages);\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { get, memoize } from 'lodash-es';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport messages from '../messages';\n\n// typings\nimport { IOption } from 'typings';\n\n// styles\nimport styled from 'styled-components';\n\n// components\nimport { Select, Label } from 'cl2-component-library';\n\n// services\nimport { updateInitiative } from 'services/initiatives';\n\n// resources\nimport GetUsers, { GetUsersChildProps } from 'resources/GetUsers';\nimport GetInitiativeStatuses, {\n  GetInitiativeStatusesChildProps,\n} from 'resources/GetInitiativeStatuses';\nimport GetInitiativeAllowedTransitions, {\n  GetInitiativeAllowedTransitionsChildProps,\n} from 'resources/GetInitiativeAllowedTransitions';\nimport GetInitiative, {\n  GetInitiativeChildProps,\n} from 'resources/GetInitiative';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from '../../../tracks';\nimport { InjectedIntlProps } from 'react-intl';\n\n// events\nimport eventEmitter from 'utils/eventEmitter';\nimport events, {\n  StatusChangeModalOpen,\n} from 'components/admin/PostManager/events';\n\nconst StyledLabel = styled(Label)`\n  margin-top: 20px;\n`;\n\nconst Container = styled.div``;\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  tenant: GetAppConfigurationChildProps;\n  statuses: GetInitiativeStatusesChildProps;\n  initiative: GetInitiativeChildProps;\n  prospectAssignees: GetUsersChildProps;\n  allowedTransitions: GetInitiativeAllowedTransitionsChildProps;\n}\n\ninterface InputProps {\n  initiativeId: string;\n  className?: string;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface PropsWithHoCs extends Props, InjectedLocalized, InjectedIntlProps {}\n\nclass FeedbackSettings extends PureComponent<PropsWithHoCs> {\n  getStatusOptions = (statuses, allowedTransitions) => {\n    const { localize } = this.props;\n    if (!isNilOrError(statuses)) {\n      return statuses.map((status) => ({\n        value: status.id,\n        label: localize(status.attributes.title_multiloc),\n        isDisabled:\n          allowedTransitions && allowedTransitions[status.id] === undefined,\n      }));\n    } else {\n      return [];\n    }\n  };\n\n  getInitiativeStatusOption = memoize(\n    (initiative: GetInitiativeChildProps, statuses) => {\n      const { localize } = this.props;\n      if (\n        !isNilOrError(initiative) &&\n        initiative.relationships.initiative_status &&\n        initiative.relationships.initiative_status.data &&\n        !isNilOrError(statuses)\n      ) {\n        const initiativeStatus = statuses.find(\n          (status) =>\n            status.id ===\n            get(initiative, 'relationships.initiative_status.data.id')\n        );\n        if (initiativeStatus) {\n          return {\n            value: initiativeStatus.id,\n            label: localize(initiativeStatus.attributes.title_multiloc),\n            color: initiativeStatus.attributes.color,\n          };\n        }\n\n        return null;\n      }\n\n      return null;\n    },\n    (initiative: GetInitiativeChildProps, statuses) =>\n      JSON.stringify({\n        initiativeId: isNilOrError(initiative)\n          ? undefined\n          : get(initiative, 'relationships.initiative_status.data.id'),\n        statusesId: isNilOrError(statuses)\n          ? undefined\n          : statuses.map((status) => status.id),\n      })\n  );\n\n  getAssigneeOptions = memoize((prospectAssignees) => {\n    const {\n      intl: { formatMessage },\n    } = this.props;\n    if (!isNilOrError(prospectAssignees.usersList)) {\n      const assigneeOptions = prospectAssignees.usersList.map((assignee) => ({\n        value: assignee.id,\n        label: `${assignee.attributes.first_name} ${assignee.attributes.last_name}`,\n      }));\n      assigneeOptions.push({\n        value: 'unassigned',\n        label: formatMessage(messages.noOne),\n      });\n      return assigneeOptions;\n    }\n\n    return [];\n  });\n\n  onStatusChange = (statusOption: IOption) => {\n    const { tenant, initiativeId, authUser } = this.props;\n    const adminAtWorkId = authUser ? authUser.id : null;\n    const tenantId = !isNilOrError(tenant) && tenant.id;\n\n    eventEmitter.emit<StatusChangeModalOpen>(events.statusChangeModalOpen, {\n      initiativeId,\n      newStatusId: statusOption.value,\n    });\n\n    trackEventByName(tracks.initiativeStatusChange, {\n      tenant: tenantId,\n      location: 'Initiative preview/popup',\n      initiative: initiativeId,\n      adminAtWork: adminAtWorkId,\n    });\n  };\n\n  onAssigneeChange = (assigneeOption: IOption | null) => {\n    const { tenant, initiativeId, authUser } = this.props;\n    const assigneeId = assigneeOption ? assigneeOption.value : null;\n    const adminAtWorkId = authUser ? authUser.id : null;\n    const tenantId = !isNilOrError(tenant) && tenant.id;\n\n    updateInitiative(initiativeId, {\n      assignee_id: assigneeId,\n    });\n\n    trackEventByName(tracks.changeInitiativeAssignment, {\n      tenant: tenantId,\n      location: 'Initiative preview',\n      initiative: initiativeId,\n      assignee: assigneeId,\n      adminAtWork: adminAtWorkId,\n    });\n  };\n\n  render() {\n    const {\n      initiative,\n      className,\n      statuses,\n      prospectAssignees,\n      allowedTransitions,\n    } = this.props;\n\n    const statusOptions = this.getStatusOptions(statuses, allowedTransitions);\n    const initiativeStatusOption = this.getInitiativeStatusOption(\n      initiative,\n      statuses\n    );\n    const assigneeOptions = this.getAssigneeOptions(prospectAssignees);\n    const initiativeAssigneeOption = get(\n      initiative,\n      'relationships.assignee.data.id',\n      'unassigned'\n    );\n\n    if (!isNilOrError(initiative)) {\n      return (\n        <Container className={`${className} e2e-initiative-settings`}>\n          <StyledLabel\n            value={<FormattedMessage {...messages.currentStatus} />}\n            htmlFor=\"initiative-preview-select-status\"\n          />\n          <Select\n            id=\"initiative-preview-select-status\"\n            options={statusOptions}\n            onChange={this.onStatusChange}\n            value={initiativeStatusOption}\n          />\n          <StyledLabel\n            value={<FormattedMessage {...messages.assignee} />}\n            htmlFor=\"initiative-preview-select-assignee\"\n          />\n          <Select\n            id=\"initiative-preview-select-assignee\"\n            options={assigneeOptions}\n            onChange={this.onAssigneeChange}\n            value={initiativeAssigneeOption}\n          />\n        </Container>\n      );\n    }\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  tenant: <GetAppConfiguration />,\n  authUser: <GetAuthUser />,\n  initiative: ({ initiativeId, render }) => (\n    <GetInitiative id={initiativeId}>{render}</GetInitiative>\n  ),\n  statuses: <GetInitiativeStatuses />,\n  prospectAssignees: <GetUsers canAdmin />,\n  allowedTransitions: ({ initiativeId, render }) => (\n    <GetInitiativeAllowedTransitions id={initiativeId}>\n      {render}\n    </GetInitiativeAllowedTransitions>\n  ),\n});\n\nconst FeedbackSettingsWithHOCs = injectIntl(injectLocalize(FeedbackSettings));\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <FeedbackSettingsWithHOCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","export interface StatusChangeModalOpen {\n  initiativeId: string;\n  newStatusId: string;\n}\n\nenum ModalEvents {\n  statusChangeModalOpen = 'initiatiateStatusChange',\n}\n\nexport default ModalEvents;\n","import React, { PureComponent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\nimport { get } from 'lodash-es';\nimport { getDaysRemainingUntil } from 'utils/dateUtils';\n\n// components\nimport Title from 'components/PostShowComponents/Title';\nimport Body from 'components/PostShowComponents/Body';\nimport DropdownMap from 'components/PostShowComponents/DropdownMap';\nimport OfficialFeedback from 'components/PostShowComponents/OfficialFeedback';\nimport PostedBy from 'containers/InitiativesShow/PostedBy';\nimport Comments from 'components/PostShowComponents/Comments';\nimport FileAttachments from 'components/UI/FileAttachments';\nimport FeedbackSettings from './FeedbackSettings';\nimport Button from 'components/UI/Button';\nimport { Top, Content, Container } from '../PostPreview';\nimport VoteIndicator from 'components/InitiativeCard/VoteIndicator';\n\n// services\nimport { deleteInitiative } from 'services/initiatives';\n\n// resources\nimport GetResourceFiles, {\n  GetResourceFilesChildProps,\n} from 'resources/GetResourceFiles';\nimport GetInitiative, {\n  GetInitiativeChildProps,\n} from 'resources/GetInitiative';\nimport GetInitiativeImages, {\n  GetInitiativeImagesChildProps,\n} from 'resources/GetInitiativeImages';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\n\n// i18n\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\nconst StyledTitle = styled(Title)`\n  margin-bottom: 30px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Left = styled.div`\n  flex: 5;\n  margin-right: 50px;\n  height: 100%;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  margin: 0 0 2rem;\n  padding: 0;\n  border-radius: 8px;\n  border: 1px solid ${colors.separation};\n`;\n\nconst StyledBody = styled(Body)`\n  margin-bottom: 20px;\n`;\n\nconst StyledMap = styled(DropdownMap)`\n  margin-bottom: 40px;\n`;\n\nconst StyledOfficialFeedback = styled(OfficialFeedback)`\n  margin-top: 70px;\n`;\n\nconst StyledComments = styled(Comments)`\n  margin-top: 30px;\n`;\n\nconst Right = styled.div`\n  flex: 2;\n  position: sticky;\n  top: 80px;\n  align-self: flex-start;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  line-height: 19px;\n`;\n\nconst VotePreview = styled.div`\n  border: 1px solid #e0e0e0;\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.05);\n  border-radius: 3px;\n  padding: 20px;\n`;\n\nconst DaysLeft = styled.div`\n  color: ${colors.label};\n  margin-bottom: 20px;\n`;\n\ninterface State {}\n\nexport interface InputProps {\n  initiativeId: string | null;\n  closePreview: () => void;\n  handleClickEdit: () => void;\n}\n\ninterface DataProps {\n  initiative: GetInitiativeChildProps;\n  initiativeImages: GetInitiativeImagesChildProps;\n  initiativeFiles: GetResourceFilesChildProps;\n  locale: GetLocaleChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nexport class InitiativeContent extends PureComponent<\n  Props & InjectedLocalized & InjectedIntlProps,\n  State\n> {\n  handleClickDelete = () => {\n    const { initiative, closePreview } = this.props;\n    const message = this.props.intl.formatMessage(\n      messages.deleteInitiativeConfirmation\n    );\n\n    if (!isNilOrError(initiative)) {\n      if (window.confirm(message)) {\n        deleteInitiative(initiative.id);\n        closePreview();\n      }\n    }\n  };\n\n  render() {\n    const {\n      initiative,\n      localize,\n      initiativeImages,\n      initiativeFiles,\n      handleClickEdit,\n      locale,\n    } = this.props;\n\n    if (!isNilOrError(initiative) && !isNilOrError(locale)) {\n      const initiativeId = initiative.id;\n      const initiativeTitle = localize(initiative.attributes.title_multiloc);\n      const initiativeImageLarge =\n        !isNilOrError(initiativeImages) && initiativeImages.length > 0\n          ? get(initiativeImages[0], 'attributes.versions.large', null)\n          : null;\n      const initiativeGeoPosition =\n        initiative.attributes.location_point_geojson || null;\n      const initiativeAddress =\n        initiative.attributes.location_description || null;\n      const daysLeft = getDaysRemainingUntil(initiative.attributes.expires_at);\n\n      return (\n        <Container>\n          <Top>\n            <Button\n              icon=\"edit\"\n              buttonStyle=\"text\"\n              textColor={colors.adminTextColor}\n              onClick={handleClickEdit}\n            >\n              <FormattedMessage {...messages.edit} />\n            </Button>\n            <Button\n              icon=\"delete\"\n              buttonStyle=\"text\"\n              textColor={colors.adminTextColor}\n              onClick={this.handleClickDelete}\n            >\n              <FormattedMessage {...messages.delete} />\n            </Button>\n          </Top>\n          <Content>\n            <StyledTitle\n              postId={initiativeId}\n              title={initiativeTitle}\n              postType=\"initiative\"\n            />\n            <Row>\n              <Left>\n                {initiativeImageLarge && (\n                  <Image\n                    src={initiativeImageLarge}\n                    alt=\"\"\n                    className=\"e2e-initiativeImage\"\n                  />\n                )}\n\n                <PostedBy\n                  authorId={get(\n                    initiative,\n                    'relationships.author.data.id',\n                    null\n                  )}\n                  showAboutInitiatives={false}\n                />\n\n                <StyledBody\n                  postId={initiativeId}\n                  postType=\"initiative\"\n                  body={localize(initiative.attributes.body_multiloc)}\n                  locale={locale}\n                />\n\n                {initiativeGeoPosition && initiativeAddress && (\n                  <StyledMap\n                    address={initiativeAddress}\n                    position={initiativeGeoPosition}\n                  />\n                )}\n\n                {initiativeFiles && !isNilOrError(initiativeFiles) && (\n                  <FileAttachments files={initiativeFiles} />\n                )}\n\n                <StyledOfficialFeedback\n                  postId={initiativeId}\n                  postType=\"initiative\"\n                  // If the user has access to the post preview,\n                  // it means they are in the admin and therefore have permission\n                  permissionToPost\n                />\n\n                <StyledComments postId={initiativeId} postType=\"initiative\" />\n              </Left>\n              <Right>\n                <VotePreview>\n                  <DaysLeft>\n                    <FormattedMessage\n                      {...messages.xDaysLeft}\n                      values={{ x: daysLeft }}\n                    />\n                  </DaysLeft>\n                  <VoteIndicator initiativeId={initiativeId} />\n                </VotePreview>\n\n                <FeedbackSettings initiativeId={initiativeId} />\n              </Right>\n            </Row>\n          </Content>\n        </Container>\n      );\n    }\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  initiative: ({ initiativeId, render }) => (\n    <GetInitiative id={initiativeId}>{render}</GetInitiative>\n  ),\n  initiativeFiles: ({ initiativeId, render }) => (\n    <GetResourceFiles resourceId={initiativeId} resourceType=\"initiative\">\n      {render}\n    </GetResourceFiles>\n  ),\n  initiativeImages: ({ initiativeId, render }) => (\n    <GetInitiativeImages initiativeId={initiativeId}>\n      {render}\n    </GetInitiativeImages>\n  ),\n  locale: <GetLocale />,\n});\n\nconst InitiativeContentWithHOCs = injectIntl(injectLocalize(InitiativeContent));\n\nconst WrappedInitiativeContent = (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <InitiativeContentWithHOCs {...inputProps} {...dataProps} />\n    )}\n  </Data>\n);\n\nexport default WrappedInitiativeContent;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  metaTitle: {\n    id: 'app.containers.InitiativesShow.metaTitle',\n    defaultMessage: 'Initiative: {initiativeTitle}',\n  },\n  invisibleTitleContent: {\n    id: 'app.containers.InitiativesShow.invisibleTitleContent',\n    defaultMessage: 'What is this initiative about?',\n  },\n  metaOgTitle: {\n    id: 'app.containers.InitiativesShow.metaOgTitle',\n    defaultMessage: 'Support this initiative: {initiativeTitle}',\n  },\n  initiativeOgDescription: {\n    id: 'app.containers.InitiativesShow.initiativeOgDescription',\n    defaultMessage:\n      'What do you think of this initiative? Join the discussion and vote to make your voice heard.',\n  },\n  learnMore: {\n    id: 'app.containers.InitiativesShow.learnMore',\n    defaultMessage: 'Learn more about initiatives',\n  },\n  postedBy: {\n    id: 'app.containers.InitiativesShow.postedBy',\n    defaultMessage: 'Initiative posted by {authorName}',\n  },\n  postedByShort: {\n    id: 'app.containers.InitiativesShow.postedByShort',\n    defaultMessage: 'Posted by {authorName}',\n  },\n  twitterMessage: {\n    id: 'app.containers.InitiativesShow.twitterMessage',\n    defaultMessage: 'Vote for {initiativeTitle} on',\n  },\n  whatsAppMessage: {\n    id: 'app.containers.InitiativesShow.whatsAppMessage',\n    defaultMessage:\n      '{initiativeTitle} | from the participation platform of {orgName}',\n  },\n  emailSharingSubject: {\n    id: 'app.containers.InitiativesShow.emailSharingSubject',\n    defaultMessage: 'Support my initiative: {initiativeTitle}.',\n  },\n  emailSharingBody: {\n    id: 'app.containers.InitiativesShow.emailSharingBody',\n    defaultMessage:\n      'What do you think of this initiative? Vote on it and share the discussion at {initiativeUrl} to make your voice heard!',\n  },\n  allInitiatives: {\n    id: 'app.containers.InitiativesShow.allInitiatives',\n    defaultMessage: 'All Initiatves',\n  },\n  moreOptions: {\n    id: 'app.components.InitiativesShow.moreOptions',\n    defaultMessage: 'More options',\n  },\n  reportAsSpam: {\n    id: 'app.components.InitiativesShow.reportAsSpam',\n    defaultMessage: 'Report as spam',\n  },\n  editInitiative: {\n    id: 'app.components.InitiativesShow.editInitiative',\n    defaultMessage: 'Edit initiative',\n  },\n  deleteInitiative: {\n    id: 'app.components.InitiativesShow.deleteInitiative',\n    defaultMessage: 'Delete initiative',\n  },\n  deleteInitiativeConfirmation: {\n    id: 'app.components.InitiativesShow.deleteInitiativeConfirmation',\n    defaultMessage: 'Are you sure you want to delete this initiative?',\n  },\n  reportAsSpamModalTitle: {\n    id: 'app.containers.InitiativesShow.reportAsSpamModalTitle',\n    defaultMessage: 'Why do you want to report this as spam?',\n  },\n  skipSharing: {\n    id: 'app.components.InitiativesShow.skipSharing',\n    defaultMessage: \"Skip it, I'll do it later\",\n  },\n  shareTitle: {\n    id: 'app.components.InitiativesShow.shareTitle',\n    defaultMessage: 'Congratulations, your initiative was successfully posted!',\n  },\n  shareSubtitle: {\n    id: 'app.components.InitiativesShow.shareSubtitle',\n    defaultMessage:\n      'Share your initiative to reach {votingThreshold} votes in {daysLimit} days.',\n  },\n  a11y_voteControl: {\n    id: 'app.containers.InitiativesShow.a11y_voteControl',\n    defaultMessage: 'Voting and status',\n  },\n});\n","import React, { memo } from 'react';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport UserName from 'components/UI/UserName';\nimport Link from 'utils/cl-router/Link';\n\n// styling\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 25px;\n`;\n\nconst InitiativesIcon = styled(Icon)`\n  width: 42px;\n  height: 42px;\n  background-color: rgba(4, 77, 108, 0.06);\n  fill: ${colors.adminTextColor};\n  border-radius: 50%;\n  padding: 10px;\n  margin-right: 17px;\n`;\n\nconst PostedByWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PostedByText = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  margin-bottom: 3px;\n`;\n\nconst AboutInitiativesLink = styled(Link)`\n  font-size: ${fontSizes.small}px;\n  color: ${colors.clGreyOnGreyBackground};\n  text-decoration: underline;\n\n  &:hover {\n    color: ${darken(0.2, colors.clGreyOnGreyBackground)};\n    text-decoration: underline;\n  }\n`;\n\ninterface Props {\n  authorId: string | null | undefined;\n  className?: string;\n  showAboutInitiatives: boolean;\n}\n\nconst PostedBy = memo<Props>(\n  ({ authorId, className, showAboutInitiatives }) => {\n    if (authorId) {\n      const authorName = (\n        <UserName\n          userId={authorId}\n          fontWeight={500}\n          isLinkToProfile={true}\n          hideLastName={true}\n        />\n      );\n\n      return (\n        <Container id=\"e2e-initiative-posted-by\" className={className || ''}>\n          <InitiativesIcon name=\"initiatives\" />\n          <PostedByWrapper>\n            <PostedByText>\n              <FormattedMessage\n                {...messages.postedBy}\n                values={{ authorName }}\n              />\n            </PostedByText>\n            {showAboutInitiatives && (\n              <AboutInitiativesLink to=\"/pages/initiatives\">\n                <FormattedMessage {...messages.learnMore} />\n              </AboutInitiativesLink>\n            )}\n          </PostedByWrapper>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default PostedBy;\n","import React from 'react';\nimport { BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  mergeScan,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport {\n  ICommentData,\n  commentsForIdeaStream,\n  commentsForInitiativeStream,\n  CommentsSort,\n} from 'services/comments';\nimport { unionBy, isString, get } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\ntype children = (renderProps: GetCommentsChildProps) => JSX.Element | null;\n\ninterface Props {\n  postId: string;\n  children?: children;\n  postType: 'idea' | 'initiative';\n}\n\ninterface State {\n  commentsList: ICommentData[] | undefined | null | Error;\n  loadingInital: boolean;\n  loadingMore: boolean;\n  hasMore: boolean;\n}\n\ninterface IQueryParameters {\n  pageNumber: number;\n  pageSize: number;\n  sort: CommentsSort;\n}\n\nexport interface GetCommentsChildProps extends State {\n  onLoadMore: () => void;\n  onChangeSort: (sort: CommentsSort) => void;\n}\n\nexport default class GetComments extends React.Component<Props, State> {\n  private postId$: BehaviorSubject<string>;\n  private postType$: BehaviorSubject<string>;\n  private sort$: BehaviorSubject<CommentsSort>;\n  private loadMore$: BehaviorSubject<null>;\n  private subscription: Subscription;\n  private initialQueryParameters: IQueryParameters = {\n    pageNumber: 0,\n    pageSize: 15,\n    sort: '-new',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      commentsList: undefined,\n      loadingInital: false,\n      loadingMore: false,\n      hasMore: true,\n    };\n  }\n\n  componentDidMount() {\n    this.postId$ = new BehaviorSubject(this.props.postId);\n    this.postType$ = new BehaviorSubject(this.props.postType);\n    this.sort$ = new BehaviorSubject(this.initialQueryParameters.sort);\n    this.loadMore$ = new BehaviorSubject(null);\n\n    this.subscription = combineLatest(\n      this.postId$.pipe(distinctUntilChanged()),\n      this.postType$.pipe(distinctUntilChanged()),\n      this.sort$.pipe(distinctUntilChanged())\n    )\n      .pipe(\n        switchMap(([postId, postType, sort]) => {\n          let commentsList:\n            | ICommentData[]\n            | undefined\n            | null\n            | Error = undefined;\n          let pageNumber = this.initialQueryParameters.pageNumber;\n          const pageSize = this.initialQueryParameters.pageSize;\n          let hasMore = true;\n\n          return this.loadMore$.pipe(\n            tap(() =>\n              this.setState({\n                loadingInital: pageNumber === 0,\n                loadingMore: pageNumber > 0,\n              })\n            ),\n            mergeScan(() => {\n              pageNumber = pageNumber + 1;\n\n              const commentsStream =\n                postType === 'idea'\n                  ? commentsForIdeaStream\n                  : commentsForInitiativeStream;\n\n              return commentsStream(postId, {\n                queryParameters: {\n                  sort,\n                  'page[number]': pageNumber,\n                  'page[size]': pageSize,\n                },\n              }).observable.pipe(\n                map((comments) => {\n                  const selfLink = get(comments, 'links.self');\n                  const lastLink = get(comments, 'links.last');\n                  hasMore =\n                    isString(selfLink) &&\n                    isString(lastLink) &&\n                    selfLink !== lastLink;\n                  commentsList = !isNilOrError(commentsList)\n                    ? unionBy(commentsList, comments.data, 'id')\n                    : comments.data;\n                  return null;\n                })\n              );\n            }, null),\n            map(() => ({ pageNumber, commentsList, hasMore }))\n          );\n        })\n      )\n      .subscribe(({ commentsList, hasMore }) => {\n        this.setState({\n          commentsList,\n          hasMore,\n          loadingInital: false,\n          loadingMore: false,\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    this.postId$.next(this.props.postId);\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  loadMore = () => {\n    if (this.state.hasMore) {\n      this.loadMore$.next(null);\n    }\n  };\n\n  changeSort = (sort: CommentsSort) => {\n    this.sort$.next(sort);\n  };\n\n  render() {\n    const { children } = this.props;\n    return (children as children)({\n      ...this.state,\n      onLoadMore: this.loadMore,\n      onChangeSort: this.changeSort,\n    });\n  }\n}\n"],"sourceRoot":""}