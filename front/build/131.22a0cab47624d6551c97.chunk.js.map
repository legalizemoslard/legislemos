{"version":3,"sources":["webpack:///./app/modules/commercial/custom_topics/admin/containers/TopicsSettings/TopicForm/index.tsx","webpack:///./app/modules/commercial/custom_topics/admin/containers/TopicsSettings/messages.ts","webpack:///./app/components/UI/GoBackButton/messages.ts","webpack:///./app/modules/commercial/custom_topics/admin/containers/TopicsSettings/New/index.tsx","webpack:///./app/components/UI/GoBackButton/index.tsx"],"names":["TopicForm","this","props","isSubmitting","errors","isValid","touched","status","formatMessage","intl","Form","Section","SectionField","Field","name","component","FormikInputMultilocWithLocaleSwitcher","label","FormattedMessage","messages","fieldTopicTitle","labelTooltipText","fieldTopicTitleTooltip","id","title_multiloc","fieldName","apiErrors","React","Component","injectIntl","defineMessages","descriptionTopicManagerText","defaultMessage","titleTopicManager","deleteButtonLabel","editButtonLabel","addTopicButton","editTopicFormTitle","defaultTopic","confirmHeader","deleteTopicConfirmation","cancel","delete","projectsSettings","goBack","New","values","setErrors","setSubmitting","setStatus","addTopic","then","clHistory","push","catch","errorResponse","isCLErrorJSON","json","description_multiloc","onClick","SectionTitle","Formik","initialValues","render","renderFn","onSubmit","handleSubmit","Container","styled","div","GoBackButton","className","buttonStyle","icon","size","padding","text","PureComponent"],"mappings":"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","file":"131.22a0cab47624d6551c97.chunk.js","sourcesContent":["import React from 'react';\n\n// i18n\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport messages from '../messages';\nimport { InjectedIntlProps } from 'react-intl';\n\nimport { Form, Field, InjectedFormikProps } from 'formik';\nimport FormikInputMultilocWithLocaleSwitcher from 'components/UI/FormikInputMultilocWithLocaleSwitcher';\nimport FormikSubmitWrapper from 'components/admin/FormikSubmitWrapper';\n\nimport { Section, SectionField } from 'components/admin/Section';\nimport Error from 'components/UI/Error';\n\n// typings\nimport { Multiloc } from 'typings';\n\nexport interface Props {}\n\nexport interface FormValues {\n  title_multiloc: Multiloc;\n  description_multiloc: Multiloc;\n}\n\nclass TopicForm extends React.Component<\n  InjectedFormikProps<Props & InjectedIntlProps, FormValues>\n> {\n  render() {\n    const {\n      isSubmitting,\n      errors,\n      isValid,\n      touched,\n      status,\n      intl: { formatMessage },\n    } = this.props;\n\n    return (\n      <Form>\n        <Section>\n          <SectionField>\n            <Field\n              name=\"title_multiloc\"\n              component={FormikInputMultilocWithLocaleSwitcher}\n              label={<FormattedMessage {...messages.fieldTopicTitle} />}\n              labelTooltipText={formatMessage(messages.fieldTopicTitleTooltip)}\n              id=\"e2e-topic-name\"\n            />\n            {touched.title_multiloc && (\n              <Error\n                fieldName=\"title_multiloc\"\n                apiErrors={errors.title_multiloc as any}\n              />\n            )}\n          </SectionField>\n        </Section>\n\n        <FormikSubmitWrapper {...{ isValid, isSubmitting, status, touched }} />\n      </Form>\n    );\n  }\n}\n\nexport default injectIntl<Props>(TopicForm);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  descriptionTopicManagerText: {\n    id: 'app.containers.AdminPage.SettingsPage.descriptionTopicManagerText',\n    defaultMessage:\n      'Topics can be added to help categorise inputs. Here you can add and delete topics that you would like to use on your platform. You can add the topics to specific projects in the {adminProjectsLink}.',\n  },\n  titleTopicManager: {\n    id: 'app.containers.AdminPage.SettingsPage.titleTopicManager',\n    defaultMessage: 'Topic manager',\n  },\n  deleteButtonLabel: {\n    id: 'app.containers.AdminPage.SettingsPage.deleteTopicButtonLabel',\n    defaultMessage: 'Delete',\n  },\n  editButtonLabel: {\n    id: 'app.containers.AdminPage.SettingsPage.editTopicButtonLabel',\n    defaultMessage: 'Edit',\n  },\n  addTopicButton: {\n    id: 'app.containers.AdminPage.SettingsPage.addTopicButton',\n    defaultMessage: 'Add topic',\n  },\n  fieldTopicTitle: {\n    id: 'app.containers.AdminPage.SettingsPage.fieldTopicTitle',\n    defaultMessage: 'Topic name',\n  },\n  fieldTopicTitleTooltip: {\n    id: 'app.containers.AdminPage.SettingsPage.fieldTopicTitleTooltip',\n    defaultMessage:\n      'The name you choose for each topic will be visible for citizens during signup and when filtering projects.',\n  },\n  editTopicFormTitle: {\n    id: 'app.containers.AdminPage.SettingsPage.editTopicFormTitle',\n    defaultMessage: 'Edit topic',\n  },\n  defaultTopic: {\n    id: 'app.containers.AdminPage.SettingsPage.defaultTopic',\n    defaultMessage: 'Default topic',\n  },\n  confirmHeader: {\n    id: 'app.containers.AdminPage.SettingsPage.confirmHeader',\n    defaultMessage: 'Are you sure you want to delete this topic?',\n  },\n  deleteTopicConfirmation: {\n    id: 'app.containers.AdminPage.SettingsPage.deleteTopicConfirmation',\n    defaultMessage:\n      'This will delete the topic, including from all existing inputs. This change will apply to all projects.',\n  },\n  cancel: {\n    id: 'app.containers.AdminPage.SettingsPage.cancel',\n    defaultMessage: 'Cancel',\n  },\n  delete: {\n    id: 'app.containers.AdminPage.SettingsPage.delete',\n    defaultMessage: 'Delete',\n  },\n  projectsSettings: {\n    id: 'app.containers.AdminPage.SettingsPage.projectsSettings',\n    defaultMessage: 'project settings',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  goBack: {\n    id: 'app.components.GoBackButton.group.edit.goBack',\n    defaultMessage: 'Go back',\n  },\n});\n","import React from 'react';\nimport clHistory from 'utils/cl-router/history';\n\n// intl\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../messages';\n\n// Components\nimport GoBackButton from 'components/UI/GoBackButton';\nimport { Section, SectionTitle } from 'components/admin/Section';\n\nimport { addTopic } from 'services/topics';\n\nimport { Formik } from 'formik';\nimport TopicForm, { FormValues } from '../TopicForm';\n\nimport { CLErrorsJSON } from 'typings';\nimport { isCLErrorJSON } from 'utils/errorUtils';\n\ninterface Props {}\n\nexport default class New extends React.Component<Props> {\n  handleSubmit = (\n    values: FormValues,\n    { setErrors, setSubmitting, setStatus }\n  ) => {\n    addTopic({\n      ...values,\n    })\n      .then(() => {\n        clHistory.push('/admin/settings/topics');\n      })\n      .catch((errorResponse) => {\n        if (isCLErrorJSON(errorResponse)) {\n          const apiErrors = (errorResponse as CLErrorsJSON).json.errors;\n          setErrors(apiErrors);\n        } else {\n          setStatus('error');\n        }\n        setSubmitting(false);\n      });\n  };\n\n  renderFn = (props) => {\n    return <TopicForm {...props} />;\n  };\n\n  goBack = () => {\n    clHistory.push('/admin/settings/topics');\n  };\n\n  initialValues = () => ({\n    title_multiloc: {},\n    description_multiloc: {},\n  });\n\n  render() {\n    return (\n      <Section>\n        <GoBackButton onClick={this.goBack} />\n        <SectionTitle>\n          <FormattedMessage {...messages.addTopicButton} />\n        </SectionTitle>\n        <Formik\n          initialValues={this.initialValues()}\n          render={this.renderFn}\n          onSubmit={this.handleSubmit}\n        />\n      </Section>\n    );\n  }\n}\n","import React, { PureComponent, FormEvent } from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/UI/Button';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.div`\n  display: inline-block;\n`;\n\ntype Props = {\n  onClick: (arg: FormEvent) => void;\n  className?: string;\n};\n\ninterface State {}\n\nexport default class GoBackButton extends PureComponent<Props, State> {\n  render() {\n    const { onClick, className } = this.props;\n\n    return (\n      <Container className={className || ''}>\n        <Button\n          onClick={onClick}\n          buttonStyle=\"text\"\n          icon=\"arrow-back\"\n          size=\"2\"\n          padding=\"0px\"\n          text={<FormattedMessage {...messages.goBack} />}\n        />\n      </Container>\n    );\n  }\n}\n"],"sourceRoot":""}