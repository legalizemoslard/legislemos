{"version":3,"sources":["webpack:///./app/components/admin/TabbedResource/index.tsx","webpack:///./app/components/admin/PageTitle/index.tsx","webpack:///./app/containers/Admin/projects/edit/index.tsx","webpack:///./app/components/UI/GoBackButton/messages.ts","webpack:///./app/components/UI/GoBackButton/index.tsx","webpack:///./app/containers/Admin/projects/edit/tracks.ts"],"names":["ResourceHeader","styled","div","TabbedNav","nav","props","theme","borderRadius","colors","separation","Tab","label","fontSizes","base","adminTextColor","ChildWrapper","adminContentBackground","getRegularExpression","tabUrl","RegExp","TabbedResource","tab","pathname","location","active","url","test","this","children","resource","title","subtitle","publicLink","messages","tabs","className","SectionDescription","buttonStyle","icon","linkTo","FormattedMessage","viewPublicResource","length","map","feature","key","name","activeClassForTab","to","React","PureComponent","withRouter","h1","xxxl","TopContainer","ActionsContainer","AdminProjectEdition","projectId","project","state","tabHideConditions","phases","baseTabsUrl","tabNames","cleanedTabs","forEach","tabName","reject","backUrl","goBackUrl","clHistory","push","_event","trackEventByName","tracks","clickNewIdea","extra","pathnameFrom","insertTabOptions","setState","insertConfiguration","formatMessage","intl","generalTab","descriptionTab","inputManagerTab","pollTab","surveyResultsTab","phasesTab","volunteeringTab","eventsTab","general","description","ideas","processType","attributes","process_type","participationMethod","participation_method","poll","isNilOrError","filter","phase","typeform_enabled","surveys_enabled","survey_service","volunteering","events","previousPathName","localize","childrenWithExtraProps","cloneElement","tabbedProps","newProject","title_multiloc","getTabs","id","undefined","inputTerm","getInputTerm","onData","handleData","onClick","goBack","some","slug","text","getInputTermMessage","idea","addNewIdea","option","addNewOption","addNewProject","question","addNewQuestion","issue","addNewIssue","contribution","addNewContribution","onNewIdea","viewPublicProject","AdminProjectEditionWithHoCs","injectIntl","Data","adopt","params","render","PreviousPathnameContext","Consumer","inputProps","dataProps","defineMessages","defaultMessage","Container","GoBackButton","size","padding"],"mappings":"oWAAA,mBAEA,YACA,eAGA,eACA,YAGA,YAMA,eACA,eACA,YACA,e,0cAEA,IAAMA,EAAiBC,UAAOC,IAAV,qFAAGD,CAAH,+IAedE,EAAYF,UAAOG,IAAV,gFAAGH,CAAH,kMAEI,SAACI,GAAD,OAAgBA,EAAMC,MAAMC,gBACzC,SAACF,GAAD,OAAgBA,EAAMC,MAAMC,eAGZC,SAAOC,YASvBC,EAAMT,UAAOC,IAAV,0EAAGD,CAAH,6ZAeIO,SAAOG,MACHC,YAAUC,KAWdL,SAAOM,eAKPN,SAAOM,eACAN,SAAOM,gBAIrBC,EAAed,UAAOC,IAAV,mFAAGD,CAAH,sHAGIO,SAAOC,WACbD,SAAOQ,wBAuBvB,SAASC,EAAqBC,GAC5B,OAAO,IAAIC,OAAJ,6CAAiDD,EAAjD,W,IAGHE,E,yPAIgB,SAACC,GACnB,IACcC,EACV,EAAKjB,MADPkB,SAAYD,SAGd,OACwB,mBAAfD,EAAIG,OACPH,EAAIG,OAAOF,GACXD,EAAIG,QACHF,GAAYL,EAAqBI,EAAII,KAAKC,KAAKH,SAASD,WAE3D,SACA,M,6CAGN,WAAS,WACP,EAKIK,KAAKtB,MAJPuB,EADF,EACEA,SADF,IAEEC,SAAYC,EAFd,EAEcA,MAAOC,EAFrB,EAEqBA,SAAUC,EAF/B,EAE+BA,WAC7BC,EAHF,EAGEA,SACAC,EAJF,EAIEA,KAGF,OACE,gDACE,wBAAClC,EAAD,CAAgBmC,UAAU,uBACxB,mCACE,wBAAC,UAAD,KAAQL,GACPC,GAAY,wBAAC,EAAAK,mBAAD,KAAqBL,IAGnCC,GAAcC,GACb,wBAAC,UAAD,CAAQI,YAAY,UAAUC,KAAK,MAAMC,OAAQP,GAC/C,wBAAC,EAAAQ,iBAAqBP,EAASQ,sBAKpCP,GAAQA,EAAKQ,OAAS,GACrB,wBAACvC,EAAD,CAAWgC,UAAU,qBAClBD,EAAKS,KAAI,SAACtB,GACT,OAAIA,EAAIuB,QAEJ,wBAAC,UAAD,CAAaC,IAAKxB,EAAII,IAAKqB,KAAMzB,EAAIuB,SACnC,wBAAClC,EAAD,CACEmC,IAAKxB,EAAII,IACTU,UAAS,UAAKd,EAAIyB,KAAT,YAAiB,EAAKC,kBAAkB1B,KAEjD,wBAAC,UAAD,CAAM2B,GAAI3B,EAAII,KAAMJ,EAAIV,SAM5B,wBAACD,EAAD,CACEmC,IAAKxB,EAAII,IACTU,UAAS,UAAKd,EAAIyB,KAAT,YAAiB,EAAKC,kBAAkB1B,KAEjD,wBAAC,UAAD,CAAM2B,GAAI3B,EAAII,KAAMJ,EAAIV,YAQpC,wBAACI,EAAD,KAAea,Q,GAtEMqB,UAAMC,e,GA4EpB,IAAAC,YAAW/B,G,mIClM1B,mBACA,Y,EAEenB,UAAOmD,G,gEAAPnD,C,4FACAW,YAAUyC,M,ubCLzB,E,ybAAA,YACA,YACA,eACA,YACA,YACA,YAGA,eACA,eACA,eACA,eAGA,eAGA,eACA,eACA,YAIA,YACA,eACA,eACA,YAGA,YACA,eAGA,eAIA,YAGA,Y,opCAEA,IAAMC,EAAerD,UAAOC,IAAV,yEAAGD,CAAH,oIAUZsD,EAAmBtD,UAAOC,IAAV,6EAAGD,CAAH,6DAmCTuD,E,0CAIX,WAAYnD,GAAO,4BACjB,cAAMA,IADW,yCAgKT,SAACoD,EAAmBC,GAC5B,MAAoC,EAAKC,MAAjCzB,EAAR,EAAQA,KAAM0B,EAAd,EAAcA,kBACNC,EAAW,EAAKxD,MAAhBwD,OACFC,EAAc,mBAAH,OAAsBL,GAEjCM,EAAW7B,EAAKS,KAAI,SAACtB,GAAD,OAASA,EAAIyB,QACnCkB,EAAc9B,EAYlB,OAVA6B,EAASE,SAAQ,SAACC,GAEdA,GACAN,EAAkBM,IAClBN,EAAkBM,GAASR,EAASG,KAEpCG,GAAc,IAAAG,QAAOH,EAAa,CAAElB,KAAMoB,QAIvCF,EAAYrB,KAAI,SAACtB,GAAD,cAClBA,GADkB,IAErBI,IAAK,GAAF,OAAKqC,EAAL,YAAoBzC,EAAII,cApLZ,wCAwLV,WACP,IAAM2C,EACJ,EAAKT,MAAMU,WACX,EAAKV,MAAMU,YAAc,EAAKhE,MAAMkB,SAASD,SACzC,EAAKqC,MAAMU,UACX,kBAENC,UAAUC,KAAKH,OA/LE,2CAkMP,SAAC9C,GAAD,OAAsB,SAACkD,IACjC,IAAAC,kBAAiBC,UAAOC,aAAa7B,KAAM,CACzC8B,MAAO,CAAEC,aAAcvD,UApMR,4CAwMN,SAACwD,GACZ,EAAKC,UAAS,gBAAG7C,EAAH,EAAGA,KAAH,MAAe,CAC3BA,MAAM,IAAA8C,qBAAoBF,EAApB,CAAsC5C,UAxM9C,IACU+C,EACN5E,EADF6E,KAAQD,cAHO,OAMjB,EAAKtB,MAAQ,CACXzB,KAAM,CACJ,CACEvB,MAAOsE,EAAchD,UAASkD,YAC9B1D,IAAK,OACLqB,KAAM,WAER,CACEnC,MAAOsE,EAAchD,UAASmD,gBAC9B3D,IAAK,cACLqB,KAAM,eAER,CACEnC,MAAOsE,EAAchD,UAASoD,iBAC9B5D,IAAK,QACLqB,KAAM,SAER,CACEnC,MAAOsE,EAAchD,UAASqD,SAC9B7D,IAAK,OACLmB,QAAS,QACTE,KAAM,QAER,CACEnC,MAAOsE,EAAchD,UAASsD,kBAC9B9D,IAAK,iBACLqB,KAAM,kBAER,CACEnC,MAAOsE,EAAchD,UAASuD,WAC9B/D,IAAK,WACLqB,KAAM,UAER,CACEnC,MAAOsE,EAAchD,UAASwD,iBAC9BhE,IAAK,eACLmB,QAAS,eACTE,KAAM,gBAER,CACEnC,MAAOsE,EAAchD,UAASyD,WAC9BjE,IAAK,SACLqB,KAAM,WAGVc,kBAAmB,CACjB+B,QAAS,WACP,OAAO,GAETC,YAAa,WACX,OAAO,GAETC,MAAO,SAAyBnC,GAC9B,IAAMoC,EAAcpC,aAAH,EAAGA,EAASqC,WAAWC,aAClCC,EAAsBvC,EAAQqC,WAAWG,qBAE/C,MACkB,eAAhBJ,GACwB,aAAxBG,GACwB,cAAxBA,GAOJE,KAAM,SAAyBzC,EAASG,GACtC,IAAMiC,EAAcpC,aAAH,EAAGA,EAASqC,WAAWC,aAClCC,EAAsBvC,EAAQqC,WAAWG,qBAE/C,MACmB,eAAhBJ,GAAwD,SAAxBG,GAChB,aAAhBH,KACE,IAAAM,cAAavC,IAGA,IAFdA,EAAOwC,QAAO,SAACC,GACb,MAAiD,SAA1CA,EAAMP,WAAWG,wBACvBxD,QAOT,iBAAkB,SAAgCgB,EAASG,GACzD,IAAQ0C,EAAsClG,EAAtCkG,iBAAkBC,EAAoBnG,EAApBmG,gBAEpBV,EAAcpC,aAAH,EAAGA,EAASqC,WAAWC,aAClCC,EAAsBvC,EAAQqC,WAAWG,qBAE/C,SAC2B,WAAxBD,GACiB,eAAhBH,IACDU,IACAD,GACAC,GACCD,GACgB,eAAhBT,GACwB,WAAxBG,GACsC,aAAtCvC,EAAQqC,WAAWU,gBACJ,aAAhBX,KACE,IAAAM,cAAavC,IAMA,IALdA,EAAOwC,QAAO,SAACC,GACb,MAC4C,WAA1CA,EAAMP,WAAWG,sBACmB,aAApCI,EAAMP,WAAWU,kBAElB/D,SAOTmB,OAAQ,SAA2BH,GAGjC,MAAoB,cAFAA,aAAH,EAAGA,EAASqC,WAAWC,eAQ1CU,aAAc,SAAiChD,EAASG,GACtD,IAAMiC,EAAcpC,aAAH,EAAGA,EAASqC,WAAWC,aAClCC,EAAsBvC,EAAQqC,WAAWG,qBAE/C,MACmB,eAAhBJ,GACyB,iBAAxBG,GACe,aAAhBH,KACE,IAAAM,cAAavC,IAGA,IAFdA,EAAOwC,QAAO,SAACC,GACb,MAAiD,iBAA1CA,EAAMP,WAAWG,wBACvBxD,QAOTiE,OAAQ,WACN,OAAO,IAGXtC,UAAW,MAtJI,E,sDA0JnB,WACE1C,KAAKoD,SAAS,CACZV,UAAW1C,KAAKtB,MAAMuG,qB,oBAkD1B,WACE,MAOIjF,KAAKtB,MANPqD,EADF,EACEA,QACAG,EAFF,EAEEA,OACQoB,EAHV,EAGEC,KAAQD,cACR4B,EAJF,EAIEA,SACAjF,EALF,EAKEA,SACYN,EANd,EAMEC,SAAYD,SAERwF,EAAyB7D,UAAM8D,aACnCnF,EACA,CAAE8B,YAEEsD,EAAc,CAClBnF,SAAU,CACRC,OAAQ,IAAAsE,cAAa1C,GAEjBuB,EAAchD,UAASgF,YADvBJ,EAASnD,EAAQqC,WAAWmB,iBAGlChF,MAAO,IAAAkE,cAAa1C,GAA+C,GAApC/B,KAAKwF,QAAQzD,EAAQ0D,GAAI1D,IAG1D,KAAK,IAAA0C,cAAa1C,SAAuB2D,IAAXxD,EAAsB,CAClD,IAAMyD,GAAY,IAAAC,cAChB7D,aADgB,EAChBA,EAASqC,WAAWC,aACpBtC,EACAG,GAGF,OACE,gDACE,wBAAC,UAAD,CACEuD,GAAG,qCACHI,OAAQ7F,KAAK8F,WACb/D,QAASA,EACTG,OAAQA,IAEV,wBAACP,EAAD,KACE,wBAAC,UAAD,CAAcoE,QAAS/F,KAAKgG,SAC5B,wBAACpE,EAAD,KACGyD,EAAY9E,KAAK0F,MAAK,SAACvG,GAAD,MAAsB,UAAbA,EAAIyB,SAClC,wBAAC,UAAD,CACEsE,GAAG,eACH/E,YAAY,UACZC,KAAK,OACLC,OAAM,oBAAemB,EAAQqC,WAAW8B,KAAlC,cACNC,KAAM7C,GACJ,IAAA8C,qBAAoBT,EAAW,CAC7BU,KAAM/F,UAASgG,WACfC,OAAQjG,UAASkG,aACjBzE,QAASzB,UAASmG,cAClBC,SAAUpG,UAASqG,eACnBC,MAAOtG,UAASuG,YAChBC,aAAcxG,UAASyG,sBAG3BhB,QAAS/F,KAAKgH,UAAUrH,KAG5B,wBAAC,UAAD,CACEe,YAAY,UACZC,KAAK,MACL8E,GAAG,aACH7E,OAAM,oBAAemB,EAAQqC,WAAW8B,OAExC,wBAAC,EAAArF,iBAAqBP,UAAS2G,sBAIrC,wBAAC,UAAmB5B,EACjBF,IAMT,OAAO,S,GA9R8B5D,iB,wBAkSzC,IAAM2F,GAA8B,IAAA1F,aAClC,IAAA2F,aAAoC,aAAetF,KAG/CuF,GAAO,IAAAC,OAA+C,CAC1DxC,gBAAiB,wBAAC,UAAD,CAAgB1D,KAAK,YACtCyD,iBAAkB,wBAAC,UAAD,CAAgBzD,KAAK,qBACvCe,OAAQ,gBAAGoF,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,OACN,wBAAC,UAAD,CAAWzF,UAAWwF,EAAOxF,WAAYyF,IAE3CxF,QAAS,gBAAGuF,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,OACP,wBAAC,UAAD,CAAYzF,UAAWwF,EAAOxF,WAAYyF,IAE5CtC,iBAAkB,gBAAGsC,EAAH,EAAGA,OAAH,OAChB,wBAAC,EAAAC,wBAAwBC,SAAzB,KACGF,M,UAKQ,SAACG,GAAD,OACb,wBAACN,EAASM,GACP,SAACC,GAAD,OACC,wBAACT,GAAD,gBAAiCQ,EAAgBC,S,oGChZvD,I,GAEe,EAFf,UAEeC,gBAAe,CAC5B5B,OAAQ,CACNP,GAAI,gDACJoC,eAAgB,a,kSCLpB,E,ybAAA,YACA,eACA,eACA,YACA,e,ykBAEA,IAAMC,EAAYxJ,UAAOC,IAAV,0EAAGD,CAAH,2BAWMyJ,E,sJACnB,WACE,MAA+B/H,KAAKtB,MAA5BqH,EAAR,EAAQA,QAASvF,EAAjB,EAAiBA,UAEjB,OACE,wBAACsH,EAAD,CAAWtH,UAAWA,GAAa,IACjC,wBAAC,UAAD,CACEuF,QAASA,EACTrF,YAAY,OACZC,KAAK,aACLqH,KAAK,IACLC,QAAQ,MACR9B,KAAM,wBAAC,EAAAtF,iBAAqBP,UAAS0F,e,GAZLzE,iB,2HCjB3B,CACbyB,aAAc,CACZ7B,KAAM","file":"123.cc5306641ad9a36add83.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Link from 'utils/cl-router/Link';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// localisation\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// typings\nimport { Message, ITab } from 'typings';\n\n// components\nimport FeatureFlag from 'components/FeatureFlag';\nimport Button from 'components/UI/Button';\nimport { SectionDescription } from 'components/admin/Section';\nimport Title from 'components/admin/PageTitle';\n\nconst ResourceHeader = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-bottom: 30px;\n\n  @media print {\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin-right: 40px;\n  }\n`;\n\nconst TabbedNav = styled.nav`\n  background: #fcfcfc;\n  border-radius: ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius} 0 0;\n  padding-left: 44px;\n  display: flex;\n  border: 1px solid ${colors.separation};\n  border-bottom: 1px solid transparent;\n  @media print {\n    border: none;\n    padding: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Tab = styled.div`\n  list-style: none;\n  cursor: pointer;\n  display: flex;\n  margin-bottom: -1px;\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  a {\n    color: ${colors.label};\n    font-size: ${fontSizes.base}px;\n    font-weight: 400;\n    line-height: 1.5rem;\n    padding: 0;\n    padding-top: 1em;\n    padding-bottom: 1em;\n    border-bottom: 3px solid transparent;\n    transition: all 100ms ease-out;\n  }\n\n  &:not(.active):hover a {\n    color: ${colors.adminTextColor};\n    border-color: #ddd;\n  }\n\n  &.active a {\n    color: ${colors.adminTextColor};\n    border-color: ${colors.adminTextColor};\n  }\n`;\n\nconst ChildWrapper = styled.div`\n  margin-bottom: 60px;\n  padding: 42px;\n  border: 1px solid ${colors.separation};\n  background: ${colors.adminContentBackground};\n\n  @media print {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\ntype Props = {\n  resource: {\n    title: string;\n    publicLink?: string;\n    subtitle?: string;\n  };\n  messages?: {\n    viewPublicResource: Message;\n  };\n  tabs?: ITab[];\n};\n\ninterface State {}\n\nfunction getRegularExpression(tabUrl: string) {\n  return new RegExp(`^/([a-zA-Z]{2,3}(-[a-zA-Z]{2,3})?)(${tabUrl})(/)?$`);\n}\n\nclass TabbedResource extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  activeClassForTab = (tab: ITab) => {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    return (\n      typeof tab.active === 'function'\n        ? tab.active(pathname)\n        : tab.active ||\n          (pathname && getRegularExpression(tab.url).test(location.pathname))\n    )\n      ? 'active'\n      : '';\n  };\n\n  render() {\n    const {\n      children,\n      resource: { title, subtitle, publicLink },\n      messages,\n      tabs,\n    } = this.props;\n\n    return (\n      <>\n        <ResourceHeader className=\"e2e-resource-header\">\n          <div>\n            <Title>{title}</Title>\n            {subtitle && <SectionDescription>{subtitle}</SectionDescription>}\n          </div>\n\n          {publicLink && messages && (\n            <Button buttonStyle=\"cl-blue\" icon=\"eye\" linkTo={publicLink}>\n              <FormattedMessage {...messages.viewPublicResource} />\n            </Button>\n          )}\n        </ResourceHeader>\n\n        {tabs && tabs.length > 0 && (\n          <TabbedNav className=\"e2e-resource-tabs\">\n            {tabs.map((tab) => {\n              if (tab.feature) {\n                return (\n                  <FeatureFlag key={tab.url} name={tab.feature}>\n                    <Tab\n                      key={tab.url}\n                      className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                    >\n                      <Link to={tab.url}>{tab.label}</Link>\n                    </Tab>\n                  </FeatureFlag>\n                );\n              } else {\n                return (\n                  <Tab\n                    key={tab.url}\n                    className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                  >\n                    <Link to={tab.url}>{tab.label}</Link>\n                  </Tab>\n                );\n              }\n            })}\n          </TabbedNav>\n        )}\n\n        <ChildWrapper>{children}</ChildWrapper>\n      </>\n    );\n  }\n}\n\nexport default withRouter(TabbedResource);\n","// style\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nexport default styled.h1`\n  font-size: ${fontSizes.xxxl}px;\n  line-height: 40px;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 15px;\n`;\n","import React, { PureComponent } from 'react';\nimport { reject } from 'lodash-es';\nimport clHistory from 'utils/cl-router/history';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// components\nimport GoBackButton from 'components/UI/GoBackButton';\nimport Button from 'components/UI/Button';\nimport TabbedResource from 'components/admin/TabbedResource';\nimport Outlet from 'components/Outlet';\n\n// resources\nimport GetFeatureFlag, {\n  GetFeatureFlagChildProps,\n} from 'resources/GetFeatureFlag';\nimport GetPhases, { GetPhasesChildProps } from 'resources/GetPhases';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport { PreviousPathnameContext } from 'context';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport messages from './messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// tracks\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// style\nimport styled from 'styled-components';\n\n// typings\nimport { InsertConfigurationOptions, ITab } from 'typings';\nimport { getInputTerm } from 'services/participationContexts';\nimport { IProjectData } from 'services/projects';\n\nimport { insertConfiguration } from 'utils/moduleUtils';\n\nconst TopContainer = styled.div`\n  width: 100%;\n  margin-top: -5px;\n  margin-bottom: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n`;\n\nconst ActionsContainer = styled.div`\n  display: flex;\n\n  & > *:not(:last-child) {\n    margin-right: 15px;\n  }\n`;\n\ninterface ITracks {\n  clickNewIdea: ({ extra: object }) => void;\n}\n\nexport interface InputProps {}\n\ninterface DataProps {\n  surveys_enabled: GetFeatureFlagChildProps;\n  typeform_enabled: GetFeatureFlagChildProps;\n  phases: GetPhasesChildProps;\n  project: GetProjectChildProps;\n  previousPathName: string | null;\n}\n\ninterface State {\n  tabs: ITab[];\n  goBackUrl: string | null;\n  tabHideConditions: {\n    [tabName: string]: (\n      project: IProjectData,\n      phases: GetPhasesChildProps\n    ) => boolean;\n  };\n}\n\ninterface Props extends InputProps, DataProps {}\n\nexport class AdminProjectEdition extends PureComponent<\n  Props & InjectedIntlProps & InjectedLocalized & WithRouterProps & ITracks,\n  State\n> {\n  constructor(props) {\n    super(props);\n    const {\n      intl: { formatMessage },\n    } = props;\n\n    this.state = {\n      tabs: [\n        {\n          label: formatMessage(messages.generalTab),\n          url: 'edit',\n          name: 'general',\n        },\n        {\n          label: formatMessage(messages.descriptionTab),\n          url: 'description',\n          name: 'description',\n        },\n        {\n          label: formatMessage(messages.inputManagerTab),\n          url: 'ideas',\n          name: 'ideas',\n        },\n        {\n          label: formatMessage(messages.pollTab),\n          url: 'poll',\n          feature: 'polls',\n          name: 'poll',\n        },\n        {\n          label: formatMessage(messages.surveyResultsTab),\n          url: 'survey-results',\n          name: 'survey-results',\n        },\n        {\n          label: formatMessage(messages.phasesTab),\n          url: 'timeline',\n          name: 'phases',\n        },\n        {\n          label: formatMessage(messages.volunteeringTab),\n          url: 'volunteering',\n          feature: 'volunteering',\n          name: 'volunteering',\n        },\n        {\n          label: formatMessage(messages.eventsTab),\n          url: 'events',\n          name: 'events',\n        },\n      ],\n      tabHideConditions: {\n        general: function isGeneralTabHidden() {\n          return false;\n        },\n        description: function isDescriptionTabHidden() {\n          return false;\n        },\n        ideas: function isIdeaTabHidden(project) {\n          const processType = project?.attributes.process_type;\n          const participationMethod = project.attributes.participation_method;\n\n          if (\n            processType === 'continuous' &&\n            participationMethod !== 'ideation' &&\n            participationMethod !== 'budgeting'\n          ) {\n            return true;\n          }\n\n          return false;\n        },\n        poll: function isPollTabHidden(project, phases) {\n          const processType = project?.attributes.process_type;\n          const participationMethod = project.attributes.participation_method;\n\n          if (\n            (processType === 'continuous' && participationMethod !== 'poll') ||\n            (processType === 'timeline' &&\n              !isNilOrError(phases) &&\n              phases.filter((phase) => {\n                return phase.attributes.participation_method === 'poll';\n              }).length === 0)\n          ) {\n            return true;\n          }\n\n          return false;\n        },\n        'survey-results': function surveyResultsTabHidden(project, phases) {\n          const { typeform_enabled, surveys_enabled } = props;\n\n          const processType = project?.attributes.process_type;\n          const participationMethod = project.attributes.participation_method;\n\n          if (\n            (participationMethod !== 'survey' &&\n              processType === 'continuous') ||\n            !surveys_enabled ||\n            !typeform_enabled ||\n            (surveys_enabled &&\n              typeform_enabled &&\n              processType === 'continuous' &&\n              participationMethod === 'survey' &&\n              project.attributes.survey_service !== 'typeform') ||\n            (processType === 'timeline' &&\n              !isNilOrError(phases) &&\n              phases.filter((phase) => {\n                return (\n                  phase.attributes.participation_method === 'survey' &&\n                  phase.attributes.survey_service === 'typeform'\n                );\n              }).length === 0)\n          ) {\n            return true;\n          }\n\n          return false;\n        },\n        phases: function isPhasesTabHidden(project) {\n          const processType = project?.attributes.process_type;\n\n          if (processType !== 'timeline') {\n            return true;\n          }\n\n          return false;\n        },\n        volunteering: function isVolunteeringTabHidden(project, phases) {\n          const processType = project?.attributes.process_type;\n          const participationMethod = project.attributes.participation_method;\n\n          if (\n            (processType === 'continuous' &&\n              participationMethod !== 'volunteering') ||\n            (processType === 'timeline' &&\n              !isNilOrError(phases) &&\n              phases.filter((phase) => {\n                return phase.attributes.participation_method === 'volunteering';\n              }).length === 0)\n          ) {\n            return true;\n          }\n\n          return false;\n        },\n        events: function isEventsTabHidden() {\n          return false;\n        },\n      },\n      goBackUrl: null,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      goBackUrl: this.props.previousPathName,\n    });\n  }\n\n  getTabs = (projectId: string, project: IProjectData) => {\n    const { tabs, tabHideConditions } = this.state;\n    const { phases } = this.props;\n    const baseTabsUrl = `/admin/projects/${projectId}`;\n\n    const tabNames = tabs.map((tab) => tab.name);\n    let cleanedTabs = tabs;\n\n    tabNames.forEach((tabName) => {\n      if (\n        tabName &&\n        tabHideConditions[tabName] &&\n        tabHideConditions[tabName](project, phases)\n      ) {\n        cleanedTabs = reject(cleanedTabs, { name: tabName });\n      }\n    });\n\n    return cleanedTabs.map((tab) => ({\n      ...tab,\n      url: `${baseTabsUrl}/${tab.url}`,\n    }));\n  };\n\n  goBack = () => {\n    const backUrl =\n      this.state.goBackUrl &&\n      this.state.goBackUrl !== this.props.location.pathname\n        ? this.state.goBackUrl\n        : '/admin/projects';\n\n    clHistory.push(backUrl);\n  };\n\n  onNewIdea = (pathname: string) => (_event) => {\n    trackEventByName(tracks.clickNewIdea.name, {\n      extra: { pathnameFrom: pathname },\n    });\n  };\n\n  handleData = (insertTabOptions: InsertConfigurationOptions<ITab>) => {\n    this.setState(({ tabs }) => ({\n      tabs: insertConfiguration(insertTabOptions)(tabs),\n    }));\n  };\n\n  render() {\n    const {\n      project,\n      phases,\n      intl: { formatMessage },\n      localize,\n      children,\n      location: { pathname },\n    } = this.props;\n    const childrenWithExtraProps = React.cloneElement(\n      children as React.ReactElement<any>,\n      { project }\n    );\n    const tabbedProps = {\n      resource: {\n        title: !isNilOrError(project)\n          ? localize(project.attributes.title_multiloc)\n          : formatMessage(messages.newProject),\n      },\n      tabs: !isNilOrError(project) ? this.getTabs(project.id, project) : [],\n    };\n\n    if (!isNilOrError(project) && phases !== undefined) {\n      const inputTerm = getInputTerm(\n        project?.attributes.process_type,\n        project,\n        phases\n      );\n\n      return (\n        <>\n          <Outlet\n            id=\"app.containers.Admin.projects.edit\"\n            onData={this.handleData}\n            project={project}\n            phases={phases}\n          />\n          <TopContainer>\n            <GoBackButton onClick={this.goBack} />\n            <ActionsContainer>\n              {tabbedProps.tabs.some((tab) => tab.name === 'ideas') && (\n                <Button\n                  id=\"e2e-new-idea\"\n                  buttonStyle=\"cl-blue\"\n                  icon=\"idea\"\n                  linkTo={`/projects/${project.attributes.slug}/ideas/new`}\n                  text={formatMessage(\n                    getInputTermMessage(inputTerm, {\n                      idea: messages.addNewIdea,\n                      option: messages.addNewOption,\n                      project: messages.addNewProject,\n                      question: messages.addNewQuestion,\n                      issue: messages.addNewIssue,\n                      contribution: messages.addNewContribution,\n                    })\n                  )}\n                  onClick={this.onNewIdea(pathname)}\n                />\n              )}\n              <Button\n                buttonStyle=\"cl-blue\"\n                icon=\"eye\"\n                id=\"to-project\"\n                linkTo={`/projects/${project.attributes.slug}`}\n              >\n                <FormattedMessage {...messages.viewPublicProject} />\n              </Button>\n            </ActionsContainer>\n          </TopContainer>\n          <TabbedResource {...tabbedProps}>\n            {childrenWithExtraProps}\n          </TabbedResource>\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst AdminProjectEditionWithHoCs = withRouter(\n  injectIntl<Props & WithRouterProps>(injectLocalize(AdminProjectEdition))\n);\n\nconst Data = adopt<DataProps, InputProps & WithRouterProps>({\n  surveys_enabled: <GetFeatureFlag name=\"surveys\" />,\n  typeform_enabled: <GetFeatureFlag name=\"typeform_surveys\" />,\n  phases: ({ params, render }) => (\n    <GetPhases projectId={params.projectId}>{render}</GetPhases>\n  ),\n  project: ({ params, render }) => (\n    <GetProject projectId={params.projectId}>{render}</GetProject>\n  ),\n  previousPathName: ({ render }) => (\n    <PreviousPathnameContext.Consumer>\n      {render as any}\n    </PreviousPathnameContext.Consumer>\n  ),\n});\n\nexport default (inputProps: InputProps & WithRouterProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <AdminProjectEditionWithHoCs {...inputProps} {...dataProps} />\n    )}\n  </Data>\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  goBack: {\n    id: 'app.components.GoBackButton.group.edit.goBack',\n    defaultMessage: 'Go back',\n  },\n});\n","import React, { PureComponent, FormEvent } from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/UI/Button';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.div`\n  display: inline-block;\n`;\n\ntype Props = {\n  onClick: (arg: FormEvent) => void;\n  className?: string;\n};\n\ninterface State {}\n\nexport default class GoBackButton extends PureComponent<Props, State> {\n  render() {\n    const { onClick, className } = this.props;\n\n    return (\n      <Container className={className || ''}>\n        <Button\n          onClick={onClick}\n          buttonStyle=\"text\"\n          icon=\"arrow-back\"\n          size=\"2\"\n          padding=\"0px\"\n          text={<FormattedMessage {...messages.goBack} />}\n        />\n      </Container>\n    );\n  }\n}\n","export default {\n  clickNewIdea: {\n    name: 'New Idea button clicked',\n  },\n};\n"],"sourceRoot":""}