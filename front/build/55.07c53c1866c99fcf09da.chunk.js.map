{"version":3,"sources":["webpack:///./app/containers/SignUpInPage/SignUpInPageMeta.tsx","webpack:///./app/containers/SignUpInPage/messages.ts","webpack:///./app/containers/SignUpInPage/index.tsx"],"names":["SignUpInPageMeta","memo","intl","pathname","location","tenantLocales","tenant","locale","isNilOrError","formatMessage","method","endsWith","organizationNameMultiLoc","attributes","settings","core","organization_name","tenantName","getLocalized","pageMetaTitle","messages","signInMetaTitle","signUpMetaTitle","pageMetaDescription","signInPageMetaDescription","signUpPageMetaDescription","Helmet","name","content","property","window","href","SignUpInPageMetaWithHoC","withRouter","injectIntl","Data","adopt","dataprops","defineMessages","id","defaultMessage","slogan","Container","styled","main","colors","background","media","biggerThanMaxTablet","props","theme","menuHeight","footerHeight","smallerThanMaxTablet","mobileMenuHeight","mobileTopBarHeight","Section","div","Left","Banner","Slogan","colorMain","fontSizes","xxxxl","Right","RightInner","SignUpPageWithHoC","authUser","previousPathName","flow","useState","inModal","metaData","setMetaData","registration_completed_at","clHistory","replace","useEffect","subscriptions","signUpActiveStepChange$","subscribe","scrollTo","changeMetaData$","eventValue","forEach","subscription","unsubscribe","FormattedMessage","onSignUpInCompleted","push","render","PreviousPathnameContext","Consumer","inputProps","dataProps"],"mappings":"kQACA,M,ybAAA,YACA,YACA,YACA,YAGA,eACA,YAIA,eAGA,eAGA,eAGA,YACA,YACA,eACA,e,+HAUA,IAAMA,GAAmB,IAAAC,OACvB,YAAqE,IAAlEC,EAAkE,EAAlEA,KAAkBC,EAAgD,EAA5DC,SAAYD,SAAYE,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACtD,KACG,IAAAC,cAAaH,MACb,IAAAG,cAAaD,MACb,IAAAC,cAAaF,GACd,CACA,IAAQG,EAAkBP,EAAlBO,cACFC,GAAS,IAAAC,UAASR,EAAU,WAAa,SAAW,SACpDS,EACJN,EAAOO,WAAWC,SAASC,KAAKC,kBAC5BC,GAAa,IAAAC,cACjBN,EACAL,EACAF,GAEIc,EAAgBV,EACT,WAAXC,EACIU,UAASC,gBACTD,UAASE,gBACb,CAAEL,eAEEM,EAAsBd,EACf,WAAXC,EACIU,UAASI,0BACTJ,UAASK,2BAGf,OACE,wBAAC,EAAAC,OAAD,KACE,qCAAQP,IACP,gBACA,aAAkBd,GACnB,gCAAMsB,KAAK,QAAQC,QAAST,IAC5B,gCAAMQ,KAAK,cAAcC,QAASL,IAClC,gCAAMM,SAAS,WAAWD,QAAST,IACnC,gCAAMU,SAAS,iBAAiBD,QAASL,IACzC,gCAAMM,SAAS,SAASD,QAASE,OAAO1B,SAAS2B,QAKvD,OAAO,QAILC,GAA0B,IAAAC,aAAW,IAAAC,YAAWlC,IAEhDmC,GAAO,IAAAC,OAAiB,CAC5B/B,cAAe,wBAAC,UAAD,MACfC,OAAQ,wBAAC,UAAD,MACRC,OAAQ,wBAAC,UAAD,Q,UAGK,kBACb,wBAAC4B,EAAD,MAAO,SAACE,GAAD,OAAe,wBAACL,EAA4BK,Q,sGCzFrD,I,GAEe,EAFf,UAEeC,gBAAe,CAC5BhB,gBAAiB,CACfiB,GAAI,8CACJC,eACE,oEAEJf,0BAA2B,CACzBc,GAAI,wDACJC,eACE,iFAEJnB,gBAAiB,CACfkB,GAAI,8CACJC,eACE,iEAEJhB,0BAA2B,CACzBe,GAAI,wDACJC,eACE,8EAEJC,OAAQ,CACNF,GAAI,qCACJC,eAAgB,mD,4SCzBpB,E,ybAAA,YACA,YACA,YACA,eAGA,eACA,eACA,eAGA,eACA,eAGA,YAGA,YAMA,YAGA,YACA,eAGA,eACA,Y,+HAEA,IAAME,EAAYC,UAAOC,KAAV,8EAAGD,CAAH,2GAMCE,SAAOC,WAGnBC,QAAMC,oBATK,oFAWC,SAACC,GAAD,OAAWA,EAAMC,MAAMC,WAAaF,EAAMC,MAAME,gBAI5DL,QAAMM,qBAfK,8EAgBgB,SAACJ,GAAD,OAAWA,EAAMC,MAAMI,oBAAwB,SAC1EL,GAD0E,OAEvEA,EAAMC,MAAMK,uBAIbC,EAAUb,UAAOc,IAAV,4EAAGd,CAAH,aAIPe,GAAO,aAAOF,GAAV,yEAAG,CAAH,qBAGNT,QAAMC,oBAHA,sDAQJW,EAAShB,UAAOc,IAAV,2EAAGd,CAAH,+GAUNiB,EAASjB,UAAOc,IAAV,2EAAGd,CAAH,4FAGD,SAACM,GAAD,OAAWA,EAAMC,MAAMW,WAAa,SAChCC,YAAUC,OAKnBC,GAAQ,aAAOR,GAAV,0EAAG,CAAH,MAELS,EAAatB,UAAOc,IAAV,+EAAGd,CAAH,gJAUZI,QAAMM,qBAVM,yDA0FVa,GAAoB,IAAAjC,aAnEP,SAAC,GAIO,IAHzBkC,EAGyB,EAHzBA,SACA/D,EAEyB,EAFzBA,SACAgE,EACyB,EADzBA,iBAEQjE,EAAaC,EAAbD,SACFkE,GAAO,IAAA1D,UAASR,EAAU,WAAa,SAAW,SAExD,GAAgC,IAAAmE,UAAwC,CACtED,OACAlE,WACAoE,SAAS,IAHX,qBAAOC,EAAP,KAAiBC,EAAjB,OAOG,IAAAjE,cAAa2D,IAAaA,EAAStD,WAAW6D,2BAG/CC,UAAUC,QAAQR,GAAoB,MAGxC,IAAAS,YAAU,WACR,IAAMC,EAAgB,CACpBC,0BAAwBC,WAAU,WAChClD,OAAOmD,SAAS,EAAG,MAErBC,kBAAgBF,WAAU,YAA8B,IAAfR,EAAe,EAA3BW,WAC3BV,EAAYD,OAGhB,OAAO,WACLM,EAAcM,SAAQ,SAACC,GAAD,OAAkBA,EAAaC,oBAEtD,IAMH,OACE,gDACE,wBAAC,UAAD,MAEA,wBAAC5C,EAAD,CAAWH,GAAG,uBACZ,wBAACmB,EAAD,KACE,wBAACC,EAAD,KACE,wBAACC,EAAD,KACE,wBAAC,EAAA2B,iBAAqBnE,UAASqB,WAIrC,wBAACuB,EAAD,KACE,wBAACC,EAAD,KACGO,GACC,wBAAC,UAAD,CACEA,SAAUA,EACVgB,oBArBc,WAC1Bb,UAAUc,KAAKrB,GAAoB,QAuB3B,wBAAC,UAAD,CAAQ7B,GAAG,mCAAmCiC,SAAUA,WAU9DrC,GAAO,IAAAC,OAAkC,CAC7C+B,SAAU,wBAAC,UAAD,MACV5D,OAAQ,wBAAC,UAAD,MACR6D,iBAAkB,gBAAGsB,EAAH,EAAGA,OAAH,OAChB,wBAAC,EAAAC,wBAAwBC,SAAzB,KACGF,M,UAKQ,SAACG,GAAD,OACb,wBAAC1D,EAAS0D,GACP,SAACC,GAAD,OAAe,wBAAC5B,GAAD,gBAAuB2B,EAAgBC","file":"55.07c53c1866c99fcf09da.chunk.js","sourcesContent":["// libraries\nimport React, { memo } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { adopt } from 'react-adopt';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// i18n\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// resources\nimport GetAppConfigurationLocales, {\n  GetAppConfigurationLocalesChildProps,\n} from 'resources/GetAppConfigurationLocales';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\n\n// utils\nimport { isNilOrError, endsWith } from 'utils/helperUtils';\nimport { getLocalized } from 'utils/i18n';\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\ninterface DataProps {\n  tenantLocales: GetAppConfigurationLocalesChildProps;\n  tenant: GetAppConfigurationChildProps;\n  locale: GetLocaleChildProps;\n}\n\ninterface Props extends DataProps {}\n\nconst SignUpInPageMeta = memo<Props & InjectedIntlProps & WithRouterProps>(\n  ({ intl, location: { pathname }, tenantLocales, tenant, locale }) => {\n    if (\n      !isNilOrError(tenantLocales) &&\n      !isNilOrError(locale) &&\n      !isNilOrError(tenant)\n    ) {\n      const { formatMessage } = intl;\n      const method = endsWith(pathname, 'sign-in') ? 'signin' : 'signup';\n      const organizationNameMultiLoc =\n        tenant.attributes.settings.core.organization_name;\n      const tenantName = getLocalized(\n        organizationNameMultiLoc,\n        locale,\n        tenantLocales\n      );\n      const pageMetaTitle = formatMessage(\n        method === 'signin'\n          ? messages.signInMetaTitle\n          : messages.signUpMetaTitle,\n        { tenantName }\n      );\n      const pageMetaDescription = formatMessage(\n        method === 'signin'\n          ? messages.signInPageMetaDescription\n          : messages.signUpPageMetaDescription\n      );\n\n      return (\n        <Helmet>\n          <title>{pageMetaTitle}</title>\n          {getCanonicalLink()}\n          {getAlternateLinks(tenantLocales)}\n          <meta name=\"title\" content={pageMetaTitle} />\n          <meta name=\"description\" content={pageMetaDescription} />\n          <meta property=\"og:title\" content={pageMetaTitle} />\n          <meta property=\"og:description\" content={pageMetaDescription} />\n          <meta property=\"og:url\" content={window.location.href} />\n        </Helmet>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst SignUpInPageMetaWithHoC = withRouter(injectIntl(SignUpInPageMeta));\n\nconst Data = adopt<DataProps>({\n  tenantLocales: <GetAppConfigurationLocales />,\n  tenant: <GetAppConfiguration />,\n  locale: <GetLocale />,\n});\n\nexport default () => (\n  <Data>{(dataprops) => <SignUpInPageMetaWithHoC {...dataprops} />}</Data>\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  signUpMetaTitle: {\n    id: 'app.containers.SignUpInPage.signUpMetaTitle',\n    defaultMessage:\n      'Sign up for the CitizenLab platform of {tenantName} | CitizenLab',\n  },\n  signUpPageMetaDescription: {\n    id: 'app.containers.SignUpInPage.signUpPageMetaDescription',\n    defaultMessage:\n      'Sign up for the participation platform of {orgName} to join the conversation!',\n  },\n  signInMetaTitle: {\n    id: 'app.containers.SignUpInPage.signInMetaTitle',\n    defaultMessage:\n      'Log into the CitizenLab platform of {tenantName} | CitizenLab',\n  },\n  signInPageMetaDescription: {\n    id: 'app.containers.SignUpInPage.signInPageMetaDescription',\n    defaultMessage:\n      'Log into the participation platform of {orgName} to join the conversation!',\n  },\n  slogan: {\n    id: 'app.containers.SignUpInPage.slogan',\n    defaultMessage: 'We need your opinion to create a better city!',\n  },\n});\n","import React, { useEffect, ReactElement, useState } from 'react';\nimport { adopt } from 'react-adopt';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport clHistory from 'utils/cl-router/history';\n\n// components\nimport SignUpInPageMeta from './SignUpInPageMeta';\nimport SignUpIn, { ISignUpInMetaData } from 'components/SignUpIn';\nimport Outlet from 'components/Outlet';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\n\n// utils\nimport { isNilOrError, endsWith } from 'utils/helperUtils';\n\n// events\nimport {\n  signUpActiveStepChange$,\n  changeMetaData$,\n} from 'components/SignUpIn/events';\n\n// context\nimport { PreviousPathnameContext } from 'context';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors, fontSizes } from 'utils/styleUtils';\n\nconst Container = styled.main`\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  background: ${colors.background};\n  position: relative;\n\n  ${media.biggerThanMaxTablet`\n    min-height: calc(\n      100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n    );\n  `}\n\n  ${media.smallerThanMaxTablet`\n    min-height: calc(100vh - ${(props) => props.theme.mobileMenuHeight}px - ${(\n    props\n  ) => props.theme.mobileTopBarHeight}px);\n  `}\n`;\n\nconst Section = styled.div`\n  flex: 1;\n`;\n\nconst Left = styled(Section)`\n  display: none;\n\n  ${media.biggerThanMaxTablet`\n    display: block;\n  `}\n`;\n\nconst Banner = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 50px;\n  padding-top: 58px;\n  padding-left: 70px;\n  position: relative;\n  background: #fff;\n`;\n\nconst Slogan = styled.div`\n  width: 100%;\n  max-width: 400px;\n  color: ${(props) => props.theme.colorMain || '#333'};\n  font-size: ${fontSizes.xxxxl}px;\n  line-height: 44px;\n  font-weight: 600;\n`;\n\nconst Right = styled(Section)``;\n\nconst RightInner = styled.div`\n  width: 100%;\n  max-width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 60px;\n  padding-bottom: 60px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  ${media.smallerThanMaxTablet`\n    padding-top: 35px;\n  `}\n`;\n\nexport interface DataProps {\n  authUser: GetAuthUserChildProps;\n  locale: GetLocaleChildProps;\n  previousPathName: string | null;\n}\n\nexport interface Props extends DataProps, WithRouterProps {}\n\nconst SignUpPage = ({\n  authUser,\n  location,\n  previousPathName,\n}: Props): ReactElement => {\n  const { pathname } = location;\n  const flow = endsWith(pathname, 'sign-in') ? 'signin' : 'signup';\n\n  const [metaData, setMetaData] = useState<ISignUpInMetaData | undefined>({\n    flow,\n    pathname,\n    inModal: false,\n  });\n\n  const isLoggedIn =\n    !isNilOrError(authUser) && authUser.attributes.registration_completed_at;\n\n  if (isLoggedIn) {\n    clHistory.replace(previousPathName || '/');\n  }\n\n  useEffect(() => {\n    const subscriptions = [\n      signUpActiveStepChange$.subscribe(() => {\n        window.scrollTo(0, 0);\n      }),\n      changeMetaData$.subscribe(({ eventValue: metaData }) => {\n        setMetaData(metaData);\n      }),\n    ];\n    return () => {\n      subscriptions.forEach((subscription) => subscription.unsubscribe());\n    };\n  }, []);\n\n  const onSignUpInCompleted = () => {\n    clHistory.push(previousPathName || '/');\n  };\n\n  return (\n    <>\n      <SignUpInPageMeta />\n\n      <Container id=\"e2e-sign-up-in-page\">\n        <Left>\n          <Banner>\n            <Slogan>\n              <FormattedMessage {...messages.slogan} />\n            </Slogan>\n          </Banner>\n        </Left>\n        <Right>\n          <RightInner>\n            {metaData && (\n              <SignUpIn\n                metaData={metaData}\n                onSignUpInCompleted={onSignUpInCompleted}\n              />\n            )}\n            <Outlet id=\"app.components.SignUpIn.metaData\" metaData={metaData} />\n          </RightInner>\n        </Right>\n      </Container>\n    </>\n  );\n};\n\nconst SignUpPageWithHoC = withRouter(SignUpPage);\n\nconst Data = adopt<DataProps, WithRouterProps>({\n  authUser: <GetAuthUser />,\n  locale: <GetLocale />,\n  previousPathName: ({ render }) => (\n    <PreviousPathnameContext.Consumer>\n      {render as any}\n    </PreviousPathnameContext.Consumer>\n  ),\n});\n\nexport default (inputProps: WithRouterProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <SignUpPageWithHoC {...inputProps} {...dataProps} />}\n  </Data>\n);\n"],"sourceRoot":""}