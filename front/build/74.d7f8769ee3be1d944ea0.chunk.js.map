{"version":3,"sources":["webpack:///./app/modules/commercial/tagging/hooks/useTagSuggestions.ts","webpack:///./app/modules/commercial/tagging/services/pendingTasks.ts","webpack:///./app/modules/commercial/tagging/hooks/useTags.ts","webpack:///./app/modules/commercial/tagging/admin/containers/ProcessingRow.tsx","webpack:///./app/modules/commercial/tagging/admin/containers/index.tsx","webpack:///./app/modules/commercial/tagging/hooks/useTaggings.ts","webpack:///./node_modules/react-select/async-creatable/dist/react-select.esm.js","webpack:///./app/modules/commercial/tagging/admin/containers/PostPreview.tsx","webpack:///./app/components/PostShowComponents/Body.tsx","webpack:///./app/hooks/useKeyPress.ts","webpack:///./app/modules/commercial/tagging/admin/containers/TagWrapper.tsx","webpack:///./app/modules/commercial/tagging/services/taggings.ts","webpack:///./app/resources/GetIdeas.tsx","webpack:///./app/modules/commercial/tagging/admin/containers/EmptyState.tsx","webpack:///./app/modules/commercial/tagging/services/tags.ts","webpack:///./app/modules/commercial/tagging/hooks/usePendingTasks.ts","webpack:///./app/components/UI/GoBackButton/messages.ts","webpack:///./app/modules/commercial/tagging/admin/containers/IdeaContent.tsx","webpack:///./app/modules/commercial/tagging/utils/tagUtils.ts","webpack:///./app/modules/commercial/tagging/admin/containers/IdeasTable.tsx","webpack:///./app/modules/commercial/tagging/hooks/useTag.ts","webpack:///./app/components/UI/Table/index.tsx","webpack:///./app/modules/commercial/tagging/admin/containers/AutotagView.tsx","webpack:///./app/modules/commercial/tagging/messages.ts","webpack:///./app/modules/commercial/tagging/admin/containers/TagSearch.tsx","webpack:///./node_modules/react-select/creatable/dist/react-select.esm.js","webpack:///./app/components/UI/GoBackButton/index.tsx"],"names":["ideaIdsParam","projectIdsParam","useState","undefined","tagSuggestions","setTagSuggestions","ideaIds","setIdeaIds","onIdeasChange","useCallback","ideas","projectIds","setProjectIds","onProjectsChange","useEffect","subscription","tagSuggestionsStream","queryParameters","idea_ids","projects","observable","subscribe","response","data","unsubscribe","streamParams","streams","get","apiEndpoint","API_PATH","tags","setTags","search","setSearch","onSearchChange","tagsStream","length","isNilOrError","Container","styled","tr","bgColor","StyledCheckbox","Checkbox","StyledTagWrapper","TagWrapper","StyledSpinner","Spinner","TagContainer","td","ContentTitle","div","fontSizes","base","addTagMessage","FormattedMessage","messages","addTag","ProcessingRow","memo","idea","selected","onSelect","className","openPreview","highlighted","rowRef","taggings","isManualTaggingMode","processing","contentTitle","omitBy","attributes","title_multiloc","value","isNil","isEmpty","localize","handleOnChecked","_event","preventDefault","trackEventByName","action","context","id","handleClick","stopPropagation","sortTagsByMethod","taggingA","assignment_method","ideaTaggings","useMemo","filter","tagging","idea_id","sort","rgba","colors","adminTextColor","onClick","ref","key","checked","onChange","map","isAutoTag","isSelected","tagId","tag_id","color","size","Tag","onTagClick","icon","text","injectIntl","props","theme","menuHeight","StyledModal","Modal","ButtonRow","FilterSectionTransitionWrapper","LeftPanelContainer","stylingConsts","FilterSection","StyledActions","StyledFilterSelector","FilterSelector","KeyboardShortcuts","borderRadius","clBlueDarkBg","xs","WarningTitle","h2","large","WarningMessage","projectMessage","selectProject","cancelMessage","cancel","continueMessage","continue","Processing","tenant","locale","changeTagsProjectFilter","projectList","setProjectList","exporting","setExporting","selectedProjectIds","setSelectedProjectIds","unprocessedItemsIds","processingRemainingItemsCount","showAutotagView","setShowAutotagView","confirmationModalOpen","setConfirmationModalOpen","selectedRows","setSelectedRows","previewPostId","setPreviewPostId","projectsList","filterSelectorValues","project","process_type","includes","participation_method","handleExportSelectedIdeasAsXlsx","selectionParam","requestBlob","blob","saveAs","reportError","handleCloseAutotagView","e","handleCloseConfirmationModal","closeView","CSSTransition","in","mountOnEnter","unmountOnExit","classNames","timeout","appear","enter","exit","title","name","values","newProjectIds","multipleSelectionAllowed","autotaggingProcessing","remainingItems","Button","buttonStyle","cancelGenerate","disabled","some","ideaId","autotag","export","placement","content","upAndDownArrow","returnKey","escapeKey","hideOnClick","keyboardShortcuts","projectFilterIds","reason","opened","close","noClose","closeOnClickOutside","textColor","autotagOverwriteAlert","autotagOverwriteExplanation","Data","adopt","render","publicationStatuses","filterCanModerate","ProcessingWithIntl","inputProps","dataProps","setTaggings","subscriptions","taggingStream","forEach","sub","SelectCreatable","SelectCreatableState","AsyncCreatable","adminSeparation","Navigation","StyledNavButton","TagSection","TagSubSection","TagList","StyledValidationError","p","PostPreview","setState","postId","onClose","newTag","direction","handleNavigation","tag","find","isTagUnused","addTagging","taggingId","deleteTagging","switchToManual","state","getAutomaticTaggings","Promise","reject","tagText","isTagValid","getTagValidation","intl","prevProps","this","setTimeout","manualTaggings","getManualTaggings","manualTags","el","automaticTaggings","iconSize","handleNavigationClick","approveAutoTags","addExistingTag","getUnusedTags","tagIdea","addNewTag","filteredOutTags","onAddSelect","handleSelectExistingFromTagSearch","onAddNew","addTaggingCreateTag","onType","validateTag","handlePreventNavigation","tagValidationErrorMessage","PureComponent","body","translateButtonClicked","postType","windowSize","useTheme","smallerThanSmallTablet","windowWidth","viewportWidths","smallTablet","colorText","fontSize","fontWeight","outletComponents","dangerouslySetInnerHTML","__html","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","tagProps","tagIds","add","tag_ids","fetchAllWith","delete","tagAttributes","tag_attributes","update","GetIdeas","pageNumber","pageSize","phase","phaseId","author","authorId","topics","areas","idea_status","ideaStatusId","publication_status","publicationStatus","project_publication_status","projectPublicationStatus","bounding_box","boundingBox","assignee","feedback_needed","feedbackNeeded","queryParamsShaped","propsToQueryParamsShape","Object","keys","isArray","inputPropsQueryParameters","loadingMore","queryParameters$","next","ideaStatus","ideaFilters","paramsToOmit","defaultQueryParameters","getQueryParametersFromProps","omit","getQueryParameters","list","hasMore","querying","sortAttribute","getSortAttribute","sortDirection","getSortDirection","currentPage","lastPage","BehaviorSubject","startAccumulatorValue","pipe","distinctUntilChanged","prev","isEqual","type","switchMap","oldPageNumber","newPageNumber","mini","ideasMiniStream","ideasStream","getPageNumberFromUrl","links","self","last","mergeScan","acc","newQueryParameters","oldQueryParamsWithoutPageNumber","cloneDeep","newQueryParamsWithoutPageNumber","isLoadingMore","selfLink","lastLink","isString","unionBy","_prevState","children","prevPropsWithoutChildren","nextPropsWithoutChildren","onLoadMore","loadMore","onChangePage","handleChangePage","onChangeProjects","handleProjectsOnChange","onChangePhase","handlePhaseOnChange","onChangeSearchTerm","handleSearchOnChange","onChangeSorting","handleSortOnChange","onChangeTopics","handleTopicsOnChange","onChangeAreas","handleAreasOnchange","onChangeStatus","handleStatusOnChange","onChangePublicationStatus","handlePublicationStatusOnChange","onChangeProjectPublicationStatus","handleProjectPublicationStatusOnChange","onChangeAssignee","handleAssigneeOnChange","onChangeFeedbackFilter","handleFeedbackFilterOnChange","onIdeaFiltering","handleIdeaFiltering","onResetParams","handleResetParamsToProps","React","Component","NoUsersPage","xl","clIconAccent","Icon","noInputInThisProject","pickInputCollection","pendingTasks","setPendingTasks","setProcessing","setUnprocessedgItemsIds","pendingTasksStream","tasks","Set","flatMap","task","relationships","relObj","timer","_","of","defineMessages","goBack","defaultMessage","Content","StyledBody","Body","StyledTitle","Title","IdeaContent","body_multiloc","removeTagging","IdeaContentWithHOCs","wordCount","split","n","PostPreviewTransitionWrapper","TableWrapper","StyledTable","Table","small","IdeasTable","ideaList","setIdeaList","loadingIdeas","setLoadingIdeas","isNavigationPrevented","setIsNavigationPrevented","highlightedId","setHighlightedId","upArrow","downArrow","enterTaggingViewKey","exitTaggingViewKey","useRef","current","scrollIntoView","navigate","handleOnSelectAll","newSelectedRows","item","newIndex","ideaIndex","findIndex","handleRowOnSelect","selectedItemId","concat","indeterminate","items","totalCount","selectedCount","IdeasTableWithIntl","setTag","tagStream","table","clBlue","darken","cellSpacing","cellPadding","Left","Right","adminBorder","Row","StyledSubtitle","StyledInput","Input","SuggestionList","ExistingTagList","StyledTag","StyledIcon","TagAssignationButton","TabsContainer","Tab","adminSecondaryTextColor","addTagInputKeyPress","setNewTag","selectedTagsList","setSelectedTagsList","newTagsList","setNewTagsList","isValidTag","setIsValidTag","activeTab","setActiveTab","handleAddNewTag","handleAddExistingTag","handleSetActiveTab","tab","tagsToAssign","tagAssignationExplanation","index","removedTagID","event","tempTagList","deletedTagIndex","splice","removedTag","automaticallyAssign","generateTaggings","then","catch","suggestedTags","existingTags","suggestedTag","existingTag","suggestion","noSuggestions","suggestionLoading","selectedTag","pleaseSelectAProject","addSmartTag","helpTooltipText","description","proposedBudgetTitle","createTag","pendingTagText","SelectGroupsContainer","StyledAsyncSelectCreatable","AsyncSelectCreatable","TagSearch","selection","setSelection","loading","setLoading","searchInput","setSearchInput","loadOptions","inputValue","callback","first","options","outTag","label","handleOnChange","handleOnNewTag","isDropdownIconHidden","isNonEmptyString","menuPlacement","isMulti","cacheOptions","defaultOptions","isLoading","isDisabled","formatCreateLabel","formatMessage","styles","selectStyles","onCreateOption","isValidNewOption","isValidInput","noOptionsMessage","autoFocus","components","DropdownIndicator","compareOption","arguments","option","accessors","candidate","String","toLowerCase","optionValue","getOptionValue","optionLabel","getOptionLabel","builtins","selectValue","selectOptions","getNewOptionData","__isNew__","defaultProps","allowCreateWhileLoading","createOptionPosition","makeCreatableSelect","SelectComponent","_class","_temp","_Component","Creatable","_super","_this","call","select","newValue","actionMeta","_this$props","newOption","valueArray","Array","newOptionData","newActionMeta","focus","blur","_this2","createElement","_ref","GoBackButton","padding"],"mappings":"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","file":"74.d7f8769ee3be1d944ea0.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { ITagSuggestion, tagSuggestionsStream } from '../services/tags';\n\nexport default function useTagSuggestions(\n  ideaIdsParam: string[] | null,\n  projectIdsParam: string[] | null = null\n) {\n  const [tagSuggestions, setTagSuggestions] = useState<\n    ITagSuggestion[] | null | undefined\n  >(undefined);\n\n  const [ideaIds, setIdeaIds] = useState<string[] | null | undefined>(\n    ideaIdsParam\n  );\n\n  const onIdeasChange = useCallback((ideas: string[]) => {\n    setIdeaIds([...ideas]);\n  }, []);\n\n  const [projectIds, setProjectIds] = useState<string[] | null>(\n    projectIdsParam\n  );\n\n  const onProjectsChange = useCallback((ideas: string[]) => {\n    setProjectIds([...ideas]);\n  }, []);\n\n  useEffect(() => {\n    const observable = tagSuggestionsStream({\n      queryParameters: {\n        idea_ids: ideaIds,\n        projects: projectIds,\n      },\n    }).observable;\n\n    const subscription = observable.subscribe((response) => {\n      setTagSuggestions(response ? response.data : response);\n    });\n\n    return () => subscription.unsubscribe();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ideaIds]);\n\n  return { tagSuggestions, onIdeasChange, onProjectsChange };\n}\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\n\nexport interface IPendingTask {\n  id: string;\n  type: 'tagging';\n  relationships: {\n    ideas: { data: { id: string }[] };\n    tags: { data: { id: string }[] };\n  };\n}\nexport type IPendingTasksData = { data: IPendingTask[] };\n\nexport function pendingTasksStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IPendingTasksData>({\n    apiEndpoint: `${API_PATH}/pending_tasks`,\n    ...streamParams,\n  });\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport { ITag, tagsStream } from '../services/tags';\nimport { isNilOrError } from 'utils/helperUtils';\n\nexport interface IUseTag {\n  tags: ITag[] | null | undefined;\n  onIdeasChange: (ideas: string[]) => void;\n  onSearchChange: (search: string) => void;\n}\n\nexport default function useTags(\n  ideaIdsParam = null as string[] | null,\n  projectIdsParam = null as string[] | null\n) {\n  const [tags, setTags] = useState<ITag[] | null | undefined>(undefined);\n\n  const [ideaIds, setIdeaIds] = useState<string[] | null>(ideaIdsParam);\n  const [projectIds, setProjectIds] = useState<string[] | null>(\n    projectIdsParam\n  );\n\n  const onIdeasChange = useCallback((ideas: string[]) => {\n    setIdeaIds([...ideas]);\n  }, []);\n\n  const onProjectsChange = useCallback((projects: string[]) => {\n    setProjectIds([...projects]);\n  }, []);\n\n  const [search, setSearch] = useState<string | null>();\n\n  const onSearchChange = useCallback((search: string) => {\n    setSearch(search);\n  }, []);\n\n  useEffect(() => {\n    const observable = tagsStream({\n      queryParameters: {\n        search,\n        ...(ideaIds?.length && ideaIds?.length > 0\n          ? { idea_ids: ideaIds }\n          : {}),\n        ...(projectIds?.length && projectIds?.length > 0\n          ? { projects: projectIds }\n          : {}),\n      },\n    }).observable;\n\n    const subscription = observable.subscribe((response) => {\n      setTags(!isNilOrError(response) ? response.data : null);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [ideaIds, search, projectIds]);\n\n  return { tags, onIdeasChange, onProjectsChange, onSearchChange };\n}\n","import React, { memo, useMemo, useCallback, RefObject } from 'react';\nimport { omitBy, isNil, isEmpty } from 'lodash-es';\n\n// components\nimport { Checkbox, Spinner, Tag } from 'cl2-component-library';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../messages';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { rgba } from 'polished';\n\n// typings\nimport { IIdeaData } from 'services/ideas';\nimport { Multiloc } from 'typings';\n\n// hooks\nimport useLocalize from 'hooks/useLocalize';\nimport { ITagging } from '../../services/taggings';\nimport TagWrapper from './TagWrapper';\nimport { trackEventByName } from 'utils/analytics';\n\nconst Container = styled.tr<{ bgColor: string }>`\n  background: ${({ bgColor }) => bgColor};\n  :hover {\n    background-color: #ebedef;\n  }\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin-top: -4px;\n`;\nconst StyledTagWrapper = styled(TagWrapper)`\n  cursor: default;\n  margin-right: 4px;\n`;\n\nconst StyledSpinner = styled(Spinner)`\n  display: inline-flex;\n  width: auto;\n  margin: 4px;\n`;\n\nconst TagContainer = styled.td`\n  display: flex;\n  align-items: center;\n`;\n\nconst ContentTitle = styled.div`\n  padding-left: 10px;\n  display: inline-block;\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\ninterface Props {\n  idea: IIdeaData;\n  selected: boolean;\n  highlighted: boolean;\n  onSelect: (ideaId: string) => void;\n  className?: string;\n  openPreview: (id: string) => void;\n  rowRef?: RefObject<any>;\n  taggings: ITagging[];\n  isManualTaggingMode: boolean;\n  processing: boolean;\n}\n\nconst addTagMessage = <FormattedMessage {...messages.addTag} />;\n\nconst ProcessingRow = memo<Props & InjectedIntlProps>(\n  ({\n    idea,\n    selected,\n    onSelect,\n    className,\n    openPreview,\n    highlighted,\n    rowRef,\n    taggings,\n    isManualTaggingMode,\n    processing,\n  }) => {\n    const contentTitle = omitBy(\n      idea.attributes.title_multiloc,\n      (value) => isNil(value) || isEmpty(value)\n    ) as Multiloc;\n\n    const localize = useLocalize();\n\n    const bgColor = () => {\n      if (highlighted) return rgba(colors.adminTextColor, 0.3);\n      else if (selected) return rgba(colors.adminTextColor, 0.1);\n      return '#fff';\n    };\n\n    const handleOnChecked = useCallback(\n      (_event: React.ChangeEvent | React.MouseEvent) => {\n        _event.preventDefault();\n        trackEventByName('Processing Table Row', {\n          action: 'selected one row',\n          context: `${isManualTaggingMode ? 'tagging view' : 'filter view'}`,\n        });\n        onSelect(idea.id);\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [onSelect]\n    );\n\n    const handleClick = useCallback(\n      (_event: React.ChangeEvent | React.MouseEvent) => {\n        _event.preventDefault();\n        _event.stopPropagation();\n        trackEventByName('Processing Table Row', {\n          action: 'clicked on idea title',\n        });\n        openPreview(idea.id);\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [openPreview]\n    );\n\n    const sortTagsByMethod = (taggingA: ITagging) => {\n      switch (taggingA.attributes.assignment_method) {\n        case 'automatic':\n          return 1;\n        case 'manual':\n          return -1;\n      }\n    };\n\n    const ideaTaggings = useMemo(() => {\n      return taggings\n        .filter((tagging) => tagging.attributes.idea_id === idea.id)\n        .sort(sortTagsByMethod);\n    }, [taggings, idea]);\n\n    return (\n      <Container\n        className={className}\n        bgColor={bgColor()}\n        onClick={handleOnChecked}\n        ref={rowRef}\n        key={idea.id}\n      >\n        {!isManualTaggingMode && (\n          <td className=\"checkbox\">\n            <StyledCheckbox checked={selected} onChange={handleOnChecked} />\n          </td>\n        )}\n\n        <td className=\"title\">\n          <ContentTitle onClick={handleClick}>\n            {localize(contentTitle)}\n          </ContentTitle>\n        </td>\n        {!isManualTaggingMode && ideaTaggings && (\n          <TagContainer className=\"tags\">\n            {ideaTaggings.map((tagging) => (\n              <StyledTagWrapper\n                isAutoTag={tagging.attributes.assignment_method === 'automatic'}\n                isSelected={selected}\n                tagId={tagging.attributes.tag_id}\n                key={tagging.attributes.tag_id}\n              />\n            ))}\n            {processing && <StyledSpinner color=\"#666\" size=\"20px\" />}\n            {highlighted && ideaTaggings.length === 0 && (\n              <Tag\n                isAutoTag={true}\n                isSelected={selected}\n                onTagClick={handleClick}\n                icon={'plus-circle'}\n                text={addTagMessage}\n              />\n            )}\n          </TagContainer>\n        )}\n      </Container>\n    );\n  }\n);\n\nexport default injectIntl(ProcessingRow);\n","import React, { memo, useState, useEffect, FormEvent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { requestBlob } from 'utils/request';\nimport { API_PATH } from 'containers/App/constants';\nimport { reportError } from 'utils/loggingUtils';\nimport { saveAs } from 'file-saver';\n\n// components\nimport AutotagView from './AutotagView';\nimport { fontSizes, Spinner, Button } from 'cl2-component-library';\nimport Modal from 'components/UI/Modal';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../messages';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\n\n// styling\nimport styled from 'styled-components';\nimport { stylingConsts, colors } from 'utils/styleUtils';\n\n// typings\nimport { adopt } from 'react-adopt';\n\n// hooks & res\nimport GetProjects, { GetProjectsChildProps } from 'resources/GetProjects';\nimport FilterSelector, {\n  IFilterSelectorValue,\n} from 'components/FilterSelector';\nimport useLocalize from 'hooks/useLocalize';\nimport useLocale from 'hooks/useLocale';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport { CSSTransition } from 'react-transition-group';\nimport useTags from '../../hooks/useTags';\nimport Tippy from '@tippyjs/react';\nimport QuillEditedContent from 'components/UI/QuillEditedContent';\nimport FeatureFlag from 'components/FeatureFlag';\nimport IdeasTable from './IdeasTable';\nimport useTaggings from '../../hooks/useTaggings';\nimport EmptyState from './EmptyState';\nimport { cancelGenerate } from '../../services/taggings';\nimport usePendingTasks from '../../hooks/usePendingTasks';\n\nconst Container = styled.div`\n  height: calc(100vh - ${(props) => props.theme.menuHeight}px);\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n`;\n\nconst StyledSpinner = styled(Spinner)`\n  margin: auto;\n`;\n\nconst StyledModal = styled(Modal)`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  > * {\n    margin-left: 12px;\n  }\n`;\n\nconst FilterSectionTransitionWrapper = styled.div`\n  &.slide-enter {\n    transform: translateX(-400%);\n\n    &.slide-enter-active {\n      transition: 1000ms;\n      transform: translateX(0%);\n    }\n  }\n\n  &.slide-exit {\n    transition: 1000ms;\n    transform: translateX(0%);\n\n    &.slide-exit-active {\n      transform: translateX(-400%);\n    }\n  }\n`;\n\nconst LeftPanelContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 36px 18px;\n  position: sticky;\n  top: ${stylingConsts.menuHeight}px;\n  height: calc(100vh - ${stylingConsts.menuHeight}px);\n  max-width: 150px;\n  z-index: 100;\n  background-color: #f9f9fa;\n`;\n\nconst FilterSection = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledActions = styled.div`\n  > * {\n    margin-top: 10px;\n  }\n`;\n\nconst StyledFilterSelector = styled(FilterSelector)`\n  &:not(:last-child) {\n    margin-right: 0px;\n  }\n  margin-bottom: 15px;\n`;\n\nconst KeyboardShortcuts = styled.div`\n  height: auto;\n  display: flex;\n  align-items: center;\n  padding: 5px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  background: ${colors.clBlueDarkBg};\n  font-size: ${fontSizes.xs}px;\n`;\n\nexport const WarningTitle = styled.h2`\n  font-size: ${fontSizes.large}px !important;\n  margin-right: 20px !important;\n`;\nexport const WarningMessage = styled.div`\n  margin-bottom: 20px !important;\n`;\n\ninterface DataProps {\n  projects: GetProjectsChildProps;\n}\n\ninterface InputProps {\n  className?: string;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst projectMessage = <FormattedMessage {...messages.selectProject} />;\nconst cancelMessage = <FormattedMessage {...messages.cancel} />;\nconst continueMessage = <FormattedMessage {...messages.continue} />;\n\nconst Processing = memo<Props & InjectedIntlProps>(\n  ({ className, projects }) => {\n    const localize = useLocalize();\n    const tenant = useAppConfiguration();\n    const locale = useLocale();\n\n    const { tags, onProjectsChange: changeTagsProjectFilter } = useTags();\n\n    const { taggings } = useTaggings();\n\n    const [projectList, setProjectList] = useState<\n      IFilterSelectorValue[] | null\n    >(null);\n\n    const [exporting, setExporting] = useState<boolean>(false);\n\n    const [selectedProjectIds, setSelectedProjectIds] = useState<string[]>([]);\n\n    const {\n      processing,\n      unprocessedItemsIds,\n      processingRemainingItemsCount,\n    } = usePendingTasks();\n\n    const [showAutotagView, setShowAutotagView] = useState<boolean>(false);\n    const [confirmationModalOpen, setConfirmationModalOpen] = useState<boolean>(\n      false\n    );\n\n    const [selectedRows, setSelectedRows] = useState<string[]>([]);\n    const [previewPostId, setPreviewPostId] = useState<string | null>(null);\n\n    useEffect(() => {\n      if (\n        !isNilOrError(projects) &&\n        !isNilOrError(projects.projectsList) &&\n        projects.projectsList?.length > 0 &&\n        tenant &&\n        locale\n      ) {\n        const filterSelectorValues = [\n          ...projects.projectsList\n            .filter(\n              (project) =>\n                project.attributes.process_type === 'timeline' ||\n                !['information', 'survey', 'volunteering', null].includes(\n                  project.attributes.participation_method\n                )\n            )\n            .map((project) => ({\n              text: localize(project.attributes.title_multiloc),\n              value: project.id,\n            })),\n        ];\n        setProjectList(filterSelectorValues);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [projects, tenant, locale]);\n\n    const handleExportSelectedIdeasAsXlsx = async () => {\n      trackEventByName('Filter View', { action: 'Clicked Export Button' });\n      try {\n        setExporting(true);\n        const selectionParam =\n          selectedRows.length > 100\n            ? { project: selectedProjectIds[0] }\n            : { ideas: selectedRows };\n        const blob = await requestBlob(\n          `${API_PATH}/ideas/as_xlsx_with_tags`,\n          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n          selectionParam\n        );\n        saveAs(blob, 'inputs-export.xlsx');\n\n        setExporting(false);\n      } catch (error) {\n        reportError(error);\n        setExporting(false);\n      }\n    };\n\n    const getIdeaTaggings = (id: string | null) => {\n      if (!isNilOrError(taggings)) {\n        return taggings.filter((tagging) => tagging.attributes.idea_id === id);\n      }\n\n      return [];\n    };\n\n    const handleAutoTag = (e: FormEvent) => {\n      e.preventDefault();\n      trackEventByName('Filter View', { action: 'Clicked Autotag Button' });\n      selectedRows.some((ideaId) =>\n        getIdeaTaggings(ideaId).some(\n          (tagging) => tagging.attributes.assignment_method === 'automatic'\n        )\n      )\n        ? setConfirmationModalOpen(true)\n        : setShowAutotagView(true);\n    };\n    const handleCancelAutoTag = (e: FormEvent) => {\n      e.preventDefault();\n      trackEventByName('Filter View', {\n        action: 'Clicked Cancel Autotag Button',\n      });\n      cancelGenerate();\n    };\n\n    const handleCloseAutotagView = (e?: FormEvent) => {\n      e?.preventDefault();\n      trackEventByName('Autotag View', { action: 'go back' });\n      setShowAutotagView(false);\n    };\n\n    const handleConfirmAutotag = (e?: FormEvent) => {\n      e?.preventDefault();\n      trackEventByName('Autotag Confirmation Modal', { action: 'continue' });\n      setConfirmationModalOpen(false);\n      setShowAutotagView(true);\n    };\n\n    const handleCloseConfirmationModal = (e?: FormEvent) => {\n      e?.preventDefault();\n      trackEventByName('Autotag Confirmation Modal', { action: 'cancel' });\n      setConfirmationModalOpen(false);\n    };\n\n    const handleProjectIdsChange = (newProjectIds: string[]) => {\n      setSelectedRows([]);\n      setSelectedProjectIds(newProjectIds);\n      changeTagsProjectFilter(newProjectIds);\n      trackEventByName('Filter View', {\n        action: 'changed projects',\n      });\n    };\n\n    if (\n      projectList === undefined ||\n      locale === undefined ||\n      tags === undefined\n    ) {\n      return <StyledSpinner />;\n    }\n\n    if (\n      isNilOrError(projectList) ||\n      isNilOrError(locale) ||\n      isNilOrError(tags)\n    ) {\n      return null;\n    }\n\n    if (!showAutotagView) {\n      return (\n        <Container className={className}>\n          <CSSTransition\n            in={!previewPostId}\n            mountOnEnter={true}\n            unmountOnExit={true}\n            classNames=\"slide\"\n            timeout={{\n              appear: 500,\n              enter: 300,\n              exit: 500,\n            }}\n          >\n            <FilterSectionTransitionWrapper>\n              <LeftPanelContainer>\n                <FilterSection>\n                  <StyledFilterSelector\n                    title={projectMessage}\n                    name={'Projects'}\n                    values={projectList}\n                    onChange={handleProjectIdsChange}\n                    multipleSelectionAllowed={false}\n                    selected={selectedProjectIds}\n                  />\n\n                  <StyledActions>\n                    <FeatureFlag name=\"automatic_tagging\">\n                      {!processing ? (\n                        <Button\n                          buttonStyle=\"admin-dark\"\n                          disabled={selectedRows.length === 0}\n                          locale={locale}\n                          onClick={handleAutoTag}\n                        >\n                          <FormattedMessage {...messages.autotag} />\n                        </Button>\n                      ) : (\n                        <>\n                          <div>\n                            <FormattedMessage\n                              {...messages.autotaggingProcessing}\n                              values={{\n                                remainingItems: processingRemainingItemsCount,\n                              }}\n                            />\n                          </div>\n                          <Button\n                            locale={locale}\n                            buttonStyle=\"admin-dark\"\n                            onClick={handleCancelAutoTag}\n                          >\n                            <FormattedMessage {...messages.cancel} />\n                          </Button>\n                        </>\n                      )}\n                    </FeatureFlag>\n\n                    <Button\n                      buttonStyle=\"admin-dark-outlined\"\n                      disabled={selectedRows.length === 0}\n                      processing={exporting}\n                      onClick={handleExportSelectedIdeasAsXlsx}\n                      locale={locale}\n                    >\n                      <FormattedMessage {...messages.export} />\n                    </Button>\n                  </StyledActions>\n                </FilterSection>\n                <Tippy\n                  placement=\"top\"\n                  content={\n                    <ul>\n                      <li>\n                        <FormattedMessage {...messages.upAndDownArrow} />\n                      </li>\n                      <li>\n                        <FormattedMessage {...messages.returnKey} />\n                      </li>\n                      <li>\n                        <FormattedMessage {...messages.escapeKey} />\n                      </li>\n                    </ul>\n                  }\n                  theme=\"light\"\n                  hideOnClick={true}\n                >\n                  <KeyboardShortcuts>\n                    <FormattedMessage {...messages.keyboardShortcuts} />\n                  </KeyboardShortcuts>\n                </Tippy>\n              </LeftPanelContainer>\n            </FilterSectionTransitionWrapper>\n          </CSSTransition>\n          {selectedProjectIds.length > 0 ? (\n            <IdeasTable\n              projectFilterIds={selectedProjectIds}\n              previewPostId={previewPostId}\n              setPreviewPostId={setPreviewPostId}\n              selectedRows={selectedRows}\n              setSelectedRows={setSelectedRows}\n              tags={tags}\n              taggings={taggings}\n              unprocessedItemsIds={unprocessedItemsIds}\n            />\n          ) : (\n            <EmptyState reason=\"projectSelection\" />\n          )}\n          <StyledModal\n            opened={confirmationModalOpen}\n            close={handleCloseConfirmationModal}\n            noClose={true}\n            closeOnClickOutside={true}\n          >\n            <QuillEditedContent textColor={colors.adminTextColor}>\n              <WarningTitle>\n                <FormattedMessage {...messages.autotagOverwriteAlert} />\n              </WarningTitle>\n              <WarningMessage>\n                <FormattedMessage {...messages.autotagOverwriteExplanation} />\n              </WarningMessage>\n              <ButtonRow>\n                <Button\n                  locale={locale}\n                  buttonStyle=\"admin-dark-outlined\"\n                  onClick={handleCloseConfirmationModal}\n                  text={cancelMessage}\n                />\n                <Button\n                  locale={locale}\n                  buttonStyle=\"admin-dark\"\n                  onClick={handleConfirmAutotag}\n                  text={continueMessage}\n                />\n              </ButtonRow>\n            </QuillEditedContent>\n          </StyledModal>\n        </Container>\n      );\n    }\n    if (showAutotagView) {\n      if (selectedRows.length > 100) {\n        return (\n          <AutotagView\n            closeView={handleCloseAutotagView}\n            selectedProjectIds={selectedProjectIds}\n          />\n        );\n      }\n      return (\n        <AutotagView\n          closeView={handleCloseAutotagView}\n          selectedRows={selectedRows}\n        />\n      );\n    } else return null;\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  projects: ({ render }) => {\n    return (\n      <GetProjects\n        publicationStatuses={['published', 'archived', 'draft']}\n        filterCanModerate={true}\n        sort=\"new\"\n      >\n        {render}\n      </GetProjects>\n    );\n  },\n});\n\nconst ProcessingWithIntl = injectIntl(Processing);\n\nexport default (inputProps: InputProps) => {\n  return (\n    <Data {...inputProps}>\n      {(dataProps) => <ProcessingWithIntl {...inputProps} {...dataProps} />}\n    </Data>\n  );\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { ITagging, taggingStream } from '../services/taggings';\nimport { isNilOrError } from 'utils/helperUtils';\n\nexport default function useTaggings() {\n  const [taggings, setTaggings] = useState<\n    ITagging[] | null | undefined | Error\n  >(undefined);\n\n  const [ideaIds, setIdeaIds] = useState<string[] | null | undefined>([]);\n\n  const onIdeasChange = useCallback((ideas: string[]) => {\n    setIdeaIds([...ideas]);\n  }, []);\n\n  useEffect(() => {\n    const taggingObservable = taggingStream({\n      queryParameters: {\n        idea_ids: ideaIds,\n      },\n    }).observable;\n\n    const subscriptions = [\n      taggingObservable.subscribe((taggings) => {\n        setTaggings(isNilOrError(taggings) ? taggings : taggings.data);\n      }),\n    ];\n\n    return () => subscriptions.forEach((sub) => sub.unsubscribe());\n  }, [ideaIds]);\n\n  return { taggings, onIdeasChange };\n}\n","import { makeAsyncSelect } from '../../async/dist/react-select.esm.js';\nimport { makeCreatableSelect } from '../../creatable/dist/react-select.esm.js';\nimport { m as manageState } from '../../dist/stateManager-845a3300.esm.js';\nimport { S as Select } from '../../dist/Select-dbb12e54.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/defineProperty';\nimport '../../dist/index-4bd03571.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/typeof';\nimport 'react-input-autosize';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport 'react';\nimport 'react-dom';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport 'memoize-one';\n\nvar SelectCreatable = makeCreatableSelect(Select);\nvar SelectCreatableState = manageState(SelectCreatable);\nvar AsyncCreatable = makeAsyncSelect(SelectCreatableState);\n\nexport default AsyncCreatable;\n","import React, { PureComponent } from 'react';\nimport Tippy from '@tippyjs/react';\n\n// components\nimport IdeaContent from './IdeaContent';\nimport { Button, Spinner } from 'cl2-component-library';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes, stylingConsts } from 'utils/styleUtils';\n\n// typings\nimport { ManagerType } from 'components/admin/PostManager';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport messages from '../../messages';\nimport {\n  addTagging,\n  deleteTagging,\n  switchToManual,\n  ITagging,\n} from '../../services/taggings';\nimport TagSearch from './TagSearch';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { ITag } from '../../services/tags';\nimport { InjectedIntlProps } from 'react-intl';\nimport TagWrapper from './TagWrapper';\nimport { trackEventByName } from 'utils/analytics';\nimport { getTagValidation } from '../../utils/tagUtils';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: sticky;\n  top: ${stylingConsts.menuHeight}px;\n  align-items: flex-start;\n  height: calc(100vh - ${stylingConsts.menuHeight}px);\n  width: 60vw;\n  padding: 15px 0px 15px 15px;\n  border-left: 1px solid ${colors.adminSeparation};\n  > * {\n    padding: 0 15px;\n  }\n`;\n\nconst Navigation = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: calc(100vh - ${stylingConsts.menuHeight}px - 30px);\n  align-items: center;\n  width: 36px;\n`;\n\nconst StyledNavButton = styled(Button)`\n  max-width: 8px;\n  margin: 2px;\n  button {\n    padding: 8px 12px !important;\n  }\n`;\nconst TagSection = styled.div`\n  height: calc(100vh - ${stylingConsts.menuHeight}px - 30px);\n  overflow-y: auto;\n  flex: 3;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  position: sticky;\n  top: ${stylingConsts.menuHeight}px;\n  align-items: space-between;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  line-height: 19px;\n  min-width: 20%;\n  border-left: 1px solid ${colors.adminSeparation};\n`;\n\nconst TagSubSection = styled.div`\n  margin: 12px 0px;\n  &.manualTag {\n    flex: 2 7 auto;\n    max-height: auto;\n    overflow-y: auto;\n  }\n  &.smartTag {\n    flex: 1;\n  }\n`;\n\nexport const TagList = styled.div`\n  display: inline-block;\n  margin: 0px 10px 10px 0px;\n  max-height: auto;\n`;\n\nconst StyledTagWrapper = styled(TagWrapper)`\n  height: 24px;\n  font-weight: 500;\n  margin: 0px 4px 4px 0px;\n  width: fit-content;\n  > * {\n    font-size: ${fontSizes.large}px;\n    align-self: center;\n    line-height: 14px;\n    > * {\n      height: 14px;\n    }\n  }\n`;\n\nconst StyledValidationError = styled.p`\n  visibility: hidden;\n  &.show {\n    visibility: visible;\n  }\n`;\n\nconst StyledSpinner = styled(Spinner)`\n  display: inline-flex;\n  width: auto;\n  margin: 4px;\n`;\n\ninterface DataProps {}\n\ntype Direction = 'up' | 'down';\ninterface InputProps {\n  type: ManagerType;\n  onClose: () => void;\n  postId: string | null;\n  taggings: ITagging[] | null;\n  handleNavigation: (direction: Direction) => void;\n  tags: ITag[] | null | undefined;\n  handlePreventNavigation: (isNavigationPrevented: boolean) => void;\n  processing: boolean;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  postId: string | null;\n  newTag: string | null;\n  isTagValid: boolean;\n}\n\nclass PostPreview extends PureComponent<Props & InjectedIntlProps, State> {\n  constructor(props: Props & InjectedIntlProps) {\n    super(props);\n    this.state = {\n      postId: props.postId,\n      newTag: null,\n      isTagValid: true,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.postId !== this.props.postId && this.props.postId) {\n      setTimeout(() => this.setState({ postId: this.props.postId }), 200);\n    }\n  }\n\n  onClose = () => {\n    this.setState({ postId: null });\n    this.props.onClose();\n  };\n\n  handleTagInput = (newTag: string) => {\n    this.setState({\n      newTag,\n    });\n  };\n\n  handleNavigationClick = (direction: Direction) => (_event) => {\n    _event.preventDefault();\n    this.props.handleNavigation(direction);\n    trackEventByName('Manual Tagging', {\n      action: `clicked ${direction} button`,\n    });\n  };\n\n  getManualTaggings = (taggings: ITagging[]) =>\n    taggings.filter(\n      (tagging) => tagging.attributes.assignment_method === 'manual'\n    );\n\n  getAutomaticTaggings = (taggings: ITagging[]) =>\n    taggings.filter(\n      (tagging) => tagging.attributes.assignment_method === 'automatic'\n    );\n\n  getUnusedTags = (tags: ITag[], taggings: ITagging[]) => {\n    const isTagUnused = (taggings: ITagging[], tag: ITag) => {\n      const isTagUsed = taggings?.find(\n        (tagging) => tagging.attributes.tag_id === tag.id\n      );\n      return !isTagUsed;\n    };\n    const unusedTags = tags.filter((tag) => isTagUnused(taggings, tag));\n    return unusedTags;\n  };\n\n  tagIdea = (tagId) => () => {\n    const postId = this.props.postId;\n    postId && addTagging(postId, tagId);\n    trackEventByName('Manual Tagging', {\n      action: 'added existing tag to an idea',\n    });\n  };\n\n  removeTagging = (taggingId) => () => {\n    deleteTagging(taggingId);\n    trackEventByName('Manual Tagging', {\n      action: 'removed tag from an idea',\n    });\n  };\n\n  switchToManual = (taggingId) => () => {\n    switchToManual(taggingId);\n    trackEventByName('Manual Tagging', { action: 'added auto tag to idea' });\n  };\n\n  handleSelectExistingFromTagSearch = (tagId: string) => {\n    const { postId } = this.state;\n    const tagging =\n      this.props.taggings &&\n      this.getAutomaticTaggings(this.props.taggings).find(\n        (tagging) => tagging.attributes.tag_id === tagId\n      );\n\n    trackEventByName('Manual Tagging', {\n      action: 'selected existing tag from text input',\n    });\n\n    if (postId) {\n      return tagging ? switchToManual(tagging.id) : addTagging(postId, tagId);\n    } else {\n      return Promise.reject();\n    }\n  };\n\n  addTaggingCreateTag = (tagText: string) => {\n    const isTagValid = getTagValidation(tagText);\n    this.setState({ isTagValid });\n\n    const { locale } = this.props.intl;\n    const title_multiloc = {};\n    title_multiloc[locale] = tagText;\n\n    trackEventByName('Manual Tagging', {\n      action: 'created and assigned tag',\n    });\n\n    return this.state.postId && isTagValid\n      ? addTagging(this.state.postId, null, { title_multiloc })\n      : Promise.reject();\n  };\n\n  validateTag = (isTagValid: boolean) => {\n    this.setState({ isTagValid });\n  };\n\n  render() {\n    const { taggings, tags, processing } = this.props;\n    const manualTaggings = isNilOrError(taggings)\n      ? []\n      : this.getManualTaggings(taggings);\n\n    const manualTags = manualTaggings\n      .map(\n        (tagging) =>\n          tags && tags.find((tag) => tag.id === tagging.attributes.tag_id)\n      )\n      .filter((el) => el) as ITag[];\n    const automaticTaggings = isNilOrError(taggings)\n      ? []\n      : this.getAutomaticTaggings(taggings);\n\n    return (\n      <Container>\n        <Navigation>\n          <StyledNavButton\n            locale={'en'}\n            icon={'close'}\n            onClick={this.onClose}\n            iconSize={'8px'}\n            buttonStyle={'admin-dark-outlined'}\n          />\n          <Tippy\n            placement=\"top\"\n            content={\n              <ul>\n                <li>\n                  <FormattedMessage {...messages.upAndDownArrow} />\n                </li>\n                <li>\n                  <FormattedMessage {...messages.returnKey} />\n                </li>\n                <li>\n                  <FormattedMessage {...messages.escapeKey} />\n                </li>\n              </ul>\n            }\n            theme=\"light\"\n            hideOnClick={true}\n          >\n            <div>\n              <StyledNavButton\n                iconSize={'8px'}\n                locale={'en'}\n                icon={'chevron-up'}\n                buttonStyle={'admin-dark-outlined'}\n                onClick={this.handleNavigationClick('up')}\n              />\n              <StyledNavButton\n                iconSize={'8px'}\n                locale={'en'}\n                icon={'chevron-down'}\n                buttonStyle={'admin-dark-outlined'}\n                onClick={this.handleNavigationClick('down')}\n              />\n            </div>\n          </Tippy>\n        </Navigation>\n\n        {this.state.postId && (\n          <>\n            <IdeaContent\n              ideaId={this.state.postId}\n              manualTaggings={manualTaggings}\n            />\n            <TagSection>\n              <TagSubSection className={'smartTag'}>\n                <h4>\n                  <FormattedMessage {...messages.approveAutoTags} />\n                </h4>\n                {(automaticTaggings.length > 0 || processing) && (\n                  <TagList>\n                    {automaticTaggings.map((tagging) => (\n                      <StyledTagWrapper\n                        key={tagging.id}\n                        onTagClick={this.switchToManual(tagging.id)}\n                        icon=\"plus-circle\"\n                        isAutoTag={true}\n                        isSelected={false}\n                        tagId={tagging.attributes.tag_id}\n                      />\n                    ))}\n                    {processing && <StyledSpinner color=\"#666\" size=\"20px\" />}\n                  </TagList>\n                )}\n              </TagSubSection>\n              {!isNilOrError(tags) && !isNilOrError(taggings) && (\n                <TagSubSection className={'manualTag'}>\n                  <h4>\n                    <FormattedMessage {...messages.addExistingTag} />\n                  </h4>\n                  <TagList>\n                    {tags.length > 0 &&\n                      this.getUnusedTags(tags, taggings).map((tag) => (\n                        <StyledTagWrapper\n                          key={tag.id}\n                          tagId={tag.id}\n                          onTagClick={this.tagIdea(tag.id)}\n                          icon=\"plus-circle\"\n                          isAutoTag={false}\n                          isSelected={false}\n                        />\n                      ))}\n                  </TagList>\n                </TagSubSection>\n              )}\n              <TagSubSection className={'tagSearch'}>\n                <h4>\n                  <FormattedMessage {...messages.addNewTag} />\n                </h4>\n\n                <TagSearch\n                  filteredOutTags={manualTags}\n                  onAddSelect={this.handleSelectExistingFromTagSearch}\n                  onAddNew={this.addTaggingCreateTag}\n                  onType={this.validateTag}\n                  handlePreventNavigation={this.props.handlePreventNavigation}\n                />\n              </TagSubSection>\n              <StyledValidationError\n                className={`${!this.state.isTagValid && 'show'}`}\n              >\n                <FormattedMessage {...messages.tagValidationErrorMessage} />\n              </StyledValidationError>\n            </TagSection>\n          </>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default injectIntl(PostPreview);\n","import React, { memo } from 'react';\nimport useWindowSize from 'hooks/useWindowSize';\n\n// components\nimport QuillEditedContent from 'components/UI/QuillEditedContent';\n\n// typings\nimport { Locale } from 'typings';\n\n// styling\nimport styled, { useTheme } from 'styled-components';\nimport { viewportWidths } from 'utils/styleUtils';\nimport Outlet from 'components/Outlet';\n\nconst Container = styled.div``;\n\ninterface Props {\n  postId: string;\n  body: string;\n  locale: Locale;\n  translateButtonClicked?: boolean;\n  className?: string;\n  postType: 'idea' | 'initiative';\n  color?: string;\n}\n\nconst Body = memo<Props>(\n  ({\n    postId,\n    body,\n    locale,\n    translateButtonClicked,\n    className,\n    postType,\n    color,\n  }) => {\n    const windowSize = useWindowSize();\n    const theme: any = useTheme();\n    const smallerThanSmallTablet = windowSize\n      ? windowSize.windowWidth <= viewportWidths.smallTablet\n      : false;\n\n    return (\n      <Container id={`e2e-${postType}-description`} className={className}>\n        <QuillEditedContent\n          textColor={color || theme.colorText}\n          fontSize={smallerThanSmallTablet ? 'base' : 'large'}\n          fontWeight={400}\n        >\n          <div aria-live=\"polite\">\n            <Outlet\n              id=\"app.components.PostShowComponents.Body.translation\"\n              postId={postId}\n              locale={locale}\n              postType={postType}\n              body={body}\n              translateButtonClicked={translateButtonClicked}\n            >\n              {(outletComponents) =>\n                outletComponents.length > 0 ? (\n                  <>{outletComponents}</>\n                ) : (\n                  <span dangerouslySetInnerHTML={{ __html: body }} />\n                )\n              }\n            </Outlet>\n          </div>\n        </QuillEditedContent>\n      </Container>\n    );\n  }\n);\n\nexport default Body;\n","import { useState, useEffect } from 'react';\n\n// Hook\nconst useKeyPress = (targetKey: string) => {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import React, { memo } from 'react';\n\n// components\nimport { Tag } from 'cl2-component-library';\n\nimport useLocalize from 'hooks/useLocalize';\nimport useTag from '../../hooks/useTag';\n\ntype TagProps = React.ComponentProps<typeof Tag>;\n\ninterface Props extends Omit<TagProps, 'text'> {\n  tagId: string;\n}\n\nexport default memo<Props>(({ tagId, ...tagProps }) => {\n  const localize = useLocalize();\n\n  const { tag } = useTag(tagId);\n  if (tag) {\n    return (\n      <Tag\n        {...tagProps}\n        key={tagId}\n        text={localize(tag.attributes.title_multiloc)}\n      />\n    );\n  }\n\n  return null;\n});\n","import { API_PATH } from 'containers/App/constants';\nimport { Multiloc } from 'typings';\nimport { isNilOrError } from 'utils/helperUtils';\nimport streams, { IStreamParams } from 'utils/streams';\n\nexport interface ITagging {\n  id: string;\n  type: 'tagging';\n  attributes: {\n    assignment_method: 'automatic' | 'manual';\n    confidence_score: number;\n    tag_id: string;\n    idea_id: string;\n  };\n}\nexport type ITaggingsData = { data: ITagging[] };\n\nexport async function generateTaggings(ideaIds, tagIds, tags, projectIds) {\n  const response = await streams.add(`${API_PATH}/taggings/generate`, {\n    tags,\n    idea_ids: ideaIds,\n    tag_ids: tagIds,\n    projects: projectIds,\n  });\n  await streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/taggings`,\n      `${API_PATH}/tags`,\n      `${API_PATH}/pending_tasks`,\n    ],\n  });\n  return response;\n}\n\nexport async function cancelGenerate() {\n  const response = await streams.delete(`${API_PATH}/taggings/generate`, '');\n  await streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/taggings`,\n      `${API_PATH}/tags`,\n      `${API_PATH}/pending_tasks`,\n    ],\n  });\n  return response;\n}\n\nexport function taggingStream(streamParams: IStreamParams | null = null) {\n  return streams.get<ITaggingsData>({\n    apiEndpoint: `${API_PATH}/taggings`,\n    ...streamParams,\n  });\n}\n\nexport async function addTagging(\n  ideaId: string,\n  tagId: string | null,\n  tagAttributes: { title_multiloc: Multiloc } | null = null\n) {\n  const response = await streams.add<{ data: ITagging }>(\n    `${API_PATH}/taggings`,\n    {\n      idea_id: ideaId,\n      tag_id: tagId,\n      tag_attributes: tagAttributes,\n    }\n  );\n  await streams.fetchAllWith({\n    apiEndpoint: [`${API_PATH}/tags`],\n  });\n  return !isNilOrError(response) ? response.data : (response as Error);\n}\n\nexport async function deleteTagging(taggingId: string) {\n  const response = await streams.delete(\n    `${API_PATH}/taggings/${taggingId}`,\n    taggingId\n  );\n  await streams.fetchAllWith({\n    apiEndpoint: [`${API_PATH}/tags`],\n  });\n  return response;\n}\n\nexport async function switchToManual(taggingId: string) {\n  const response = await streams.update(\n    `${API_PATH}/taggings/${taggingId}`,\n    taggingId,\n    { assignment_method: 'manual' }\n  );\n\n  return response;\n}\n","import React from 'react';\nimport {\n  get,\n  isString,\n  isEqual,\n  omit,\n  cloneDeep,\n  omitBy,\n  isNil,\n  isArray,\n  unionBy,\n} from 'lodash-es';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport {\n  map,\n  distinctUntilChanged,\n  mergeScan,\n  switchMap,\n} from 'rxjs/operators';\nimport {\n  ideasStream,\n  IIdeaData,\n  IdeaPublicationStatus,\n  ideasMiniStream,\n} from 'services/ideas';\nimport { PublicationStatus as ProjectPublicationStatus } from 'services/projects';\nimport {\n  getPageNumberFromUrl,\n  getSortAttribute,\n  getSortDirection,\n  SortDirection,\n} from 'utils/paginationUtils';\n\nexport type SortAttribute =\n  | 'new'\n  | 'trending'\n  | 'popular'\n  | 'author_name'\n  | 'upvotes_count'\n  | 'downvotes_count'\n  | 'baskets_count'\n  | 'status';\nexport type Sort =\n  | 'random'\n  | 'new'\n  | '-new'\n  | 'trending'\n  | '-trending'\n  | 'popular'\n  | '-popular'\n  | 'author_name'\n  | '-author_name'\n  | 'upvotes_count'\n  | '-upvotes_count'\n  | 'downvotes_count'\n  | '-downvotes_count'\n  | 'baskets_count'\n  | '-baskets_count'\n  | 'status'\n  | '-status';\ntype PublicationStatus = IdeaPublicationStatus;\n\nexport interface InputProps {\n  type: 'load-more' | 'paginated';\n  pageNumber?: number;\n  pageSize?: number;\n  projectIds?: string[] | 'all';\n  phaseId?: string;\n  authorId?: string;\n  sort?: Sort;\n  search?: string;\n  topics?: string[];\n  areas?: string[];\n  ideaStatusId?: string;\n  publicationStatus?: PublicationStatus;\n  projectPublicationStatus?: ProjectPublicationStatus;\n  boundingBox?: number[];\n  assignee?: string;\n  feedbackNeeded?: boolean;\n  // prop mini Gets stripped down ideas containing only title, should never be cached,\n  // and is not tested in all scenarios, but improves performance drastically.\n  mini?: boolean;\n}\n\nexport interface IQueryParameters {\n  'page[number]': number;\n  'page[size]': number;\n  projects: string[] | undefined | null;\n  phase: string | undefined | null;\n  author: string | undefined | null;\n  sort: Sort;\n  search: string | undefined | null;\n  topics: string[] | undefined | null;\n  areas: string[] | undefined | null;\n  idea_status: string | undefined | null;\n  publication_status: PublicationStatus | undefined | null;\n  project_publication_status: ProjectPublicationStatus | undefined | null;\n  bounding_box: number[] | undefined | null;\n  assignee: string | undefined | null;\n  feedback_needed: boolean | undefined | null;\n}\n\ninterface IAccumulator {\n  ideas: IIdeaData[] | null;\n  queryParameters: IQueryParameters;\n  hasMore: boolean;\n}\n\ntype children = (renderProps: GetIdeasChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: (obj: GetIdeasChildProps) => JSX.Element | null;\n}\n\nexport type GetIdeasChildProps = State & {\n  onLoadMore: () => void;\n  onChangePage: (pageNumber: number) => void;\n  onChangeProjects: (projectIds: string[]) => void;\n  onChangePhase: (phaseId: string) => void;\n  onChangeSearchTerm: (search: string) => void;\n  onChangeSorting: (sort: Sort) => void;\n  onChangeTopics: (topics: string[]) => void;\n  onChangeAreas: (areas: string[]) => void;\n  onChangeStatus: (ideaStatus: string | null) => void;\n  onChangePublicationStatus: (publicationStatus: PublicationStatus) => void;\n  onChangeProjectPublicationStatus: (\n    ProjectPublicationStatus: ProjectPublicationStatus\n  ) => void;\n  onChangeAssignee: (assignee: string | undefined) => void;\n  onChangeFeedbackFilter: (feedbackNeeded: boolean) => void;\n  onIdeaFiltering: (partialQueryParameters: Partial<IQueryParameters>) => void;\n  onResetParams: (paramsToOmit?: (keyof IQueryParameters)[]) => void;\n  type: 'ideas';\n};\n\ninterface State {\n  queryParameters: IQueryParameters;\n  list: IIdeaData[] | undefined | null;\n  hasMore: boolean;\n  querying: boolean;\n  loadingMore: boolean;\n  sortAttribute: SortAttribute;\n  sortDirection: SortDirection;\n  currentPage: number;\n  lastPage: number;\n}\n\nexport default class GetIdeas extends React.Component<Props, State> {\n  defaultQueryParameters: IQueryParameters;\n  queryParameters$: BehaviorSubject<IQueryParameters>;\n  subscriptions: Subscription[];\n\n  static defaultProps = {\n    pageNumber: 1,\n    pageSize: 12,\n    sort: 'random',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.defaultQueryParameters = {\n      'page[number]': props.pageNumber as number,\n      'page[size]': props.pageSize as number,\n      sort: props.sort as Sort,\n      projects: undefined,\n      phase: undefined,\n      author: undefined,\n      search: undefined,\n      topics: undefined,\n      areas: undefined,\n      idea_status: undefined,\n      publication_status: undefined,\n      project_publication_status: undefined,\n      bounding_box: undefined,\n      assignee: undefined,\n      feedback_needed: undefined,\n    };\n    const queryParameters = this.getQueryParameters(\n      this.defaultQueryParameters,\n      props\n    );\n    this.state = {\n      // defaults\n      queryParameters,\n      list: undefined,\n      hasMore: false,\n      querying: true,\n      loadingMore: false,\n      sortAttribute: getSortAttribute<Sort, SortAttribute>(props.sort as Sort),\n      sortDirection: getSortDirection<Sort>(props.sort as Sort),\n      currentPage: 1,\n      lastPage: 1,\n    };\n    this.queryParameters$ = new BehaviorSubject(queryParameters);\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    const queryParameters = this.getQueryParameters(\n      this.state.queryParameters,\n      this.props\n    );\n    const startAccumulatorValue: IAccumulator = {\n      queryParameters,\n      ideas: null,\n      hasMore: false,\n    };\n    const queryParameters$ = this.queryParameters$.pipe(\n      distinctUntilChanged((prev, next) => isEqual(prev, next))\n    );\n\n    if (!this.props.type || this.props.type === 'load-more') {\n      this.subscriptions = [\n        queryParameters$\n          .pipe(\n            mergeScan<IQueryParameters, IAccumulator>(\n              (acc, newQueryParameters) => {\n                const oldQueryParamsWithoutPageNumber = omit(\n                  cloneDeep(acc.queryParameters),\n                  'page[number]'\n                );\n                const newQueryParamsWithoutPageNumber = omit(\n                  cloneDeep(newQueryParameters),\n                  'page[number]'\n                );\n                const oldPageNumber = acc.queryParameters['page[number]'];\n                const newPageNumber = newQueryParameters['page[number]'];\n                const isLoadingMore =\n                  isEqual(\n                    oldQueryParamsWithoutPageNumber,\n                    newQueryParamsWithoutPageNumber\n                  ) && oldPageNumber !== newPageNumber;\n                const pageNumber = isLoadingMore\n                  ? newQueryParameters['page[number]']\n                  : 1;\n                const queryParameters: IQueryParameters = {\n                  ...newQueryParameters,\n                  'page[number]': pageNumber,\n                };\n\n                this.setState({\n                  querying: !isLoadingMore,\n                  loadingMore: isLoadingMore,\n                });\n\n                const stream = this.props.mini ? ideasMiniStream : ideasStream;\n\n                return stream({ queryParameters }).observable.pipe(\n                  map((ideas) => {\n                    const selfLink = get(ideas, 'links.self');\n                    const lastLink = get(ideas, 'links.last');\n                    const hasMore =\n                      isString(selfLink) &&\n                      isString(lastLink) &&\n                      selfLink !== lastLink;\n\n                    return {\n                      queryParameters,\n                      hasMore,\n                      ideas: !isLoadingMore\n                        ? ideas.data\n                        : unionBy(acc.ideas || [], ideas.data, 'id'),\n                    };\n                  })\n                );\n              },\n              startAccumulatorValue\n            )\n          )\n          .subscribe(({ ideas, queryParameters, hasMore }) => {\n            this.setState({\n              queryParameters,\n              hasMore,\n              list: ideas,\n              querying: false,\n              loadingMore: false,\n            });\n          }),\n      ];\n    } else {\n      this.subscriptions = [\n        queryParameters$\n          .pipe(\n            switchMap((queryParameters) => {\n              const oldPageNumber = this.state.queryParameters['page[number]'];\n              const newPageNumber = queryParameters['page[number]'];\n              queryParameters['page[number]'] =\n                newPageNumber !== oldPageNumber ? newPageNumber : 1;\n\n              const stream = this.props.mini ? ideasMiniStream : ideasStream;\n\n              return stream({\n                queryParameters,\n              }).observable.pipe(map((ideas) => ({ queryParameters, ideas })));\n            })\n          )\n          .subscribe(({ ideas, queryParameters }) => {\n            this.setState({\n              queryParameters,\n              list: ideas ? ideas.data : null,\n              querying: false,\n              loadingMore: false,\n              sortAttribute: getSortAttribute<Sort, SortAttribute>(\n                queryParameters.sort\n              ),\n              sortDirection: getSortDirection<Sort>(queryParameters.sort),\n              currentPage: getPageNumberFromUrl(ideas.links.self) || 1,\n              lastPage: getPageNumberFromUrl(ideas.links.last) || 1,\n            });\n          }),\n      ];\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, _prevState: State) {\n    const { children: _prevChildren, ...prevPropsWithoutChildren } = prevProps;\n    const { children: _nextChildren, ...nextPropsWithoutChildren } = this.props;\n\n    if (!isEqual(prevPropsWithoutChildren, nextPropsWithoutChildren)) {\n      const queryParameters = this.getQueryParameters(\n        this.state.queryParameters,\n        this.props\n      );\n      this.queryParameters$.next(queryParameters);\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  propsToQueryParamsShape = () => ({\n    projects: this.props.projectIds,\n    'page[number]': this.props.pageNumber as number,\n    'page[size]': this.props.pageSize as number,\n    phase: this.props.phaseId,\n    author: this.props.authorId,\n    sort: this.props.sort as Sort,\n    topics: this.props.topics,\n    areas: this.props.areas,\n    idea_status: this.props.ideaStatusId,\n    publication_status: this.props.publicationStatus,\n    project_publication_status: this.props.projectPublicationStatus,\n    bounding_box: this.props.boundingBox,\n    assignee: this.props.assignee,\n    feedback_needed: this.props.feedbackNeeded,\n    search: undefined,\n  });\n\n  getQueryParametersFromProps = () => {\n    const queryParamsShaped = this.propsToQueryParamsShape();\n    Object.keys(queryParamsShaped)\n      .filter((key) => queryParamsShaped[key] === null)\n      .forEach((key) => (queryParamsShaped[key] = undefined));\n    return queryParamsShaped as IQueryParameters; // legal because last line changes null values to undefined\n  };\n\n  getQueryParameters = (queryParameters: IQueryParameters, props: Props) => {\n    let projects: string[] | undefined | null = undefined;\n\n    if (isNil(props.projectIds)) {\n      projects = queryParameters.projects;\n    } else if (isArray(props.projectIds)) {\n      projects = props.projectIds;\n    }\n\n    const inputPropsQueryParameters: IQueryParameters = {\n      projects,\n      'page[number]': props.pageNumber as number,\n      'page[size]': props.pageSize as number,\n      phase: props.phaseId,\n      author: props.authorId,\n      sort: props.sort as Sort,\n      search: props.search,\n      topics: props.topics,\n      areas: props.areas,\n      idea_status: props.ideaStatusId,\n      publication_status: props.publicationStatus,\n      project_publication_status: props.projectPublicationStatus,\n      bounding_box: props.boundingBox,\n      assignee: props.assignee,\n      feedback_needed: props.feedbackNeeded,\n    };\n\n    // Omit all queryParameters that are nil.\n    // Why do this? Because we assume that an input prop that's nil is an input prop that should be ignored,\n    // and not overwrite a none-nil value that's part of this.state.queryParameters.\n    return {\n      ...queryParameters,\n      ...omitBy(inputPropsQueryParameters, isNil),\n      // Make an exception for 'projects', because when it's undefined we don't want to ignore it but instead pass it along\n      // to let the request know we don't want to apply a projects filter but load the ideas for all projects\n      projects,\n    };\n  };\n\n  loadMore = () => {\n    if (!this.state.loadingMore) {\n      this.queryParameters$.next({\n        ...this.state.queryParameters,\n        'page[number]': this.state.queryParameters['page[number]'] + 1,\n      });\n    }\n  };\n\n  handleChangePage = (pageNumber: number) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      'page[number]': pageNumber,\n    });\n  };\n\n  handlePhaseOnChange = (phaseId: string) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      phase: phaseId,\n      'page[number]': 1,\n    });\n  };\n\n  handleSearchOnChange = (search: string) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      search: search ? search : undefined,\n      'page[number]': 1,\n    });\n  };\n\n  handleSortOnChange = (sort: Sort) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      sort,\n      'page[number]': 1,\n    });\n  };\n\n  handleProjectsOnChange = (projects: string[]) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      projects,\n      'page[number]': 1,\n    });\n  };\n\n  handleTopicsOnChange = (topics: string[]) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      topics,\n      'page[number]': 1,\n    });\n  };\n\n  handleAreasOnchange = (areas: string[]) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      areas,\n      'page[number]': 1,\n    });\n  };\n\n  handleStatusOnChange = (ideaStatus: string | null) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      idea_status: ideaStatus || undefined,\n      'page[number]': 1,\n    });\n  };\n\n  handlePublicationStatusOnChange = (publicationStatus: PublicationStatus) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      publication_status: publicationStatus,\n      'page[number]': 1,\n    });\n  };\n\n  handleProjectPublicationStatusOnChange = (\n    projectPublicationStatus: ProjectPublicationStatus\n  ) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      project_publication_status: projectPublicationStatus,\n      'page[number]': 1,\n    });\n  };\n\n  handleAssigneeOnChange = (assignee: string | undefined) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      assignee,\n      'page[number]': 1,\n    });\n  };\n\n  handleFeedbackFilterOnChange = (feedbackNeeded: boolean) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      feedback_needed: feedbackNeeded || undefined,\n      'page[number]': 1,\n    });\n  };\n\n  handleIdeaFiltering = (ideaFilters: Partial<IQueryParameters>) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      ...ideaFilters,\n      'page[number]': 1,\n    });\n  };\n\n  handleResetParamsToProps = (paramsToOmit?: (keyof IQueryParameters)[]) => {\n    const defaultQueryParameters = this.getQueryParametersFromProps();\n\n    if (paramsToOmit && paramsToOmit.length > 0) {\n      this.queryParameters$.next({\n        ...this.state.queryParameters,\n        ...omit(defaultQueryParameters, paramsToOmit),\n      });\n    } else {\n      this.queryParameters$.next(defaultQueryParameters);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return (children as children)({\n      ...this.state,\n      onLoadMore: this.loadMore,\n      onChangePage: this.handleChangePage,\n      onChangeProjects: this.handleProjectsOnChange,\n      onChangePhase: this.handlePhaseOnChange,\n      onChangeSearchTerm: this.handleSearchOnChange,\n      onChangeSorting: this.handleSortOnChange,\n      onChangeTopics: this.handleTopicsOnChange,\n      onChangeAreas: this.handleAreasOnchange,\n      onChangeStatus: this.handleStatusOnChange,\n      onChangePublicationStatus: this.handlePublicationStatusOnChange,\n      onChangeProjectPublicationStatus: this\n        .handleProjectPublicationStatusOnChange,\n      onChangeAssignee: this.handleAssigneeOnChange,\n      onChangeFeedbackFilter: this.handleFeedbackFilterOnChange,\n      onIdeaFiltering: this.handleIdeaFiltering,\n      onResetParams: this.handleResetParamsToProps,\n      type: 'ideas',\n    });\n  }\n}\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\n\nimport messages from '../../messages';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport { Icon } from 'cl2-component-library';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\nconst NoUsersPage = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  align-items: center;\n  font-size: ${fontSizes.xl}px;\n  font-weight: bold;\n  line-height: 25px;\n  padding-top: 80px;\n  svg {\n    margin-bottom: 20px;\n    height: 70px;\n    fill: ${colors.clIconAccent};\n  }\n`;\n\ninterface Props {\n  reason: 'noIdeas' | 'projectSelection';\n}\n\nconst NoUsers = memo(({ reason }: Props) => {\n  if (reason === 'noIdeas') {\n    return (\n      <NoUsersPage>\n        <Icon name=\"search\" />\n        <FormattedMessage {...messages.noInputInThisProject} />\n      </NoUsersPage>\n    );\n  }\n\n  return (\n    <NoUsersPage>\n      <Icon name=\"blankPage\" />\n      <FormattedMessage {...messages.pickInputCollection} />\n    </NoUsersPage>\n  );\n});\n\nexport default NoUsers;\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { Multiloc } from 'typings';\n\nexport interface ITag {\n  id: string;\n  attributes: {\n    title_multiloc: Multiloc;\n  };\n  type: 'tag';\n}\n\nexport interface ITagsData {\n  data: ITag[];\n}\n\nexport interface ITagSuggestion {\n  title_multiloc: Multiloc;\n}\n\nexport function tagSuggestionsStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<{ data: ITagSuggestion[] }>({\n    apiEndpoint: `${API_PATH}/tag_suggestions`,\n    ...streamParams,\n  });\n}\n\nexport function tagsStream(streamParams: IStreamParams | null = null) {\n  return streams.get<ITagsData>({\n    apiEndpoint: `${API_PATH}/tags`,\n    ...streamParams,\n  });\n}\nexport function tagStream(tagId: string) {\n  return streams.get<{ data: ITag }>({\n    apiEndpoint: `${API_PATH}/tags/${tagId}`,\n  });\n}\n\nexport async function updateTag(tagId: string, title_multiloc: Multiloc) {\n  const response = await streams.update(`${API_PATH}/tags/${tagId}`, tagId, {\n    title_multiloc,\n  });\n\n  await streams.fetchAllWith({\n    apiEndpoint: [`${API_PATH}/taggings`],\n  });\n\n  return response;\n}\n\nexport async function deleteTag(tagId: string) {\n  const response = await streams.delete(`${API_PATH}/tags/${tagId}`, tagId);\n\n  await streams.fetchAllWith({\n    apiEndpoint: [`${API_PATH}/taggings`],\n  });\n\n  return response;\n}\n","import { API_PATH } from 'containers/App/constants';\nimport { useState, useEffect } from 'react';\nimport { of, timer } from 'rxjs';\nimport { IPendingTask, pendingTasksStream } from '../services/pendingTasks';\nimport { isNilOrError } from 'utils/helperUtils';\nimport streams from 'utils/streams';\n\nexport interface IUsePendingTasks {\n  pendingTasks: IPendingTask[] | null | undefined;\n}\n\nexport default function usePendingTasks() {\n  const [pendingTasks, setPendingTasks] = useState<\n    IPendingTask[] | null | undefined\n  >(undefined);\n\n  const [processing, setProcessing] = useState(false);\n  const [unprocessedItemsIds, setUnprocessedgItemsIds] = useState<\n    string[] | null\n  >();\n\n  useEffect(() => {\n    const observable = pendingTasksStream().observable;\n\n    const subscriptions = [\n      observable.subscribe((response) => {\n        const tasks = !isNilOrError(response) ? response.data : null;\n        setPendingTasks(tasks);\n        if (tasks) {\n          const remainingItems = [\n            ...new Set(\n              tasks?.flatMap((task) =>\n                task.relationships.ideas.data.map((relObj) => relObj.id)\n              )\n            ),\n          ];\n          if (remainingItems.length > 0) {\n            setProcessing(true);\n            setUnprocessedgItemsIds(remainingItems);\n          } else {\n            setProcessing(false);\n            setUnprocessedgItemsIds(null);\n          }\n        }\n      }),\n      ...[\n        processing\n          ? timer(5000, 5000).subscribe((_) =>\n              streams.fetchAllWith({\n                apiEndpoint: [\n                  `${API_PATH}/taggings`,\n                  `${API_PATH}/tags`,\n                  `${API_PATH}/pending_tasks`,\n                ],\n              })\n            )\n          : of(null).subscribe(),\n      ],\n    ];\n\n    return () => subscriptions.forEach((sub) => sub.unsubscribe());\n  }, [processing]);\n\n  return {\n    pendingTasks,\n    processing,\n    unprocessedItemsIds,\n    processingRemainingItemsCount: unprocessedItemsIds?.length,\n  };\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  goBack: {\n    id: 'app.components.GoBackButton.group.edit.goBack',\n    defaultMessage: 'Go back',\n  },\n});\n","import React, { PureComponent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\n\n// components\nimport Title from 'components/PostShowComponents/Title';\nimport Body from 'components/PostShowComponents/Body';\nimport TagWrapper from './TagWrapper';\n\n// resources\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\n\n// i18n\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// style\nimport styled from 'styled-components';\nimport { stylingConsts, fontSizes, colors } from 'utils/styleUtils';\nimport { deleteTagging, ITagging } from '../../services/taggings';\nimport { trackEventByName } from 'utils/analytics';\n\nconst Content = styled.div`\n  width: 100%;\n  flex: 8;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst StyledTagWrapper = styled(TagWrapper)`\n  height: 24px;\n  font-weight: 500;\n  margin: 0px 4px 4px 0px;\n  width: fit-content;\n  > * {\n    font-size: ${fontSizes.large}px;\n    align-self: center;\n    line-height: 14px;\n    > * {\n      height: 14px;\n    }\n  }\n`;\n\nconst StyledBody = styled(Body)`\n  flex: 6;\n  overflow-y: auto;\n`;\n\nconst TagList = styled.div`\n  overflow-y: auto;\n  flex: 1;\n  margin-bottom: 20px;\n  min-height: 52px;\n  display: inline;\n  background-color: #f9f9fa;\n  border-radius: ${stylingConsts.borderRadius};\n  width: 100%;\n  padding: 12px;\n  & > * {\n    margin: 4px 4px 4px 4px;\n    width: fit-content;\n  }\n`;\n\nconst StyledTitle = styled(Title)`\n  flex: 1;\n  margin-top: 20px;\n`;\n\nexport interface InputProps {\n  ideaId: string | null;\n  manualTaggings: ITagging[];\n}\n\ninterface DataProps {\n  idea: GetIdeaChildProps;\n  tenant: GetAppConfigurationChildProps;\n  locale: GetLocaleChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nexport class IdeaContent extends PureComponent<\n  Props & InjectedLocalized & InjectedIntlProps\n> {\n  constructor(props) {\n    super(props);\n  }\n\n  removeTagging = (taggingId) => () => {\n    trackEventByName('Manual Tagging', {\n      action: 'removed tagging',\n    });\n    deleteTagging(taggingId);\n  };\n\n  render() {\n    const { idea, localize, tenant, locale, manualTaggings } = this.props;\n\n    return (\n      <Content>\n        {!isNilOrError(idea) && !isNilOrError(locale) && !isNilOrError(tenant) && (\n          <>\n            <StyledTitle\n              postId={idea.id}\n              postType=\"idea\"\n              title={localize(idea.attributes.title_multiloc)}\n              color={colors.adminTextColor}\n            />\n            <StyledBody\n              postId={idea.id}\n              postType=\"idea\"\n              body={localize(idea.attributes.body_multiloc)}\n              locale={locale}\n              color={colors.adminTextColor}\n            />\n            <TagList>\n              {manualTaggings.length > 0 &&\n                manualTaggings.map((tagging) => (\n                  <StyledTagWrapper\n                    key={tagging.id}\n                    onTagClick={this.removeTagging(tagging.id)}\n                    isAutoTag={false}\n                    isSelected={false}\n                    icon=\"close\"\n                    tagId={tagging.attributes.tag_id}\n                  />\n                ))}\n            </TagList>\n          </>\n        )}\n      </Content>\n    );\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  tenant: <GetAppConfiguration />,\n  locale: <GetLocale />,\n  idea: ({ ideaId, render }) => <GetIdea ideaId={ideaId}>{render}</GetIdea>,\n});\n\nconst IdeaContentWithHOCs = injectIntl(injectLocalize(IdeaContent));\n\nconst WrappedIdeaContent = (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeaContentWithHOCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n\nexport default WrappedIdeaContent;\n","import { isNilOrError } from 'utils/helperUtils';\n\nexport const getTagValidation = (tag: string) => {\n  if (tag.length < 2) {\n    return false;\n  } else {\n    const splitTag = tag;\n    const wordCount = splitTag.split(' ').filter((n) => {\n      return n !== '';\n    }).length;\n\n    return !isNilOrError(wordCount) && [1, 2].includes(wordCount);\n  }\n};\n","import React, {\n  memo,\n  useCallback,\n  useState,\n  useEffect,\n  useRef,\n  Dispatch,\n} from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { includes } from 'lodash-es';\n\n// components\nimport ProcessingRow from './ProcessingRow';\nimport { Checkbox, fontSizes, Spinner } from 'cl2-component-library';\nimport Table from 'components/UI/Table';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../messages';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\n\n// styling\nimport styled from 'styled-components';\n\n// typings\nimport { adopt } from 'react-adopt';\nimport GetIdeas, { GetIdeasChildProps } from 'resources/GetIdeas';\nimport { IIdeaData } from 'services/ideas';\nimport { ITagging } from '../../services/taggings';\n\n// hooks & res\nimport useKeyPress from 'hooks/useKeyPress';\nimport PostPreview from './PostPreview';\nimport { CSSTransition } from 'react-transition-group';\nimport { ITag } from '../../services/tags';\nimport EmptyState from './EmptyState';\n\nconst PostPreviewTransitionWrapper = styled.div`\n  &.slide-enter {\n    transform: translateX(100%);\n    opacity: 0;\n\n    &.slide-enter-active {\n      transition: 1000ms;\n      transform: translateX(0%);\n      opacity: 1;\n    }\n  }\n\n  &.slide-exit {\n    transition: 1000ms;\n    transform: translateX(0%);\n    opacity: 1;\n\n    &.slide-exit-active {\n      transform: translateX(100%);\n      opacity: 0;\n    }\n  }\n`;\n\nconst TableWrapper = styled.div`\n  flex: 1;\n  max-width: 100%;\n  background: white;\n  overflow-y: auto;\n  padding: 24px;\n`;\n\nconst StyledTable = styled(Table)`\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  text-decoration: none;\n  tbody tr td {\n    padding-top: 12px;\n    padding-bottom: 10px;\n  }\n  tbody tr {\n    border-radius: 3px;\n    border-bottom: 1px solid #eaeaea;\n  }\n\n  thead tr th {\n    font-size: ${fontSizes.xs}px;\n    height: 24px;\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n\n  th,\n  td {\n    text-align: left;\n    vertical-align: top;\n    min-width: 100px;\n\n    &.checkbox {\n      width: 70px;\n      padding-left: 8px;\n    }\n\n    &.content {\n      width: 50%;\n      padding-right: 25px;\n    }\n  }\n`;\n\nconst StyledSpinner = styled(Spinner)`\n  margin: auto;\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin-top: 0px;\n`;\n\ninterface DataProps {\n  ideas: GetIdeasChildProps;\n}\n\ninterface InputProps {\n  projectFilterIds: string[];\n  previewPostId: string | null;\n  setPreviewPostId: (string: string | null) => void;\n  selectedRows: string[];\n  setSelectedRows: Dispatch<React.SetStateAction<string[]>>;\n  tags: ITag[];\n  taggings: ITagging[] | null | undefined | Error;\n  unprocessedItemsIds: string[] | null | undefined;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst IdeasTable = memo<Props & InjectedIntlProps>(\n  ({\n    ideas,\n    previewPostId,\n    setPreviewPostId,\n    selectedRows,\n    setSelectedRows,\n    tags,\n    taggings,\n    unprocessedItemsIds,\n  }) => {\n    const [ideaList, setIdeaList] = useState<\n      IIdeaData[] | undefined | null | Error\n    >([]);\n\n    const [loadingIdeas, setLoadingIdeas] = useState<boolean>(false);\n    const [isNavigationPrevented, setIsNavigationPrevented] = useState<boolean>(\n      false\n    );\n\n    const [highlightedId, setHighlightedId] = useState<string | null>(null);\n\n    const upArrow = useKeyPress('ArrowUp');\n    const downArrow = useKeyPress('ArrowDown');\n    const enterTaggingViewKey = useKeyPress('Enter');\n    const exitTaggingViewKey = useKeyPress('Escape');\n\n    const rowRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (highlightedId && !isNilOrError(rowRef) && rowRef.current) {\n        rowRef.current.scrollIntoView(false);\n      }\n    }, [highlightedId]);\n\n    useEffect(() => {\n      if (upArrow) {\n        trackEventByName('Keyboard shorcut', { key: 'up' });\n        !isNavigationPrevented && navigate('up');\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [upArrow, ideaList]);\n\n    useEffect(() => {\n      if (downArrow) {\n        trackEventByName('Keyboard shorcut', { key: 'down' });\n        !isNavigationPrevented && navigate('down');\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [downArrow, ideaList]);\n\n    useEffect(() => {\n      if (\n        enterTaggingViewKey &&\n        !isNilOrError(ideaList) &&\n        ideaList.length > 0\n      ) {\n        trackEventByName('Keyboard shorcut', { key: 'enter' });\n        if (!highlightedId) {\n          setHighlightedId(ideaList[0].id);\n          setPreviewPostId(ideaList[0].id);\n        } else {\n          setPreviewPostId(highlightedId);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [enterTaggingViewKey, ideaList]);\n\n    useEffect(() => {\n      if (exitTaggingViewKey && ideaList) {\n        trackEventByName('Keyboard shorcut', { key: 'escape' });\n        setPreviewPostId(null);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [exitTaggingViewKey, ideaList]);\n\n    useEffect(() => {\n      setIdeaList(ideas.list);\n      setLoadingIdeas(ideas.querying);\n    }, [ideas]);\n\n    useEffect(() => {\n      if (!isNilOrError(ideaList) && ideaList.length > 0) {\n        setHighlightedId(ideaList[0].id);\n      }\n      if (loadingIdeas) {\n        setLoadingIdeas(false);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ideaList]);\n\n    const handleOnSelectAll = useCallback(\n      (_event: React.ChangeEvent) => {\n        if (!isNilOrError(ideaList)) {\n          const newSelectedRows =\n            selectedRows.length < ideaList.length\n              ? ideaList.map((item) => item.id)\n              : [];\n          trackEventByName('Idea Table', {\n            action: 'clicked on \"select all ideas\" checkbox',\n            context: `${previewPostId ? 'tagging view' : 'filter view'}`,\n          });\n          setSelectedRows(newSelectedRows);\n        }\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [ideaList, selectedRows]\n    );\n\n    const navigate = (direction: 'up' | 'down') => {\n      if (!isNilOrError(ideaList) && ideaList.length !== 0) {\n        if (!highlightedId && !previewPostId) {\n          setHighlightedId(ideaList[0].id);\n        } else {\n          const ideaIndex = ideaList.findIndex(\n            (idea) => idea.id === highlightedId\n          );\n\n          let newIndex;\n          if (direction === 'down') {\n            newIndex = ideaIndex === ideaList.length - 1 ? 0 : ideaIndex + 1;\n          }\n\n          if (direction === 'up') {\n            newIndex = ideaIndex === 0 ? ideaList.length - 1 : ideaIndex - 1;\n          }\n\n          setHighlightedId(ideaList[newIndex].id);\n\n          if (previewPostId) {\n            setPreviewPostId(ideaList[newIndex].id);\n          }\n        }\n      }\n    };\n    const handleRowOnSelect = useCallback((selectedItemId: string) => {\n      setSelectedRows((selectedRows) => {\n        const newSelectedRows = includes(selectedRows, selectedItemId)\n          ? selectedRows.filter((id) => id !== selectedItemId)\n          : selectedRows.concat(selectedItemId);\n        return newSelectedRows;\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const openPreview = useCallback((id: string) => {\n      setPreviewPostId(id);\n      setHighlightedId(id);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const closeSideModal = () => setPreviewPostId(null);\n\n    const handlePreventNavigation = (isNavigationPrevented: boolean) => {\n      setIsNavigationPrevented(isNavigationPrevented);\n    };\n\n    const getIdeaTaggings = (id: string | null) => {\n      if (!isNilOrError(taggings)) {\n        return taggings.filter((tagging) => tagging.attributes.idea_id === id);\n      }\n\n      return [];\n    };\n\n    if (loadingIdeas || taggings === undefined) return <StyledSpinner />;\n    if (isNilOrError(ideaList) || isNilOrError(taggings)) return null;\n\n    if (ideaList.length === 0) return <EmptyState reason=\"noIdeas\" />;\n\n    return (\n      <>\n        <TableWrapper>\n          <StyledTable>\n            <thead>\n              {!previewPostId && (\n                <tr>\n                  <th className=\"checkbox\">\n                    <StyledCheckbox\n                      checked={\n                        ideaList.length > 0 &&\n                        selectedRows.length === ideaList?.length\n                      }\n                      indeterminate={\n                        selectedRows.length > 0 &&\n                        selectedRows.length < ideaList.length\n                      }\n                      disabled={ideaList?.length === 0}\n                      onChange={handleOnSelectAll}\n                    />\n                  </th>\n                  <th className=\"title\">\n                    <FormattedMessage\n                      {...messages.items}\n                      values={{\n                        totalCount: ideaList.length,\n                        selectedCount: selectedRows.length,\n                      }}\n                    />\n                  </th>\n                  <th className=\"tags\">\n                    <FormattedMessage {...messages.tags} />\n                  </th>\n                </tr>\n              )}\n            </thead>\n            <tbody>\n              {ideaList.map((idea) => (\n                <ProcessingRow\n                  key={idea.id}\n                  idea={idea}\n                  selected={includes(selectedRows, idea.id)}\n                  highlighted={idea.id === highlightedId}\n                  rowRef={idea.id === highlightedId ? rowRef : undefined}\n                  onSelect={handleRowOnSelect}\n                  openPreview={openPreview}\n                  taggings={taggings}\n                  isManualTaggingMode={!!previewPostId}\n                  processing={!!unprocessedItemsIds?.includes(idea.id)}\n                />\n              ))}\n            </tbody>\n          </StyledTable>\n        </TableWrapper>\n        <CSSTransition\n          in={!!previewPostId}\n          mountOnEnter={true}\n          unmountOnExit={true}\n          classNames=\"slide\"\n          timeout={{\n            appear: 500,\n            enter: 300,\n            exit: 500,\n          }}\n        >\n          <PostPreviewTransitionWrapper>\n            <PostPreview\n              type={'AllIdeas'}\n              postId={previewPostId}\n              onClose={closeSideModal}\n              handleNavigation={navigate}\n              taggings={getIdeaTaggings(previewPostId)}\n              tags={tags}\n              handlePreventNavigation={handlePreventNavigation}\n              processing={!!unprocessedItemsIds?.includes(previewPostId || '')}\n            />\n          </PostPreviewTransitionWrapper>\n        </CSSTransition>\n      </>\n    );\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  ideas: ({ render, projectFilterIds }) => {\n    return (\n      <GetIdeas\n        type=\"paginated\"\n        pageSize={200000}\n        projectIds={projectFilterIds}\n        mini={true}\n        sort=\"new\"\n      >\n        {render}\n      </GetIdeas>\n    );\n  },\n});\n\nconst IdeasTableWithIntl = injectIntl(IdeasTable);\n\nexport default (inputProps: InputProps) => {\n  return (\n    <Data {...inputProps}>\n      {(dataProps) => <IdeasTableWithIntl {...inputProps} {...dataProps} />}\n    </Data>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { ITag, tagStream } from '../services/tags';\n\nexport interface IUseTag {\n  tag: ITag | null | Error | undefined;\n}\n\nexport default function useTag(tagId: string) {\n  const [tag, setTag] = useState<ITag | null | undefined>(undefined);\n\n  useEffect(() => {\n    const observable = tagStream(tagId).observable;\n\n    const subscription = observable.subscribe((response) => {\n      setTag(response ? response.data : response);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [tagId]);\n\n  return { tag };\n}\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\nconst StyledTable = styled.table`\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-spacing: 0;\n  border-collapse: collapse;\n  table-layout: auto;\n\n  th,\n  td {\n    padding: 0;\n    margin: 0;\n  }\n\n  thead {\n    tr {\n      th {\n        fill: ${colors.text};\n        color: ${colors.adminTextColor};\n        font-size: ${fontSizes.small}px;\n        font-weight: 600;\n        text-align: left;\n        text-transform: uppercase;\n        line-height: normal;\n        padding-top: 0px;\n        padding-bottom: 15px;\n        border-bottom: solid 1px #ddd;\n\n        div {\n          display: flex;\n          align-items: center;\n        }\n      }\n    }\n  }\n\n  tbody {\n    tr {\n      border-radius: ${(props: any) => props.theme.borderRadius};\n      border-bottom: solid 1px #ccc;\n\n      td {\n        color: ${colors.adminTextColor};\n        font-size: ${fontSizes.small}px;\n        font-weight: 400;\n        line-height: normal;\n        text-align: left;\n        padding-top: 15px;\n        padding-bottom: 15px;\n\n        &.center {\n          justify-content: center;\n        }\n\n        a {\n          color: ${colors.clBlue};\n          text-decoration: underline;\n\n          &:hover {\n            color: ${darken(0.2, colors.clBlue)};\n            text-decoration: underline;\n          }\n        }\n      }\n    }\n  }\n\n  tfoot {\n    display: flex;\n\n    tr {\n      display: flex;\n\n      td {\n        display: flex;\n      }\n    }\n  }\n`;\n\ninterface Props {\n  className?: string;\n}\n\ninterface State {}\n\nexport default class Table extends PureComponent<Props, State> {\n  render() {\n    const { children, className } = this.props;\n\n    return (\n      <StyledTable cellSpacing=\"0\" cellPadding=\"0\" className={className}>\n        {children}\n      </StyledTable>\n    );\n  }\n}\n","import React, { FormEvent, useState, useEffect } from 'react';\n\n// components\nimport { Button, Icon, Input, Spinner, Tag } from 'cl2-component-library';\nimport GoBackButton from 'components/UI/GoBackButton';\n\n// styling\nimport styled from 'styled-components';\nimport { stylingConsts, colors, fontSizes } from 'utils/styleUtils';\n\n// i18n\nimport messages from '../../messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useKeyPress from 'hooks/useKeyPress';\nimport useTagSuggestions from '../../hooks/useTagSuggestions';\nimport useLocalize from 'hooks/useLocalize';\nimport useTags from '../../hooks/useTags';\n\n// services and typings\nimport { ITag } from '../../services/tags';\nimport { generateTaggings } from '../../services/taggings';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\nimport { trackEventByName } from 'utils/analytics';\nimport { getTagValidation } from '../../utils/tagUtils';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: calc(100vh - ${stylingConsts.menuHeight}px - 1px);\n`;\n\nconst Left = styled.div`\n  display: flex;\n  align-items: start;\n  padding: 5%;\n  flex-direction: column;\n  width: 60%;\n  height: 100%;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 40%;\n  height: 100%;\n  background-color: #f9f9fa;\n  border-left: 1px solid ${colors.adminBorder};\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: flex-start;\n  > * {\n    margin-right: 10px;\n  }\n`;\n\nconst StyledSubtitle = styled.p`\n  font-size: ${fontSizes.small};\n  font-weight: 600;\n`;\n\nconst StyledValidationError = styled.p`\n  &.show {\n    text-decoration: underline;\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  width: 200px;\n`;\n\nconst TagList = styled.div`\n  padding: 12px 0px;\n  margin: 12px auto;\n  display: inline;\n  width: 100%;\n  overflow-y: auto;\n  height: inherit;\n`;\n\nconst SuggestionList = styled.div`\n  margin: 5px auto;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: flex-start;\n  height: 100%;\n  overflow-y: auto;\n  padding: 10%;\n`;\n\nconst ExistingTagList = styled.div`\n  margin: 5px auto;\n  height: 100%;\n  overflow-y: auto;\n  padding: 10%;\n  display: inline;\n  width: 100%;\n  overflow-y: auto;\n`;\n\nconst StyledTag = styled(Tag)`\n  margin-bottom: ${fontSizes.xs}px;\n  margin-right: ${fontSizes.xs}px;\n  height: 24px;\n  > * {\n    font-size: ${fontSizes.large}px;\n    align-self: center;\n    line-height: 14px;\n    > * {\n      height: 14px;\n    }\n  }\n`;\n\nconst StyledIcon = styled(Icon)`\n  flex: 0 0 20px;\n  width: 20px;\n  height: 20px;\n  fill: #fff;\n`;\nconst TagAssignationButton = styled(Button)`\n  align-self: center;\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 48px;\n  align-items: stretch;\n  justify-content: space-evenly;\n  position: relative;\n  background-color: white;\n  border-bottom: 1px solid ${colors.adminBorder};\n`;\n\nconst Tab = styled.div`\n  margin-top: 12px;\n  color: ${colors.adminSecondaryTextColor};\n  cursor: pointer;\n  &.active,\n  :hover {\n    color: ${colors.adminTextColor};\n    border-bottom: 2px solid ${colors.adminTextColor};\n  }\n`;\n\ninterface Props {\n  closeView: (e?: FormEvent) => void;\n  selectedRows?: string[];\n  selectedProjectIds?: string[];\n}\n\nconst AutotagView = ({\n  closeView,\n  selectedRows,\n  selectedProjectIds,\n}: Props) => {\n  const locale = useLocale();\n  const addTagInputKeyPress = useKeyPress('Enter');\n  const [newTag, setNewTag] = useState('');\n  const [selectedTagsList, setSelectedTagsList] = useState<ITag[]>([]);\n  const [newTagsList, setNewTagsList] = useState<string[]>([]);\n\n  const { tags } = useTags(selectedRows);\n\n  const [isValidTag, setIsValidTag] = useState<boolean>(true);\n\n  const [processing, setProcessing] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<'suggestions' | 'existingTags'>(\n    'suggestions'\n  );\n\n  const localize = useLocalize();\n\n  const { tagSuggestions } = useTagSuggestions(\n    selectedRows || null,\n    selectedProjectIds\n  );\n  useEffect(() => {\n    if (addTagInputKeyPress && isValidTag) {\n      trackEventByName('Autotag View', {\n        key: 'Enter',\n        action: 'added new tag',\n      });\n      handleAddNewTag();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addTagInputKeyPress]);\n\n  const handleAddNewTag = () => {\n    trackEventByName('Autotag View', {\n      action: 'added new tag',\n      content: newTag,\n    });\n    setNewTagsList([...newTagsList, newTag]);\n    setNewTag('');\n  };\n\n  const handleAddExistingTag = (tag: ITag) => () => {\n    trackEventByName('Autotag View', { action: 'added existing tag' });\n    setSelectedTagsList([...selectedTagsList, tag]);\n  };\n\n  const handleNewTagInput = (tag: string) => {\n    setNewTag(tag);\n  };\n\n  const handleNewTagFromSuggestion = (text: string) => (event) => {\n    event.preventDefault();\n    trackEventByName('Autotag View', { action: 'clicked on add suggestion' });\n    setNewTagsList([...newTagsList, text]);\n  };\n\n  const handleRemoveExistingTagFromSelection = (removedTagID: string) => (\n    event\n  ) => {\n    event.preventDefault();\n    trackEventByName('Autotag View', {\n      action: 'removed existing tag from selection',\n    });\n    const tempTagList = [...selectedTagsList];\n    const deletedTagIndex = selectedTagsList.findIndex(\n      (tag) => removedTagID === tag.id\n    );\n    tempTagList.splice(deletedTagIndex, 1);\n    setSelectedTagsList(tempTagList);\n  };\n\n  const handleRemoveNewTagFromSelection = (removedTag: string) => (event) => {\n    event.preventDefault();\n    trackEventByName('Autotag View', {\n      action: 'removed new tag from selection',\n    });\n    const tempTagList = [...newTagsList];\n    const deletedTagIndex = newTagsList.findIndex((tag) => removedTag === tag);\n    tempTagList.splice(deletedTagIndex, 1);\n    setNewTagsList(tempTagList);\n  };\n\n  useEffect(() => {\n    const isTagValid: boolean = getTagValidation(newTag);\n    setIsValidTag(isTagValid && !newTagsList.includes(newTag));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newTag]);\n\n  const handleSetActiveTab = (tab: 'suggestions' | 'existingTags') => (e) => {\n    e.preventDefault();\n    trackEventByName('Autotag View', { action: `switched to ${tab} tab` });\n    setActiveTab(tab);\n  };\n\n  const handleGenerate = () => {\n    setProcessing(true);\n    trackEventByName('Autotag View', { action: 'trigger autotagging' });\n    generateTaggings(\n      selectedRows,\n      selectedTagsList.map((tag) => tag.id),\n      newTagsList,\n      selectedProjectIds\n    )\n      .then(() => closeView())\n      .catch(() => setProcessing(false));\n  };\n\n  if (!isNilOrError(locale)) {\n    return (\n      <Container>\n        <Left>\n          <GoBackButton onClick={closeView} />\n          <StyledIcon name={'label'} />\n          <h2>\n            <FormattedMessage {...messages.tagsToAssign} />\n          </h2>\n          <StyledSubtitle>\n            <FormattedMessage {...messages.tagAssignationExplanation} />\n          </StyledSubtitle>\n\n          <h4>\n            <FormattedMessage {...messages.addTag} />\n          </h4>\n          <StyledValidationError className={`${!isValidTag && 'show'}`}>\n            <FormattedMessage {...messages.tagValidationErrorMessage} />\n          </StyledValidationError>\n\n          <Row>\n            <StyledInput\n              type={'text'}\n              value={newTag}\n              onChange={handleNewTagInput}\n            />\n            <Button\n              locale={locale}\n              icon=\"plus-circle\"\n              buttonStyle={'admin-dark-outlined'}\n              onClick={handleAddNewTag}\n              disabled={!isValidTag}\n            >\n              <FormattedMessage {...messages.addTag} />\n            </Button>\n          </Row>\n          <TagList>\n            {selectedTagsList.map((tag, index) => (\n              <StyledTag\n                key={index + localize(tag.attributes.title_multiloc)}\n                text={localize(tag.attributes.title_multiloc)}\n                isAutoTag={false}\n                isSelected={true}\n                icon={'remove'}\n                onTagClick={handleRemoveExistingTagFromSelection(tag.id)}\n              />\n            ))}\n            {newTagsList.map((tag, index) => (\n              <StyledTag\n                key={index + tag}\n                text={tag}\n                isAutoTag={false}\n                isSelected={false}\n                icon={'remove'}\n                onTagClick={handleRemoveNewTagFromSelection(tag)}\n              />\n            ))}\n          </TagList>\n          <TagAssignationButton\n            locale={locale}\n            text={<FormattedMessage {...messages.automaticallyAssign} />}\n            buttonStyle={'admin-dark'}\n            onClick={handleGenerate}\n            processing={processing}\n          />\n        </Left>\n        <Right>\n          <TabsContainer>\n            <Tab\n              className={activeTab === 'suggestions' ? 'active' : ''}\n              onClick={handleSetActiveTab('suggestions')}\n            >\n              <FormattedMessage {...messages.suggestedTags} />\n            </Tab>\n            <Tab\n              className={activeTab === 'existingTags' ? 'active' : ''}\n              onClick={handleSetActiveTab('existingTags')}\n            >\n              <FormattedMessage {...messages.existingTags} />\n            </Tab>\n          </TabsContainer>\n          {activeTab === 'suggestions' ? (\n            <SuggestionList>\n              {tagSuggestions && tagSuggestions?.length > 0 ? (\n                tagSuggestions\n                  .filter(\n                    (suggestedTag) =>\n                      !newTagsList.includes(\n                        localize(suggestedTag.title_multiloc)\n                      ) &&\n                      !selectedTagsList.some(\n                        (existingTag) =>\n                          localize(existingTag.attributes.title_multiloc) ===\n                          localize(suggestedTag.title_multiloc)\n                      )\n                  )\n                  .map((suggestion, index) => (\n                    <Button\n                      key={index + localize(suggestion.title_multiloc)}\n                      locale={locale}\n                      icon=\"plus-circle\"\n                      buttonStyle=\"text\"\n                      onClick={handleNewTagFromSuggestion(\n                        localize(suggestion.title_multiloc)\n                      )}\n                      text={localize(suggestion.title_multiloc)}\n                    />\n                  ))\n              ) : tagSuggestions === null || tagSuggestions?.length === 0 ? (\n                <StyledSubtitle>\n                  <FormattedMessage {...messages.noSuggestions} />\n                </StyledSubtitle>\n              ) : (\n                <>\n                  <StyledSubtitle>\n                    <FormattedMessage {...messages.suggestionLoading} />\n                  </StyledSubtitle>\n                  <Spinner />\n                </>\n              )}\n            </SuggestionList>\n          ) : (\n            <ExistingTagList>\n              {tags\n                ?.filter(\n                  (tag) =>\n                    !selectedTagsList?.find(\n                      (selectedTag) => selectedTag.id === tag.id\n                    )\n                )\n                .map((tag) => (\n                  <StyledTag\n                    key={tag.id}\n                    onTagClick={handleAddExistingTag(tag)}\n                    isAutoTag={false}\n                    isSelected={false}\n                    text={localize(tag.attributes.title_multiloc)}\n                    icon={'plus-circle'}\n                  />\n                ))}\n            </ExistingTagList>\n          )}\n        </Right>\n      </Container>\n    );\n  }\n  return null;\n};\n\nexport default AutotagView;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  tags: {\n    id: 'app.containers.Admin.Processing.tags',\n    defaultMessage: 'Tags',\n  },\n  title: {\n    id: 'app.containers.Admin.Processing.title',\n    defaultMessage: 'Title',\n  },\n  export: {\n    id: 'app.containers.Admin.Processing.export',\n    defaultMessage: 'Export',\n  },\n  project: {\n    id: 'app.containers.Admin.Processing.project',\n    defaultMessage: 'Project',\n  },\n  selectProject: {\n    id: 'app.containers.Admin.Processing.selectProject',\n    defaultMessage: 'Select project',\n  },\n  autotag: {\n    id: 'app.containers.Admin.Processing.autotag',\n    defaultMessage: 'Autotag',\n  },\n  cancel: {\n    id: 'app.containers.Admin.Processing.cancel',\n    defaultMessage: 'Cancel',\n  },\n  continue: {\n    id: 'app.containers.Admin.Processing.continue',\n    defaultMessage: 'Continue',\n  },\n  keyboardShortcuts: {\n    id: 'app.containers.Admin.Processing.keyboardShortcuts',\n    defaultMessage: 'Keyboard Shortcuts',\n  },\n  upAndDownArrow: {\n    id: 'app.containers.Admin.Processing.upAndDownArrow',\n    defaultMessage:\n      'Up and down arrows allow you to highlight the previous or next item in the list',\n  },\n  returnKey: {\n    id: 'app.containers.Admin.Processing.returnKey',\n    defaultMessage:\n      'The \"Return\" key opens the side panel where you can add remove tags from items',\n  },\n  escapeKey: {\n    id: 'app.containers.Admin.Processing.escapeKey',\n    defaultMessage:\n      'The \"Escape\" key closes the side panel and brings you back to the full list',\n  },\n  autotagOverwriteAlert: {\n    id: 'app.containers.Admin.Processing.autotagOverwriteAlert',\n    defaultMessage:\n      'This action may overwrite existing tags. Are you sure you want to continue?',\n  },\n  autotagOverwriteExplanation: {\n    id: 'app.containers.Admin.Processing.autotagOverwriteExplanation',\n    defaultMessage:\n      'Auto-tagging items will overwrite any previously automatically-generated tags. Tags that have been approved or that were manually added will not be overwritten.',\n  },\n  tag: {\n    id: 'app.containers.Admin.Processing.tag',\n    defaultMessage: 'tag',\n  },\n  pleaseSelectAProject: {\n    id: 'app.containers.Admin.Processing.pleaseSelectAProject',\n    defaultMessage: 'please select a project',\n  },\n  automaticallyAssign: {\n    id: 'app.containers.Admin.Processing.automaticallyAssign',\n    defaultMessage: 'Automatically assign tags to selected items',\n  },\n  addNewTag: {\n    id: 'app.containers.Admin.Processing.addNewTag',\n    defaultMessage: 'Add new tag',\n  },\n  addExistingTag: {\n    id: 'app.containers.Admin.Processing.addExistingTag',\n    defaultMessage: 'Add existing tag',\n  },\n  suggestedTags: {\n    id: 'app.containers.Admin.Processing.suggestedTags',\n    defaultMessage: 'Suggested tags',\n  },\n  existingTags: {\n    id: 'app.containers.Admin.Processing.existingTags',\n    defaultMessage: 'Existing tags',\n  },\n  tagsToAssign: {\n    id: 'app.containers.Admin.Processing.projectTags',\n    defaultMessage: 'Project tags',\n  },\n  tagAssignationExplanation: {\n    id: 'app.containers.Admin.Processing.tagAssignationExplanation',\n    defaultMessage:\n      'Tags you add here will be automatically assigned to relevant items based on our natural language processing technology.',\n  },\n  tagValidationErrorMessage: {\n    id: 'app.containers.Admin.Processing.tagValidationErrorMessage',\n    defaultMessage: 'please use max two words and do not add duplicates',\n  },\n  addSmartTag: {\n    id: 'app.containers.Admin.Processing.addSmartTag',\n    defaultMessage: 'Add smart tag',\n  },\n  approveAutoTags: {\n    id: 'app.containers.Admin.Processing.approveAutoTags',\n    defaultMessage: 'Approve auto-tags',\n  },\n  items: {\n    id: 'app.containers.Admin.Processing.items',\n    defaultMessage:\n      '{selectedCount} {selectedCount, plural, =0 {item} one {item} other {items}} selected out of {totalCount}',\n  },\n  helpTooltipText: {\n    id: 'app.containers.Admin.Processing.helpTooltipText',\n    defaultMessage:\n      'Did you know you can hit your keyboard up and down arrows to show and navigate through items content ?',\n  },\n  description: {\n    id: 'app.containers.Admin.Processing.description',\n    defaultMessage: 'Description',\n  },\n  proposedBudgetTitle: {\n    id: 'app.containers.Admin.Processing.proposedBudgetTitle',\n    defaultMessage: 'Proposed Budget',\n  },\n  addTag: {\n    id: 'app.components.admin.PostManager.PostPreview.addTag',\n    defaultMessage: 'Add a tag',\n  },\n  createTag: {\n    id: 'app.components.admin.PostManager.PostPreview.createTag',\n    defaultMessage: 'Create a tag',\n  },\n  suggestionLoading: {\n    id: 'app.components.admin.PostManager.PostPreview.suggestionLoading',\n    defaultMessage: \"We're retrieving suggestions to tag the selected items\",\n  },\n  noInputInThisProject: {\n    id: 'app.components.admin.PostManager.PostPreview.noInputInThisProject',\n    defaultMessage: \"This project doesn't seem to contain any input.\",\n  },\n  pickInputCollection: {\n    id: 'app.components.admin.PostManager.PostPreview.pickInputCollection',\n    defaultMessage: 'Please select an input collection project to start with.',\n  },\n  pendingTagText: {\n    id: 'app.components.admin.PostManager.PostPreview.pendingTagText',\n    defaultMessage: 'pending',\n  },\n  autotaggingProcessing: {\n    id: 'app.components.admin.PostManager.PostPreview.autotaggingProcessing',\n    defaultMessage:\n      'Automatic tagging : {remainingItems} items are being processed',\n  },\n  noSuggestions: {\n    id: 'app.components.admin.PostManager.PostPreview.noSuggestions',\n    defaultMessage: 'No suggestions found.',\n  },\n});\n","// Libraries\nimport React, { memo, useEffect, useState } from 'react';\nimport { first } from 'rxjs/operators';\nimport { isNonEmptyString } from 'utils/helperUtils';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\nimport messages from '../../messages';\n\n// Components\nimport AsyncSelectCreatable from 'react-select/async-creatable';\n\n// Style\nimport styled from 'styled-components';\nimport selectStyles from 'components/UI/MultipleSelect/styles';\n\n// Typings\nimport { IOption } from 'typings';\nimport { ITag, tagsStream } from '../../services/tags';\nimport { getTagValidation } from '../../utils/tagUtils';\nimport useLocalize from 'hooks/useLocalize';\n\nconst Container = styled.div``;\n\nconst SelectGroupsContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  align-items: flex-start;\n  align-items: center;\n`;\n\nconst StyledAsyncSelectCreatable = styled(AsyncSelectCreatable)`\n  flex-grow: 4;\n`;\n\ninterface Props {\n  filteredOutTags: ITag[];\n  onAddSelect: (tagId: string) => Promise<any> | null;\n  onAddNew: (tagText: string) => Promise<any> | null;\n  onType: (isValidInput: boolean) => void;\n  handlePreventNavigation: (isNavigationPrevented: boolean) => void;\n}\n\nconst TagSearch = memo(\n  ({\n    filteredOutTags,\n    handlePreventNavigation,\n    onType,\n    onAddSelect,\n    onAddNew,\n    intl,\n  }: Props & InjectedIntlProps) => {\n    const [selection, setSelection] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [processing, setProcessing] = useState(false);\n    const [searchInput, setSearchInput] = useState('');\n\n    const localize = useLocalize();\n\n    useEffect(() => {\n      loadOptions('', () => {});\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filteredOutTags]);\n\n    const getOptions = (tags: ITag[]) => {\n      return tags\n        .filter(\n          (tag) => !filteredOutTags.some((outTag) => tag.id === outTag.id)\n        )\n        .map((tag) => ({\n          value: tag.id,\n          label: localize(tag.attributes.title_multiloc),\n        }));\n    };\n\n    const loadOptions = (inputValue: string, callback) => {\n      if (inputValue) {\n        setLoading(true);\n        setSearchInput(inputValue);\n\n        tagsStream({\n          queryParameters: {\n            search: inputValue,\n          },\n        })\n          .observable.pipe(first())\n          .subscribe((response) => {\n            const options = getOptions(response.data);\n            setLoading(false);\n\n            callback(options);\n          });\n      }\n    };\n\n    const handleOnChange = async (selection: IOption) => {\n      await onAddSelect(selection.value);\n      setSelection(null);\n      setProcessing(false);\n    };\n\n    const handleOnNewTag = async (searchInput) => {\n      setProcessing(false);\n\n      try {\n        await onAddNew(searchInput);\n        setSelection(null);\n        setProcessing(false);\n      } catch {\n        setSelection(null);\n        setProcessing(false);\n      }\n    };\n\n    const noOptionsMessage = (inputValue: string) => {\n      if (!isNonEmptyString(inputValue)) {\n        return null;\n      }\n      return intl.formatMessage(messages.createTag);\n    };\n\n    const formatCreateLabel = (inputValue) => {\n      if (!isNonEmptyString(inputValue)) {\n        return null;\n      }\n      return intl.formatMessage(messages.createTag);\n    };\n\n    const isValidInput = (inputValue) => {\n      const isValidInput =\n        getTagValidation(inputValue) &&\n        !filteredOutTags.some(\n          (outTag) => localize(outTag.attributes.title_multiloc) === inputValue\n        );\n      if (!inputValue) {\n        handlePreventNavigation(false);\n      } else {\n        handlePreventNavigation(true);\n      }\n      onType(isValidInput);\n      return isValidInput;\n    };\n\n    const isDropdownIconHidden = !isNonEmptyString(searchInput);\n    return (\n      <Container>\n        <SelectGroupsContainer>\n          <StyledAsyncSelectCreatable\n            menuPlacement=\"top\"\n            name=\"search-tag\"\n            isMulti={false}\n            cacheOptions={false} // TOCHECK\n            defaultOptions={false}\n            loadOptions={loadOptions}\n            isLoading={loading}\n            isDisabled={processing}\n            onChange={handleOnChange}\n            formatCreateLabel={formatCreateLabel}\n            styles={selectStyles}\n            value={selection}\n            onCreateOption={handleOnNewTag}\n            isValidNewOption={isValidInput}\n            noOptionsMessage={noOptionsMessage}\n            autoFocus={true}\n            components={\n              isDropdownIconHidden && {\n                DropdownIndicator: () => null,\n              }\n            }\n          />\n        </SelectGroupsContainer>\n      </Container>\n    );\n  }\n);\n\nexport default injectIntl(TagSearch);\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport { a as _objectSpread2, _ as _createSuper, E as cleanValue } from '../../dist/index-4bd03571.esm.js';\nimport React, { Component } from 'react';\nimport { S as Select, g as getOptionValue, a as getOptionLabel } from '../../dist/Select-dbb12e54.esm.js';\nimport { m as manageState } from '../../dist/stateManager-845a3300.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/typeof';\nimport 'react-input-autosize';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport 'memoize-one';\n\nvar compareOption = function compareOption() {\n  var inputValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var option = arguments.length > 1 ? arguments[1] : undefined;\n  var accessors = arguments.length > 2 ? arguments[2] : undefined;\n  var candidate = String(inputValue).toLowerCase();\n  var optionValue = String(accessors.getOptionValue(option)).toLowerCase();\n  var optionLabel = String(accessors.getOptionLabel(option)).toLowerCase();\n  return optionValue === candidate || optionLabel === candidate;\n};\n\nvar builtins = {\n  formatCreateLabel: function formatCreateLabel(inputValue) {\n    return \"Create \\\"\".concat(inputValue, \"\\\"\");\n  },\n  isValidNewOption: function isValidNewOption(inputValue, selectValue, selectOptions, accessors) {\n    return !(!inputValue || selectValue.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }) || selectOptions.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }));\n  },\n  getNewOptionData: function getNewOptionData(inputValue, optionLabel) {\n    return {\n      label: optionLabel,\n      value: inputValue,\n      __isNew__: true\n    };\n  },\n  getOptionValue: getOptionValue,\n  getOptionLabel: getOptionLabel\n};\nvar defaultProps = _objectSpread2({\n  allowCreateWhileLoading: false,\n  createOptionPosition: 'last'\n}, builtins);\nvar makeCreatableSelect = function makeCreatableSelect(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class = /*#__PURE__*/function (_Component) {\n    _inherits(Creatable, _Component);\n\n    var _super = _createSuper(Creatable);\n\n    function Creatable(props) {\n      var _this;\n\n      _classCallCheck(this, Creatable);\n\n      _this = _super.call(this, props);\n      _this.select = void 0;\n\n      _this.onChange = function (newValue, actionMeta) {\n        var _this$props = _this.props,\n            getNewOptionData = _this$props.getNewOptionData,\n            inputValue = _this$props.inputValue,\n            isMulti = _this$props.isMulti,\n            onChange = _this$props.onChange,\n            onCreateOption = _this$props.onCreateOption,\n            value = _this$props.value,\n            name = _this$props.name;\n\n        if (actionMeta.action !== 'select-option') {\n          return onChange(newValue, actionMeta);\n        }\n\n        var newOption = _this.state.newOption;\n        var valueArray = Array.isArray(newValue) ? newValue : [newValue];\n\n        if (valueArray[valueArray.length - 1] === newOption) {\n          if (onCreateOption) onCreateOption(inputValue);else {\n            var newOptionData = getNewOptionData(inputValue, inputValue);\n            var newActionMeta = {\n              action: 'create-option',\n              name: name,\n              option: newOptionData\n            };\n\n            if (isMulti) {\n              onChange([].concat(_toConsumableArray(cleanValue(value)), [newOptionData]), newActionMeta);\n            } else {\n              onChange(newOptionData, newActionMeta);\n            }\n          }\n          return;\n        }\n\n        onChange(newValue, actionMeta);\n      };\n\n      var options = props.options || [];\n      _this.state = {\n        newOption: undefined,\n        options: options\n      };\n      return _this;\n    }\n\n    _createClass(Creatable, [{\n      key: \"focus\",\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: \"blur\",\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var options = this.state.options;\n        return /*#__PURE__*/React.createElement(SelectComponent, _extends({}, this.props, {\n          ref: function ref(_ref) {\n            _this2.select = _ref;\n          },\n          options: options,\n          onChange: this.onChange\n        }));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, state) {\n        var allowCreateWhileLoading = props.allowCreateWhileLoading,\n            createOptionPosition = props.createOptionPosition,\n            formatCreateLabel = props.formatCreateLabel,\n            getNewOptionData = props.getNewOptionData,\n            inputValue = props.inputValue,\n            isLoading = props.isLoading,\n            isValidNewOption = props.isValidNewOption,\n            value = props.value,\n            getOptionValue = props.getOptionValue,\n            getOptionLabel = props.getOptionLabel;\n        var options = props.options || [];\n        var newOption = state.newOption;\n\n        if (isValidNewOption(inputValue, cleanValue(value), options, {\n          getOptionValue: getOptionValue,\n          getOptionLabel: getOptionLabel\n        })) {\n          newOption = getNewOptionData(inputValue, formatCreateLabel(inputValue));\n        } else {\n          newOption = undefined;\n        }\n\n        return {\n          newOption: newOption,\n          options: (allowCreateWhileLoading || !isLoading) && newOption ? createOptionPosition === 'first' ? [newOption].concat(_toConsumableArray(options)) : [].concat(_toConsumableArray(options), [newOption]) : options\n        };\n      }\n    }]);\n\n    return Creatable;\n  }(Component), _class.defaultProps = defaultProps, _temp;\n}; // TODO: do this in package entrypoint\n\nvar SelectCreatable = makeCreatableSelect(Select);\nvar Creatable = manageState(SelectCreatable);\n\nexport default Creatable;\nexport { defaultProps, makeCreatableSelect };\n","import React, { PureComponent, FormEvent } from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/UI/Button';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.div`\n  display: inline-block;\n`;\n\ntype Props = {\n  onClick: (arg: FormEvent) => void;\n  className?: string;\n};\n\ninterface State {}\n\nexport default class GoBackButton extends PureComponent<Props, State> {\n  render() {\n    const { onClick, className } = this.props;\n\n    return (\n      <Container className={className || ''}>\n        <Button\n          onClick={onClick}\n          buttonStyle=\"text\"\n          icon=\"arrow-back\"\n          size=\"2\"\n          padding=\"0px\"\n          text={<FormattedMessage {...messages.goBack} />}\n        />\n      </Container>\n    );\n  }\n}\n"],"sourceRoot":""}