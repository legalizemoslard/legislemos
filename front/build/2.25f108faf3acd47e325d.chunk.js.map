{"version":3,"sources":["webpack:///./app/containers/ProjectsShowPage/messages.ts","webpack:///./app/containers/ProjectsShowPage/shared/pb/PBExpenses.tsx","webpack:///./app/utils/currency/FormattedBudget.tsx","webpack:///./app/services/baskets.ts","webpack:///./app/resources/GetIdeaList.tsx","webpack:///./app/components/UI/ButtonWithDropdown/index.tsx","webpack:///./app/containers/ProjectsShowPage/shared/pb/tracks.ts","webpack:///./app/resources/GetBasket.tsx","webpack:///./app/hooks/useBasket.ts","webpack:///./app/resources/GetPhase.tsx","webpack:///./app/hooks/usePhase.ts","webpack:///./app/containers/ProjectsShowPage/shared/pb/PBBasket.tsx"],"names":["defineMessages","header","id","defaultMessage","editProject","project","a11y_titleInputs","a11y_titleInputsPhase","invisibleTitleSurvey","invisibleTitlePoll","invisibleTitlePhaseAbout","information","events","metaTitle","upcomingEvents","location","noPhaseSelected","endedOn","previousPhase","nextPhase","currentPhase","navPoll","navSurvey","noProjectFoundHere","thisProjectIsNotPubliclyVisibleVisitHomePageToDiscover","goBackToList","archived","myBasket","basketSubmitted","selectionExceedsBudget","requiredSelectionExceeded","yourBudget","requiredSelection","addedToBasket","minBudgetRequired","manageBasket","submitMyBasket","noItems","removeItem","a11y_phaseX","a11y_phasesOverview","a11y_selectedPhaseX","projectTwitterMessage","whatsAppMessage","about","xIdeas","xIdeasInCurrentPhase","xIdeasInFinalPhase","xContributions","xContributionsInCurrentPhase","xContributionsInFinalPhase","xProjects","xProjectsInCurrentPhase","xProjectsInFinalPhase","xOptions","xOptionsInCurrentPhase","xOptionsInFinalPhase","xIssues","xIssuesInCurrentPhase","xIssuesInFinalPhase","xQuestions","xQuestionsInCurrentPhase","xQuestionsInFinalPhase","xSurveys","xSurveysInCurrentPhase","poll","pollInCurrentPhase","budget","nothingPosted","xPhases","xParticipants","xUpcomingEvents","allocateBudget","takeTheSurvey","takeThePoll","ideas","contributions","issues","options","questions","projects","survey","timeline","share","shareThisProject","readMore","seeLess","xEvents","seeTheIdeas","seeTheOptions","seeTheProjects","seeTheQuestions","seeTheIssues","seeTheContributions","meetMinBudgetRequirement","meetMinSelectionRequirement","Container","styled","div","defaultCardStyle","InnerContainer","Header","Title","h2","props","theme","colorText","fontSizes","large","colors","clRedError","clGreenSuccess","TitleIcon","Icon","viewMode","Spacer","Budget","base","BudgetItem","isLastBudgetItem","BudgetLabel","span","BudgetAmount","ProgressBar","borderRadius","ProgressBarOverlay","progress","label","ProgressBarPercentage","Footer","Budgets","TotalBudget","TotalBudgetColumn","Buttons","ManageBudgetButton","Button","ManageBudgetButtonWithDropdown","ButtonWithDropdown","SubmitExpensesButton","TooltipContent","TooltipContentIcon","TooltipContentText","participationContextType","participationContextId","className","formatMessage","intl","useState","processing","setProcessing","locale","appConfiguration","projectId","phase","basketId","isNilOrError","relationships","user_basket","data","basket","handleSubmitExpensesOnClick","now","format","updateBasket","submitted_at","trackEventByName","tracks","currency","attributes","settings","core","spentBudget","total_budget","budgetExceedsLimit","submittedAt","minBudget","maxBudget","validationStatus","validationStatusMessage","progressBarColor","min_budget","max_budget","round","messages","minBudgetReached","minBudgetRequiredNotReached","minBudgetRequiredReached","showMinRequiredBudget","showFixedRequiredBudget","maxBudgetCopy","FormattedMessage","name","ariaHidden","LiveMessage","message","value","ScreenReaderOnly","buttonComponent","iconAriaHidden","buttonStyle","borderColor","boxShadow","boxShadowHover","dropdownContent","trackName","expensesDropdownOpened","disabled","interactive","placement","content","hideOnClick","onClick","bgColor","adminTextColor","StyledIcon","injectIntl","formatNumber","oneCredit","multipleCredits","numberOfTokens","FormattedNumber","style","minimumFractionDigits","maximumFractionDigits","streamParams","streams","get","apiEndpoint","object","update","delete","API_PATH","add","fetchAllWith","dataId","participation_context_id","GetIdeaList","state","ideaList","undefined","ids","this","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","isEqual","switchMap","length","combineLatest","map","ideaByIdStream","observable","idea","of","subscribe","setState","forEach","subscription","unsubscribe","children","React","Component","DropdownWrapper","buttonWidth","setButtonWidth","ref","useRef","dropdownOpened","setDropdownOpened","toggleDropdown","trackClick","useEffect","current","offsetWidth","button","cloneElement","ariaExpanded","Dropdown","top","left","mobileLeft","right","bowser","msie","opened","onClickOutside","width","mobileWidth","basketCreated","ideaRemovedFromBasket","ideaAddedToBasket","unauthenticatedAssignClick","disabledAssignClick","GetBasket","resetOnChange","tap","isString","basketByIdStream","setBasket","response","GetPhase","filter","phaseStream","phaseId","setPhase","Empty","EmptyIcon","svg","EmptyText","DropdownListItem","DropdownListItemContent","IdeaTitle","IdeaBudget","small","RemoveIconButton","PBBasket","ideaIdToRemove","event","preventDefault","authUser","newIdeas","user_id","participation_context_type","capitalizeParticipationContextType","idea_ids","tenant","isUndefined","budgetingDisabled","pastPresentOrFuture","start_at","end_at","index","key","title_multiloc","icon","iconSize","iconColor","padding","ariaLabel","isEmpty","role","height","viewBox","fill","d","fillOpacity","PureComponent","Data","adopt","render","PBBasketWithHoCs","inputProps","dataProps"],"mappings":"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","file":"2.25f108faf3acd47e325d.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  header: {\n    id: 'app.containers.Projects.header',\n    defaultMessage: 'Projects',\n  },\n  editProject: {\n    id: 'app.containers.Projects.editProject',\n    defaultMessage: 'Edit project',\n  },\n  project: {\n    id: 'app.containers.Projects.project',\n    defaultMessage: 'Project',\n  },\n  a11y_titleInputs: {\n    id: 'app.containers.Projects.a11y_titleInputs',\n    defaultMessage: 'All inputs submitted to this project',\n  },\n  a11y_titleInputsPhase: {\n    id: 'app.containers.Projects.a11y_titleInputsPhase',\n    defaultMessage: 'All inputs submitted to this phase',\n  },\n  invisibleTitleSurvey: {\n    id: 'app.containers.Projects.invisibleTitleSurvey',\n    defaultMessage: 'Take the survey',\n  },\n  invisibleTitlePoll: {\n    id: 'app.containers.Projects.invisibleTitlePoll',\n    defaultMessage: 'Take the poll',\n  },\n  invisibleTitlePhaseAbout: {\n    id: 'app.containers.Projects.invisibleTitlePhaseAbout',\n    defaultMessage: 'About this phase',\n  },\n  information: {\n    id: 'app.containers.Projects.information',\n    defaultMessage: 'Information',\n  },\n  events: {\n    id: 'app.containers.Projects.events',\n    defaultMessage: 'Events',\n  },\n  metaTitle: {\n    id: 'app.containers.Projects.metaTitle',\n    defaultMessage: 'Project: {projectTitle}',\n  },\n  upcomingEvents: {\n    id: 'app.containers.Projects.upcomingEvents',\n    defaultMessage: 'Upcoming events',\n  },\n  location: {\n    id: 'app.containers.Projects.location',\n    defaultMessage: 'Location:',\n  },\n  noPhaseSelected: {\n    id: 'app.containers.Projects.noPhaseSelected',\n    defaultMessage: 'No phase selected',\n  },\n  endedOn: {\n    id: 'app.containers.Projects.endedOn',\n    defaultMessage: 'Ended on {date}',\n  },\n  previousPhase: {\n    id: 'app.containers.Projects.previousPhase',\n    defaultMessage: 'Previous phase',\n  },\n  nextPhase: {\n    id: 'app.containers.Projects.nextPhase',\n    defaultMessage: 'Next phase',\n  },\n  currentPhase: {\n    id: 'app.containers.Projects.currentPhase',\n    defaultMessage: 'Current phase',\n  },\n  navPoll: {\n    id: 'app.containers.Projects.navPoll',\n    defaultMessage: 'Poll',\n  },\n  navSurvey: {\n    id: 'app.containers.Projects.navSurvey',\n    defaultMessage: 'Survey',\n  },\n  noProjectFoundHere: {\n    id: 'app.containers.Projects.noProjectFoundHere',\n    defaultMessage: 'There is no project here.',\n  },\n  thisProjectIsNotPubliclyVisibleVisitHomePageToDiscover: {\n    id:\n      'app.containers.Projects.thisProjectIsNotPubliclyVisibleVisitHomePageToDiscover',\n    defaultMessage:\n      'This project is not publicly visible. Visit the homepage to discover other engagement opportunities.',\n  },\n  goBackToList: {\n    id: 'app.containers.Projects.goBackToList',\n    defaultMessage: 'Go to the projects overview',\n  },\n  archived: {\n    id: 'app.containers.Projects.archived',\n    defaultMessage: 'Archived',\n  },\n  myBasket: {\n    id: 'app.containers.Projects.myBasket',\n    defaultMessage: 'My basket',\n  },\n  basketSubmitted: {\n    id: 'app.containers.Projects.basketSubmitted',\n    defaultMessage: 'Your basket has been submitted!',\n  },\n  selectionExceedsBudget: {\n    id: 'app.containers.Projects.selectionExceedsBudget',\n    defaultMessage: 'Your selection exceeds your budget.',\n  },\n  requiredSelectionExceeded: {\n    id: 'app.containers.Projects.requiredSelectionExceeded',\n    defaultMessage: \"You've exceeded the required selection.\",\n  },\n  yourBudget: {\n    id: 'app.containers.Projects.yourBudget',\n    defaultMessage: 'Your budget',\n  },\n  requiredSelection: {\n    id: 'app.containers.Projects.requiredSelection',\n    defaultMessage: 'Required selection',\n  },\n  addedToBasket: {\n    id: 'app.containers.Projects.addedToBasket',\n    defaultMessage: 'Added to your basket',\n  },\n  minBudgetRequired: {\n    id: 'app.containers.Projects.minBudgetRequired',\n    defaultMessage: 'Minimum budget required',\n  },\n  manageBasket: {\n    id: 'app.containers.Projects.manageBasket',\n    defaultMessage: 'Manage basket',\n  },\n  submitMyBasket: {\n    id: 'app.containers.Projects.submitMyBasket',\n    defaultMessage: 'Submit my basket',\n  },\n  noItems: {\n    id: 'app.containers.Projects.noItems',\n    defaultMessage: \"You haven't selected any items yet\",\n  },\n  removeItem: {\n    id: 'app.containers.Projects.removeItem',\n    defaultMessage: 'Remove item',\n  },\n  a11y_phaseX: {\n    id: 'app.containers.Projects.a11y_phase',\n    defaultMessage: 'Phase {phaseNumber}: {phaseTitle}',\n  },\n  a11y_phasesOverview: {\n    id: 'app.containers.Projects.a11y_phasesOverview',\n    defaultMessage: 'Phases overview',\n  },\n  a11y_selectedPhaseX: {\n    id: 'app.containers.Projects.a11y_selectedPhaseX',\n    defaultMessage:\n      'Selected phase. Phase {selectedPhaseNumber}: {selectedPhaseTitle}',\n  },\n  projectTwitterMessage: {\n    id: 'app.containers.Projects.projectTwitterMessage',\n    defaultMessage:\n      'Make your voice heard! Participate in {projectName} | {orgName}',\n  },\n  whatsAppMessage: {\n    id: 'app.containers.Projects.whatsAppMessage',\n    defaultMessage:\n      '{projectName} | from the participation platform of {orgName}',\n  },\n  about: {\n    id: 'app.containers.Projects.about',\n    defaultMessage: 'About',\n  },\n  xIdeas: {\n    id: 'app.containers.Projects.xIdeas',\n    defaultMessage:\n      '{ideasCount, plural, no {# ideas} one {# idea} other {# ideas}}',\n  },\n  xIdeasInCurrentPhase: {\n    id: 'app.containers.Projects.xIdeasInCurrentPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# ideas} one {# idea} other {# ideas}} in the current phase',\n  },\n  xIdeasInFinalPhase: {\n    id: 'app.containers.Projects.xIdeasInFinalPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# ideas} one {# idea} other {# ideas}} in the final phase',\n  },\n  xContributions: {\n    id: 'app.containers.Projects.xContributions',\n    defaultMessage:\n      '{ideasCount, plural, no {# contributions} one {# contribution} other {# contributions}}',\n  },\n  xContributionsInCurrentPhase: {\n    id: 'app.containers.Projects.xContributionsInCurrentPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# contributions} one {# contribution} other {# contributions}} in the current phase',\n  },\n  xContributionsInFinalPhase: {\n    id: 'app.containers.Projects.xContributionsInFinalPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# contributions} one {# contribution} other {# contributions}} in the final phase',\n  },\n  xProjects: {\n    id: 'app.containers.Projects.xProjects',\n    defaultMessage:\n      '{ideasCount, plural, no {# projects} one {# project} other {# projects}}',\n  },\n  xProjectsInCurrentPhase: {\n    id: 'app.containers.Projects.xProjectsInCurrentPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# projects} one {# project} other {# projects}} in the current phase',\n  },\n  xProjectsInFinalPhase: {\n    id: 'app.containers.Projects.xProjectsInFinalPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# projects} one {# project} other {# projects}} in the final phase',\n  },\n  xOptions: {\n    id: 'app.containers.Projects.xOptions',\n    defaultMessage:\n      '{ideasCount, plural, no {# options} one {# option} other {# options}}',\n  },\n  xOptionsInCurrentPhase: {\n    id: 'app.containers.Projects.xOptionsInCurrentPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# options} one {# option} other {# options}} in the current phase',\n  },\n  xOptionsInFinalPhase: {\n    id: 'app.containers.Projects.xOptionsInFinalPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# options} one {# option} other {# options}} in the final phase',\n  },\n  xIssues: {\n    id: 'app.containers.Projects.xIssues',\n    defaultMessage:\n      '{ideasCount, plural, no {# issues} one {# issue} other {# issues}}',\n  },\n  xIssuesInCurrentPhase: {\n    id: 'app.containers.Projects.xIssuesInCurrentPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# issues} one {# issue} other {# issues}} in the current phase',\n  },\n  xIssuesInFinalPhase: {\n    id: 'app.containers.Projects.xIssuesInFinalPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# issues} one {# issue} other {# issues}} in the final phase',\n  },\n  xQuestions: {\n    id: 'app.containers.Projects.xQuestions',\n    defaultMessage:\n      '{ideasCount, plural, no {# questions} one {# questions} other {# questions}}',\n  },\n  xQuestionsInCurrentPhase: {\n    id: 'app.containers.Projects.xQuestionsInCurrentPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# questions} one {# question} other {# questions}} in the current phase',\n  },\n  xQuestionsInFinalPhase: {\n    id: 'app.containers.Projects.xQuestionsInFinalPhase',\n    defaultMessage:\n      '{ideasCount, plural, no {# questions} one {# question} other {# questions}} in the final phase',\n  },\n  xSurveys: {\n    id: 'app.containers.Projects.xSurveys',\n    defaultMessage:\n      '{surveysCount, plural, no {# surveys} one {# survey} other {# surveys}}',\n  },\n  xSurveysInCurrentPhase: {\n    id: 'app.containers.Projects.xSurveysInCurrentPhase',\n    defaultMessage:\n      '{surveysCount, plural, no {# surveys} one {# survey} other {# surveys}} in the current phase',\n  },\n  poll: {\n    id: 'app.containers.Projects.poll',\n    defaultMessage: '1 poll',\n  },\n  pollInCurrentPhase: {\n    id: 'app.containers.Projects.pollInCurrentPhase',\n    defaultMessage: '1 poll in the current phase',\n  },\n  budget: {\n    id: 'app.containers.Projects.budget',\n    defaultMessage: '{amount} budget',\n  },\n  nothingPosted: {\n    id: 'app.containers.Projects.nothingPosted',\n    defaultMessage: 'Nothing posted yet',\n  },\n  xPhases: {\n    id: 'app.containers.Projects.xPhases',\n    defaultMessage:\n      '{phasesCount, plural, no {# phases} one {# phase} other {# phases}}',\n  },\n  xParticipants: {\n    id: 'app.containers.Projects.xParticipants',\n    defaultMessage:\n      '{participantsCount, plural, no {# participants} one {# participant} other {# participants}}',\n  },\n  xUpcomingEvents: {\n    id: 'app.containers.Projects.xUpcomingEvents',\n    defaultMessage:\n      '{upcomingEventsCount, plural, no {# upcoming events} one {# upcoming event} other {# upcoming events}}',\n  },\n  allocateBudget: {\n    id: 'app.containers.Projects.allocateBudget',\n    defaultMessage: 'Allocate your budget',\n  },\n  takeTheSurvey: {\n    id: 'app.containers.Projects.takeTheSurvey',\n    defaultMessage: 'Take the survey',\n  },\n  takeThePoll: {\n    id: 'app.containers.Projects.takeThePoll',\n    defaultMessage: 'Take the poll',\n  },\n  ideas: {\n    id: 'app.containers.Projects.ideas',\n    defaultMessage: 'Ideas',\n  },\n  contributions: {\n    id: 'app.containers.Projects.contributions',\n    defaultMessage: 'Contributions',\n  },\n  issues: {\n    id: 'app.containers.Projects.issues',\n    defaultMessage: 'Issues',\n  },\n  options: {\n    id: 'app.containers.Projects.options',\n    defaultMessage: 'Options',\n  },\n  questions: {\n    id: 'app.containers.Projects.questions',\n    defaultMessage: 'Questions',\n  },\n  projects: {\n    id: 'app.containers.Projects.projects',\n    defaultMessage: 'Projects',\n  },\n  survey: {\n    id: 'app.containers.Projects.survey',\n    defaultMessage: 'Survey',\n  },\n  timeline: {\n    id: 'app.containers.Projects.timeline',\n    defaultMessage: 'Timeline',\n  },\n  share: {\n    id: 'app.containers.Projects.share',\n    defaultMessage: 'Share',\n  },\n  shareThisProject: {\n    id: 'app.containers.Projects.shareThisProject',\n    defaultMessage: 'Share this project',\n  },\n  readMore: {\n    id: 'app.containers.Projects.readMore',\n    defaultMessage: 'Read more',\n  },\n  seeLess: {\n    id: 'app.containers.Projects.seeLess',\n    defaultMessage: 'See less',\n  },\n  xEvents: {\n    id: 'app.containers.Projects.xEvents',\n    defaultMessage: '{eventsCount, plural, one {# event} other {# events}}',\n  },\n  seeTheIdeas: {\n    id: 'app.containers.Projects.seeTheIdeas',\n    defaultMessage: 'See the ideas',\n  },\n  seeTheOptions: {\n    id: 'app.containers.Projects.seeTheOptions',\n    defaultMessage: 'See the options',\n  },\n  seeTheProjects: {\n    id: 'app.containers.Projects.seeTheProjects',\n    defaultMessage: 'See the projects',\n  },\n  seeTheQuestions: {\n    id: 'app.containers.Projects.seeTheQuestions',\n    defaultMessage: 'See the questions',\n  },\n  seeTheIssues: {\n    id: 'app.containers.Projects.seeTheIssues',\n    defaultMessage: 'See the issues',\n  },\n  seeTheContributions: {\n    id: 'app.containers.Projects.seeTheContributions',\n    defaultMessage: 'See the contributions',\n  },\n  meetMinBudgetRequirement: {\n    id: 'app.containers.Projects.meetMinBudgetRequirement',\n    defaultMessage: 'Meet the minimum budget to submit your basket.',\n  },\n  meetMinSelectionRequirement: {\n    id: 'app.containers.Projects.meetMinSelectionRequirement',\n    defaultMessage: 'Meet the required selection to submit your basket.',\n  },\n});\n","import React, { useState } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { round } from 'lodash-es';\nimport moment from 'moment';\nimport Tippy from '@tippyjs/react';\n\n// services\nimport { updateBasket } from 'services/baskets';\n\n// typings\nimport { IParticipationContextType } from 'typings';\n\n// components\nimport Button from 'components/UI/Button';\nimport { Icon } from 'cl2-component-library';\nimport PBBasket from './PBBasket';\nimport ButtonWithDropdown from 'components/UI/ButtonWithDropdown';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport injectIntl from 'utils/cl-intl/injectIntl';\nimport messages from 'containers/ProjectsShowPage/messages';\nimport FormattedBudget from 'utils/currency/FormattedBudget';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes, defaultCardStyle } from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\n// a11y\nimport { LiveMessage } from 'react-aria-live';\n\n// hooks\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport useBasket from 'hooks/useBasket';\nimport useProject from 'hooks/useProject';\nimport usePhase from 'hooks/usePhase';\nimport useLocale from 'hooks/useLocale';\n\nconst Container = styled.div`\n  ${defaultCardStyle};\n`;\n\nconst InnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h2`\n  min-height: 20px;\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.large}px;\n  line-height: normal;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  padding: 0;\n  margin: 0;\n  margin-right: 15px;\n\n  &.validationError {\n    color: ${colors.clRedError};\n    fill: ${colors.clRedError};\n  }\n\n  &.validationSuccess {\n    color: ${colors.clGreenSuccess};\n    fill: ${colors.clGreenSuccess};\n  }\n`;\n\nconst TitleIcon = styled(Icon)<{ viewMode?: 'row' | 'column' }>`\n  flex: 0 0 18px;\n  height: 18px;\n  margin-right: 10px;\n\n  ${({ viewMode }) =>\n    viewMode === 'column' &&\n    `\n    display: none;\n  `}\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n`;\n\nconst Budget = styled.div`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: ${fontSizes.base}px;\n  display: flex;\n  align-items: center;\n`;\n\nconst BudgetItem = styled(Budget)<{ isLastBudgetItem: boolean }>`\n  ${({ isLastBudgetItem }) => !isLastBudgetItem && `margin-bottom: 10px;`}\n`;\n\nconst BudgetLabel = styled.span`\n  font-weight: 300;\n  margin-right: 5px;\n`;\n\nconst BudgetAmount = styled.span`\n  font-weight: 600;\n\n  &.red {\n    color: ${colors.clRedError};\n  }\n\n  &.green {\n    color: ${colors.clGreenSuccess};\n  }\n`;\n\nconst ProgressBar = styled.div<{ viewMode: 'row' | 'column' }>`\n  width: 100%;\n  height: 30px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  margin-top: 30px;\n  margin-bottom: 30px;\n  border: solid 1px #e0e0e0;\n  background: repeating-linear-gradient(\n    -45deg,\n    #f8f8f8,\n    #f8f8f8 10px,\n    #e8e8e8 10px,\n    #e8e8e8 20px\n  );\n\n  ${({ viewMode }) =>\n    viewMode === 'column' &&\n    `\n    margin-top: 15px;\n    margin-bottom: 15px;\n  `}\n`;\n\nconst ProgressBarOverlay: any = styled.div`\n  width: ${(props: any) => props.progress}%;\n  height: 100%;\n  background: ${colors.label};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 350ms cubic-bezier(0.19, 1, 0.22, 1);\n\n  &.red {\n    background: ${colors.clRedError};\n  }\n\n  &.green {\n    background: ${colors.clGreenSuccess};\n  }\n`;\n\nconst ProgressBarPercentage = styled.span`\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n\n  &.hidden {\n    display: none;\n  }\n`;\n\nconst Footer = styled.div<{ viewMode: 'row' | 'column' }>`\n  display: flex;\n\n  ${({ viewMode }) =>\n    viewMode === 'row' &&\n    `\n    align-items: center;\n  `}\n\n  ${({ viewMode }) =>\n    viewMode === 'column' &&\n    `\n    flex-direction: column;\n  `}\n`;\n\nconst Budgets = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TotalBudget = styled(Budget)`\n  white-space: nowrap;\n`;\n\nconst TotalBudgetColumn = styled(Budget)`\n  margin-bottom: 30px;\n`;\n\nconst Buttons = styled.div<{ viewMode: 'row' | 'column' }>`\n  display: flex;\n\n  ${({ viewMode }) =>\n    viewMode === 'column' &&\n    `\n    margin-top: 20px;\n    flex-direction: column;\n  `}\n`;\n\nconst ManageBudgetButton = styled(Button)``;\n\nconst ManageBudgetButtonWithDropdown = styled(ButtonWithDropdown)`\n  min-width: 200px;\n  z-index: 900;\n`;\n\nconst SubmitExpensesButton = styled(Button)<{ viewMode: 'row' | 'column' }>`\n  margin-left: 10px;\n\n  ${({ viewMode }) =>\n    viewMode === 'column' &&\n    `\n    margin-left: 0px;\n    margin-top: 12px;\n  `}\n`;\n\nconst TooltipContent = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px 4px 10px 10px;\n`;\n\nconst TooltipContentIcon = styled(Icon)`\n  flex: 0 0 25px;\n  width: 20px;\n  height: 25px;\n  margin-right: 1rem;\n`;\n\nconst TooltipContentText = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  font-weight: 400;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n`;\n\ninterface Props {\n  participationContextId: string | null;\n  participationContextType: IParticipationContextType;\n  viewMode: 'row' | 'column';\n  className?: string;\n}\n\nconst PBExpenses = ({\n  participationContextType,\n  participationContextId,\n  className,\n  viewMode,\n  intl: { formatMessage },\n}: Props & InjectedIntlProps) => {\n  const [processing, setProcessing] = useState(false);\n  const locale = useLocale();\n  const appConfiguration = useAppConfiguration();\n  const project = useProject({\n    projectId:\n      participationContextType === 'project' ? participationContextId : null,\n  });\n  const phase = usePhase(\n    participationContextType === 'phase' ? participationContextId : null\n  );\n  function getBasketId() {\n    let basketId: string | null = null;\n\n    if (participationContextType === 'project') {\n      basketId = !isNilOrError(project)\n        ? project.relationships.user_basket?.data?.id || null\n        : null;\n    } else {\n      basketId = !isNilOrError(phase)\n        ? phase.relationships.user_basket?.data?.id || null\n        : null;\n    }\n\n    return basketId;\n  }\n  const basketId = getBasketId();\n  const basket = useBasket(basketId);\n\n  const handleSubmitExpensesOnClick = async () => {\n    if (!isNilOrError(basket)) {\n      const now = moment().format();\n      setProcessing(true);\n      try {\n        await updateBasket(basket.id, { submitted_at: now });\n      } catch {\n        // Do nothing\n      }\n      trackEventByName(tracks.basketSubmitted);\n      setProcessing(false);\n    }\n  };\n\n  if (\n    !isNilOrError(locale) &&\n    !isNilOrError(appConfiguration) &&\n    ((participationContextType === 'project' && !isNilOrError(project)) ||\n      (participationContextType === 'phase' && !isNilOrError(phase)))\n  ) {\n    const currency = appConfiguration.data.attributes.settings.core.currency;\n    const spentBudget = !isNilOrError(basket)\n      ? basket.attributes.total_budget\n      : 0;\n    const budgetExceedsLimit = !isNilOrError(basket)\n      ? (basket.attributes['budget_exceeds_limit?'] as boolean)\n      : false;\n    const submittedAt = !isNilOrError(basket)\n      ? basket.attributes.submitted_at\n      : null;\n    let minBudget = 0;\n    let maxBudget = 0;\n    let progress = 0;\n    let validationStatus:\n      | 'notValidated'\n      | 'validationSuccess'\n      | 'validationError' = 'notValidated';\n    let validationStatusMessage = '';\n    let progressBarColor: 'green' | 'red' | '' = '';\n\n    if (participationContextType === 'project' && !isNilOrError(project)) {\n      if (typeof project.attributes.min_budget === 'number') {\n        minBudget = project.attributes.min_budget;\n      }\n      if (typeof project.attributes.max_budget === 'number') {\n        maxBudget = project.attributes.max_budget;\n      }\n    } else if (participationContextType === 'phase' && !isNilOrError(phase)) {\n      if (typeof phase.attributes.min_budget === 'number') {\n        minBudget = phase.attributes.min_budget;\n      }\n      if (typeof phase.attributes.max_budget === 'number') {\n        maxBudget = phase.attributes.max_budget;\n      }\n    }\n\n    if (maxBudget > 0 && spentBudget > 0) {\n      progress = round((spentBudget / maxBudget) * 100, 1);\n    }\n\n    if (budgetExceedsLimit) {\n      validationStatus = 'validationError';\n    } else if (submittedAt && spentBudget > 0) {\n      validationStatus = 'validationSuccess';\n    }\n\n    if (validationStatus === 'validationSuccess') {\n      progressBarColor = 'green';\n    } else if (budgetExceedsLimit) {\n      progressBarColor = 'red';\n    }\n\n    if (validationStatus === 'validationError') {\n      validationStatusMessage = formatMessage(messages.selectionExceedsBudget);\n    } else if (validationStatus === 'validationSuccess') {\n      validationStatusMessage = formatMessage(messages.basketSubmitted);\n    }\n\n    const minBudgetRequired = minBudget > 0;\n    const minBudgetReached = spentBudget >= minBudget;\n    const minBudgetRequiredNotReached = minBudgetRequired && !minBudgetReached;\n    const minBudgetRequiredReached = minBudgetRequired && minBudgetReached;\n    const showMinRequiredBudget = minBudgetRequired && minBudget < maxBudget;\n    const showFixedRequiredBudget =\n      minBudgetRequired && minBudget === maxBudget;\n\n    const maxBudgetCopy = (\n      <FormattedMessage\n        {...(showFixedRequiredBudget\n          ? messages.requiredSelection\n          : messages.yourBudget)}\n      />\n    );\n    return (\n      <Container className={`e2e-pb-expenses-box ${className || ''}`}>\n        <InnerContainer>\n          <Header>\n            <Title className={validationStatus}>\n              {validationStatus === 'notValidated' && (\n                <>\n                  <TitleIcon name=\"basket\" ariaHidden />\n                  <FormattedMessage {...messages.myBasket} />\n                </>\n              )}\n              {validationStatus === 'validationError' && (\n                <>\n                  <TitleIcon name=\"error\" ariaHidden viewMode={viewMode} />\n                  {showFixedRequiredBudget ? (\n                    <FormattedMessage {...messages.requiredSelectionExceeded} />\n                  ) : (\n                    <FormattedMessage {...messages.selectionExceedsBudget} />\n                  )}\n                </>\n              )}\n              {validationStatus === 'validationSuccess' && (\n                <>\n                  <TitleIcon name=\"checkmark\" ariaHidden viewMode={viewMode} />\n                  <FormattedMessage {...messages.basketSubmitted} />\n                </>\n              )}\n              <LiveMessage\n                message={validationStatusMessage}\n                aria-live=\"polite\"\n              />\n            </Title>\n            <Spacer />\n            {viewMode === 'row' && (\n              <TotalBudget aria-hidden>\n                <BudgetLabel>{maxBudgetCopy}:</BudgetLabel>\n                <BudgetAmount className={budgetExceedsLimit ? 'red' : ''}>\n                  <FormattedBudget value={maxBudget} />\n                </BudgetAmount>\n              </TotalBudget>\n            )}\n          </Header>\n\n          <ProgressBar aria-hidden viewMode={viewMode}>\n            <ProgressBarOverlay\n              className={progressBarColor}\n              progress={budgetExceedsLimit ? 100 : progress}\n            >\n              <ProgressBarPercentage className={progress === 0 ? 'hidden' : ''}>\n                {progress}%\n              </ProgressBarPercentage>\n            </ProgressBarOverlay>\n          </ProgressBar>\n\n          <Footer viewMode={viewMode}>\n            {viewMode === 'column' && (\n              <TotalBudgetColumn aria-hidden>\n                <BudgetLabel>{maxBudgetCopy}:</BudgetLabel>\n                <BudgetAmount>\n                  <FormattedBudget value={maxBudget} />\n                </BudgetAmount>\n              </TotalBudgetColumn>\n            )}\n            <Budgets>\n              <BudgetItem\n                aria-hidden\n                isLastBudgetItem={\n                  !showMinRequiredBudget || showFixedRequiredBudget\n                }\n              >\n                <BudgetLabel>\n                  <FormattedMessage {...messages.addedToBasket} />:\n                </BudgetLabel>\n                <BudgetAmount className={progressBarColor}>\n                  <FormattedBudget value={spentBudget} />\n                </BudgetAmount>\n              </BudgetItem>\n              {showMinRequiredBudget && (\n                <BudgetItem aria-hidden isLastBudgetItem>\n                  <BudgetLabel>\n                    <FormattedMessage {...messages.minBudgetRequired} />:\n                  </BudgetLabel>\n                  <BudgetAmount\n                    className={minBudgetRequiredNotReached ? 'red' : ''}\n                  >\n                    <FormattedBudget value={minBudget} />\n                  </BudgetAmount>\n                </BudgetItem>\n              )}\n              {/*\n                  Only the dynamic value (spentBudget) is in an aria-live box\n                  to reduce information overload on every update for screen readers\n                */}\n              <ScreenReaderOnly>\n                {maxBudgetCopy}:\n                <FormattedBudget value={maxBudget} />\n              </ScreenReaderOnly>\n              <ScreenReaderOnly aria-live=\"polite\">\n                <FormattedMessage {...messages.addedToBasket} />:\n                {`${spentBudget} ${currency}`}\n                <ScreenReaderOnly>\n                  {showMinRequiredBudget && (\n                    <>\n                      <FormattedMessage {...messages.minBudgetRequired} />:\n                      {`${minBudget} ${currency}`}\n                    </>\n                  )}\n                </ScreenReaderOnly>\n              </ScreenReaderOnly>\n            </Budgets>\n            <Spacer />\n            <Buttons viewMode={viewMode}>\n              <ManageBudgetButtonWithDropdown\n                buttonComponent={\n                  <ManageBudgetButton\n                    iconAriaHidden\n                    buttonStyle=\"white\"\n                    borderColor=\"#ccc\"\n                    boxShadow=\"none\"\n                    boxShadowHover=\"none\"\n                  >\n                    <FormattedMessage {...messages.manageBasket} />\n                  </ManageBudgetButton>\n                }\n                dropdownContent={\n                  <PBBasket\n                    participationContextType={participationContextType}\n                    participationContextId={participationContextId}\n                  />\n                }\n                trackName={tracks.expensesDropdownOpened}\n              />\n\n              <Tippy\n                disabled={!minBudgetRequired || minBudgetRequiredReached}\n                interactive={true}\n                placement=\"bottom\"\n                content={\n                  <TooltipContent>\n                    <TooltipContentIcon name=\"lock-outlined\" ariaHidden />\n                    <TooltipContentText>\n                      <FormattedMessage\n                        // This will only show when there's a min budget that is not reached,\n                        // so there are only two options: (1) min = max budget (aka fixed selection)\n                        // then we show the first message\n                        // (2) min budget < max budget we show the second\n                        // (We can be sure here that min budget is not bigger than max budget)\n                        {...(showFixedRequiredBudget\n                          ? messages.meetMinSelectionRequirement\n                          : messages.meetMinBudgetRequirement)}\n                      />\n                    </TooltipContentText>\n                  </TooltipContent>\n                }\n                theme=\"light\"\n                hideOnClick={false}\n              >\n                <div>\n                  <SubmitExpensesButton\n                    onClick={handleSubmitExpensesOnClick}\n                    bgColor={colors.adminTextColor}\n                    disabled={\n                      validationStatus === 'validationSuccess' ||\n                      budgetExceedsLimit ||\n                      spentBudget === 0 ||\n                      minBudgetRequiredNotReached\n                    }\n                    processing={processing}\n                    viewMode={viewMode}\n                  >\n                    <FormattedMessage {...messages.submitMyBasket} />\n                  </SubmitExpensesButton>\n                </div>\n              </Tippy>\n            </Buttons>\n          </Footer>\n        </InnerContainer>\n      </Container>\n    );\n  }\n\n  return null;\n};\nexport default injectIntl(PBExpenses);\n","import React from 'react';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport { isNilOrError } from 'utils/helperUtils';\nimport styled from 'styled-components';\nimport { Icon } from 'cl2-component-library';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps, FormattedNumber } from 'react-intl';\nimport messages from './messages';\n\nconst StyledIcon = styled(Icon)`\n  width: 19px;\n  margin-top: 3px;\n  margin-right: 7px;\n  display: inline-block;\n  overflow: hidden;\n`;\n\ninterface Props {\n  value: number;\n}\n\nconst FormattedBudget = ({\n  value,\n  intl: { formatMessage, formatNumber },\n}: Props & InjectedIntlProps) => {\n  const appConfiguration = useAppConfiguration();\n\n  if (!isNilOrError(appConfiguration)) {\n    const currency = appConfiguration.data.attributes.settings.core.currency;\n\n    // custom implementations for custom currencies\n    // see appConfiguration.ts for all currencies\n    if (currency === 'TOK') {\n      return (\n        <>\n          <StyledIcon name=\"tokens\" />\n          {formatNumber(value)}\n        </>\n      );\n    } else if (currency === 'CRE') {\n      return (\n        <>\n          {formatMessage(\n            value === 1 ? messages.oneCredit : messages.multipleCredits,\n            {\n              numberOfTokens: formatNumber(value),\n            }\n          )}\n        </>\n      );\n    } else {\n      return (\n        <FormattedNumber\n          value={value}\n          style=\"currency\"\n          currency={currency}\n          minimumFractionDigits={0}\n          maximumFractionDigits={0}\n        />\n      );\n    }\n  }\n\n  return null;\n};\n\nexport default injectIntl(FormattedBudget);\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { IRelationship } from 'typings';\n\nconst apiEndpoint = `${API_PATH}/baskets`;\n\nexport interface IBasketData {\n  id: string;\n  type: string;\n  attributes: {\n    submitted_at: string;\n    total_budget: number;\n    'budget_exceeds_limit?': false;\n  };\n  relationships: {\n    participation_context: {\n      data: IRelationship;\n    };\n    user: {\n      data: IRelationship;\n    };\n    ideas: {\n      data: IRelationship[];\n    };\n  };\n}\n\nexport interface IBasket {\n  data: IBasketData;\n}\n\nexport interface IBaskets {\n  data: IBasketData[];\n}\n\nexport interface INewBasket {\n  user_id: string;\n  participation_context_id: string;\n  participation_context_type: 'Project' | 'Phase';\n  idea_ids?: string[];\n  submitted_at?: string | null;\n}\n\nexport function basketsStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IBaskets>({ apiEndpoint, ...streamParams });\n}\n\nexport function basketByIdStream(\n  basketId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IBasket>({\n    apiEndpoint: `${apiEndpoint}/${basketId}`,\n    ...streamParams,\n  });\n}\n\nexport async function addBasket(object: INewBasket) {\n  const basket = await streams.add<IBasket>(apiEndpoint, { basket: object });\n  await streams.fetchAllWith({ dataId: [object.participation_context_id] });\n  return basket;\n}\n\nexport function updateBasket(basketId: string, object: Partial<INewBasket>) {\n  return streams.update<IBasket>(`${apiEndpoint}/${basketId}`, basketId, {\n    basket: object,\n  });\n}\n\nexport function deleteBasket(basketId: string) {\n  return streams.delete(`${apiEndpoint}/${basketId}`, basketId);\n}\n","import React from 'react';\nimport { isEqual } from 'lodash-es';\nimport { Subscription, BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, map } from 'rxjs/operators';\nimport { IIdeaData, ideaByIdStream } from 'services/ideas';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  ids?: string[] | null;\n}\n\ntype children = (renderProps: GetIdeaListChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  ideaList: (IIdeaData | Error)[] | undefined | null | Error;\n}\n\nexport type GetIdeaListChildProps =\n  | (IIdeaData | Error)[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetIdeaList extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ideaList: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { ids } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ ids });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => isEqual(prev, next)),\n          switchMap(({ ids }) => {\n            if (ids && ids.length > 0) {\n              return combineLatest(\n                ids.map((id) =>\n                  ideaByIdStream(id).observable.pipe(\n                    map((idea) => (!isNilOrError(idea) ? idea.data : idea))\n                  )\n                )\n              );\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((ideaList) => {\n          this.setState({ ideaList });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    this.inputProps$.next({ ids: this.props.ids });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { ideaList } = this.state;\n    return (children as children)(ideaList);\n  }\n}\n","import React, { useRef, useState, useEffect, cloneElement } from 'react';\nimport bowser from 'bowser';\nimport { trackEventByName } from 'utils/analytics';\n\n// components\nimport { Dropdown } from 'cl2-component-library';\n\n// styling\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DropdownWrapper = styled.div`\n  width: 100%;\n  flex: 0 0 0px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\ninterface Props {\n  className?: string;\n  buttonComponent: JSX.Element;\n  dropdownContent: JSX.Element;\n  trackName?: string;\n}\n\nconst ButtonWithDropdown = ({\n  className,\n  buttonComponent,\n  dropdownContent,\n  trackName,\n}: Props) => {\n  const [buttonWidth, setButtonWidth] = useState(0);\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [dropdownOpened, setDropdownOpened] = useState(false);\n\n  const onClick = () => {\n    toggleDropdown();\n    trackName && trackClick(trackName);\n  };\n\n  const toggleDropdown = () => {\n    setDropdownOpened(!dropdownOpened);\n  };\n\n  const trackClick = (trackName: string) => {\n    trackEventByName(trackName);\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (ref.current) {\n      setButtonWidth(ref.current.offsetWidth);\n    }\n  });\n\n  const button = cloneElement(buttonComponent, {\n    onClick,\n    ariaExpanded: dropdownOpened,\n  });\n\n  return (\n    <Container className={className}>\n      <div ref={ref}>{button}</div>\n      <DropdownWrapper>\n        <Dropdown\n          top=\"5px\"\n          left=\"0px\"\n          mobileLeft=\"0px\"\n          right={bowser.msie ? '-5px' : 'auto'}\n          opened={dropdownOpened}\n          onClickOutside={toggleDropdown}\n          content={dropdownContent}\n          width={`${buttonWidth}px`}\n          mobileWidth={`${buttonWidth}px`}\n        />\n      </DropdownWrapper>\n    </Container>\n  );\n};\n\nexport default ButtonWithDropdown;\n","export default {\n  basketCreated: 'PB new basket created and first idea added to it',\n  ideaRemovedFromBasket: 'PB idea removed from basket',\n  ideaAddedToBasket: 'PB idea added to existing basket',\n  basketSubmitted: 'PB basket successfully submitted',\n  unauthenticatedAssignClick:\n    'PB unauthenticated user clicked assign/undo button',\n  disabledAssignClick: 'PB disabled assign or undo button clicked',\n  expensesDropdownOpened: 'PB expenses dropdown opened',\n};\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { basketByIdStream, IBasketData } from 'services/baskets';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  id: string | null | undefined;\n  resetOnChange?: boolean;\n}\n\ntype children = (renderProps: GetBasketChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  basket: IBasketData | undefined | null | Error;\n}\n\nexport type GetBasketChildProps = IBasketData | undefined | null | Error;\n\nexport default class GetBasket extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      basket: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ basket: undefined })),\n          switchMap(({ id }) => {\n            if (isString(id)) {\n              return basketByIdStream(id).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((basket) =>\n          this.setState({\n            basket: !isNilOrError(basket) ? basket.data : basket,\n          })\n        ),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    this.inputProps$.next({ id });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { basket } = this.state;\n    return (children as children)(basket);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { Observable, of } from 'rxjs';\nimport { basketByIdStream, IBasket, IBasketData } from 'services/baskets';\n\nexport default function useBasket(basketId: string | null | undefined) {\n  const [basket, setBasket] = useState<IBasketData | undefined | null>(\n    undefined\n  );\n\n  useEffect(() => {\n    setBasket(undefined);\n\n    let observable: Observable<IBasket | null> = of(null);\n\n    if (basketId) {\n      observable = basketByIdStream(basketId).observable;\n    }\n\n    const subscription = observable.subscribe((response) => {\n      const basket = !isNilOrError(response) ? response.data : response;\n      setBasket(basket);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [basketId]);\n\n  return basket;\n}\n","import React from 'react';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, switchMap, filter, tap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { IPhaseData, phaseStream } from 'services/phases';\nimport { isString } from 'lodash-es';\n\ninterface InputProps {\n  id?: string | null;\n  resetOnChange?: boolean;\n}\n\ntype children = (renderProps: GetPhaseChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  phase: IPhaseData | undefined | null;\n}\n\nexport type GetPhaseChildProps = IPhaseData | undefined | null;\n\nexport default class GetPhase extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      phase: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ phase: undefined })),\n          filter(({ id }) => isString(id)),\n          switchMap(({ id }: { id: string }) => phaseStream(id).observable)\n        )\n        .subscribe((phase) => {\n          this.setState({ phase: phase.data });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    this.inputProps$.next({ id });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { phase } = this.state;\n    return (children as children)(phase);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { Observable, of } from 'rxjs';\nimport { IPhase, IPhaseData, phaseStream } from 'services/phases';\n\nexport type TPhase = IPhaseData | undefined | null | Error;\n\nexport default function usePhase(phaseId: string | null) {\n  const [phase, setPhase] = useState<TPhase>(undefined);\n\n  useEffect(() => {\n    setPhase(undefined);\n\n    let observable: Observable<IPhase | null> = of(null);\n\n    if (phaseId) {\n      observable = phaseStream(phaseId).observable;\n    }\n\n    const subscription = observable.subscribe((response) => {\n      const phase = !isNilOrError(response) ? response.data : response;\n      setPhase(phase);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [phaseId]);\n\n  return phase;\n}\n","import React, { PureComponent, FormEvent } from 'react';\nimport { adopt } from 'react-adopt';\nimport {\n  isNilOrError,\n  capitalizeParticipationContextType,\n} from 'utils/helperUtils';\nimport { get, isEmpty, isUndefined } from 'lodash-es';\n\n// services\nimport { updateBasket } from 'services/baskets';\n\n// resources\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetBasket, { GetBasketChildProps } from 'resources/GetBasket';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhase, { GetPhaseChildProps } from 'resources/GetPhase';\nimport GetIdeaList, { GetIdeaListChildProps } from 'resources/GetIdeaList';\n\n// styles\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\n// components\nimport Button from 'components/UI/Button';\nimport T from 'components/T';\n\n// tracking\nimport tracks from './tracks';\nimport { trackEventByName } from 'utils/analytics';\n\n// utils\nimport { pastPresentOrFuture } from 'utils/dateUtils';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from 'containers/ProjectsShowPage/messages';\nimport FormattedBudget from 'utils/currency/FormattedBudget';\n\n// typings\nimport { IIdeaData } from 'services/ideas';\nimport { IParticipationContextType } from 'typings';\n\nconst Container = styled.div`\n  padding: 10px;\n`;\n\nconst Empty = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst EmptyIcon = styled.svg`\n  height: 120px;\n  margin-top: 10px;\n`;\n\nconst EmptyText = styled.div`\n  width: 100%;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  line-height: 18px;\n  font-weight: 500;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n  margin-bottom: 15px;\n`;\n\nconst DropdownListItem = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0px;\n  margin-bottom: 25px;\n  background: #fff;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  outline: none;\n\n  &.last {\n    margin-bottom: 0px;\n  }\n`;\n\nconst DropdownListItemContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst IdeaTitle = styled.div`\n  color: #333;\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  line-height: 21px;\n  text-align: left;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  margin-bottom: 6px;\n`;\n\nconst IdeaBudget = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  line-height: 18px;\n  text-align: left;\n`;\n\nconst RemoveIconButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 15px;\n`;\n\ninterface InputProps {\n  participationContextId: string | null;\n  participationContextType: IParticipationContextType;\n  className?: string;\n}\n\ninterface DataProps {\n  tenant: GetAppConfigurationChildProps;\n  authUser: GetAuthUserChildProps;\n  basket: GetBasketChildProps;\n  project: GetProjectChildProps;\n  phase: GetPhaseChildProps;\n  ideaList: GetIdeaListChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass PBBasket extends PureComponent<Props & InjectedIntlProps, State> {\n  ideaRemovedFromBasket = (ideaIdToRemove: string) => async (\n    event: FormEvent<any>\n  ) => {\n    event.preventDefault();\n\n    const {\n      authUser,\n      basket,\n      participationContextId,\n      participationContextType,\n    } = this.props;\n\n    if (\n      !isNilOrError(basket) &&\n      !isNilOrError(authUser) &&\n      participationContextId\n    ) {\n      const newIdeas = basket.relationships.ideas.data\n        .filter((idea) => idea.id !== ideaIdToRemove)\n        .map((idea) => idea.id);\n\n      try {\n        await updateBasket(basket.id, {\n          user_id: authUser.id,\n          participation_context_id: participationContextId,\n          participation_context_type: capitalizeParticipationContextType(\n            participationContextType\n          ),\n          idea_ids: newIdeas,\n          submitted_at: null,\n        });\n      } catch {\n        // Do nothing\n      }\n\n      trackEventByName(tracks.ideaRemovedFromBasket);\n    }\n  };\n\n  render() {\n    const {\n      tenant,\n      basket,\n      phase,\n      ideaList,\n      participationContextType,\n      className,\n    } = this.props;\n\n    if (!isNilOrError(tenant) && !isUndefined(basket)) {\n      const ideas = !isNilOrError(ideaList)\n        ? (ideaList.filter((idea) => !isNilOrError(idea)) as IIdeaData[])\n        : null;\n      let budgetingDisabled = false;\n\n      if (\n        participationContextType === 'phase' &&\n        !isNilOrError(phase) &&\n        pastPresentOrFuture([\n          phase.attributes.start_at,\n          phase.attributes.end_at,\n        ]) !== 'present'\n      ) {\n        budgetingDisabled = true;\n      }\n\n      return (\n        <Container className={className || ''} aria-live=\"polite\">\n          {ideas &&\n            ideas.length > 0 &&\n            ideas.map((idea, index) => (\n              <DropdownListItem\n                key={idea.id}\n                className={index === ideas.length - 1 ? 'last' : ''}\n              >\n                <DropdownListItemContent>\n                  <IdeaTitle>\n                    <T value={idea.attributes.title_multiloc} />\n                  </IdeaTitle>\n                  {idea.attributes.budget && (\n                    <IdeaBudget>\n                      <FormattedBudget value={idea.attributes.budget} />\n                    </IdeaBudget>\n                  )}\n                </DropdownListItemContent>\n                {!budgetingDisabled && (\n                  <RemoveIconButton\n                    icon=\"basket-minus\"\n                    buttonStyle=\"text\"\n                    iconSize=\"21px\"\n                    iconColor={colors.label}\n                    padding=\"0\"\n                    onClick={this.ideaRemovedFromBasket(idea.id)}\n                    ariaLabel={this.props.intl.formatMessage(\n                      messages.removeItem\n                    )}\n                  />\n                )}\n              </DropdownListItem>\n            ))}\n\n          {isEmpty(ideas) && (\n            <Empty>\n              <EmptyIcon\n                aria-hidden\n                role=\"img\"\n                height=\"100%\"\n                viewBox=\"0 0 168 158\"\n                fill=\"none\"\n              >\n                <path\n                  d=\"M168 102.871C168 149.954 114.378 158 67.2 158C20.0218 158 0 105.054 0 57.9712C0 10.888 35.9675 0 83.1458 0C130.324 0 168 55.7872 168 102.871Z\"\n                  fill=\"#84939E\"\n                  fillOpacity=\"0.07\"\n                />\n                <path\n                  d=\"M93.2643 64.9551H74.738C74.0432 64.9551 73.5801 65.4222 73.5801 66.123C73.5801 66.8237 74.0432 67.2909 74.738 67.2909H93.2643C93.959 67.2909 94.4222 66.8237 94.4222 66.123C94.4222 65.4222 93.959 64.9551 93.2643 64.9551Z\"\n                  fill=\"#5C6E7D\"\n                  fillOpacity=\"0.5\"\n                />\n                <path\n                  d=\"M73.8111 61.9199C73.8111 62.387 74.2743 62.6206 74.7374 62.6206H93.2637C93.7269 62.6206 94.19 62.387 94.19 61.9199L98.8216 52.5767C99.0532 52.1095 99.0532 51.6423 98.59 51.1752C98.3585 50.9416 97.8953 50.9416 97.4321 51.1752L88.8637 55.3796L84.9269 51.4088C84.4637 50.9416 83.769 50.9416 83.3058 51.4088L79.1374 55.3796L70.569 51.1752C70.1058 50.9416 69.6427 50.9416 69.1795 51.1752C68.7164 51.4088 68.9479 52.1095 69.1795 52.5767L73.8111 61.9199V61.9199Z\"\n                  fill=\"#5C6E7D\"\n                  fillOpacity=\"0.5\"\n                />\n                <path\n                  d=\"M94.1895 70.0941C93.9579 69.8605 93.4947 69.627 93.2632 69.627H74.7368C74.5053 69.627 74.0421 69.8605 73.8105 70.0941C73.3474 70.5613 62 82.7074 62 89.4813C62 99.0581 71.9579 107 84 107C96.0421 107 106 99.0581 106 89.4813C106 82.7074 94.6526 70.5613 94.1895 70.0941ZM85.1579 97.6566V98.8245C85.1579 99.5252 84.6947 99.9924 84 99.9924C83.3053 99.9924 82.8421 99.5252 82.8421 98.8245V97.6566C80.2947 97.1894 78.4421 95.5544 78.2105 93.4521C78.2105 92.7514 78.6737 92.2842 79.3684 92.2842C80.0632 92.2842 80.5263 92.7514 80.5263 93.4521C80.5263 94.3865 81.6842 95.3208 82.8421 95.5544V90.8827C79.8316 90.182 78.2105 88.5469 78.2105 86.4447C78.2105 84.1089 80.2947 82.2403 82.8421 81.7731V80.6052C82.8421 79.9045 83.3053 79.4373 84 79.4373C84.6947 79.4373 85.1579 79.9045 85.1579 80.6052V81.306C87.7053 81.7731 89.5579 83.4082 89.7895 85.5104C89.7895 86.2111 89.3263 86.6783 88.6316 86.6783C87.9368 86.6783 87.4737 86.2111 87.4737 85.5104C87.4737 84.5761 86.3158 83.6418 85.1579 83.4082V88.0798C88.1684 88.7805 89.7895 90.4156 89.7895 92.5178C89.7895 95.3208 87.7053 97.1894 85.1579 97.6566V97.6566Z\"\n                  fill=\"#5C6E7D\"\n                  fillOpacity=\"0.5\"\n                />\n                <path\n                  d=\"M85.1582 90.8828V95.0873C86.5477 94.8537 87.474 93.9194 87.474 92.985C87.474 92.0507 86.7793 91.35 85.1582 90.8828V90.8828Z\"\n                  fill=\"#5C6E7D\"\n                  fillOpacity=\"0.5\"\n                />\n                <path\n                  d=\"M80.5273 85.9792C80.5273 86.9135 81.2221 87.6142 82.8431 88.0814V83.877C81.4537 84.1105 80.5273 85.0449 80.5273 85.9792Z\"\n                  fill=\"#5C6E7D\"\n                  fillOpacity=\"0.5\"\n                />\n              </EmptyIcon>\n              <EmptyText>\n                <FormattedMessage {...messages.noItems} />\n              </EmptyText>\n            </Empty>\n          )}\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  tenant: <GetAppConfiguration />,\n  authUser: <GetAuthUser />,\n  project: ({ participationContextType, participationContextId, render }) => (\n    <GetProject\n      projectId={\n        participationContextType === 'project' ? participationContextId : null\n      }\n    >\n      {render}\n    </GetProject>\n  ),\n  phase: ({ participationContextType, participationContextId, render }) => (\n    <GetPhase\n      id={participationContextType === 'phase' ? participationContextId : null}\n    >\n      {render}\n    </GetPhase>\n  ),\n  basket: ({ participationContextType, project, phase, render }) => {\n    let basketId: string | null = null;\n\n    if (participationContextType === 'project') {\n      basketId =\n        !isNilOrError(project) && project.relationships.user_basket\n          ? get(project.relationships.user_basket.data, 'id', null)\n          : null;\n    } else {\n      basketId =\n        !isNilOrError(phase) && phase.relationships.user_basket\n          ? get(phase.relationships.user_basket.data, 'id', null)\n          : null;\n    }\n\n    return <GetBasket id={basketId}>{render}</GetBasket>;\n  },\n  ideaList: ({ basket, render }) => (\n    <GetIdeaList\n      ids={\n        !isNilOrError(basket)\n          ? basket.relationships.ideas.data.map((idea) => idea.id)\n          : null\n      }\n    >\n      {render}\n    </GetIdeaList>\n  ),\n});\n\nconst PBBasketWithHoCs = injectIntl<Props>(PBBasket);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <PBBasketWithHoCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n"],"sourceRoot":""}