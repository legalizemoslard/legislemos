{"version":3,"sources":["webpack:///./app/components/UI/MoreActionsMenu/index.tsx","webpack:///./app/components/PostShowComponents/OfficialFeedback/tracks.ts","webpack:///./app/components/PostShowComponents/OfficialFeedback/OfficialFeedbackPost.tsx","webpack:///./app/components/PostShowComponents/OfficialFeedback/messages.ts","webpack:///./app/components/PostShowComponents/OfficialFeedback/OfficialFeedbackForm.tsx","webpack:///./app/services/officialFeedback.ts","webpack:///./app/resources/GetOfficialFeedbacks.tsx"],"names":["Container","styled","div","MoreOptionsIcon","Icon","color","colors","label","MoreOptionsLabel","fontSizes","small","media","smallerThanMaxTablet","MoreOptionsButton","button","List","ListItem","adminLightText","props","theme","borderRadius","lighten","adminMenuBackground","StyledIcon","MoreActionsMenu","event","preventDefault","setState","visible","handler","state","this","actions","ariaLabel","className","id","length","placement","interactive","trigger","duration","content","map","action","index","icon","name","key","onMouseDown","removeFocus","onClick","handleListItemOnClick","undefined","toggleMenu","title","ariaHidden","PureComponent","officialFeedbackGiven","colorText","base","smallerThanMinTablet","PostContainer","transparentize","clRedError","EditFormContainer","background","Body","clBlueDarker","Footer","Author","span","text","isRtl","DatesPostedEdited","DatePosted","DatesSpacer","DateEdited","StyledMoreActionsMenu","OfficialFeedbackPost","showEditForm","postId","postType","window","confirm","intl","formatMessage","messages","deletionConfirmation","deleteOfficialFeedbackFromIdea","deleteOfficialFeedbackFromInitiative","FormattedMessage","editOfficialFeedbackPost","deleteOfficialFeedbackPost","deletePost","postBodyMultiloc","locale","tenantLocales","getLocalized","replace","editingAllowed","officialFeedbackPost","a11y_pronounceLatestOfficialFeedbackPost","attributes","body_multiloc","author_multiloc","created_at","updated_at","isNilOrError","formType","feedback","onClose","closeEditForm","formattedPostedOnDate","FormattedDate","value","year","month","day","formattedUpdatedAtDate","showMoreActions","getActions","ScreenReaderOnly","getPostBodyText","fontWeight","dangerouslySetInnerHTML","__html","postedOn","values","date","lastEdition","Data","adopt","OfficialFeedbackPostWithIntl","injectIntl","inputProps","dataProps","defineMessages","addOfficalUpdate","defaultMessage","officialUpdates","lastUpdate","showPreviousUpdates","officialNamePlaceholder","textAreaPlaceholder","publishButtonText","updateButtonSaveEditForm","updateButtonError","updateMessageSuccess","cancel","official","officialUpdateBody","officialUpdateAuthor","FormLabel","AddOfficialUpdateTitle","h2","medium","StyledLocaleSwitcher","LocaleSwitcher","StyledMentionsTextArea","MentionsTextArea","StyledInput","Input","StyledError","Error","SuccessMessage","clGreenSuccess","ButtonContainer","SubmitButton","Button","CancelButton","OfficialFeedbackForm","formValues","bodyMultiloc","authorMultiloc","forEach","forOwn","bodyText","selectedLocale","body","error","success","author","validated","isEmpty","processing","validate","feedbackValues","addOfficialFeedbackToIdea","trackEventByName","tracks","location","isPage","pathname","addOfficialFeedbackToInitiative","updateOfficialFeedback","getEmptyFormValues","setTimeout","getPreviouslySavedFormValues","errorMessage","successMessage","Section","locales","onSelectedLocaleChange","handleOnLocaleChange","onChange","handleBodyOnChange","placeholder","rows","padding","fontSize","type","handleAuthorOnChange","marginTop","bgColor","adminTextColor","clRed","textColor","fullWidth","handleOnSubmit","disabled","buttonStyle","officialFeedbackId","streams","get","apiEndpoint","API_PATH","object","update","official_feedback","ideaId","streamParams","initiativeId","feedBack","add","response","fetchAllWith","delete","GetOfficialFeedbacks","loadingMore","hasMore","pageSize","pageSize$","getValue","next","initialState","officialFeedbacksList","querying","postId$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","filter","isString","tap","switchMap","isLoadingMore","queryParameters","officialFeedbacksForIdeaStream","observable","officialFeedbacksForInitiativeStream","subscribe","selfLink","lastLink","prevProps","subscription","unsubscribe","children","onLoadMore","loadMore","React","Component"],"mappings":"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","file":"3.b8d0cc5c802948368f2d.chunk.js","sourcesContent":["// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport { Icon, IconNames } from 'cl2-component-library';\nimport Tippy from '@tippyjs/react';\n\n// Styling\nimport styled from 'styled-components';\nimport { colors, fontSizes, media } from 'utils/styleUtils';\nimport { lighten } from 'polished';\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst MoreOptionsIcon = styled(Icon)<{ color?: string }>`\n  width: 20px;\n  height: 6px;\n  fill: ${({ color }) => color || colors.label};\n  transition: all 100ms ease-out;\n`;\n\nconst MoreOptionsLabel = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  line-height: normal;\n  font-weight: 400;\n  white-space: nowrap;\n  margin-left: 10px;\n  transition: all 100ms ease-out;\n\n  ${media.smallerThanMaxTablet`\n    display: none;\n  `}\n`;\n\nconst MoreOptionsButton = styled.button`\n  min-width: 25px;\n  min-height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    ${MoreOptionsIcon} {\n      fill: #000;\n    }\n\n    ${MoreOptionsLabel} {\n      color: #000;\n    }\n  }\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-top: 3px;\n  margin-bottom: 3px;\n`;\n\nconst ListItem = styled.button`\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${colors.adminLightText};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  white-space: nowrap;\n  padding: 10px;\n  border-radius: ${(props) => props.theme.borderRadius};\n  cursor: pointer;\n  white-space: nowrap;\n  transition: all 100ms ease-out;\n\n  & > span {\n    margin-right: 5px;\n  }\n\n  &:hover,\n  &:focus {\n    color: white;\n    background: ${lighten(0.12, colors.adminMenuBackground)};\n  }\n`;\n\nconst StyledIcon = styled(Icon)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport interface IAction {\n  label: string | JSX.Element;\n  handler: () => void;\n  icon?: IconNames;\n  name?: string;\n}\n\nexport interface Props {\n  actions: IAction[];\n  label?: string | JSX.Element;\n  ariaLabel?: string | JSX.Element;\n  className?: string;\n  color?: string;\n  id?: string;\n}\n\ninterface State {\n  visible: boolean;\n}\n\nexport default class MoreActionsMenu extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n    };\n  }\n\n  hideMenu = (event) => {\n    event.preventDefault();\n    this.setState({ visible: false });\n  };\n\n  removeFocus = (event: React.MouseEvent) => {\n    event.preventDefault();\n  };\n\n  toggleMenu = (event: React.MouseEvent) => {\n    event.preventDefault();\n    this.setState(({ visible }) => ({ visible: !visible }));\n  };\n\n  handleListItemOnClick = (handler: () => void) => (\n    event: React.MouseEvent\n  ) => {\n    event.preventDefault();\n    this.setState({ visible: false });\n    handler();\n  };\n\n  render() {\n    const { actions, ariaLabel, color, label, className, id } = this.props;\n    const { visible } = this.state;\n\n    if (!actions || actions.length === 0) {\n      return null;\n    }\n\n    return (\n      <Container className={className || ''}>\n        <Tippy\n          placement=\"bottom\"\n          interactive={true}\n          trigger=\"click\"\n          duration={[200, 0]}\n          content={\n            <List className=\"e2e-more-actions-list\">\n              {actions.map((action, index) => {\n                const { handler, label, icon, name } = action;\n\n                return (\n                  <ListItem\n                    key={index}\n                    onMouseDown={this.removeFocus}\n                    onClick={this.handleListItemOnClick(handler)}\n                    className={name ? `e2e-action-${name}` : undefined}\n                  >\n                    {label}\n                    {icon && <StyledIcon name={icon} />}\n                  </ListItem>\n                );\n              })}\n            </List>\n          }\n        >\n          <MoreOptionsButton\n            onMouseDown={this.removeFocus}\n            onClick={this.toggleMenu}\n            aria-expanded={visible}\n            id={id}\n            className=\"e2e-more-actions\"\n          >\n            <MoreOptionsIcon\n              title={label || ariaLabel}\n              name=\"more-options\"\n              color={color}\n              ariaHidden={!!label}\n            />\n            {label && <MoreOptionsLabel>{label}</MoreOptionsLabel>}\n          </MoreOptionsButton>\n        </Tippy>\n      </Container>\n    );\n  }\n}\n","export default {\n  officialFeedbackGiven: 'Official feedback was given.',\n};\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// typings\nimport { Locale, Multiloc } from 'typings';\n\n// components\nimport OfficialFeedbackForm from './OfficialFeedbackForm';\nimport MoreActionsMenu, { IAction } from 'components/UI/MoreActionsMenu';\nimport T from 'components/T';\nimport QuillEditedContent from 'components/UI/QuillEditedContent';\n\n// styles\nimport { colors, fontSizes, media, isRtl } from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport styled from 'styled-components';\nimport { transparentize } from 'polished';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { FormattedDate, InjectedIntlProps } from 'react-intl';\nimport { getLocalized } from 'utils/i18n';\n\n// services\nimport {\n  IOfficialFeedbackData,\n  deleteOfficialFeedbackFromIdea,\n  deleteOfficialFeedbackFromInitiative,\n} from 'services/officialFeedback';\n\n// resources\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetAppConfigurationLocales, {\n  GetAppConfigurationLocalesChildProps,\n} from 'resources/GetAppConfigurationLocales';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  font-weight: 300;\n  padding: 30px;\n  padding-top: 35px;\n  margin-bottom: 15px;\n\n  ${media.smallerThanMinTablet`\n    padding: 20px;\n    padding-top: 25px;\n  `}\n`;\n\nconst PostContainer = styled(Container)`\n  white-space: pre-line;\n  background: ${transparentize(0.94, colors.clRedError)};\n  position: relative;\n`;\n\nconst EditFormContainer = styled(Container)`\n  background: ${colors.background};\n`;\n\nconst Body = styled.div`\n  margin-bottom: 30px;\n\n  a {\n    color: ${colors.clBlueDarker};\n\n    &:hover {\n      color: ${colors.clBlueDarker};\n    }\n  }\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Author = styled.span`\n  color: ${colors.text};\n  font-size: ${fontSizes.base}px;\n  font-weight: 600;\n\n  ${isRtl`\n    text-align: left;\n  `}\n`;\n\nconst DatesPostedEdited = styled.span`\n  color: ${colors.text};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  display: flex;\n  align-items: center;\n\n  ${media.smallerThanMinTablet`\n    flex-direction: column;\n    align-items: flex-start;\n  `}\n\n  ${isRtl`\n    justify-content: flex-end;\n    ${media.smallerThanMinTablet`\n        align-items: flex-end;\n    `}\n `}\n`;\n\nconst DatePosted = styled.span``;\n\nconst DatesSpacer = styled.span`\n  margin-left: 4px;\n  margin-right: 4px;\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `}\n`;\n\nconst DateEdited = styled.span`\n  ${media.smallerThanMinTablet`\n    font-style: italic;\n  `}\n`;\n\nconst StyledMoreActionsMenu = styled(MoreActionsMenu)`\n  position: absolute;\n  top: 12px;\n  right: 15px;\n\n  ${media.smallerThanMinTablet`\n    top: 5px;\n    right: 5px;\n  `}\n\n  ${isRtl`\n    right: auto;\n    left: 15px;\n\n    ${media.smallerThanMinTablet`\n        left: 5px;\n    `}\n`}\n`;\n\ninterface DataProps {\n  locale: GetLocaleChildProps;\n  tenantLocales: GetAppConfigurationLocalesChildProps;\n}\n\ninterface InputProps {\n  editingAllowed: boolean | undefined;\n  officialFeedbackPost: IOfficialFeedbackData;\n  postType: 'idea' | 'initiative';\n  className?: string;\n  a11y_pronounceLatestOfficialFeedbackPost?: boolean;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  showEditForm: boolean;\n}\n\nexport class OfficialFeedbackPost extends PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditForm: false,\n    };\n  }\n\n  showEditForm = () => {\n    this.setState({ showEditForm: true });\n  };\n\n  closeEditForm = () => {\n    this.setState({ showEditForm: false });\n  };\n\n  deletePost = (postId: string) => () => {\n    const { postType } = this.props;\n\n    if (\n      window.confirm(\n        this.props.intl.formatMessage(messages.deletionConfirmation)\n      )\n    ) {\n      switch (postType) {\n        case 'idea':\n          deleteOfficialFeedbackFromIdea(postId);\n        // eslint-disable-next-line no-fallthrough\n        case 'initiative':\n          deleteOfficialFeedbackFromInitiative(postId);\n      }\n    }\n  };\n\n  getActions = (postId: string) =>\n    [\n      {\n        label: <FormattedMessage {...messages.editOfficialFeedbackPost} />,\n        handler: this.showEditForm,\n        name: 'edit',\n      },\n      {\n        label: <FormattedMessage {...messages.deleteOfficialFeedbackPost} />,\n        handler: this.deletePost(postId),\n        name: 'delete',\n      },\n    ] as IAction[];\n\n  getPostBodyText = (\n    postBodyMultiloc: Multiloc,\n    locale: Locale,\n    tenantLocales: Locale[]\n  ) => {\n    const postBodyText = getLocalized(postBodyMultiloc, locale, tenantLocales);\n    const processedPostBodyText = postBodyText.replace(\n      /<span\\sclass=\"cl-mention-user\"[\\S\\s]*?data-user-id=\"([\\S\\s]*?)\"[\\S\\s]*?data-user-slug=\"([\\S\\s]*?)\"[\\S\\s]*?>([\\S\\s]*?)<\\/span>/gi,\n      '<a class=\"mention\" data-link=\"/profile/$2\" href=\"/profile/$2\">$3</a>'\n    );\n    return processedPostBodyText;\n  };\n\n  render() {\n    const {\n      editingAllowed,\n      officialFeedbackPost,\n      locale,\n      tenantLocales,\n      className,\n      a11y_pronounceLatestOfficialFeedbackPost,\n    } = this.props;\n    const { showEditForm } = this.state;\n    const {\n      body_multiloc,\n      author_multiloc,\n      created_at,\n      updated_at,\n    } = officialFeedbackPost.attributes;\n\n    if (showEditForm && !isNilOrError(locale) && !isNilOrError(tenantLocales)) {\n      return (\n        <EditFormContainer key={officialFeedbackPost.id}>\n          <OfficialFeedbackForm\n            locale={locale}\n            tenantLocales={tenantLocales}\n            formType=\"edit\"\n            feedback={officialFeedbackPost}\n            onClose={this.closeEditForm}\n          />\n        </EditFormContainer>\n      );\n    }\n\n    if (!isNilOrError(locale) && !isNilOrError(tenantLocales)) {\n      const formattedPostedOnDate = (\n        <FormattedDate\n          value={created_at}\n          year=\"numeric\"\n          month=\"long\"\n          day=\"numeric\"\n        />\n      );\n\n      const formattedUpdatedAtDate = (\n        <FormattedDate\n          value={updated_at}\n          year=\"numeric\"\n          month=\"long\"\n          day=\"numeric\"\n        />\n      );\n\n      return (\n        <PostContainer\n          key={officialFeedbackPost.id}\n          className={`e2e-official-feedback-post ${className || ''}`}\n        >\n          {editingAllowed && (\n            <StyledMoreActionsMenu\n              ariaLabel={this.props.intl.formatMessage(\n                messages.showMoreActions\n              )}\n              actions={this.getActions(officialFeedbackPost.id)}\n            />\n          )}\n\n          <ScreenReaderOnly aria-live=\"polite\">\n            {a11y_pronounceLatestOfficialFeedbackPost &&\n              this.getPostBodyText(body_multiloc, locale, tenantLocales)}\n          </ScreenReaderOnly>\n\n          <QuillEditedContent fontWeight={400}>\n            <Body className=\"e2e-official-feedback-post-body\">\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: this.getPostBodyText(\n                    body_multiloc,\n                    locale,\n                    tenantLocales\n                  ),\n                }}\n              />\n            </Body>\n            <Footer>\n              <Author className=\"e2e-official-feedback-post-author\">\n                <T value={author_multiloc} />\n              </Author>\n\n              <DatesPostedEdited>\n                <DatePosted>\n                  <FormattedMessage\n                    {...messages.postedOn}\n                    values={{ date: formattedPostedOnDate }}\n                  />\n                </DatePosted>\n                {updated_at && updated_at !== created_at && (\n                  <>\n                    <DatesSpacer>-</DatesSpacer>\n                    <DateEdited>\n                      <FormattedMessage\n                        {...messages.lastEdition}\n                        values={{ date: formattedUpdatedAtDate }}\n                      />\n                    </DateEdited>\n                  </>\n                )}\n              </DatesPostedEdited>\n            </Footer>\n          </QuillEditedContent>\n        </PostContainer>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps>({\n  locale: <GetLocale />,\n  tenantLocales: <GetAppConfigurationLocales />,\n});\n\nconst OfficialFeedbackPostWithIntl = injectIntl<Props>(OfficialFeedbackPost);\n\nexport default (inputProps: InputProps) => (\n  <Data>\n    {(dataProps) => (\n      <OfficialFeedbackPostWithIntl {...inputProps} {...dataProps} />\n    )}\n  </Data>\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  addOfficalUpdate: {\n    id: 'app.components.PostComponents.OfficialFeedback.addOfficalUpdate',\n    defaultMessage: 'Add an official update',\n  },\n  officialUpdates: {\n    id: 'app.components.PostComponents.OfficialFeedback.officialUpdates',\n    defaultMessage: 'Official updates',\n  },\n  lastUpdate: {\n    id: 'app.components.PostComponents.OfficialFeedback.lastUpdate',\n    defaultMessage: 'Last update: {lastUpdateDate}',\n  },\n  editOfficialFeedbackPost: {\n    id:\n      'app.components.PostComponents.OfficialFeedback.editOfficialFeedbackPost',\n    defaultMessage: 'Edit',\n  },\n  deleteOfficialFeedbackPost: {\n    id:\n      'app.components.PostComponents.OfficialFeedback.deleteOfficialFeedbackPost',\n    defaultMessage: 'Delete',\n  },\n  deletionConfirmation: {\n    id: 'app.components.PostComponents.OfficialFeedback.deletionConfirmation',\n    defaultMessage: 'Are you sure you want to delete this official update?',\n  },\n  showPreviousUpdates: {\n    id: 'app.components.PostComponents.OfficialFeedback.showPreviousUpdates',\n    defaultMessage: 'Show previous updates',\n  },\n  officialNamePlaceholder: {\n    id:\n      'app.components.PostComponents.OfficialFeedback.officialNamePlaceholder',\n    defaultMessage: 'Choose how people see your name',\n  },\n  textAreaPlaceholder: {\n    id: 'app.components.PostComponents.OfficialFeedback.textAreaPlaceholder',\n    defaultMessage: 'Give an update...',\n  },\n  publishButtonText: {\n    id: 'app.components.PostComponents.OfficialFeedback.publishButtonText',\n    defaultMessage: 'Publish',\n  },\n  updateButtonSaveEditForm: {\n    id:\n      'app.components.PostComponents.OfficialFeedback.updateButtonSaveEditForm',\n    defaultMessage: 'Update message',\n  },\n  updateButtonError: {\n    id: 'app.components.PostComponents.OfficialFeedback.updateButtonError',\n    defaultMessage: 'Sorry, there was a problem',\n  },\n  updateMessageSuccess: {\n    id: 'app.components.PostComponents.OfficialFeedback.updateMessageSuccess',\n    defaultMessage: 'Your update was published successfully!',\n  },\n  cancel: {\n    id: 'app.components.PostComponents.OfficialFeedback.cancel',\n    defaultMessage: 'Cancel',\n  },\n  official: {\n    id: 'app.components.PostComponents.OfficialFeedback.official',\n    defaultMessage: 'Official',\n  },\n  showMoreActions: {\n    id: 'app.components.PostComponents.OfficialFeedback.showMoreActions',\n    defaultMessage: 'Show more actions',\n  },\n  postedOn: {\n    id: 'app.components.PostComponents.OfficialFeedback.postedOn',\n    defaultMessage: 'Posted on {date}',\n  },\n  lastEdition: {\n    id: 'app.components.PostComponents.OfficialFeedback.lastEdition',\n    defaultMessage: 'Last edited on {date}',\n  },\n  officialUpdateBody: {\n    id: 'app.components.PostComponents.OfficialFeedback.officialUpdateBody',\n    defaultMessage: 'Official update body text',\n  },\n  officialUpdateAuthor: {\n    id: 'app.components.PostComponents.OfficialFeedback.officialUpdateAuthor',\n    defaultMessage: 'Official update author name',\n  },\n});\n","// libraries\nimport React, { PureComponent } from 'react';\nimport { forOwn, isEmpty } from 'lodash-es';\n\n// components\nimport { Input, LocaleSwitcher } from 'cl2-component-library';\nimport MentionsTextArea from 'components/UI/MentionsTextArea';\nimport { Section } from 'components/admin/Section';\nimport Error from 'components/UI/Error';\nimport Button from 'components/UI/Button';\n\n// services\nimport {\n  addOfficialFeedbackToIdea,\n  addOfficialFeedbackToInitiative,\n  updateOfficialFeedback,\n  IOfficialFeedbackData,\n} from 'services/officialFeedback';\n\n// utils\nimport { isPage, isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// typings\nimport { Multiloc, Locale } from 'typings';\n\n// stylings\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\nconst FormLabel = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n\nconst AddOfficialUpdateTitle = styled.h2`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.medium}px;\n  line-height: normal;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n`;\n\nconst StyledLocaleSwitcher = styled(LocaleSwitcher)`\n  width: auto;\n  flex: 1;\n`;\n\nconst StyledMentionsTextArea = styled(MentionsTextArea)`\n  margin-bottom: 12px;\n`;\n\nconst StyledInput = styled(Input)`\n  margin-bottom: 12px;\n`;\n\nconst StyledError = styled(Error)`\n  margin-bottom: 12px;\n`;\n\nconst SuccessMessage = styled.div`\n  font-size: ${fontSizes.base}px;\n  color: ${colors.clGreenSuccess};\n  font-weight: 400;\n  line-height: normal;\n  margin-left: 14px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n`;\n\nconst SubmitButton = styled(Button)``;\n\nconst CancelButton = styled(Button)`\n  margin-left: 10px;\n`;\n\nexport interface OfficialFeedbackFormValues {\n  bodyMultiloc: Multiloc;\n  authorMultiloc: Multiloc;\n}\n\ninterface Props {\n  locale: Locale;\n  tenantLocales: Locale[];\n  postId?: string;\n  postType?: 'idea' | 'initiative';\n  formType: 'new' | 'edit';\n  feedback?: IOfficialFeedbackData;\n  className?: string;\n  onClose?: () => void;\n}\n\ninterface State {\n  selectedLocale: Locale | null;\n  formValues: OfficialFeedbackFormValues;\n  processing?: boolean;\n  error: boolean;\n  success: boolean;\n}\n\nclass OfficialFeedbackForm extends PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedLocale: null,\n      formValues: {\n        authorMultiloc: {},\n        bodyMultiloc: {},\n      },\n      processing: false,\n      error: false,\n      success: false,\n    };\n  }\n\n  componentDidMount() {\n    const { locale, formType } = this.props;\n\n    this.setState({\n      selectedLocale: locale,\n      formValues:\n        formType === 'new'\n          ? this.getEmptyFormValues()\n          : this.getPreviouslySavedFormValues(),\n    });\n  }\n\n  getEmptyFormValues = () => {\n    const formValues = {\n      bodyMultiloc: {},\n      authorMultiloc: {},\n    };\n\n    this.props.tenantLocales.forEach((locale) => {\n      formValues.bodyMultiloc[locale] = '';\n      formValues.authorMultiloc[locale] = '';\n    });\n\n    return formValues;\n  };\n\n  getPreviouslySavedFormValues = () => {\n    const { feedback } = this.props;\n\n    const formValues = {\n      authorMultiloc: (feedback as IOfficialFeedbackData).attributes\n        .author_multiloc,\n      bodyMultiloc: {},\n    };\n\n    forOwn(\n      (feedback as IOfficialFeedbackData).attributes.body_multiloc,\n      (bodyText, locale) => {\n        formValues.bodyMultiloc[locale] = (bodyText || '').replace(\n          /<span\\sclass=\"cl-mention-user\"[\\S\\s]*?data-user-id=\"([\\S\\s]*?)\"[\\S\\s]*?data-user-slug=\"([\\S\\s]*?)\"[\\S\\s]*?>@([\\S\\s]*?)<\\/span>/gi,\n          '@[$3]($2)'\n        );\n      }\n    );\n\n    return formValues;\n  };\n\n  handleOnLocaleChange = (locale: Locale) => {\n    this.setState({ selectedLocale: locale });\n  };\n\n  handleBodyOnChange = (body: string, locale: Locale | undefined) => {\n    if (locale) {\n      this.setState((state) => ({\n        error: false,\n        success: false,\n        formValues: {\n          ...state.formValues,\n          bodyMultiloc: {\n            ...state.formValues.bodyMultiloc,\n            [locale]: body,\n          },\n        },\n      }));\n    }\n  };\n\n  handleAuthorOnChange = (author: string, locale: Locale | undefined) => {\n    if (locale) {\n      this.setState((state) => ({\n        error: false,\n        success: false,\n        formValues: {\n          ...state.formValues,\n          authorMultiloc: {\n            ...state.formValues.authorMultiloc,\n            [locale]: author,\n          },\n        },\n      }));\n    }\n  };\n\n  validate = () => {\n    const { tenantLocales } = this.props;\n    const { formValues } = this.state;\n\n    let validated = false;\n\n    tenantLocales.forEach((locale) => {\n      if (\n        !isEmpty(formValues.authorMultiloc[locale]) &&\n        !isEmpty(formValues.bodyMultiloc[locale])\n      ) {\n        validated = true;\n      }\n    });\n\n    tenantLocales.forEach((locale) => {\n      if (\n        (!isEmpty(formValues.authorMultiloc[locale]) &&\n          isEmpty(formValues.bodyMultiloc[locale])) ||\n        (isEmpty(formValues.authorMultiloc[locale]) &&\n          !isEmpty(formValues.bodyMultiloc[locale]))\n      ) {\n        validated = false;\n      }\n    });\n\n    return validated;\n  };\n\n  handleOnSubmit = async (event: React.FormEvent) => {\n    const { postId, postType, formType, feedback, onClose } = this.props;\n    const { formValues, processing } = this.state;\n\n    event.preventDefault();\n\n    if (!processing && this.validate()) {\n      this.setState({\n        processing: true,\n        error: false,\n        success: false,\n      });\n\n      const feedbackValues = {\n        author_multiloc: formValues.authorMultiloc,\n        body_multiloc: {} as Multiloc,\n      };\n\n      forOwn(formValues.bodyMultiloc, (bodyText, locale) => {\n        feedbackValues.body_multiloc[locale] = (bodyText || '').replace(\n          /@\\[(.*?)\\]\\((.*?)\\)/gi,\n          '@$2'\n        );\n      });\n\n      try {\n        if (formType === 'new' && postId && postType === 'idea') {\n          await addOfficialFeedbackToIdea(postId, feedbackValues);\n          trackEventByName(tracks.officialFeedbackGiven, {\n            location: isPage('admin', location.pathname)\n              ? 'Admin/idea manager'\n              : 'Citizen/idea page',\n          });\n        }\n\n        if (formType === 'new' && postId && postType === 'initiative') {\n          await addOfficialFeedbackToInitiative(postId, feedbackValues);\n          trackEventByName(tracks.officialFeedbackGiven, {\n            location: isPage('admin', location.pathname)\n              ? 'Admin/initiative manager'\n              : 'Citizen/initiative page',\n          });\n        }\n\n        if (formType === 'edit' && !isNilOrError(feedback) && onClose) {\n          await updateOfficialFeedback(feedback.id, feedbackValues);\n          onClose();\n        }\n\n        this.setState({\n          formValues: this.getEmptyFormValues(),\n          processing: false,\n          success: true,\n        });\n\n        setTimeout(() => this.setState({ success: false }), 6000);\n      } catch {\n        this.setState({\n          processing: false,\n          error: true,\n          success: false,\n        });\n      }\n    }\n  };\n\n  render() {\n    const {\n      formType,\n      onClose,\n      className,\n      tenantLocales,\n      intl: { formatMessage },\n    } = this.props;\n    const {\n      selectedLocale,\n      formValues,\n      processing,\n      error,\n      success,\n    } = this.state;\n    const errorMessage = error\n      ? formatMessage(messages.updateButtonError)\n      : null;\n    const successMessage = success\n      ? formatMessage(messages.updateMessageSuccess)\n      : null;\n\n    if (selectedLocale) {\n      return (\n        <Container className={className || ''}>\n          <Section id=\"official-feedback-form\">\n            <FormLabel>\n              {formType === 'new' && (\n                <AddOfficialUpdateTitle>\n                  <FormattedMessage {...messages.addOfficalUpdate} />\n                </AddOfficialUpdateTitle>\n              )}\n\n              <StyledLocaleSwitcher\n                locales={tenantLocales}\n                selectedLocale={selectedLocale}\n                onSelectedLocaleChange={this.handleOnLocaleChange}\n                values={formValues as any}\n              />\n            </FormLabel>\n\n            <StyledMentionsTextArea\n              name=\"official-feedback-form-mentions-textarea\"\n              locale={selectedLocale}\n              ariaLabel={formatMessage(messages.officialUpdateBody)}\n              value={formValues.bodyMultiloc?.[selectedLocale] || ''}\n              onChange={this.handleBodyOnChange}\n              placeholder={formatMessage(messages.textAreaPlaceholder)}\n              rows={8}\n              padding=\"12px\"\n              fontSize={`${fontSizes.base}px`}\n              background=\"#fff\"\n            />\n\n            <StyledInput\n              type=\"text\"\n              locale={selectedLocale}\n              value={formValues.authorMultiloc?.[selectedLocale] || ''}\n              onChange={this.handleAuthorOnChange}\n              placeholder={formatMessage(messages.officialNamePlaceholder)}\n              ariaLabel={formatMessage(messages.officialUpdateAuthor)}\n            />\n          </Section>\n\n          <StyledError text={errorMessage} marginTop=\"0px\" />\n\n          <ButtonContainer>\n            <SubmitButton\n              className=\"e2e-official-feedback-form-submit-button\"\n              bgColor={\n                formType === 'edit' ? colors.adminTextColor : colors.clRed\n              }\n              icon=\"pen\"\n              textColor=\"white\"\n              fullWidth={formType === 'new'}\n              onClick={this.handleOnSubmit}\n              disabled={!this.validate()}\n              processing={processing}\n            >\n              {formType === 'edit' ? (\n                <FormattedMessage {...messages.updateButtonSaveEditForm} />\n              ) : (\n                <FormattedMessage {...messages.publishButtonText} />\n              )}\n            </SubmitButton>\n\n            {successMessage && (\n              <SuccessMessage>{successMessage}</SuccessMessage>\n            )}\n\n            {onClose && (\n              <CancelButton\n                buttonStyle=\"secondary\"\n                onClick={onClose}\n                textColor={\n                  formType === 'edit' ? colors.adminTextColor : colors.clRed\n                }\n              >\n                <FormattedMessage {...messages.cancel} />\n              </CancelButton>\n            )}\n          </ButtonContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default injectIntl<Props>(OfficialFeedbackForm);\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { IRelationship, Multiloc } from 'typings';\n\nexport interface IOfficialFeedbackData {\n  id: string;\n  type: 'official_feedback';\n  attributes: {\n    body_multiloc: Multiloc;\n    author_multiloc: Multiloc;\n    created_at: string;\n    updated_at: string;\n  };\n  relationships: {\n    idea: {\n      data: IRelationship;\n    };\n    user: {\n      data: IRelationship | null;\n    };\n  };\n}\n\nexport interface IOfficialFeedback {\n  data: IOfficialFeedbackData;\n}\n\nexport interface IOfficialFeedbacks {\n  data: IOfficialFeedbackData[];\n}\n\nexport interface INewFeedback {\n  author_multiloc: Multiloc;\n  body_multiloc: Multiloc;\n}\n\nexport function officialFeedbackStream(officialFeedbackId: string) {\n  return streams.get<IOfficialFeedback>({\n    apiEndpoint: `${API_PATH}/official_feedback/${officialFeedbackId}`,\n  });\n}\n\nexport function updateOfficialFeedback(\n  officialFeedbackId: string,\n  object: INewFeedback\n) {\n  return streams.update<IOfficialFeedback>(\n    `${API_PATH}/official_feedback/${officialFeedbackId}`,\n    officialFeedbackId,\n    { official_feedback: object }\n  );\n}\n\n// idea\n\nexport function officialFeedbacksForIdeaStream(\n  ideaId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IOfficialFeedbacks>({\n    apiEndpoint: `${API_PATH}/ideas/${ideaId}/official_feedback`,\n    ...streamParams,\n  });\n}\n\nexport async function addOfficialFeedbackToIdea(\n  ideaId: string,\n  feedBack: INewFeedback\n) {\n  const response = await streams.add<IOfficialFeedback>(\n    `${API_PATH}/ideas/${ideaId}/official_feedback`,\n    { official_feedback: feedBack }\n  );\n  await streams.fetchAllWith({\n    apiEndpoint: [`${API_PATH}/stats/ideas_count`],\n  });\n  return response;\n}\n\nexport async function deleteOfficialFeedbackFromIdea(ideaId: string) {\n  const response = await streams.delete(\n    `${API_PATH}/official_feedback/${ideaId}`,\n    ideaId\n  );\n  await streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/ideas/${ideaId}/official_feedback`,\n      `${API_PATH}/stats/ideas_count`,\n    ],\n  });\n  return response;\n}\n\n// ------\n\n// initiative\n\nexport function officialFeedbacksForInitiativeStream(\n  initiativeId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IOfficialFeedbacks>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}/official_feedback`,\n    ...streamParams,\n  });\n}\n\nexport async function addOfficialFeedbackToInitiative(\n  initiativeId: string,\n  feedBack: INewFeedback\n) {\n  const response = await streams.add<IOfficialFeedback>(\n    `${API_PATH}/initiatives/${initiativeId}/official_feedback`,\n    { official_feedback: feedBack }\n  );\n  await streams.fetchAllWith({\n    apiEndpoint: [`${API_PATH}/stats/initiatives_count`],\n  });\n  return response;\n}\n\nexport async function deleteOfficialFeedbackFromInitiative(\n  initiativeId: string\n) {\n  const response = await streams.delete(\n    `${API_PATH}/official_feedback/${initiativeId}`,\n    initiativeId\n  );\n  await streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/initiatives/${initiativeId}/official_feedback`,\n      `${API_PATH}/stats/initiatives_count`,\n    ],\n  });\n  return response;\n}\n\n// ------\n","import React from 'react';\nimport { get, isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, switchMap, filter, tap } from 'rxjs/operators';\nimport {\n  IOfficialFeedbacks,\n  officialFeedbacksForIdeaStream,\n  officialFeedbacksForInitiativeStream,\n} from 'services/officialFeedback';\n\nexport interface InputProps {\n  postId: string | null;\n  postType: 'idea' | 'initiative';\n}\n\ntype children = (\n  renderProps: GetOfficialFeedbacksChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\nexport type GetOfficialFeedbacksChildProps = State & {\n  onLoadMore: () => void;\n};\n\ninterface State {\n  officialFeedbacksList: IOfficialFeedbacks | null | undefined | Error;\n  hasMore: boolean;\n  querying: boolean;\n  loadingMore: boolean;\n}\n\nexport default class GetOfficialFeedbacks extends React.Component<\n  Props,\n  State\n> {\n  private initialState: State;\n  private postId$: BehaviorSubject<string | null>;\n  private pageSize$: BehaviorSubject<number>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    const initialState = {\n      officialFeedbacksList: undefined,\n      hasMore: false,\n      querying: true,\n      loadingMore: false,\n    };\n    this.initialState = initialState;\n    this.state = initialState;\n    this.postId$ = new BehaviorSubject(props.postId);\n    this.pageSize$ = new BehaviorSubject(1);\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    const { postType } = this.props;\n    this.subscriptions = [\n      this.postId$\n        .pipe(\n          distinctUntilChanged(),\n          filter((postId) => isString(postId)),\n          tap(() => this.setState(this.initialState)),\n          switchMap((postId: string) => {\n            return this.pageSize$.pipe(\n              distinctUntilChanged(),\n              switchMap((pageSize) => {\n                const isLoadingMore = pageSize !== 1;\n                const queryParameters = {\n                  'page[number]': 1,\n                  'page[size]': pageSize,\n                };\n\n                this.setState({\n                  querying: !isLoadingMore,\n                  loadingMore: isLoadingMore,\n                });\n\n                switch (postType) {\n                  case 'idea':\n                    return officialFeedbacksForIdeaStream(postId, {\n                      queryParameters,\n                    }).observable;\n                  case 'initiative':\n                    return officialFeedbacksForInitiativeStream(postId, {\n                      queryParameters,\n                    }).observable;\n                }\n              })\n            );\n          })\n        )\n        .subscribe((officialFeedbacksList) => {\n          const selfLink = get(officialFeedbacksList, 'links.self');\n          const lastLink = get(officialFeedbacksList, 'links.last');\n          const hasMore =\n            isString(selfLink) && isString(lastLink) && selfLink !== lastLink;\n\n          this.setState({\n            hasMore,\n            officialFeedbacksList: !isNilOrError(officialFeedbacksList)\n              ? officialFeedbacksList\n              : null,\n            querying: false,\n            loadingMore: false,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.postId !== prevProps.postId) {\n      this.pageSize$.next(1);\n      this.postId$.next(this.props.postId);\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  loadMore = () => {\n    if (!this.state.loadingMore && this.state.hasMore) {\n      const pageSize = this.pageSize$.getValue();\n      this.pageSize$.next(pageSize + 10);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return (children as children)({\n      ...this.state,\n      onLoadMore: this.loadMore,\n    });\n  }\n}\n"],"sourceRoot":""}