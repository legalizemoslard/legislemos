{"version":3,"sources":["webpack:///./app/containers/IdeasNewPage/index.tsx","webpack:///./app/containers/IdeasNewPage/tracks.ts","webpack:///./app/services/globalState.ts","webpack:///./app/containers/IdeasNewPage/messages.ts","webpack:///./app/containers/IdeasNewPage/IdeasNewButtonBar.tsx","webpack:///./app/containers/IdeasNewPage/IdeasNewMeta.tsx","webpack:///./app/components/ButtonBar/index.tsx","webpack:///./app/resources/GetTopics.tsx","webpack:///./app/containers/IdeasNewPage/NewIdeaForm.tsx"],"names":["Container","styled","div","colors","background","props","theme","menuHeight","footerHeight","media","smallerThanMaxTablet","mobileMenuHeight","mobileTopBarHeight","PageContainer","main","ButtonBarContainer","IdeasNewPage","authUser","project","isNilOrError","isAdmin","data","isModerator","isSuperAdmin","attributes","action_descriptor","posting_idea","enabled","clHistory","replace","previousPathName","locale","appConfiguration","globalState","get","title","description","selectedTopics","budget","proposedBudget","position","position_coordinates","imageFile","ideaFiles","authorId","set","submitError","processing","ideaTitle","ideaDescription","locationDescription","isEmpty","locationGeoJSON","geocode","ideaObject","proposed_budget","author_id","publication_status","title_multiloc","body_multiloc","topic_ids","project_id","id","location_point_geojson","location_description","addIdea","idea","ideaId","imageToAddPromise","addIdeaImage","base64","Promise","resolve","filesToAddPromises","map","file","addIdeaFile","name","all","apiErrors","image","fileOrImageError","setTimeout","push","pathname","slug","search","profanityApiError","base","find","apiError","error","titleProfanityError","blocked_words","some","blockedWord","attribute","descriptionProfanityError","trackEventByName","tracks","projectId","profaneMessage","location","userId","host","init","ideaSlug","imageId","this","parse","ignoreQueryPrefix","decoder","str","_defaultEncoder","_charset","type","parseFloat","lat","lng","redirectIfNotPermittedOnPage","isNumber","reverseGeocode","then","address","coordinates","prevProps","className","onSubmit","handleOnIdeaSubmit","onTitleChange","onDescriptionChange","form","PureComponent","Data","adopt","params","render","projectSlug","PreviousPathnameContext","Consumer","withRouter","inputProps","dataProps","stream","observer","observable","Observable","pipe","startWith","scan","oldState","stateInput","propertyName","updatedStateProperties","filter","state","isObject","publishReplay","refCount","subscribe","initialState","filteredState","distinctUntilChanged","newFilteredState","newState","next","has","first","toPromise","defineMessages","ideaFormTitle","defaultMessage","optionFormTitle","contributionFormTitle","projectFormTitle","questionFormTitle","issueFormTitle","submitNewIdea","submitApiError","or","goBack","shareViaMessenger","shareOnTwitter","fileUploadError","ideaNewMetaTitle","optionMetaTitle","projectMetaTitle","questionMetaTitle","issueMetaTitle","contributionMetaTitle","ideaNewMetaDescription","ButtonBarInner","IdeasNewButtonBar","eventEmitter","emit","FormattedMessage","messages","subscriptions","globalState$","setState","forEach","subscription","unsubscribe","submitErrorMessage","getSubmitErrorMessage","text","onClick","handleOnSubmitButtonClick","marginTop","showBackground","showIcon","IdeasNewMeta","React","memo","locales","localize","formatMessage","intl","phases","window","projectName","inputTerm","getInputTerm","process_type","ideasIndexTitle","getInputTermMessage","option","question","issue","contribution","ideasIndexDescription","Helmet","unread_notifications","content","property","href","IdeasNewMetaWithHoc","injectIntl","dataprops","ButtonBar","classNames","timeout","children","GetTopics","topics","undefined","topicIds","code","exclude_code","sort","inputProps$","BehaviorSubject","prev","isEqual","switchMap","queryParameters","projectTopicsStream","topic","relationships","combineLatest","topicId","topicByIdStream","length","of","topicsStream","Component","Title","h1","colorText","fontSizes","xxxxl","xxxl","NewIdeaForm","ideaFormOutput","hasTitleProfanityError","hasDescriptionProfanityError","handleIdeaFormOutput"],"mappings":"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","file":"95.78720ce4ba70eff8be40.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isEmpty, isNumber, get } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { parse } from 'qs';\n\n// libraries\nimport { withRouter, WithRouterProps } from 'react-router';\nimport clHistory from 'utils/cl-router/history';\n\n// components\nimport IdeasNewButtonBar from './IdeasNewButtonBar';\nimport NewIdeaForm from './NewIdeaForm';\nimport IdeasNewMeta from './IdeasNewMeta';\n\n// services\nimport { addIdea, IIdeaAdd } from 'services/ideas';\nimport { addIdeaFile } from 'services/ideaFiles';\nimport { addIdeaImage } from 'services/ideaImages';\nimport {\n  globalState,\n  IGlobalStateService,\n  IIdeasPageGlobalState,\n} from 'services/globalState';\nimport { isAdmin, isSuperAdmin, isModerator } from 'services/permissions/roles';\n\n// resources\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport { PreviousPathnameContext } from 'context';\n\n// utils\nimport { geocode, reverseGeocode } from 'utils/locationTools';\n\n// style\nimport { media, colors } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\n// tracks\nimport tracks from './tracks';\nimport { trackEventByName } from 'utils/analytics';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\n\nconst Container = styled.div`\n  background: ${colors.background};\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n\n  ${media.smallerThanMaxTablet`\n    min-height: calc(100vh - ${(props) => props.theme.mobileMenuHeight}px - ${(\n    props\n  ) => props.theme.mobileTopBarHeight}px);\n  `}\n`;\n\nconst PageContainer = styled.main`\n  width: 100%;\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  position: relative;\n\n  ${media.smallerThanMaxTablet`\n    min-height: calc(100vh - ${(props) => props.theme.mobileMenuHeight}px - ${(\n    props\n  ) => props.theme.mobileTopBarHeight}px);\n  `}\n`;\n\nconst ButtonBarContainer = styled.div`\n  width: 100%;\n  height: 68px;\n  position: fixed;\n  z-index: 2;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #fff;\n  border-top: solid 1px #ddd;\n`;\n\ninterface InputProps {}\n\ninterface DataProps {\n  locale: GetLocaleChildProps;\n  appConfiguration: GetAppConfigurationChildProps;\n  authUser: GetAuthUserChildProps;\n  project: GetProjectChildProps;\n  previousPathName: string | null;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass IdeasNewPage extends PureComponent<Props & WithRouterProps, State> {\n  globalState: IGlobalStateService<IIdeasPageGlobalState>;\n\n  constructor(props) {\n    super(props);\n    const initialGlobalState: IIdeasPageGlobalState = {\n      title: null,\n      description: null,\n      selectedTopics: [],\n      budget: null,\n      proposedBudget: null,\n      position: '',\n      position_coordinates: null,\n      submitError: false,\n      titleProfanityError: false,\n      descriptionProfanityError: false,\n      fileOrImageError: false,\n      processing: false,\n      ideaId: null,\n      ideaSlug: null,\n      imageFile: [],\n      imageId: null,\n      ideaFiles: [],\n      authorId: null,\n    };\n    this.globalState = globalState.init('IdeasNewPage', initialGlobalState);\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const { lat, lng } = parse(location.search, {\n      ignoreQueryPrefix: true,\n      decoder: (str, _defaultEncoder, _charset, type) => {\n        return type === 'value' ? parseFloat(str) : str;\n      },\n    }) as { [key: string]: string | number };\n\n    this.redirectIfNotPermittedOnPage();\n\n    if (isNumber(lat) && isNumber(lng)) {\n      reverseGeocode(lat, lng).then((address) => {\n        this.globalState.set({\n          // When an idea is posted through the map, Google Maps gets an approximate address,\n          // but we also keep the exact coordinates from the click so the location indicator keeps its initial position on the map\n          // and doesn't read just together with the address correction/approximation\n          position: address,\n          position_coordinates: {\n            type: 'Point',\n            coordinates: [lng, lat],\n          },\n        });\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { authUser, project } = this.props;\n\n    if (prevProps.project !== project || prevProps.authUser !== authUser) {\n      this.redirectIfNotPermittedOnPage();\n    }\n  }\n\n  redirectIfNotPermittedOnPage = () => {\n    const { authUser, project } = this.props;\n    const isPrivilegedUser =\n      !isNilOrError(authUser) &&\n      (isAdmin({ data: authUser }) ||\n        isModerator({ data: authUser }) ||\n        isSuperAdmin({ data: authUser }));\n\n    if (\n      !isPrivilegedUser &&\n      (authUser === null ||\n        (!isNilOrError(project) &&\n          !project.attributes.action_descriptor.posting_idea.enabled))\n    ) {\n      clHistory.replace(\n        this.props.previousPathName || (!authUser ? '/sign-up' : '/')\n      );\n    }\n  };\n\n  handleOnIdeaSubmit = async () => {\n    const { locale, authUser, project, appConfiguration } = this.props;\n    const {\n      title,\n      description,\n      selectedTopics,\n      budget,\n      proposedBudget,\n      position,\n      position_coordinates,\n      imageFile,\n      ideaFiles,\n      authorId,\n    } = await this.globalState.get();\n\n    if (\n      !isNilOrError(locale) &&\n      !isNilOrError(authUser) &&\n      !isNilOrError(project)\n    ) {\n      this.globalState.set({ submitError: false, processing: true });\n\n      try {\n        const ideaTitle = { [locale]: title as string };\n        const ideaDescription = { [locale]: description || '' };\n        const locationDescription = !isEmpty(position) ? position : null;\n        let locationGeoJSON: GeoJSON.Point | null = position_coordinates;\n\n        if (!locationGeoJSON) {\n          locationGeoJSON = await geocode(position);\n        }\n\n        const ideaObject: IIdeaAdd = {\n          budget,\n          proposed_budget: proposedBudget,\n          author_id: authorId,\n          publication_status: 'published',\n          title_multiloc: ideaTitle,\n          body_multiloc: ideaDescription,\n          topic_ids: selectedTopics,\n          project_id: project.id,\n          location_point_geojson: locationGeoJSON,\n          location_description: locationDescription,\n        };\n\n        const idea = await addIdea(ideaObject);\n        const ideaId = idea.data.id;\n\n        try {\n          const imageToAddPromise =\n            imageFile && imageFile[0]\n              ? addIdeaImage(ideaId, imageFile[0].base64, 0)\n              : Promise.resolve(null);\n          const filesToAddPromises = ideaFiles.map((file) =>\n            addIdeaFile(ideaId, file.base64, file.name)\n          );\n\n          await Promise.all([\n            imageToAddPromise,\n            ...filesToAddPromises,\n          ] as Promise<any>[]);\n        } catch (error) {\n          const apiErrors = get(error, 'json.errors');\n          // eslint-disable-next-line no-console\n          if (process.env.NODE_ENV === 'development') console.log(error);\n\n          if (apiErrors && apiErrors.image) {\n            this.globalState.set({\n              fileOrImageError: true,\n            });\n          }\n        }\n\n        const { fileOrImageError } = await this.globalState.get();\n        if (fileOrImageError) {\n          setTimeout(() => {\n            clHistory.push({\n              pathname: `/ideas/${idea.data.attributes.slug}`,\n              search: `?new_idea_id=${ideaId}`,\n            });\n          }, 4000);\n        } else {\n          clHistory.push({\n            pathname: `/ideas/${idea.data.attributes.slug}`,\n            search: `?new_idea_id=${ideaId}`,\n          });\n        }\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        if (process.env.NODE_ENV === 'development') console.log(error);\n        const apiErrors = get(error, 'json.errors');\n        const profanityApiError = apiErrors.base.find(\n          (apiError) => apiError.error === 'includes_banned_words'\n        );\n\n        if (profanityApiError) {\n          const titleProfanityError = profanityApiError.blocked_words.some(\n            (blockedWord) => blockedWord.attribute === 'title_multiloc'\n          );\n          const descriptionProfanityError = profanityApiError.blocked_words.some(\n            (blockedWord) => blockedWord.attribute === 'body_multiloc'\n          );\n\n          if (titleProfanityError) {\n            trackEventByName(tracks.titleProfanityError.name, {\n              locale,\n              ideaId: null,\n              projectId: !isNilOrError(project) ? project.id : null,\n              profaneMessage: title,\n              location: 'IdeasNewPage (citizen side)',\n              userId: !isNilOrError(authUser) ? authUser.id : null,\n              host: !isNilOrError(appConfiguration)\n                ? appConfiguration.attributes.host\n                : null,\n            });\n            this.globalState.set({\n              titleProfanityError,\n            });\n          }\n\n          if (descriptionProfanityError) {\n            trackEventByName(tracks.descriptionProfanityError.name, {\n              locale,\n              ideaId: null,\n              projectId: !isNilOrError(project) ? project.id : null,\n              profaneMessage: title,\n              location: 'IdeasNewPage (citizen side)',\n              userId: !isNilOrError(authUser) ? authUser.id : null,\n              host: !isNilOrError(appConfiguration)\n                ? appConfiguration.attributes.host\n                : null,\n            });\n            this.globalState.set({\n              descriptionProfanityError,\n            });\n          }\n        }\n\n        this.globalState.set({ processing: false, submitError: true });\n      }\n    }\n  };\n\n  onTitleChange = (title: string) => {\n    this.globalState.set({\n      title,\n      titleProfanityError: false,\n    });\n  };\n\n  onDescriptionChange = (description: string) => {\n    this.globalState.set({\n      description,\n      descriptionProfanityError: false,\n    });\n  };\n\n  render() {\n    const { project } = this.props;\n\n    if (!isNilOrError(project)) {\n      return (\n        <Container id=\"e2e-idea-new-page\">\n          <IdeasNewMeta />\n          <PageContainer className=\"ideaForm\">\n            <NewIdeaForm\n              onSubmit={this.handleOnIdeaSubmit}\n              projectId={project.id}\n              onTitleChange={this.onTitleChange}\n              onDescriptionChange={this.onDescriptionChange}\n            />\n          </PageContainer>\n          <ButtonBarContainer>\n            <IdeasNewButtonBar\n              form=\"idea-form\"\n              onSubmit={this.handleOnIdeaSubmit}\n            />\n          </ButtonBarContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps & WithRouterProps>({\n  locale: <GetLocale />,\n  appConfiguration: <GetAppConfiguration />,\n  authUser: <GetAuthUser />,\n  project: ({ params, render }) => (\n    <GetProject projectSlug={params.slug}>{render}</GetProject>\n  ),\n  previousPathName: ({ render }) => (\n    <PreviousPathnameContext.Consumer>\n      {render as any}\n    </PreviousPathnameContext.Consumer>\n  ),\n});\n\nexport default withRouter((inputProps: InputProps & WithRouterProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeasNewPage {...inputProps} {...dataProps} />}\n  </Data>\n));\n","export default {\n  titleProfanityError: {\n    name: 'Profane idea title blocked',\n  },\n  descriptionProfanityError: {\n    name: 'Profane idea description blocked',\n  },\n};\n","import { Observer, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  startWith,\n  scan,\n  refCount,\n  publishReplay,\n  first,\n} from 'rxjs/operators';\nimport { isObject, isEmpty, has } from 'lodash-es';\n\n// utils\nimport shallowCompare from 'utils/shallowCompare';\n\n// typings\nimport { UploadFile } from 'typings';\n\nexport interface IIdeasPageGlobalState {\n  title: string | null;\n  description: string | null;\n  selectedTopics: string[];\n  budget: number | null;\n  proposedBudget: number | null;\n  position: string;\n  position_coordinates: GeoJSON.Point | null;\n  submitError: boolean;\n  titleProfanityError: boolean;\n  descriptionProfanityError: boolean;\n  fileOrImageError: boolean;\n  processing: boolean;\n  ideaId: string | null;\n  ideaSlug: string | null;\n  imageFile: UploadFile[];\n  imageId: string | null;\n  ideaFiles: UploadFile[];\n  authorId: string | null;\n}\n\nexport interface IAdminFullWidth {\n  enabled: boolean;\n}\n\nexport interface IAdminNoPadding {\n  enabled: boolean;\n}\n\ntype valueof<T> = T[keyof T];\n\ntype State = {\n  IdeasNewPage?: IIdeasPageGlobalState;\n  IdeasEditPage?: IIdeasPageGlobalState;\n  AdminFullWidth?: IAdminFullWidth;\n  AdminNoPadding?: IAdminNoPadding;\n};\n\ninterface IStateInput {\n  propertyName: keyof State;\n  updatedStateProperties: valueof<State>;\n}\n\ninterface IStream<T> {\n  observer: Observer<T>;\n  observable: Observable<T>;\n}\n\nexport interface IGlobalStateService<T> {\n  observable: Observable<T>;\n  set: (newState: Partial<T>) => void;\n  get: () => Promise<T>;\n}\n\nclass GlobalState {\n  private stream: IStream<any>;\n\n  constructor() {\n    this.stream = {\n      observer: null as any,\n      observable: null as any,\n    };\n\n    this.stream.observable = new Observable<State>((observer) => {\n      this.stream.observer = observer;\n    }).pipe(\n      startWith({}),\n      scan((oldState: State, stateInput: IStateInput) => {\n        const { propertyName, updatedStateProperties } = stateInput;\n\n        const newState = {\n          ...oldState,\n          [propertyName]: {\n            ...oldState[propertyName],\n            ...updatedStateProperties,\n          },\n        };\n\n        return newState;\n      }),\n      filter((state) => isObject(state) && !isEmpty(state)),\n      publishReplay(1),\n      refCount()\n    );\n\n    // keep stream hot\n    this.stream.observable.subscribe();\n  }\n\n  init<T>(propertyName: keyof State, initialState?: T) {\n    const observable: Observable<T> = this.stream.observable.pipe(\n      map((state) => state[propertyName]),\n      filter(\n        (filteredState) => isObject(filteredState) && !isEmpty(filteredState)\n      ),\n      distinctUntilChanged((filteredState, newFilteredState) =>\n        shallowCompare(filteredState, newFilteredState)\n      )\n    );\n\n    const set = (newState: Partial<T>) => this.set(propertyName, newState);\n\n    const get = () => this.get<T>(propertyName);\n\n    if (initialState && isObject(initialState) && !isEmpty(initialState)) {\n      if (!this.stream.observer) {\n        setTimeout(() => set(initialState), 0);\n      } else {\n        set(initialState);\n      }\n    }\n\n    return {\n      observable,\n      set,\n      get,\n    } as IGlobalStateService<T>;\n  }\n\n  set<T>(propertyName: keyof State, updatedStateProperties: Partial<T>) {\n    this.stream.observer.next({\n      propertyName,\n      updatedStateProperties,\n    });\n  }\n\n  get<T>(propertyName: keyof State) {\n    return this.stream.observable\n      .pipe(\n        map((state) => (has(state, propertyName) ? state[propertyName] : null)),\n        first()\n      )\n      .toPromise() as Promise<T>;\n  }\n}\n\nexport const globalState = new GlobalState();\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  ideaFormTitle: {\n    id: 'app.containers.IdeasNewPage.ideaFormTitle',\n    defaultMessage: 'Add new idea',\n  },\n  optionFormTitle: {\n    id: 'app.containers.IdeasNewPage.optionFormTitle',\n    defaultMessage: 'Add new option',\n  },\n  contributionFormTitle: {\n    id: 'app.containers.IdeasNewPage.contributionFormTitle',\n    defaultMessage: 'Add new contribution',\n  },\n  projectFormTitle: {\n    id: 'app.containers.IdeasNewPage.projectFormTitle',\n    defaultMessage: 'Add new project',\n  },\n  questionFormTitle: {\n    id: 'app.containers.IdeasNewPage.questionFormTitle',\n    defaultMessage: 'Add new question',\n  },\n  issueFormTitle: {\n    id: 'app.containers.IdeasNewPage.issueFormTitle',\n    defaultMessage: 'Add new issue',\n  },\n  submitNewIdea: {\n    id: 'app.containers.IdeasNewPage.submitNewIdea',\n    defaultMessage: 'Submit',\n  },\n  submitApiError: {\n    id: 'app.containers.IdeasNewPage.submitApiError',\n    defaultMessage:\n      'There was an issue submitting the form. Please check for any errors and try again.',\n  },\n  or: {\n    id: 'app.containers.IdeasNewPage.or',\n    defaultMessage: 'Or',\n  },\n  goBack: {\n    id: 'app.containers.IdeasNewPage.goBack',\n    defaultMessage: 'Go back',\n  },\n  shareViaMessenger: {\n    id: 'app.containers.IdeasNewPage.shareViaMessenger',\n    defaultMessage: 'Share via Messenger',\n  },\n  shareOnTwitter: {\n    id: 'app.containers.IdeasNewPage.shareOnTwitter',\n    defaultMessage: 'Share on Twitter',\n  },\n  fileUploadError: {\n    id: 'app.containers.IdeasNewPage.fileUploadError',\n    defaultMessage:\n      'A file failed to upload. Please check the file size and format and try again.',\n  },\n  ideaNewMetaTitle: {\n    id: 'app.containers.IdeasNewPage.ideaNewMetaTitle',\n    defaultMessage: 'Add new idea | {projectName}',\n  },\n  optionMetaTitle: {\n    id: 'app.containers.IdeasNewPage.optionMetaTitle',\n    defaultMessage: 'Add new option | {projectName}',\n  },\n  projectMetaTitle: {\n    id: 'app.containers.IdeasNewPage.projectMetaTitle',\n    defaultMessage: 'Add new project | {projectName}',\n  },\n  questionMetaTitle: {\n    id: 'app.containers.IdeasNewPage.questionMetaTitle',\n    defaultMessage: 'Add new question | {projectName}',\n  },\n  issueMetaTitle: {\n    id: 'app.containers.IdeasNewPage.issueMetaTitle',\n    defaultMessage: 'Add new issue | {projectName}',\n  },\n  contributionMetaTitle: {\n    id: 'app.containers.IdeasNewPage.contributionMetaTitle',\n    defaultMessage: 'Add new contribution | {projectName}',\n  },\n  ideaNewMetaDescription: {\n    id: 'app.containers.IdeasNewPage.ideaNewMetaDescription',\n    defaultMessage:\n      \"Post a submission and join the conversation at {orgName}'s participation platform.\",\n  },\n});\n","import React, { PureComponent } from 'react';\nimport { Subscription } from 'rxjs';\n\n// components\nimport Button from 'components/UI/Button';\nimport Error from 'components/UI/Error';\nimport ButtonBar from 'components/ButtonBar';\n\n// services\nimport {\n  globalState,\n  IGlobalStateService,\n  IIdeasPageGlobalState,\n} from 'services/globalState';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// utils\nimport eventEmitter from 'utils/eventEmitter';\n\n// style\nimport styled from 'styled-components';\n\nconst ButtonBarInner = styled.div`\n  width: 100%;\n  max-width: 700px;\n  display: flex;\n  align-items: center;\n  padding-right: 20px;\n  padding-left: 20px;\n\n  .Button {\n    margin-right: 10px;\n  }\n\n  .Error {\n    flex: 1;\n  }\n`;\n\ninterface Props {\n  onSubmit: () => void;\n  form?: string;\n}\n\ninterface GlobalState {\n  submitError: boolean;\n  processing: boolean;\n  fileOrImageError: boolean;\n}\n\ninterface State extends GlobalState {}\n\nexport default class IdeasNewButtonBar extends PureComponent<Props, State> {\n  globalState: IGlobalStateService<IIdeasPageGlobalState>;\n  subscriptions: Subscription[];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitError: false,\n      processing: false,\n      fileOrImageError: false,\n    };\n    this.globalState = globalState.init<IIdeasPageGlobalState>('IdeasNewPage');\n    this.subscriptions = [];\n  }\n\n  async componentDidMount() {\n    const globalState$ = this.globalState.observable;\n\n    this.subscriptions = [\n      globalState$.subscribe(\n        ({ submitError, processing, fileOrImageError }) => {\n          this.setState({ submitError, processing, fileOrImageError });\n        }\n      ),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  handleOnSubmitButtonClick = () => {\n    eventEmitter.emit('IdeaFormSubmitEvent');\n  };\n\n  getSubmitErrorMessage = () => {\n    const { fileOrImageError, submitError } = this.state;\n\n    if (submitError) {\n      return <FormattedMessage {...messages.submitApiError} />;\n    } else if (fileOrImageError) {\n      return <FormattedMessage {...messages.fileUploadError} />;\n    }\n\n    return null;\n  };\n\n  render() {\n    const { processing } = this.state;\n    let { form } = this.props;\n    const submitErrorMessage = this.getSubmitErrorMessage();\n\n    form = form || '';\n\n    return (\n      <ButtonBar>\n        <ButtonBarInner>\n          <Button\n            form={form}\n            id=\"e2e-idea-new-submit-button\"\n            className=\"e2e-submit-idea-form\"\n            processing={processing}\n            text={<FormattedMessage {...messages.submitNewIdea} />}\n            onClick={this.handleOnSubmitButtonClick}\n          />\n          {submitErrorMessage && (\n            <Error\n              text={submitErrorMessage}\n              marginTop=\"0px\"\n              showBackground={false}\n              showIcon={true}\n            />\n          )}\n        </ButtonBarInner>\n      </ButtonBar>\n    );\n  }\n}\n","// libraries\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { InjectedIntlProps } from 'react-intl';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetAppConfigurationLocales, {\n  GetAppConfigurationLocalesChildProps,\n} from 'resources/GetAppConfigurationLocales';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhases, { GetPhasesChildProps } from 'resources/GetPhases';\n\n// utils\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// services\nimport { getInputTerm } from 'services/participationContexts';\n\ninterface InputProps {}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  locales: GetAppConfigurationLocalesChildProps;\n  project: GetProjectChildProps;\n  phases: GetPhasesChildProps;\n}\n\ninterface Props\n  extends InputProps,\n    DataProps,\n    InjectedIntlProps,\n    InjectedLocalized {}\n\nconst IdeasNewMeta = React.memo<Props>(\n  ({\n    authUser,\n    locales,\n    project,\n    localize,\n    intl: { formatMessage },\n    phases,\n  }) => {\n    const { location } = window;\n\n    if (!isNilOrError(project)) {\n      const projectName = localize(project.attributes.title_multiloc);\n      const inputTerm = getInputTerm(\n        project.attributes.process_type,\n        project,\n        phases\n      );\n      const ideasIndexTitle = formatMessage(\n        getInputTermMessage(inputTerm, {\n          idea: messages.ideaNewMetaTitle,\n          option: messages.optionMetaTitle,\n          project: messages.projectMetaTitle,\n          question: messages.questionMetaTitle,\n          issue: messages.issueMetaTitle,\n          contribution: messages.contributionMetaTitle,\n        }),\n        { projectName }\n      );\n      const ideasIndexDescription = formatMessage(\n        messages.ideaNewMetaDescription,\n        {\n          projectName,\n        }\n      );\n\n      return (\n        <Helmet>\n          <title>\n            {`\n            ${\n              authUser && authUser.attributes.unread_notifications\n                ? `(${authUser.attributes.unread_notifications}) `\n                : ''\n            }\n            ${ideasIndexTitle}\n          `}\n          </title>\n          {getAlternateLinks(locales)}\n          {getCanonicalLink()}\n          <meta name=\"title\" content={ideasIndexTitle} />\n          <meta name=\"description\" content={ideasIndexDescription} />\n          <meta property=\"og:title\" content={ideasIndexTitle} />\n          <meta property=\"og:description\" content={ideasIndexDescription} />\n          <meta property=\"og:url\" content={location.href} />\n        </Helmet>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst IdeasNewMetaWithHoc = injectIntl(injectLocalize(IdeasNewMeta));\n\nconst Data = adopt<DataProps, InputProps & WithRouterProps>({\n  locales: <GetAppConfigurationLocales />,\n  authUser: <GetAuthUser />,\n  project: ({ params, render }) => (\n    <GetProject projectSlug={params.slug}>{render}</GetProject>\n  ),\n  phases: ({ project, render }) => {\n    return (\n      <GetPhases projectId={!isNilOrError(project) ? project.id : null}>\n        {render}\n      </GetPhases>\n    );\n  },\n});\n\nexport default withRouter<InputProps>(\n  (inputProps: InputProps & WithRouterProps) => (\n    <Data {...inputProps}>\n      {(dataprops) => <IdeasNewMetaWithHoc {...inputProps} {...dataprops} />}\n    </Data>\n  )\n);\n","import React from 'react';\n\n// style\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport styled from 'styled-components';\n\nconst transitionDuration = 600;\n\nconst ButtonBarContainer = styled.div`\n  width: 100%;\n  height: 68px;\n  position: fixed;\n  z-index: 2;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #fff;\n  border-top: solid 1px #ddd;\n\n  &.buttonbar-enter {\n    transform: translateY(64px);\n\n    &.buttonbar-enter-active {\n      transform: translateY(0);\n      transition: transform ${transitionDuration}ms\n        cubic-bezier(0.165, 0.84, 0.44, 1);\n    }\n  }\n\n  &.buttonbar-exit {\n    transform: translateY(0);\n\n    &.buttonbar-exit-active {\n      transform: translateY(64px);\n      transition: transform ${transitionDuration}ms\n        cubic-bezier(0.165, 0.84, 0.44, 1);\n    }\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface Props {\n  children: JSX.Element;\n}\n\ninterface GlobalState {\n  submitError: boolean;\n  processing: boolean;\n}\n\ninterface State extends GlobalState {}\n\nexport default class ButtonBar extends React.PureComponent<Props, State> {\n  render() {\n    return (\n      <CSSTransition classNames=\"buttonbar\" timeout={transitionDuration}>\n        <ButtonBarContainer>\n          <Container>{this.props.children}</Container>\n        </ButtonBarContainer>\n      </CSSTransition>\n    );\n  }\n}\n","import React from 'react';\nimport { isEqual } from 'lodash-es';\nimport { Subscription, BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, map } from 'rxjs/operators';\nimport {\n  ITopicData,\n  topicByIdStream,\n  topicsStream,\n  Code,\n} from 'services/topics';\nimport { projectTopicsStream } from 'services/projectTopics';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  // Don't use projectId, ids or the query parameters (code, exclude_code, sort) together\n  // Only one of the three at a time.\n  projectId?: string;\n  topicIds?: string[];\n  code?: Code;\n  exclude_code?: Code;\n  sort?: 'new' | 'custom';\n}\n\ntype children = (renderProps: GetTopicsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  topics: (ITopicData | Error)[] | undefined | null | Error;\n}\n\nexport type GetTopicsChildProps =\n  | (ITopicData | Error)[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetTopics extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      topics: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => isEqual(prev, next)),\n          switchMap(({ topicIds, code, exclude_code, sort, projectId }) => {\n            const queryParameters = { code, exclude_code, sort };\n\n            if (projectId) {\n              return projectTopicsStream(projectId).observable.pipe(\n                map((topics) =>\n                  topics.data\n                    .filter((topic) => topic)\n                    .map((topic) => topic.relationships.topic.data.id)\n                ),\n                switchMap((topicIds) => {\n                  return combineLatest(\n                    topicIds.map((topicId) =>\n                      topicByIdStream(topicId).observable.pipe(\n                        map((topic) =>\n                          !isNilOrError(topic) ? topic.data : topic\n                        )\n                      )\n                    )\n                  );\n                })\n              );\n            } else if (topicIds) {\n              if (topicIds.length > 0) {\n                return combineLatest(\n                  topicIds.map((id) => {\n                    return topicByIdStream(id).observable.pipe(\n                      map((topic) =>\n                        !isNilOrError(topic) ? topic.data : topic\n                      )\n                    );\n                  })\n                );\n              }\n\n              return of(null);\n            } else {\n              return topicsStream({ queryParameters }).observable.pipe(\n                map((topics) => topics.data)\n              );\n            }\n          })\n        )\n        .subscribe((topics) => {\n          this.setState({ topics });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n    this.inputProps$.next({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { topics } = this.state;\n    return (children as children)(topics);\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { Subscription } from 'rxjs';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport IdeaForm, { IIdeaFormOutput } from 'components/IdeaForm';\n\n// resources\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPhases, { GetPhasesChildProps } from 'resources/GetPhases';\n\n// services\nimport {\n  globalState,\n  IGlobalStateService,\n  IIdeasPageGlobalState,\n} from 'services/globalState';\nimport { getInputTerm } from 'services/participationContexts';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// typings\nimport { UploadFile } from 'typings';\n\n// style\nimport { media, fontSizes } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 700px;\n  display: 'flex';\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 100px;\n  padding-right: 20px;\n  padding-left: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  ${media.smallerThanMaxTablet`\n    padding-bottom: 80px;\n    padding-right: 0;\n    padding-left: 0;\n  `}\n`;\n\nconst Title = styled.h1`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.xxxxl}px;\n  line-height: 40px;\n  font-weight: 500;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n  padding-top: 60px;\n  padding-bottom: 40px;\n\n  ${media.smallerThanMaxTablet`\n    font-size: ${fontSizes.xxxl}px;\n    line-height: 34px;\n  `}\n`;\n\ninterface InputProps {\n  onSubmit: () => void;\n  projectId: string;\n  onTitleChange: (title: string) => void;\n  onDescriptionChange: (description: string) => void;\n}\n\ninterface DataProps {\n  project: GetProjectChildProps;\n  phases: GetPhasesChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface GlobalState {\n  title: string | null;\n  description: string | null;\n  selectedTopics: string[];\n  budget: number | null;\n  proposedBudget: number | null;\n  position: string;\n  imageFile: UploadFile[];\n  submitError: boolean;\n  processing: boolean;\n  fileOrImageError: boolean;\n  titleProfanityError: boolean;\n  descriptionProfanityError: boolean;\n  authorId: string | null;\n}\n\ninterface State extends GlobalState {}\n\nclass NewIdeaForm extends PureComponent<Props, State> {\n  globalState: IGlobalStateService<IIdeasPageGlobalState>;\n  subscriptions: Subscription[];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: null,\n      authorId: null,\n      description: null,\n      selectedTopics: [],\n      budget: null,\n      proposedBudget: null,\n      position: '',\n      imageFile: [],\n      submitError: false,\n      processing: false,\n      fileOrImageError: false,\n      titleProfanityError: false,\n      descriptionProfanityError: false,\n    };\n    this.globalState = globalState.init('IdeasNewPage');\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    const globalState$ = this.globalState.observable;\n\n    this.subscriptions = [\n      globalState$.subscribe(\n        ({\n          title,\n          description,\n          selectedTopics,\n          budget,\n          proposedBudget,\n          position,\n          imageFile,\n          submitError,\n          processing,\n          fileOrImageError,\n          titleProfanityError,\n          descriptionProfanityError,\n          authorId,\n        }) => {\n          const newState: State = {\n            title,\n            description,\n            selectedTopics,\n            budget,\n            proposedBudget,\n            position,\n            imageFile,\n            submitError,\n            processing,\n            fileOrImageError,\n            titleProfanityError,\n            descriptionProfanityError,\n            authorId,\n          };\n\n          this.setState(newState);\n        }\n      ),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  handleIdeaFormOutput = async (ideaFormOutput: IIdeaFormOutput) => {\n    const {\n      title,\n      description,\n      selectedTopics,\n      budget,\n      proposedBudget,\n      address: position,\n      imageFile,\n      ideaFiles,\n      authorId,\n    } = ideaFormOutput;\n\n    this.globalState.set({\n      title,\n      description,\n      selectedTopics,\n      budget,\n      proposedBudget,\n      position,\n      imageFile,\n      ideaFiles,\n      authorId,\n    });\n\n    this.props.onSubmit();\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      selectedTopics,\n      budget,\n      proposedBudget,\n      position,\n      imageFile,\n      titleProfanityError,\n      descriptionProfanityError,\n      authorId,\n    } = this.state;\n    const {\n      projectId,\n      project,\n      phases,\n      onTitleChange,\n      onDescriptionChange,\n    } = this.props;\n\n    if (!isNilOrError(project)) {\n      const inputTerm = getInputTerm(\n        project.attributes.process_type,\n        project,\n        phases\n      );\n\n      return (\n        <Container id=\"e2e-new-idea-form\">\n          <Title className=\"e2e-idea-form-title\">\n            <FormattedMessage\n              {...getInputTermMessage(inputTerm, {\n                idea: messages.ideaFormTitle,\n                option: messages.optionFormTitle,\n                project: messages.projectFormTitle,\n                question: messages.questionFormTitle,\n                issue: messages.issueFormTitle,\n                contribution: messages.contributionFormTitle,\n              })}\n            />\n          </Title>\n\n          <IdeaForm\n            authorId={authorId}\n            projectId={projectId}\n            title={title}\n            description={description}\n            selectedTopics={selectedTopics}\n            budget={budget}\n            proposedBudget={proposedBudget}\n            address={position}\n            imageFile={imageFile}\n            hasTitleProfanityError={titleProfanityError}\n            hasDescriptionProfanityError={descriptionProfanityError}\n            onSubmit={this.handleIdeaFormOutput}\n            onTitleChange={onTitleChange}\n            onDescriptionChange={onDescriptionChange}\n          />\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n  phases: ({ projectId, render }) => (\n    <GetPhases projectId={projectId}>{render}</GetPhases>\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <NewIdeaForm {...inputProps} {...dataProps} />}\n  </Data>\n);\n"],"sourceRoot":""}