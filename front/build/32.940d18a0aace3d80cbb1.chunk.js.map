{"version":3,"sources":["webpack:///./app/containers/Admin/projects/edit/events/messages.js","webpack:///./app/components/admin/DateTimePicker/index.tsx","webpack:///./app/containers/Admin/projects/edit/events/edit.tsx","webpack:///./app/resources/GetResourceFileObjects.tsx","webpack:///./app/utils/unsubscribe.ts"],"names":["defineMessages","addEventButton","id","defaultMessage","titleColumnHeader","deleteButtonLabel","editButtonLabel","deleteConfirmationModal","editEventTitle","newEventTitle","titleLabel","locationLabel","dateStartLabel","datesEndLabel","descriptionLabel","saveButtonLabel","saveSuccessLabel","saveErrorMessage","saveSuccessMessage","fileUploadLabel","fileUploadLabelTooltip","titleEvents","subtitleEvents","Container","styled","div","props","theme","borderRadius","fontSizes","base","TimeWrapper","TimeSeparator","newMoment","setState","selectedMoment","onChange","dateMoment","updateDateTime","set","hour","state","get","minute","second","unit","event","value","target","clone","focused","prevProps","this","hours","parseInt","format","minutes","SingleDatePicker","date","onDateChange","handleDateChange","onFocusChange","handleFocusChange","numberOfMonths","firstDayOfWeek","displayFormat","isOutsideRange","type","min","max","step","createTimeChangeHandler","React","PureComponent","AdminProjectEventEdit","titleMultiloc","submitState","attributeDiff","title_multiloc","locationMultiloc","location_multiloc","descriptionMultiloc","description_multiloc","name","moment","toISOString","errors","newFile","prevState","eventFiles","eventFileToRemove","filter","eventFile","base64","eventFilesToRemove","e","preventDefault","isNilOrError","project","projectId","eventResponse","redirect","saving","saved","isEmpty","updateEvent","data","addEvent","eventId","filesToAddPromises","file","remote","map","addEventFile","filesToRemovePromises","deleteEventFile","Promise","all","clHistory","push","isCLErrorJSON","json","FormattedMessage","messages","locale","currentTenant","focusedInput","loaded","subscriptions","remoteEventFiles","locale$","localeStream","observable","currentTenant$","currentAppConfigurationStream","event$","params","eventStream","of","combineLatest","subscribe","eventAttrs","attributes","SectionTitle","className","onSubmit","handleOnSubmit","Section","SectionField","label","valueMultiloc","handleTitleMultilocOnChange","apiErrors","handleLocationMultilocOnChange","Label","start_at","handleDateTimePickerOnChange","end_at","handleDescriptionMultilocOnChange","withCTAButton","IconTooltip","content","onFileAdd","handleEventFileOnAdd","onFileRemove","handleEventFileOnRemove","files","isError","undefined","loading","status","buttonSave","buttonSuccess","messageError","messageSuccess","resourceId","resourceType","GetResourceFileObjects","resetOnChange","inputProps$","BehaviorSubject","pipe","distinctUntilChanged","prev","next","tap","isString","switchMap","streamFn","projectFilesStream","phaseFilesStream","eventFilesStream","pageFilesStream","ideaFilesStream","initiativeFilesStream","length","convertUrlToUploadFileObservable","url","forEach","subscription","unsubscribe","children","Component","sub","isArray"],"mappings":"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","file":"32.940d18a0aace3d80cbb1.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  addEventButton: {\n    id: 'app.containers.AdminPage.ProjectEvents.addEventButton',\n    defaultMessage: 'Add an event',\n  },\n  titleColumnHeader: {\n    id: 'app.containers.AdminPage.ProjectEvents.titleColumnHeader',\n    defaultMessage: 'Title & dates',\n  },\n  deleteButtonLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.deleteButtonLabel',\n    defaultMessage: 'Delete',\n  },\n  editButtonLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.editButtonLabel',\n    defaultMessage: 'Edit',\n  },\n  deleteConfirmationModal: {\n    id: 'app.containers.AdminPage.ProjectEvents.deleteConfirmationModal',\n    defaultMessage:\n      'Are you sure you want to delete this event? There is no way to undo this!',\n  },\n  editEventTitle: {\n    id: 'app.containers.AdminPage.ProjectEvents.editEventTitle',\n    defaultMessage: 'Edit Event',\n  },\n  newEventTitle: {\n    id: 'app.containers.AdminPage.ProjectEvents.newEventTitle',\n    defaultMessage: 'New Event',\n  },\n  titleLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.titleLabel',\n    defaultMessage: 'Title',\n  },\n  locationLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.locationLabel',\n    defaultMessage: 'Location',\n  },\n  dateStartLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.dateStartLabel',\n    defaultMessage: 'Starting date & time',\n  },\n  datesEndLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.datesEndLabel',\n    defaultMessage: 'End date & time',\n  },\n  descriptionLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.descriptionLabel',\n    defaultMessage: 'Description',\n  },\n  saveButtonLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.saveButtonLabel',\n    defaultMessage: 'Save',\n  },\n  saveSuccessLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.saveSuccessLabel',\n    defaultMessage: 'Success!',\n  },\n  saveErrorMessage: {\n    id: 'app.containers.AdminPage.ProjectEvents.saveErrorMessage',\n    defaultMessage: 'We could not save your changes, please try again.',\n  },\n  saveSuccessMessage: {\n    id: 'app.containers.AdminPage.ProjectEvents.saveSuccessMessage',\n    defaultMessage: 'Your changes have been saved.',\n  },\n  fileUploadLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.fileUploadLabel',\n    defaultMessage: 'Add files to this event',\n  },\n  fileUploadLabelTooltip: {\n    id: 'app.containers.AdminPage.ProjectEvents.fileUploadLabelTooltip',\n    defaultMessage:\n      'Files should not be larger than 50Mb. Added files will be shown on the event card directly.',\n  },\n  titleEvents: {\n    id: 'app.containers.AdminPage.ProjectEvents.titleEvents',\n    defaultMessage: 'Manage events',\n  },\n  subtitleEvents: {\n    id: 'app.containers.AdminPage.ProjectEvents.subtitleEvents',\n    defaultMessage:\n      'Add offline events or meetings that are linked to your project here. Upcoming and past events are always shown immediately under your project.',\n  },\n});\n","// must be at the top, before other imports!\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\n// libraries\nimport React from 'react';\nimport moment from 'moment';\nimport { SingleDatePicker } from 'react-dates';\n\n// styling\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  width: 245px;\n  display: flex;\n  position: relative;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  border: solid 1px #ccc;\n\n  input {\n    font-size: ${fontSizes.base}px;\n    font-weight: 400;\n    outline: none;\n    box-shadow: none;\n    border: none;\n    border-radius: 0;\n    background: transparent;\n  }\n\n  .SingleDatePickerInput {\n    outline: none;\n    box-shadow: none;\n    border: none;\n    border-right: solid 1px #ccc;\n    border-radius: 0;\n    background: transparent;\n\n    .DateInput {\n      background: transparent;\n\n      .DateInput_fang {\n        z-index: 1000 !important;\n      }\n\n      input {\n        border-bottom: solid 2px transparent;\n\n        &.DateInput_input__focused {\n          border-bottom: solid 2px #00a699;\n        }\n      }\n    }\n    .DateInput_input {\n      color: inherit;\n    }\n  }\n\n  .SingleDatePicker_picker {\n    top: 69px !important;\n    left: -1px !important;\n  }\n\n  .CalendarMonth_caption {\n    color: inherit;\n  }\n`;\n\nconst TimeWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  input {\n    width: 40px;\n  }\n\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    opacity: 1;\n  }\n`;\n\nconst TimeSeparator = styled.div`\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n\ninterface Props {\n  value: string | undefined;\n  onChange: (arg: moment.Moment) => void;\n}\n\ninterface State {\n  focused: boolean;\n  selectedMoment: moment.Moment;\n}\n\nclass DateTimePicker extends React.PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focused: false,\n      selectedMoment: props.value ? moment(props.value) : moment().second(0),\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.value !== this.props.value) {\n      this.setState({ selectedMoment: moment(this.props.value) });\n    }\n  }\n\n  componentDidMount() {\n    // Update the parent component value, useful when initializing a new picker\n    this.updateDateTime(this.state.selectedMoment);\n  }\n\n  updateDateTime = (newMoment: moment.Moment) => {\n    this.setState({ selectedMoment: newMoment });\n    this.props.onChange(newMoment);\n  };\n\n  handleDateChange = (dateMoment: moment.Moment | null) => {\n    if (dateMoment) {\n      this.updateDateTime(\n        dateMoment.set({\n          hour: this.state.selectedMoment.get('hour'),\n          minute: this.state.selectedMoment.get('minute'),\n          second: this.state.selectedMoment.get('second'),\n        })\n      );\n    }\n  };\n\n  createTimeChangeHandler = (unit: 'hour' | 'minute') => (event) => {\n    const { value } = event.target;\n    const newMoment = this.state.selectedMoment.clone();\n    newMoment.set(unit, value);\n    this.updateDateTime(newMoment);\n  };\n\n  handleFocusChange = ({ focused }) => {\n    this.setState({ focused });\n  };\n\n  isOutsideRange = () => {\n    return false;\n  };\n\n  render() {\n    const { selectedMoment, focused } = this.state;\n    const hours = parseInt(selectedMoment.format('HH'), 10);\n    const minutes = parseInt(selectedMoment.format('mm'), 10);\n\n    return (\n      <Container>\n        <SingleDatePicker\n          id=\"singledatepicker\"\n          date={selectedMoment}\n          onDateChange={this.handleDateChange}\n          focused={focused}\n          onFocusChange={this.handleFocusChange}\n          numberOfMonths={1}\n          firstDayOfWeek={1}\n          displayFormat=\"DD/MM/YYYY\"\n          isOutsideRange={this.isOutsideRange}\n        />\n        <TimeWrapper>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"23\"\n            step=\"1\"\n            value={hours}\n            onChange={this.createTimeChangeHandler('hour')}\n          />\n          <TimeSeparator>:</TimeSeparator>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            step=\"1\"\n            value={minutes}\n            onChange={this.createTimeChangeHandler('minute')}\n          />\n        </TimeWrapper>\n      </Container>\n    );\n  }\n}\n\nexport default DateTimePicker;\n","import React, { PureComponent } from 'react';\nimport { Subscription, combineLatest, of } from 'rxjs';\nimport moment from 'moment';\nimport { isEmpty, get, isError } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// libraries\nimport clHistory from 'utils/cl-router/history';\n\n// components\nimport InputMultilocWithLocaleSwitcher from 'components/UI/InputMultilocWithLocaleSwitcher';\nimport QuillMultilocWithLocaleSwitcher from 'components/UI/QuillEditor/QuillMultilocWithLocaleSwitcher';\nimport ErrorComponent from 'components/UI/Error';\nimport DateTimePicker from 'components/admin/DateTimePicker';\nimport SubmitWrapper from 'components/admin/SubmitWrapper';\nimport { Section, SectionTitle, SectionField } from 'components/admin/Section';\nimport FileUploader from 'components/UI/FileUploader';\nimport { IconTooltip, Label } from 'cl2-component-library';\n\n// utils\nimport unsubscribe from 'utils/unsubscribe';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// services\nimport { localeStream } from 'services/locale';\nimport {\n  currentAppConfigurationStream,\n  IAppConfiguration,\n} from 'services/appConfiguration';\nimport { IProjectData } from 'services/projects';\nimport {\n  eventStream,\n  updateEvent,\n  addEvent,\n  IEvent,\n  IUpdatedEventProperties,\n} from 'services/events';\nimport { addEventFile, deleteEventFile } from 'services/eventFiles';\n\n// resources\nimport GetResourceFileObjects, {\n  GetResourceFileObjectsChildProps,\n} from 'resources/GetResourceFileObjects';\n\n// typings\nimport { Multiloc, CLError, Locale, UploadFile } from 'typings';\nimport { isCLErrorJSON } from 'utils/errorUtils';\n\ninterface DataProps {\n  remoteEventFiles: GetResourceFileObjectsChildProps;\n}\n\ninterface Props extends DataProps {\n  params: {\n    id: string | null;\n    projectId: string | null;\n  };\n  project: IProjectData | null;\n}\n\ninterface State {\n  locale: Locale | null;\n  currentTenant: IAppConfiguration | null;\n  event: IEvent | null;\n  attributeDiff: IUpdatedEventProperties;\n  errors:\n    | {\n        [fieldName: string]: CLError[];\n      }\n    | Error;\n  saving: boolean;\n  focusedInput: 'startDate' | 'endDate' | null;\n  saved: boolean;\n  loaded: boolean;\n  eventFiles: UploadFile[];\n  eventFilesToRemove: UploadFile[];\n  submitState: 'disabled' | 'enabled' | 'error' | 'success';\n}\n\nclass AdminProjectEventEdit extends PureComponent<Props, State> {\n  subscriptions: Subscription[];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      locale: null,\n      currentTenant: null,\n      event: null,\n      attributeDiff: {},\n      errors: {},\n      saving: false,\n      focusedInput: null,\n      saved: false,\n      loaded: false,\n      eventFiles: [],\n      eventFilesToRemove: [],\n      submitState: 'disabled',\n    };\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    const { remoteEventFiles } = this.props;\n    const locale$ = localeStream().observable;\n    const currentTenant$ = currentAppConfigurationStream().observable;\n    const event$ = this.props.params.id\n      ? eventStream(this.props.params.id).observable\n      : of(null);\n\n    this.subscriptions = [\n      combineLatest(locale$, currentTenant$, event$).subscribe(\n        ([locale, currentTenant, event]) => {\n          this.setState({\n            locale,\n            currentTenant,\n            event,\n            loaded: true,\n          });\n        }\n      ),\n    ];\n\n    this.setState({\n      eventFiles: !isNilOrError(remoteEventFiles) ? remoteEventFiles : [],\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { remoteEventFiles } = this.props;\n\n    if (prevProps.remoteEventFiles !== remoteEventFiles) {\n      this.setState({\n        eventFiles: !isNilOrError(remoteEventFiles) ? remoteEventFiles : [],\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    unsubscribe(this.subscriptions);\n  }\n\n  handleTitleMultilocOnChange = (titleMultiloc: Multiloc) => {\n    this.setState((state) => ({\n      submitState: 'enabled',\n      attributeDiff: {\n        ...state.attributeDiff,\n        title_multiloc: titleMultiloc,\n      },\n    }));\n  };\n\n  handleLocationMultilocOnChange = (locationMultiloc: Multiloc) => {\n    this.setState((state) => ({\n      submitState: 'enabled',\n      attributeDiff: {\n        ...state.attributeDiff,\n        location_multiloc: locationMultiloc,\n      },\n    }));\n  };\n\n  handleDescriptionMultilocOnChange = (descriptionMultiloc: Multiloc) => {\n    this.setState((state) => ({\n      submitState: 'enabled',\n      attributeDiff: {\n        ...state.attributeDiff,\n        description_multiloc: descriptionMultiloc,\n      },\n    }));\n  };\n\n  handleDateTimePickerOnChange = (name: 'start_at' | 'end_at') => (\n    moment: moment.Moment\n  ) => {\n    this.setState((state) => ({\n      submitState: 'enabled',\n      attributeDiff: {\n        ...state.attributeDiff,\n        [name]: moment.toISOString(),\n      },\n      errors: {},\n    }));\n  };\n\n  handleEventFileOnAdd = (newFile: UploadFile) => {\n    this.setState((prevState) => ({\n      submitState: 'enabled',\n      eventFiles: [...prevState.eventFiles, newFile],\n    }));\n  };\n\n  handleEventFileOnRemove = (eventFileToRemove: UploadFile) => {\n    this.setState((prevState) => ({\n      submitState: 'enabled',\n      eventFiles: prevState.eventFiles.filter(\n        (eventFile) => eventFile.base64 !== eventFileToRemove.base64\n      ),\n      eventFilesToRemove: [...prevState.eventFilesToRemove, eventFileToRemove],\n    }));\n  };\n\n  handleOnSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!isNilOrError(this.props.project)) {\n      const projectId = this.props.project.id;\n      const { event, eventFiles, eventFilesToRemove } = this.state;\n      let eventResponse = event;\n      let redirect = false;\n\n      try {\n        this.setState({ saving: true, saved: false });\n\n        // non-file input fields have changed\n        if (!isEmpty(this.state.attributeDiff)) {\n          // event already exists (in the state)\n          if (event) {\n            eventResponse = await updateEvent(\n              event.data.id,\n              this.state.attributeDiff\n            );\n            this.setState({ event: eventResponse, attributeDiff: {} });\n          } else if (projectId) {\n            // event doesn't exist, create with project id\n            eventResponse = await addEvent(projectId, this.state.attributeDiff);\n            this.setState({ event: eventResponse, attributeDiff: {} });\n            redirect = true;\n          }\n        }\n\n        if (eventResponse) {\n          const { id: eventId } = eventResponse.data;\n          const filesToAddPromises = eventFiles\n            .filter((file) => !file.remote)\n            .map((file) => addEventFile(eventId, file.base64, file.name));\n          const filesToRemovePromises = eventFilesToRemove\n            .filter((file) => !!(file.remote && file.id))\n            .map((file) => deleteEventFile(eventId, file.id as string));\n\n          await Promise.all([\n            ...filesToAddPromises,\n            ...filesToRemovePromises,\n          ] as Promise<any>[]);\n        }\n\n        this.setState({\n          saving: false,\n          saved: true,\n          errors: {},\n          submitState: 'success',\n          eventFilesToRemove: [],\n        });\n\n        if (redirect && projectId) {\n          clHistory.push(`/admin/projects/${projectId}/events/`);\n        }\n      } catch (errors) {\n        if (isCLErrorJSON(errors)) {\n          this.setState({\n            saving: false,\n            errors: errors.json.errors,\n            submitState: 'error',\n          });\n        } else {\n          this.setState({ saving: false, submitState: 'error' });\n        }\n      }\n    }\n  };\n\n  descriptionLabel = (<FormattedMessage {...messages.descriptionLabel} />);\n\n  render() {\n    const { locale, currentTenant, loaded, submitState } = this.state;\n\n    if (locale && currentTenant && loaded) {\n      const { errors, event, attributeDiff, saving, eventFiles } = this.state;\n      const eventAttrs = event\n        ? { ...event.data.attributes, ...attributeDiff }\n        : { ...attributeDiff };\n\n      return (\n        <>\n          <SectionTitle>\n            {event && <FormattedMessage {...messages.editEventTitle} />}\n            {!event && <FormattedMessage {...messages.newEventTitle} />}\n          </SectionTitle>\n\n          <form\n            className=\"e2e-project-event-edit\"\n            onSubmit={this.handleOnSubmit}\n          >\n            <Section>\n              <SectionField>\n                <InputMultilocWithLocaleSwitcher\n                  id=\"title\"\n                  label={<FormattedMessage {...messages.titleLabel} />}\n                  type=\"text\"\n                  valueMultiloc={eventAttrs.title_multiloc}\n                  onChange={this.handleTitleMultilocOnChange}\n                />\n                <ErrorComponent apiErrors={get(errors, 'title_multiloc')} />\n              </SectionField>\n\n              <SectionField>\n                <InputMultilocWithLocaleSwitcher\n                  id=\"location\"\n                  label={<FormattedMessage {...messages.locationLabel} />}\n                  type=\"text\"\n                  valueMultiloc={eventAttrs.location_multiloc}\n                  onChange={this.handleLocationMultilocOnChange}\n                />\n                <ErrorComponent apiErrors={get(errors, 'location_multiloc')} />\n              </SectionField>\n\n              <SectionField>\n                <Label>\n                  <FormattedMessage {...messages.dateStartLabel} />\n                </Label>\n                <DateTimePicker\n                  value={eventAttrs.start_at}\n                  onChange={this.handleDateTimePickerOnChange('start_at')}\n                />\n                <ErrorComponent apiErrors={get(errors, 'start_at')} />\n              </SectionField>\n\n              <SectionField>\n                <Label>\n                  <FormattedMessage {...messages.datesEndLabel} />\n                </Label>\n                <DateTimePicker\n                  value={eventAttrs.end_at}\n                  onChange={this.handleDateTimePickerOnChange('end_at')}\n                />\n                <ErrorComponent apiErrors={get(errors, 'end_at')} />\n              </SectionField>\n\n              <SectionField className=\"fullWidth\">\n                <QuillMultilocWithLocaleSwitcher\n                  id=\"description\"\n                  label={this.descriptionLabel}\n                  valueMultiloc={eventAttrs.description_multiloc}\n                  onChange={this.handleDescriptionMultilocOnChange}\n                  withCTAButton\n                />\n                <ErrorComponent\n                  apiErrors={get(errors, 'description_multiloc')}\n                />\n              </SectionField>\n\n              <SectionField>\n                <Label>\n                  <FormattedMessage {...messages.fileUploadLabel} />\n                  <IconTooltip\n                    content={\n                      <FormattedMessage {...messages.fileUploadLabelTooltip} />\n                    }\n                  />\n                </Label>\n                <FileUploader\n                  onFileAdd={this.handleEventFileOnAdd}\n                  onFileRemove={this.handleEventFileOnRemove}\n                  files={eventFiles}\n                  errors={isError(errors) ? undefined : errors}\n                />\n              </SectionField>\n            </Section>\n\n            <SubmitWrapper\n              loading={saving}\n              status={submitState}\n              messages={{\n                buttonSave: messages.saveButtonLabel,\n                buttonSuccess: messages.saveSuccessLabel,\n                messageError: messages.saveErrorMessage,\n                messageSuccess: messages.saveSuccessMessage,\n              }}\n            />\n          </form>\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default (props: Props) => (\n  <GetResourceFileObjects resourceId={props.params.id} resourceType=\"event\">\n    {(remoteEventFiles) => (\n      <AdminProjectEventEdit remoteEventFiles={remoteEventFiles} {...props} />\n    )}\n  </GetResourceFileObjects>\n);\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport {\n  Subscription,\n  BehaviorSubject,\n  combineLatest,\n  of,\n  Observable,\n} from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { projectFilesStream, IProjectFiles } from 'services/projectFiles';\nimport { phaseFilesStream, IPhaseFiles } from 'services/phaseFiles';\nimport { pageFilesStream, IPageFiles } from 'services/pageFiles';\nimport { eventFilesStream, IEventFiles } from 'services/eventFiles';\nimport { ideaFilesStream, IIdeaFiles } from 'services/ideaFiles';\nimport {\n  initiativeFilesStream,\n  IInitiativeFiles,\n} from 'services/initiativeFiles';\nimport { convertUrlToUploadFileObservable } from 'utils/fileTools';\nimport { UploadFile } from 'typings';\n\n// Converted file objects (to JS objects of type File).\n// Useful when you combining local files and remote files,\n// so you don't have to convert (file uploader)\n\ninterface InputProps {\n  resetOnChange?: boolean;\n  resourceType: 'project' | 'phase' | 'event' | 'page' | 'idea' | 'initiative';\n  resourceId: string | null;\n}\n\ntype Children = (\n  renderProps: GetResourceFileObjectsChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: Children;\n}\n\ninterface State {\n  files: UploadFile[] | undefined | null | Error;\n}\n\nexport type GetResourceFileObjectsChildProps = State['files'];\n\nexport default class GetResourceFileObjects extends React.Component<\n  Props,\n  State\n> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  public static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      files: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ resourceId, resourceType });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ files: undefined })),\n          filter(({ resourceId }) => isString(resourceId)),\n          switchMap(\n            ({\n              resourceId,\n              resourceType,\n            }: {\n              resourceId: string;\n              resourceType: InputProps['resourceType'];\n            }) => {\n              let streamFn;\n              if (resourceType === 'project') {\n                streamFn = projectFilesStream;\n              }\n              if (resourceType === 'phase') {\n                streamFn = phaseFilesStream;\n              }\n              if (resourceType === 'event') {\n                streamFn = eventFilesStream;\n              }\n              if (resourceType === 'page') {\n                streamFn = pageFilesStream;\n              }\n              if (resourceType === 'idea') {\n                streamFn = ideaFilesStream;\n              }\n              if (resourceType === 'initiative') {\n                streamFn = initiativeFilesStream;\n              }\n\n              return streamFn(resourceId).observable as Observable<\n                | IProjectFiles\n                | IPhaseFiles\n                | IEventFiles\n                | IPageFiles\n                | IIdeaFiles\n                | IInitiativeFiles\n                | null\n              >;\n            }\n          ),\n          switchMap((files) => {\n            if (files && files.data && files.data.length > 0) {\n              return combineLatest(\n                files.data.map((file) =>\n                  convertUrlToUploadFileObservable(\n                    file.attributes.file.url,\n                    file.id,\n                    file.attributes.name\n                  )\n                )\n              );\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((files) => {\n          this.setState({\n            files: files\n              ? (files.filter((file) => !isNilOrError(file)) as UploadFile[])\n              : null,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n    this.inputProps$.next({ resourceId, resourceType, resetOnChange });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { files } = this.state;\n    return (children as Children)(files);\n  }\n}\n","import { Subscription } from 'rxjs';\nimport { isArray } from 'lodash-es';\n\nexport default function unsubscribe(sub: Subscription | Subscription[]): void {\n  if (isArray(sub)) {\n    sub.forEach((sub) => sub.unsubscribe());\n  } else {\n    sub.unsubscribe();\n  }\n}\n"],"sourceRoot":""}