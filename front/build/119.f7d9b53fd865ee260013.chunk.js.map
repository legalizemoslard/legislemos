{"version":3,"sources":["webpack:///./app/components/IdeaCards/WithFiltersSidebar.tsx","webpack:///./app/resources/GetIdeasFilterCounts.tsx","webpack:///./app/components/IdeaCards/TopicFilterBox.tsx","webpack:///./app/resources/GetIdeaStatuses.tsx","webpack:///./app/resources/GetTopics.tsx","webpack:///./app/components/IdeaCards/StatusFilterBox.tsx"],"names":["IdeasMap","lazy","Container","styled","div","InitialLoading","defaultCardStyle","media","smallerThanMinTablet","MobileSearchInput","SearchInput","MobileFilterButton","Button","MobileFiltersSidebarWrapper","colors","background","AboveContent","filterColumnWidth","isRtl","smallerThanMaxTablet","AboveContentLeft","AboveContentRight","StyledViewButtons","ViewButtons","IdeasCount","theme","colorText","fontSizes","base","Content","ContentLeft","Loading","biggerThanMinTablet","EmptyContainer","EmptyContainerInner","IdeaIcon","Icon","label","EmptyMessage","EmptyMessageMainLine","xl","EmptyMessageSubLine","IdeasList","StyledIdeaCard","IdeaCard","smallerThan1100px","ContentRight","FiltersSidebarContainer","ClearFiltersText","span","ClearFiltersButton","button","DesktopSearchInput","StyledIdeasStatusFilter","StatusFilterBox","StyledIdeasTopicsFilter","TopicFilterBox","Spacer","Footer","ShowMoreButton","IdeaCards","props","setState","state","filtersModalOpened","previouslySelectedIdeaFilters","selectedIdeaFilters","ideas","onLoadMore","projects","onChangeProjects","sort","trackEventByName","tracks","sortingFilter","onChangeSorting","searchTerm","onChangeSearchTerm","idea_status","handleIdeaFiltersOnChange","topics","topicsFilter","newSelectedIdeaFilters","applyFilter","onIdeaFiltering","areas","search","desktopSearchInputClearButton","click","mobileSearchInputClearButton","selectedView","element","FormattedMessage","messages","filter","defaultView","get","prevProps","oldQueryParameters","this","phaseId","participationMethod","participationContextId","participationContextType","defaultSortingMethod","ideasFilterCounts","windowSize","className","showViewToggle","queryParameters","list","hasMore","querying","loadingMore","hasIdeas","isNilOrError","length","showListView","showMapView","biggerThanLargeTablet","viewportWidths","largeTablet","smallerThan1440px","smallerThanPhone","phone","filtersActive","filtersSidebar","onClick","handleIdeaFiltersOnResetAndApply","resetFilters","ScreenReaderOnly","a11y_totalItems","values","ideasCount","total","setClearButtonRef","handleDesktopSearchInputClearButtonRef","onChange","handleSearchOnChange","debounce","selectedStatusId","handleStatusOnChangeAndApplyFilter","handleStatusOnChange","selectedTopicIds","handleTopicsOnChangeAndApplyFilter","handleTopicsOnChange","id","undefined","Spinner","opened","close","closeModalAndRevertFilters","animateInOut","topBar","onReset","handleIdeaFiltersOnReset","onClose","bottomBar","newIdeasFilterCounts","bottomBarButtonText","isNumber","showXResults","showResults","buttonText","closeModalAndApplyFilters","handleMobileSearchInputClearButtonRef","buttonStyle","openFiltersModal","icon","iconAriaHidden","text","filterMessage","selectView","xResults","handleSortOnChange","alignment","map","idea","key","ideaId","hideImage","hideImagePlaceholder","hideIdeaStatus","loadMore","showMore","processing","height","iconPos","textColor","bgColor","rgba","bgHoverColor","fontWeight","name","ariaHidden","noFilteredResults","tryDifferentFilters","Suspense","fallback","projectIds","phase","PureComponent","Data","adopt","render","getIdeasInputProps","children","pageSize","ideaDefaultSortMethodFallback","WithFiltersSidebarWithHoCs","withTheme","injectIntl","inputProps","dataProps","GetIdeasFilterCounts","queryParameters$","BehaviorSubject","subscriptions","pipe","omitBy","isNil","distinctUntilChanged","prev","next","isEqual","switchMap","ideasFilterCountsStream","observable","of","subscribe","forEach","subscription","unsubscribe","React","Component","memo","handleOnChange","useCallback","newsSelectedTopicIds","topic","GetIdeaStatuses","ideaStatuses","ideaStatusesStream","data","GetTopics","topicIds","code","exclude_code","projectId","inputProps$","projectTopicsStream","relationships","combineLatest","topicId","topicByIdStream","topicsStream","nextSelectedStatusId","type","statuses","filterCounts","project_publication_status","publication_status"],"mappings":"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","file":"119.f7d9b53fd865ee260013.chunk.js","sourcesContent":["import React, { PureComponent, lazy, Suspense } from 'react';\nimport { adopt } from 'react-adopt';\nimport { get, isNumber } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// components\nimport IdeaCard from 'components/IdeaCard/Compact';\nimport { Icon, Spinner } from 'cl2-component-library';\nimport SortFilterDropdown from './SortFilterDropdown';\nimport StatusFilterBox from './StatusFilterBox';\nimport TopicFilterBox from './TopicFilterBox';\nimport SearchInput from 'components/UI/SearchInput';\nimport TopBar from 'components/FiltersModal/TopBar';\nimport BottomBar from 'components/FiltersModal/BottomBar';\nimport FullscreenModal from 'components/UI/FullscreenModal';\nimport Button from 'components/UI/Button';\nimport ViewButtons from 'components/PostCardsComponents/ViewButtons';\nconst IdeasMap = lazy(() => import('components/IdeasMap'));\n\n// resources\nimport GetIdeas, {\n  Sort,\n  GetIdeasChildProps,\n  InputProps as GetIdeasInputProps,\n  IQueryParameters,\n} from 'resources/GetIdeas';\nimport GetIdeasFilterCounts, {\n  GetIdeasFilterCountsChildProps,\n} from 'resources/GetIdeasFilterCounts';\nimport GetWindowSize, {\n  GetWindowSizeChildProps,\n} from 'resources/GetWindowSize';\n\n// i18n\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\n\n// style\nimport styled, { withTheme } from 'styled-components';\nimport {\n  media,\n  colors,\n  fontSizes,\n  viewportWidths,\n  defaultCardStyle,\n  isRtl,\n} from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { rgba } from 'polished';\n\n// typings\nimport {\n  IdeaDefaultSortMethod,\n  ParticipationMethod,\n  ideaDefaultSortMethodFallback,\n} from 'services/participationContexts';\nimport { IParticipationContextType } from 'typings';\n\nconst gapWidth = 35;\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 1445px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  @media (max-width: 1279px) {\n    max-width: 1000px;\n  }\n`;\n\nconst InitialLoading = styled.div`\n  width: 100%;\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${defaultCardStyle};\n\n  ${media.smallerThanMinTablet`\n    height: 150px;\n  `}\n`;\n\nconst MobileSearchInput = styled(SearchInput)`\n  margin-bottom: 20px;\n`;\n\nconst MobileFilterButton = styled(Button)``;\n\nconst MobileFiltersSidebarWrapper = styled.div`\n  background: ${colors.background};\n  padding: 15px;\n`;\n\nconst AboveContent = styled.div<{ filterColumnWidth: number }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-right: ${({ filterColumnWidth }) => filterColumnWidth + gapWidth}px;\n  margin-bottom: 22px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n\n  ${media.smallerThanMaxTablet`\n    margin-right: 0;\n    margin-top: 20px;\n  `}\n`;\n\nconst AboveContentLeft = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst AboveContentRight = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledViewButtons = styled(ViewButtons)`\n  margin-right: 20px;\n`;\n\nconst IdeasCount = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: 21px;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n\n  span > span {\n    font-weight: 600;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n`;\n\nconst ContentLeft = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  position: relative;\n`;\n\nconst Loading = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${media.biggerThanMinTablet`\n    height: calc(100vh - 280px);\n    position: sticky;\n    top: 200px;\n  `}\n\n  ${media.smallerThanMinTablet`\n    height: 150px;\n  `}\n`;\n\nconst EmptyContainer = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  ${defaultCardStyle};\n`;\n\nconst EmptyContainerInner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 30px;\n  padding-right: 30px;\n  padding-top: 100px;\n  padding-bottom: 100px;\n`;\n\nconst IdeaIcon = styled(Icon)`\n  flex: 0 0 30px;\n  width: 30px;\n  height: 30px;\n  fill: ${colors.label};\n`;\n\nconst EmptyMessage = styled.div`\n  max-width: 400px;\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: normal;\n  text-align: center;\n  margin-top: 10px;\n`;\n\nconst EmptyMessageMainLine = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.xl}px;\n  font-weight: 500;\n  line-height: normal;\n  text-align: center;\n  margin-top: 15px;\n`;\n\nconst EmptyMessageSubLine = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 300;\n  line-height: normal;\n  text-align: center;\n  margin-top: 10px;\n`;\n\nconst IdeasList = styled.div`\n  margin-left: -13px;\n  margin-right: -13px;\n  margin-top: -10px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst StyledIdeaCard = styled(IdeaCard)`\n  flex-grow: 0;\n  width: calc(50% - 20px);\n  margin: 10px;\n\n  ${media.smallerThan1100px`\n    width: 100%;\n  `};\n`;\n\nconst ContentRight = styled.div<{ filterColumnWidth: number }>`\n  flex: 0 0 ${({ filterColumnWidth }) => filterColumnWidth}px;\n  width: ${({ filterColumnWidth }) => filterColumnWidth}px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-self: flex-start;\n  margin-left: ${gapWidth}px;\n  position: relative;\n  position: sticky;\n  top: 100px;\n`;\n\nconst FiltersSidebarContainer = styled.div`\n  position: relative;\n`;\n\nconst ClearFiltersText = styled.span`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: auto;\n`;\n\nconst ClearFiltersButton = styled.button`\n  height: 32px;\n  position: absolute;\n  top: -48px;\n  right: 0px;\n  display: flex;\n  align-items: center;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n\n  &:hover {\n    ${ClearFiltersText} {\n      color: #000;\n    }\n  }\n`;\n\nconst DesktopSearchInput = styled(SearchInput)`\n  margin-bottom: 20px;\n\n  ${media.smallerThanMaxTablet`\n    display: none;\n  `}\n`;\n\nconst StyledIdeasStatusFilter = styled(StatusFilterBox)`\n  margin-bottom: 20px;\n`;\n\nconst StyledIdeasTopicsFilter = styled(TopicFilterBox)`\n  margin-bottom: 0px;\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n`;\n\nconst Footer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n\n  ${media.smallerThanMinTablet`\n    flex-direction: column;\n    align-items: stretch;\n    margin-top: 0px;\n  `}\n`;\n\nconst ShowMoreButton = styled(Button)``;\n\ninterface InputProps extends GetIdeasInputProps {\n  showViewToggle?: boolean | undefined;\n  defaultSortingMethod?: IdeaDefaultSortMethod;\n  defaultView?: 'card' | 'map' | null | undefined;\n  participationMethod?: ParticipationMethod | null;\n  participationContextId?: string | null;\n  participationContextType?: IParticipationContextType | null;\n  className?: string;\n}\n\ninterface DataProps {\n  windowSize: GetWindowSizeChildProps;\n  ideas: GetIdeasChildProps;\n  ideasFilterCounts: GetIdeasFilterCountsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {\n  theme: any;\n}\n\ninterface State {\n  selectedView: 'card' | 'map';\n  filtersModalOpened: boolean;\n  selectedIdeaFilters: Partial<IQueryParameters>;\n  previouslySelectedIdeaFilters: Partial<IQueryParameters> | null;\n}\n\nclass IdeaCards extends PureComponent<Props & InjectedIntlProps, State> {\n  desktopSearchInputClearButton: HTMLButtonElement | null = null;\n  mobileSearchInputClearButton: HTMLButtonElement | null = null;\n\n  static defaultProps = {\n    showViewToggle: false,\n  };\n\n  constructor(props: Props & InjectedIntlProps) {\n    super(props);\n    this.state = {\n      selectedView: props.defaultView || 'card',\n      filtersModalOpened: false,\n      selectedIdeaFilters: get(props.ideas, 'queryParameters', {}),\n      previouslySelectedIdeaFilters: null,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldQueryParameters = get(prevProps.ideas, 'queryParameters', null);\n    const newQueryParameters = get(this.props.ideas, 'queryParameters', null);\n\n    if (newQueryParameters !== oldQueryParameters) {\n      this.setState({\n        selectedIdeaFilters: get(this.props.ideas, 'queryParameters', {}),\n      });\n    }\n\n    if (this.props.phaseId !== prevProps.phaseId) {\n      this.setState({ selectedView: this.props.defaultView || 'card' });\n    }\n  }\n\n  openFiltersModal = () => {\n    this.setState((state) => ({\n      filtersModalOpened: true,\n      previouslySelectedIdeaFilters: state.selectedIdeaFilters,\n    }));\n  };\n\n  loadMore = () => {\n    this.props.ideas.onLoadMore();\n  };\n\n  handleProjectsOnChange = (projects: string[]) => {\n    this.props.ideas.onChangeProjects(projects);\n  };\n\n  handleSortOnChange = (sort: Sort) => {\n    trackEventByName(tracks.sortingFilter, {\n      sort,\n    });\n\n    this.props.ideas.onChangeSorting(sort);\n  };\n\n  handleSearchOnChange = (searchTerm: string) => {\n    this.props.ideas.onChangeSearchTerm(searchTerm);\n  };\n\n  handleStatusOnChange = (idea_status: string | null) => {\n    this.handleIdeaFiltersOnChange({ idea_status });\n  };\n\n  handleTopicsOnChange = (topics: string[] | null) => {\n    trackEventByName(tracks.topicsFilter, {\n      topics,\n    });\n\n    this.handleIdeaFiltersOnChange({ topics });\n  };\n\n  handleStatusOnChangeAndApplyFilter = (idea_status: string | null) => {\n    this.handleIdeaFiltersOnChange({ idea_status }, true);\n  };\n\n  handleTopicsOnChangeAndApplyFilter = (topics: string[] | null) => {\n    this.handleIdeaFiltersOnChange({ topics }, true);\n  };\n\n  handleIdeaFiltersOnChange = (\n    newSelectedIdeaFilters: Partial<IQueryParameters>,\n    applyFilter = false\n  ) => {\n    this.setState((state) => {\n      const selectedIdeaFilters = {\n        ...state.selectedIdeaFilters,\n        ...newSelectedIdeaFilters,\n      };\n\n      if (applyFilter) {\n        this.props.ideas.onIdeaFiltering(selectedIdeaFilters);\n      }\n\n      return { selectedIdeaFilters };\n    });\n  };\n\n  handleIdeaFiltersOnReset = () => {\n    this.setState((state) => {\n      const selectedIdeaFilters = {\n        ...state.selectedIdeaFilters,\n        idea_status: null,\n        areas: null,\n        topics: null,\n      };\n\n      return { selectedIdeaFilters };\n    });\n  };\n\n  handleIdeaFiltersOnResetAndApply = () => {\n    this.setState((state) => {\n      const selectedIdeaFilters = {\n        ...state.selectedIdeaFilters,\n        search: null,\n        idea_status: null,\n        areas: null,\n        topics: null,\n      };\n\n      this.desktopSearchInputClearButton?.click();\n      this.mobileSearchInputClearButton?.click();\n\n      this.props.ideas.onIdeaFiltering(selectedIdeaFilters);\n\n      return { selectedIdeaFilters };\n    });\n  };\n\n  closeModalAndApplyFilters = () => {\n    this.setState((state) => {\n      this.props.ideas.onIdeaFiltering(state.selectedIdeaFilters);\n\n      return {\n        filtersModalOpened: false,\n        previouslySelectedIdeaFilters: null,\n      };\n    });\n  };\n\n  closeModalAndRevertFilters = () => {\n    this.setState((state) => {\n      this.props.ideas.onIdeaFiltering(\n        state.previouslySelectedIdeaFilters || {}\n      );\n\n      return {\n        filtersModalOpened: false,\n        selectedIdeaFilters: state.previouslySelectedIdeaFilters || {},\n        previouslySelectedIdeaFilters: null,\n      };\n    });\n  };\n\n  selectView = (selectedView: 'card' | 'map') => {\n    this.setState({ selectedView });\n  };\n\n  handleDesktopSearchInputClearButtonRef = (element: HTMLButtonElement) => {\n    this.desktopSearchInputClearButton = element;\n  };\n\n  handleMobileSearchInputClearButtonRef = (element: HTMLButtonElement) => {\n    this.mobileSearchInputClearButton = element;\n  };\n\n  filterMessage = (<FormattedMessage {...messages.filter} />);\n\n  render() {\n    const {\n      selectedView,\n      selectedIdeaFilters,\n      filtersModalOpened,\n    } = this.state;\n    const {\n      participationMethod,\n      participationContextId,\n      participationContextType,\n      defaultSortingMethod,\n      ideas,\n      ideasFilterCounts,\n      windowSize,\n      className,\n      theme,\n      showViewToggle,\n    } = this.props;\n    const { queryParameters, list, hasMore, querying, loadingMore } = ideas;\n    const hasIdeas = !isNilOrError(list) && list.length > 0;\n    const showListView = selectedView === 'card';\n    const showMapView = selectedView === 'map';\n    const biggerThanLargeTablet = !!(\n      windowSize && windowSize >= viewportWidths.largeTablet\n    );\n    const smallerThan1440px = !!(windowSize && windowSize <= 1440);\n    const smallerThanPhone = !!(\n      windowSize && windowSize <= viewportWidths.phone\n    );\n    const filterColumnWidth = windowSize && windowSize < 1400 ? 340 : 352;\n    const filtersActive =\n      selectedIdeaFilters.search ||\n      selectedIdeaFilters.idea_status ||\n      selectedIdeaFilters.areas ||\n      selectedIdeaFilters.topics;\n\n    const filtersSidebar = (\n      <FiltersSidebarContainer className={className}>\n        {filtersActive && (\n          <ClearFiltersButton onClick={this.handleIdeaFiltersOnResetAndApply}>\n            <ClearFiltersText>\n              <FormattedMessage {...messages.resetFilters} />\n            </ClearFiltersText>\n          </ClearFiltersButton>\n        )}\n\n        <ScreenReaderOnly aria-live=\"polite\">\n          {ideasFilterCounts && (\n            <FormattedMessage\n              {...messages.a11y_totalItems}\n              values={{ ideasCount: ideasFilterCounts.total }}\n            />\n          )}\n        </ScreenReaderOnly>\n\n        <DesktopSearchInput\n          setClearButtonRef={this.handleDesktopSearchInputClearButtonRef}\n          onChange={this.handleSearchOnChange}\n          debounce={1500}\n        />\n        <StyledIdeasStatusFilter\n          selectedStatusId={selectedIdeaFilters.idea_status}\n          selectedIdeaFilters={selectedIdeaFilters}\n          onChange={\n            !biggerThanLargeTablet\n              ? this.handleStatusOnChange\n              : this.handleStatusOnChangeAndApplyFilter\n          }\n        />\n        <StyledIdeasTopicsFilter\n          selectedTopicIds={selectedIdeaFilters.topics}\n          onChange={\n            !biggerThanLargeTablet\n              ? this.handleTopicsOnChange\n              : this.handleTopicsOnChangeAndApplyFilter\n          }\n        />\n      </FiltersSidebarContainer>\n    );\n\n    return (\n      <Container id=\"e2e-ideas-container\" className={className}>\n        {list === undefined && (\n          <InitialLoading id=\"ideas-loading\">\n            <Spinner />\n          </InitialLoading>\n        )}\n\n        {list !== undefined && (\n          <>\n            {!biggerThanLargeTablet && (\n              <>\n                <FullscreenModal\n                  opened={filtersModalOpened}\n                  close={this.closeModalAndRevertFilters}\n                  animateInOut={true}\n                  topBar={\n                    <TopBar\n                      onReset={\n                        !biggerThanLargeTablet\n                          ? this.handleIdeaFiltersOnReset\n                          : this.handleIdeaFiltersOnResetAndApply\n                      }\n                      onClose={this.closeModalAndRevertFilters}\n                    />\n                  }\n                  bottomBar={\n                    <GetIdeasFilterCounts queryParameters={selectedIdeaFilters}>\n                      {(newIdeasFilterCounts) => {\n                        const bottomBarButtonText =\n                          newIdeasFilterCounts &&\n                          isNumber(newIdeasFilterCounts.total) ? (\n                            <FormattedMessage\n                              {...messages.showXResults}\n                              values={{\n                                ideasCount: newIdeasFilterCounts.total,\n                              }}\n                            />\n                          ) : (\n                            <FormattedMessage {...messages.showResults} />\n                          );\n\n                        return (\n                          <BottomBar\n                            buttonText={bottomBarButtonText}\n                            onClick={this.closeModalAndApplyFilters}\n                          />\n                        );\n                      }}\n                    </GetIdeasFilterCounts>\n                  }\n                >\n                  <MobileFiltersSidebarWrapper>\n                    {filtersSidebar}\n                  </MobileFiltersSidebarWrapper>\n                </FullscreenModal>\n\n                <MobileSearchInput\n                  setClearButtonRef={this.handleMobileSearchInputClearButtonRef}\n                  onChange={this.handleSearchOnChange}\n                />\n\n                <MobileFilterButton\n                  buttonStyle=\"secondary-outlined\"\n                  onClick={this.openFiltersModal}\n                  icon=\"filter\"\n                  iconAriaHidden\n                  text={this.filterMessage}\n                />\n              </>\n            )}\n\n            <AboveContent filterColumnWidth={filterColumnWidth}>\n              <AboveContentLeft>\n                {showViewToggle && (\n                  <StyledViewButtons\n                    selectedView={selectedView}\n                    onClick={this.selectView}\n                  />\n                )}\n                {!isNilOrError(ideasFilterCounts) && (\n                  <IdeasCount>\n                    <FormattedMessage\n                      {...messages.xResults}\n                      values={{ ideasCount: ideasFilterCounts.total }}\n                    />\n                  </IdeasCount>\n                )}\n              </AboveContentLeft>\n\n              <Spacer />\n\n              {!showMapView && (\n                <AboveContentRight>\n                  <SortFilterDropdown\n                    defaultSortingMethod={defaultSortingMethod || null}\n                    onChange={this.handleSortOnChange}\n                    alignment=\"right\"\n                  />\n                </AboveContentRight>\n              )}\n            </AboveContent>\n\n            <Content>\n              <ContentLeft>\n                {showListView && querying && (\n                  <Loading id=\"ideas-loading\">\n                    <Spinner />\n                  </Loading>\n                )}\n\n                {showListView && !querying && hasIdeas && list && (\n                  <IdeasList id=\"e2e-ideas-list\">\n                    {list.map((idea) => (\n                      <StyledIdeaCard\n                        key={idea.id}\n                        ideaId={idea.id}\n                        participationMethod={participationMethod}\n                        participationContextId={participationContextId}\n                        participationContextType={participationContextType}\n                        hideImage={biggerThanLargeTablet && smallerThan1440px}\n                        hideImagePlaceholder={smallerThan1440px}\n                        hideIdeaStatus={\n                          !!(\n                            (biggerThanLargeTablet && smallerThan1440px) ||\n                            smallerThanPhone\n                          )\n                        }\n                      />\n                    ))}\n                  </IdeasList>\n                )}\n\n                {showListView && !querying && hasMore && (\n                  <Footer>\n                    <ShowMoreButton\n                      id=\"e2e-idea-cards-show-more-button\"\n                      onClick={this.loadMore}\n                      buttonStyle=\"secondary\"\n                      text={<FormattedMessage {...messages.showMore} />}\n                      processing={loadingMore}\n                      height=\"50px\"\n                      icon=\"showMore\"\n                      iconPos=\"left\"\n                      textColor={theme.colorText}\n                      bgColor={rgba(theme.colorText, 0.08)}\n                      bgHoverColor={rgba(theme.colorText, 0.12)}\n                      fontWeight=\"500\"\n                    />\n                  </Footer>\n                )}\n\n                {!querying && !hasIdeas && (\n                  <EmptyContainer id=\"ideas-empty\">\n                    <EmptyContainerInner>\n                      <IdeaIcon name=\"idea\" ariaHidden />\n                      <EmptyMessage>\n                        <EmptyMessageMainLine>\n                          <FormattedMessage {...messages.noFilteredResults} />\n                        </EmptyMessageMainLine>\n                        <EmptyMessageSubLine>\n                          <FormattedMessage {...messages.tryDifferentFilters} />\n                        </EmptyMessageSubLine>\n                      </EmptyMessage>\n                    </EmptyContainerInner>\n                  </EmptyContainer>\n                )}\n\n                {showMapView && hasIdeas && (\n                  <Suspense fallback={false}>\n                    <IdeasMap\n                      projectIds={queryParameters.projects}\n                      phaseId={queryParameters.phase}\n                    />\n                  </Suspense>\n                )}\n              </ContentLeft>\n\n              {biggerThanLargeTablet && (\n                <ContentRight\n                  id=\"e2e-ideas-filters\"\n                  filterColumnWidth={filterColumnWidth}\n                >\n                  {filtersSidebar}\n                </ContentRight>\n              )}\n            </Content>\n          </>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  windowSize: <GetWindowSize />,\n  ideas: ({ render, children: _children, ...getIdeasInputProps }) => (\n    <GetIdeas\n      {...getIdeasInputProps}\n      pageSize={12}\n      sort={\n        getIdeasInputProps.defaultSortingMethod || ideaDefaultSortMethodFallback\n      }\n    >\n      {render}\n    </GetIdeas>\n  ),\n  ideasFilterCounts: ({ ideas, render }) => (\n    <GetIdeasFilterCounts queryParameters={get(ideas, 'queryParameters', null)}>\n      {render}\n    </GetIdeasFilterCounts>\n  ),\n});\n\nconst WithFiltersSidebarWithHoCs = withTheme(injectIntl(IdeaCards));\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <WithFiltersSidebarWithHoCs {...inputProps} {...dataProps} />\n    )}\n  </Data>\n);\n","import React from 'react';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, map } from 'rxjs/operators';\nimport { isEqual, omitBy, isNil } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { IIdeasFilterCounts, ideasFilterCountsStream } from 'services/ideas';\nimport { IQueryParameters } from './GetIdeas';\n\ntype children = (\n  renderProps: GetIdeasFilterCountsChildProps\n) => JSX.Element | null;\n\ninterface Props {\n  queryParameters: Partial<IQueryParameters> | null;\n  children?: children;\n}\n\ninterface State {\n  ideasFilterCounts: IIdeasFilterCounts | undefined | null;\n}\n\nexport type GetIdeasFilterCountsChildProps =\n  | IIdeasFilterCounts\n  | undefined\n  | null;\n\nexport default class GetIdeasFilterCounts extends React.Component<\n  Props,\n  State\n> {\n  private queryParameters$: BehaviorSubject<Partial<IQueryParameters> | null>;\n  private subscriptions: Subscription[];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ideasFilterCounts: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.queryParameters$ = new BehaviorSubject(this.props.queryParameters);\n\n    this.subscriptions = [\n      this.queryParameters$\n        .pipe(\n          map((queryParameters) =>\n            queryParameters ? omitBy(queryParameters, isNil) : queryParameters\n          ),\n          distinctUntilChanged((prev, next) => isEqual(prev, next)),\n          switchMap((queryParameters) => {\n            if (queryParameters) {\n              return ideasFilterCountsStream({ queryParameters }).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((ideasFilterCounts) => {\n          this.setState({\n            ideasFilterCounts: !isNilOrError(ideasFilterCounts)\n              ? ideasFilterCounts\n              : null,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    this.queryParameters$.next(this.props.queryParameters);\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { ideasFilterCounts } = this.state;\n    return (children as children)(ideasFilterCounts);\n  }\n}\n","import React, { memo, useCallback } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport TopicsFilter from 'components/FilterBoxes/TopicsFilter';\n\n// resources\nimport GetTopics, { GetTopicsChildProps } from 'resources/GetTopics';\n\n// styling\nimport styled from 'styled-components';\n\n// typings\nimport { ITopicData } from 'services/topics';\n\nconst Container = styled.div``;\n\ninterface InputProps {\n  selectedTopicIds: string[] | null | undefined;\n  onChange: (arg: string[] | null) => void;\n  className?: string;\n}\n\ninterface DataProps {\n  topics: GetTopicsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst TopicFilterBox = memo<Props>(\n  ({ selectedTopicIds, topics, onChange, className }) => {\n    const handleOnChange = useCallback(\n      (newsSelectedTopicIds: string[] | null) => {\n        onChange(newsSelectedTopicIds);\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      []\n    );\n\n    if (\n      !isNilOrError(topics) &&\n      topics.filter((topic) => !isNilOrError(topic)).length > 0\n    ) {\n      return (\n        <Container className={className}>\n          <TopicsFilter\n            topics={\n              topics.filter((topic) => !isNilOrError(topic)) as ITopicData[]\n            }\n            selectedTopicIds={selectedTopicIds}\n            onChange={handleOnChange}\n          />\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  // currently only used for the idea overview page,\n  // so all possible topics can be displayed\n  topics: <GetTopics />,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <TopicFilterBox {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React from 'react';\nimport { Subscription } from 'rxjs';\nimport { IIdeaStatusData, ideaStatusesStream } from 'services/ideaStatuses';\n\ninterface InputProps {}\n\ntype children = (renderProps: GetIdeaStatusesChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  ideaStatuses: IIdeaStatusData[] | undefined | null;\n}\n\nexport type GetIdeaStatusesChildProps = IIdeaStatusData[] | undefined | null;\n\nexport default class GetIdeaStatuses extends React.Component<Props, State> {\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ideaStatuses: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.subscriptions = [\n      ideaStatusesStream().observable.subscribe((ideaStatuses) => {\n        this.setState({\n          ideaStatuses: ideaStatuses ? ideaStatuses.data : null,\n        });\n      }),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { ideaStatuses } = this.state;\n    return (children as children)(ideaStatuses);\n  }\n}\n","import React from 'react';\nimport { isEqual } from 'lodash-es';\nimport { Subscription, BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, map } from 'rxjs/operators';\nimport {\n  ITopicData,\n  topicByIdStream,\n  topicsStream,\n  Code,\n} from 'services/topics';\nimport { projectTopicsStream } from 'services/projectTopics';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  // Don't use projectId, ids or the query parameters (code, exclude_code, sort) together\n  // Only one of the three at a time.\n  projectId?: string;\n  topicIds?: string[];\n  code?: Code;\n  exclude_code?: Code;\n  sort?: 'new' | 'custom';\n}\n\ntype children = (renderProps: GetTopicsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  topics: (ITopicData | Error)[] | undefined | null | Error;\n}\n\nexport type GetTopicsChildProps =\n  | (ITopicData | Error)[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetTopics extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      topics: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => isEqual(prev, next)),\n          switchMap(({ topicIds, code, exclude_code, sort, projectId }) => {\n            const queryParameters = { code, exclude_code, sort };\n\n            if (projectId) {\n              return projectTopicsStream(projectId).observable.pipe(\n                map((topics) =>\n                  topics.data\n                    .filter((topic) => topic)\n                    .map((topic) => topic.relationships.topic.data.id)\n                ),\n                switchMap((topicIds) => {\n                  return combineLatest(\n                    topicIds.map((topicId) =>\n                      topicByIdStream(topicId).observable.pipe(\n                        map((topic) =>\n                          !isNilOrError(topic) ? topic.data : topic\n                        )\n                      )\n                    )\n                  );\n                })\n              );\n            } else if (topicIds) {\n              if (topicIds.length > 0) {\n                return combineLatest(\n                  topicIds.map((id) => {\n                    return topicByIdStream(id).observable.pipe(\n                      map((topic) =>\n                        !isNilOrError(topic) ? topic.data : topic\n                      )\n                    );\n                  })\n                );\n              }\n\n              return of(null);\n            } else {\n              return topicsStream({ queryParameters }).observable.pipe(\n                map((topics) => topics.data)\n              );\n            }\n          })\n        )\n        .subscribe((topics) => {\n          this.setState({ topics });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n    this.inputProps$.next({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { topics } = this.state;\n    return (children as children)(topics);\n  }\n}\n","import React, { memo, useCallback } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport StatusFilter from 'components/FilterBoxes/StatusFilter';\n\n// resources\nimport GetIdeaStatuses, {\n  GetIdeaStatusesChildProps,\n} from 'resources/GetIdeaStatuses';\nimport GetIdeasFilterCounts, {\n  GetIdeasFilterCountsChildProps,\n} from 'resources/GetIdeasFilterCounts';\n\n// styling\nimport styled from 'styled-components';\n\n// typings\nimport { IQueryParameters } from 'resources/GetIdeas';\n\nconst Container = styled.div``;\n\ninterface InputProps {\n  selectedStatusId: string | null | undefined;\n  selectedIdeaFilters: Partial<IQueryParameters>;\n  onChange: (arg: string | null) => void;\n  className?: string;\n}\n\ninterface DataProps {\n  ideaStatuses: GetIdeaStatusesChildProps;\n  ideasFilterCounts: GetIdeasFilterCountsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst StatusFilterBox = memo<Props>(\n  ({\n    selectedStatusId,\n    ideaStatuses,\n    ideasFilterCounts,\n    onChange,\n    className,\n  }) => {\n    const handleOnChange = useCallback(\n      (nextSelectedStatusId: string | null) => {\n        onChange(nextSelectedStatusId);\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      []\n    );\n\n    if (!isNilOrError(ideaStatuses) && ideaStatuses.length > 0) {\n      return (\n        <Container className={className}>\n          <StatusFilter\n            type=\"idea\"\n            statuses={ideaStatuses}\n            filterCounts={ideasFilterCounts}\n            selectedStatusId={selectedStatusId}\n            onChange={handleOnChange}\n          />\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  ideaStatuses: <GetIdeaStatuses />,\n  ideasFilterCounts: ({ selectedIdeaFilters, render }) => {\n    const queryParameters = {\n      ...selectedIdeaFilters,\n      idea_status: undefined,\n      project_publication_status: 'published',\n      publication_status: 'published',\n    } as Partial<IQueryParameters>;\n\n    return (\n      <GetIdeasFilterCounts queryParameters={queryParameters}>\n        {render}\n      </GetIdeasFilterCounts>\n    );\n  },\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <StatusFilterBox {...inputProps} {...dataProps} />}\n  </Data>\n);\n"],"sourceRoot":""}