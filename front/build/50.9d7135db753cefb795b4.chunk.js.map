{"version":3,"sources":["webpack:///./app/components/admin/TabbedResource/index.tsx","webpack:///./app/components/HelmetIntl/index.tsx","webpack:///./app/components/admin/PageTitle/index.tsx","webpack:///./app/containers/Admin/settings/index.tsx"],"names":["ResourceHeader","styled","div","TabbedNav","nav","props","theme","borderRadius","colors","separation","Tab","label","fontSizes","base","adminTextColor","ChildWrapper","adminContentBackground","getRegularExpression","tabUrl","RegExp","TabbedResource","tab","pathname","location","active","url","test","this","children","resource","title","subtitle","publicLink","messages","tabs","className","SectionDescription","buttonStyle","icon","linkTo","FormattedMessage","viewPublicResource","length","map","feature","key","name","activeClassForTab","to","React","PureComponent","withRouter","HelmetIntl","formatMessage","intl","description","Helmet","meta","content","injectIntl","h1","xxxl","SettingsPage","insertTabOptions","setState","insertConfiguration","state","tabSettings","tabCustomize","tabRegistration","tabAreas","tabPages","pageTitle","id","onData","handleData","helmetTitle","helmetDescription"],"mappings":"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","file":"50.9d7135db753cefb795b4.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Link from 'utils/cl-router/Link';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// localisation\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// typings\nimport { Message, ITab } from 'typings';\n\n// components\nimport FeatureFlag from 'components/FeatureFlag';\nimport Button from 'components/UI/Button';\nimport { SectionDescription } from 'components/admin/Section';\nimport Title from 'components/admin/PageTitle';\n\nconst ResourceHeader = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-bottom: 30px;\n\n  @media print {\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin-right: 40px;\n  }\n`;\n\nconst TabbedNav = styled.nav`\n  background: #fcfcfc;\n  border-radius: ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius} 0 0;\n  padding-left: 44px;\n  display: flex;\n  border: 1px solid ${colors.separation};\n  border-bottom: 1px solid transparent;\n  @media print {\n    border: none;\n    padding: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Tab = styled.div`\n  list-style: none;\n  cursor: pointer;\n  display: flex;\n  margin-bottom: -1px;\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  a {\n    color: ${colors.label};\n    font-size: ${fontSizes.base}px;\n    font-weight: 400;\n    line-height: 1.5rem;\n    padding: 0;\n    padding-top: 1em;\n    padding-bottom: 1em;\n    border-bottom: 3px solid transparent;\n    transition: all 100ms ease-out;\n  }\n\n  &:not(.active):hover a {\n    color: ${colors.adminTextColor};\n    border-color: #ddd;\n  }\n\n  &.active a {\n    color: ${colors.adminTextColor};\n    border-color: ${colors.adminTextColor};\n  }\n`;\n\nconst ChildWrapper = styled.div`\n  margin-bottom: 60px;\n  padding: 42px;\n  border: 1px solid ${colors.separation};\n  background: ${colors.adminContentBackground};\n\n  @media print {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\ntype Props = {\n  resource: {\n    title: string;\n    publicLink?: string;\n    subtitle?: string;\n  };\n  messages?: {\n    viewPublicResource: Message;\n  };\n  tabs?: ITab[];\n};\n\ninterface State {}\n\nfunction getRegularExpression(tabUrl: string) {\n  return new RegExp(`^/([a-zA-Z]{2,3}(-[a-zA-Z]{2,3})?)(${tabUrl})(/)?$`);\n}\n\nclass TabbedResource extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  activeClassForTab = (tab: ITab) => {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    return (\n      typeof tab.active === 'function'\n        ? tab.active(pathname)\n        : tab.active ||\n          (pathname && getRegularExpression(tab.url).test(location.pathname))\n    )\n      ? 'active'\n      : '';\n  };\n\n  render() {\n    const {\n      children,\n      resource: { title, subtitle, publicLink },\n      messages,\n      tabs,\n    } = this.props;\n\n    return (\n      <>\n        <ResourceHeader className=\"e2e-resource-header\">\n          <div>\n            <Title>{title}</Title>\n            {subtitle && <SectionDescription>{subtitle}</SectionDescription>}\n          </div>\n\n          {publicLink && messages && (\n            <Button buttonStyle=\"cl-blue\" icon=\"eye\" linkTo={publicLink}>\n              <FormattedMessage {...messages.viewPublicResource} />\n            </Button>\n          )}\n        </ResourceHeader>\n\n        {tabs && tabs.length > 0 && (\n          <TabbedNav className=\"e2e-resource-tabs\">\n            {tabs.map((tab) => {\n              if (tab.feature) {\n                return (\n                  <FeatureFlag key={tab.url} name={tab.feature}>\n                    <Tab\n                      key={tab.url}\n                      className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                    >\n                      <Link to={tab.url}>{tab.label}</Link>\n                    </Tab>\n                  </FeatureFlag>\n                );\n              } else {\n                return (\n                  <Tab\n                    key={tab.url}\n                    className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                  >\n                    <Link to={tab.url}>{tab.label}</Link>\n                  </Tab>\n                );\n              }\n            })}\n          </TabbedNav>\n        )}\n\n        <ChildWrapper>{children}</ChildWrapper>\n      </>\n    );\n  }\n}\n\nexport default withRouter(TabbedResource);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\ntype Props = {\n  title: ReactIntl.FormattedMessage.MessageDescriptor;\n  description: ReactIntl.FormattedMessage.MessageDescriptor;\n};\n\ninterface State {}\n\nexport class HelmetIntl extends React.PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const { title, description } = this.props;\n\n    return (\n      <>\n        <Helmet\n          title={formatMessage(title)}\n          meta={[{ name: 'description', content: formatMessage(description) }]}\n        />\n      </>\n    );\n  }\n}\n\nexport default injectIntl<Props>(HelmetIntl);\n","// style\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nexport default styled.h1`\n  font-size: ${fontSizes.xxxl}px;\n  line-height: 40px;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 15px;\n`;\n","import React from 'react';\n\n// router\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// components\nimport HelmetIntl from 'components/HelmetIntl';\nimport TabbedResource from 'components/admin/TabbedResource';\n\n// i18n\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\nimport { InsertConfigurationOptions, ITab } from 'typings';\nimport { insertConfiguration } from 'utils/moduleUtils';\nimport Outlet from 'components/Outlet';\n\nexport interface InputProps {}\n\nexport interface Props extends InputProps {}\n\ninterface State {\n  tabs: ITab[];\n}\n\nclass SettingsPage extends React.PureComponent<\n  Props & InjectedIntlProps & WithRouterProps,\n  State\n> {\n  constructor(props) {\n    super(props);\n    const { formatMessage } = this.props.intl;\n\n    this.state = {\n      tabs: [\n        {\n          name: 'general',\n          label: formatMessage(messages.tabSettings),\n          url: '/admin/settings/general',\n        },\n        {\n          name: 'customize',\n          label: formatMessage(messages.tabCustomize),\n          url: '/admin/settings/customize',\n        },\n        {\n          name: 'registration',\n          label: formatMessage(messages.tabRegistration),\n          url: '/admin/settings/registration',\n        },\n        {\n          name: 'areas',\n          label: formatMessage(messages.tabAreas),\n          url: '/admin/settings/areas',\n        },\n        {\n          name: 'pages',\n          label: formatMessage(messages.tabPages),\n          url: '/admin/settings/pages',\n        },\n      ],\n    };\n  }\n\n  handleData = (insertTabOptions: InsertConfigurationOptions<ITab>) => {\n    this.setState(({ tabs }) => ({\n      tabs: insertConfiguration(insertTabOptions)(tabs),\n    }));\n  };\n\n  render() {\n    const { children } = this.props;\n    const { formatMessage } = this.props.intl;\n\n    const resource = {\n      title: formatMessage(messages.pageTitle),\n    };\n\n    return (\n      <>\n        <Outlet\n          id=\"app.containers.Admin.settings.tabs\"\n          onData={this.handleData}\n        />\n        <TabbedResource resource={resource} tabs={this.state.tabs}>\n          <HelmetIntl\n            title={messages.helmetTitle}\n            description={messages.helmetDescription}\n          />\n          {children}\n        </TabbedResource>\n      </>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(SettingsPage));\n"],"sourceRoot":""}