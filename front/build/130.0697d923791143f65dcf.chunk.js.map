{"version":3,"sources":["webpack:///./app/components/admin/TabbedResource/index.tsx","webpack:///./app/components/HelmetIntl/index.tsx","webpack:///./app/components/admin/PageTitle/index.tsx","webpack:///./app/containers/Admin/invitations/index.tsx","webpack:///./app/containers/Admin/invitations/messages.ts"],"names":["ResourceHeader","styled","div","TabbedNav","nav","props","theme","borderRadius","colors","separation","Tab","label","fontSizes","base","adminTextColor","ChildWrapper","adminContentBackground","getRegularExpression","tabUrl","RegExp","TabbedResource","tab","pathname","location","active","url","test","this","children","resource","title","subtitle","publicLink","messages","tabs","className","SectionDescription","buttonStyle","icon","linkTo","FormattedMessage","viewPublicResource","length","map","feature","key","name","activeClassForTab","to","React","PureComponent","withRouter","HelmetIntl","formatMessage","intl","description","Helmet","meta","content","injectIntl","h1","xxxl","InvitationsPage","memo","tabInviteUsers","tabAllInvitations","invitePeople","invitationSubtitle","helmetTitle","helmetDescription","defineMessages","id","defaultMessage","email","importTab","textTab","emailListLabel","fileRequirements","visitSupportPage","supportPageLinkText","supportPage","importOptionsInfo","adminLabel","adminLabelTooltip","moderatorLabel","moderatorLabelTooltip","moderatorLabelTooltipLink","moderatorLabelTooltipLinkText","projectSelectorPlaceholder","localeLabel","invitationOptions","addToGroupLabel","inviteTextLabel","groupsPlaceholder","processing","save","saveSuccess","saveErrorMessage","saveSuccessMessage","inviteStatus","invitedSince","deleteInvite","deleteInviteTooltip","exportInvites","inviteStatusPending","inviteStatusAccepted","confirmDelete","currentlyNoInvitesThatMatchSearch","filetypeError","unknownError","invitesSupportPageURL","downloadFillOutTemplate","downloadTemplate","uploadCompletedFile","configureInvitations","required"],"mappings":"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","file":"130.0697d923791143f65dcf.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Link from 'utils/cl-router/Link';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// localisation\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// typings\nimport { Message, ITab } from 'typings';\n\n// components\nimport FeatureFlag from 'components/FeatureFlag';\nimport Button from 'components/UI/Button';\nimport { SectionDescription } from 'components/admin/Section';\nimport Title from 'components/admin/PageTitle';\n\nconst ResourceHeader = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-bottom: 30px;\n\n  @media print {\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin-right: 40px;\n  }\n`;\n\nconst TabbedNav = styled.nav`\n  background: #fcfcfc;\n  border-radius: ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius} 0 0;\n  padding-left: 44px;\n  display: flex;\n  border: 1px solid ${colors.separation};\n  border-bottom: 1px solid transparent;\n  @media print {\n    border: none;\n    padding: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Tab = styled.div`\n  list-style: none;\n  cursor: pointer;\n  display: flex;\n  margin-bottom: -1px;\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  a {\n    color: ${colors.label};\n    font-size: ${fontSizes.base}px;\n    font-weight: 400;\n    line-height: 1.5rem;\n    padding: 0;\n    padding-top: 1em;\n    padding-bottom: 1em;\n    border-bottom: 3px solid transparent;\n    transition: all 100ms ease-out;\n  }\n\n  &:not(.active):hover a {\n    color: ${colors.adminTextColor};\n    border-color: #ddd;\n  }\n\n  &.active a {\n    color: ${colors.adminTextColor};\n    border-color: ${colors.adminTextColor};\n  }\n`;\n\nconst ChildWrapper = styled.div`\n  margin-bottom: 60px;\n  padding: 42px;\n  border: 1px solid ${colors.separation};\n  background: ${colors.adminContentBackground};\n\n  @media print {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\ntype Props = {\n  resource: {\n    title: string;\n    publicLink?: string;\n    subtitle?: string;\n  };\n  messages?: {\n    viewPublicResource: Message;\n  };\n  tabs?: ITab[];\n};\n\ninterface State {}\n\nfunction getRegularExpression(tabUrl: string) {\n  return new RegExp(`^/([a-zA-Z]{2,3}(-[a-zA-Z]{2,3})?)(${tabUrl})(/)?$`);\n}\n\nclass TabbedResource extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  activeClassForTab = (tab: ITab) => {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    return (\n      typeof tab.active === 'function'\n        ? tab.active(pathname)\n        : tab.active ||\n          (pathname && getRegularExpression(tab.url).test(location.pathname))\n    )\n      ? 'active'\n      : '';\n  };\n\n  render() {\n    const {\n      children,\n      resource: { title, subtitle, publicLink },\n      messages,\n      tabs,\n    } = this.props;\n\n    return (\n      <>\n        <ResourceHeader className=\"e2e-resource-header\">\n          <div>\n            <Title>{title}</Title>\n            {subtitle && <SectionDescription>{subtitle}</SectionDescription>}\n          </div>\n\n          {publicLink && messages && (\n            <Button buttonStyle=\"cl-blue\" icon=\"eye\" linkTo={publicLink}>\n              <FormattedMessage {...messages.viewPublicResource} />\n            </Button>\n          )}\n        </ResourceHeader>\n\n        {tabs && tabs.length > 0 && (\n          <TabbedNav className=\"e2e-resource-tabs\">\n            {tabs.map((tab) => {\n              if (tab.feature) {\n                return (\n                  <FeatureFlag key={tab.url} name={tab.feature}>\n                    <Tab\n                      key={tab.url}\n                      className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                    >\n                      <Link to={tab.url}>{tab.label}</Link>\n                    </Tab>\n                  </FeatureFlag>\n                );\n              } else {\n                return (\n                  <Tab\n                    key={tab.url}\n                    className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                  >\n                    <Link to={tab.url}>{tab.label}</Link>\n                  </Tab>\n                );\n              }\n            })}\n          </TabbedNav>\n        )}\n\n        <ChildWrapper>{children}</ChildWrapper>\n      </>\n    );\n  }\n}\n\nexport default withRouter(TabbedResource);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\ntype Props = {\n  title: ReactIntl.FormattedMessage.MessageDescriptor;\n  description: ReactIntl.FormattedMessage.MessageDescriptor;\n};\n\ninterface State {}\n\nexport class HelmetIntl extends React.PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const { title, description } = this.props;\n\n    return (\n      <>\n        <Helmet\n          title={formatMessage(title)}\n          meta={[{ name: 'description', content: formatMessage(description) }]}\n        />\n      </>\n    );\n  }\n}\n\nexport default injectIntl<Props>(HelmetIntl);\n","// style\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nexport default styled.h1`\n  font-size: ${fontSizes.xxxl}px;\n  line-height: 40px;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 15px;\n`;\n","import React from 'react';\n\n// components\nimport HelmetIntl from 'components/HelmetIntl';\nimport TabbedResource from 'components/admin/TabbedResource';\n\n// i18n\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\nexport interface Props {\n  children: JSX.Element;\n}\n\nconst InvitationsPage = React.memo((props: Props & InjectedIntlProps) => {\n  const tabs = [\n    {\n      label: props.intl.formatMessage(messages.tabInviteUsers),\n      url: '/admin/invitations',\n      name: 'index',\n    },\n    {\n      label: props.intl.formatMessage(messages.tabAllInvitations),\n      url: '/admin/invitations/all',\n      name: 'all',\n    },\n  ];\n  const resource = {\n    title: props.intl.formatMessage(messages.invitePeople),\n    subtitle: props.intl.formatMessage(messages.invitationSubtitle),\n  };\n\n  const { children } = props;\n  return (\n    <TabbedResource resource={resource} tabs={tabs}>\n      <HelmetIntl\n        title={messages.helmetTitle}\n        description={messages.helmetDescription}\n      />\n      {children}\n    </TabbedResource>\n  );\n});\n\nexport default injectIntl(InvitationsPage);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  helmetTitle: {\n    id: 'app.containers.Admin.Invitations.helmetTitle',\n    defaultMessage: 'Admin invitation dashboard',\n  },\n  helmetDescription: {\n    id: 'app.containers.Admin.Invitations.helmetDescription',\n    defaultMessage: 'Invite users to the platform',\n  },\n  name: {\n    id: 'app.containers.Admin.Invitations.name',\n    defaultMessage: 'Name',\n  },\n  email: {\n    id: 'app.containers.Admin.Invitations.email',\n    defaultMessage: 'Email',\n  },\n  invitePeople: {\n    id: 'app.containers.Admin.Invitations.invitePeople',\n    defaultMessage: 'Invite people via email',\n  },\n  invitationSubtitle: {\n    id: 'app.containers.Admin.Invitations.invitationSubtitle',\n    defaultMessage:\n      'Invite people to the platform at any point in time. They get a neutral invitation email with your logo, in which they are asked to register on the platform.',\n  },\n  importTab: {\n    id: 'app.containers.Admin.Invitations.importTab',\n    defaultMessage: 'Import email addresses',\n  },\n  textTab: {\n    id: 'app.containers.Admin.Invitations.textTab',\n    defaultMessage: 'Manually enter email addresses',\n  },\n  emailListLabel: {\n    id: 'app.containers.Admin.Invitations.emailListLabel',\n    defaultMessage:\n      'Manually enter the email addresses of the people you want to invite. Seperate each address by a comma.',\n  },\n  fileRequirements: {\n    id: 'app.containers.Admin.Invitations.fileRequirements',\n    defaultMessage:\n      'Important: In order to send the invitations correctly, no column can be removed from the import template. Leave unused columns empty.',\n  },\n  visitSupportPage: {\n    id: 'app.containers.Admin.Invitations.visitSupportPage',\n    defaultMessage:\n      '{supportPageLink} if you want more info about all supported columns in the import template.',\n  },\n  supportPageLinkText: {\n    id: 'app.containers.Admin.Invitations.supportPageLinkText',\n    defaultMessage: 'Visit the support page',\n  },\n  supportPage: {\n    id: 'app.containers.Admin.Invitations.supportPage',\n    defaultMessage: 'support page',\n  },\n  importOptionsInfo: {\n    id: 'app.containers.Admin.Invitations.importOptionsInfo',\n    defaultMessage: `\n      These options will only be taken into account when they are not defined in the Excel file.\n      Please visit the {supportPageLink} for more information.\n    `,\n  },\n  adminLabel: {\n    id: 'app.containers.Admin.Invitations.adminLabel',\n    defaultMessage: 'Grant administrator rights to the invited people?',\n  },\n  adminLabelTooltip: {\n    id: 'app.containers.Admin.Invitations.adminLabelTooltip',\n    defaultMessage:\n      'When toggled on, people receiving and accepting your invitation will also have access to all admin settings of the platform.',\n  },\n  moderatorLabel: {\n    id: 'app.containers.Admin.Invitations.moderatorLabel',\n    defaultMessage: 'Grant project moderator rights to the invited people?',\n  },\n  moderatorLabelTooltip: {\n    id: 'app.containers.Admin.Invitations.moderatorLabelTooltip',\n    defaultMessage:\n      'When toggled on, people receiving and accepting your invitation will also have moderator rights to one or multiple projects. More info on the project moderator role {moderatorLabelTooltipLink}.',\n  },\n  moderatorLabelTooltipLink: {\n    id: 'app.containers.Admin.Invitations.moderatorLabelTooltipLink',\n    defaultMessage:\n      'http://support.citizenlab.co/en-your-citizenlab-platform-step-by-step/set-up/pointing-out-the-right-project-moderators',\n  },\n  moderatorLabelTooltipLinkText: {\n    id: 'app.containers.Admin.Invitations.moderatorLabelTooltipLinkText',\n    defaultMessage: 'here',\n  },\n  projectSelectorPlaceholder: {\n    id: 'app.containers.Admin.Invitations.projectSelectorPlaceholder',\n    defaultMessage: 'No project(s) selected',\n  },\n  localeLabel: {\n    id: 'app.containers.Admin.Invitations.localeLabel',\n    defaultMessage: 'Select the default language for the invited people',\n  },\n  invitationOptions: {\n    id: 'app.containers.Admin.Invitations.invitationOptions',\n    defaultMessage: 'Invitation options',\n  },\n  addToGroupLabel: {\n    id: 'app.containers.Admin.Invitations.addToGroupLabel',\n    defaultMessage: 'Add these people to specific manual user groups',\n  },\n  inviteTextLabel: {\n    id: 'app.containers.Admin.Invitations.inviteTextLabel',\n    defaultMessage:\n      'Optionally type a message that will be added to the invitation mail.',\n  },\n  groupsPlaceholder: {\n    id: 'app.containers.Admin.Invitations.groupsPlaceholder',\n    defaultMessage: 'No group selected',\n  },\n  processing: {\n    id: 'app.containers.Admin.Invitations.processing',\n    defaultMessage: 'Sending out invitations. Please wait...',\n  },\n  save: {\n    id: 'app.containers.Admin.Invitations.save',\n    defaultMessage: 'Send out invitations',\n  },\n  saveSuccess: {\n    id: 'app.containers.Admin.Invitations.saveSuccess',\n    defaultMessage: 'Success!',\n  },\n  saveErrorMessage: {\n    id: 'app.containers.Admin.Invitations.saveErrorMessage',\n    defaultMessage: `\n      One or more errors occured.\n      Therefore no invitations were sent out.\n      Please correct the error(s) listed below and try again.\n    `,\n  },\n  saveSuccessMessage: {\n    id: 'app.containers.Admin.Invitations.saveSuccessMessage',\n    defaultMessage: 'Invitation successfully sent out.',\n  },\n  inviteStatus: {\n    id: 'app.containers.Admin.Invitations.inviteStatus',\n    defaultMessage: 'Status',\n  },\n  invitedSince: {\n    id: 'app.containers.Admin.Invitations.invitedSince',\n    defaultMessage: 'Invited',\n  },\n  deleteInvite: {\n    id: 'app.containers.Admin.Invitations.deleteInvite',\n    defaultMessage: 'Delete',\n  },\n  deleteInviteTooltip: {\n    id: 'app.containers.Admin.Invitations.deleteInviteTooltip',\n    defaultMessage:\n      'Cancelling an invitation will allow you to resend an invitation to these persons.',\n  },\n  exportInvites: {\n    id: 'app.containers.Admin.Invitations.exportInvites',\n    defaultMessage: 'Export all invitations',\n  },\n  inviteStatusPending: {\n    id: 'app.containers.Admin.Invitations.inviteStatusPending',\n    defaultMessage: 'Pending',\n  },\n  inviteStatusAccepted: {\n    id: 'app.containers.Admin.Invitations.inviteStatusAccepted',\n    defaultMessage: 'Accepted',\n  },\n  confirmDelete: {\n    id: 'app.containers.Admin.Invitations.confirmDelete',\n    defaultMessage: \"Yes, I'm sure\",\n  },\n  currentlyNoInvitesThatMatchSearch: {\n    id: 'app.containers.Admin.Invitations.currentlyNoInvitesThatMatchSearch',\n    defaultMessage: 'There are no invites that match your search',\n  },\n  filetypeError: {\n    id: 'app.containers.Admin.Invitations.filetypeError',\n    defaultMessage: 'Incorrect file type. Only XLSX files are supported.',\n  },\n  unknownError: {\n    id: 'app.containers.Admin.Invitations.unknownError',\n    defaultMessage: 'Something went wrong. Please try again later.',\n  },\n  invitesSupportPageURL: {\n    id: 'app.containers.Admin.Invitations.invitesSupportPageURL',\n    defaultMessage:\n      'http://support.citizenlab.co/en/articles/1771605-invite-people-to-the-platform',\n  },\n  tabInviteUsers: {\n    id: 'app.containers.Admin.Invitations.tabInviteUsers',\n    defaultMessage: 'Invite users',\n  },\n  tabAllInvitations: {\n    id: 'app.containers.Admin.Invitations.tabAllInvitations',\n    defaultMessage: 'All invitations',\n  },\n  downloadFillOutTemplate: {\n    id: 'app.containers.Admin.Invitations.downloadFillOutTemplate',\n    defaultMessage: '1. Download and fill out the template',\n  },\n  downloadTemplate: {\n    id: 'app.containers.Admin.Invitations.downloadTemplate',\n    defaultMessage: 'Download template',\n  },\n  uploadCompletedFile: {\n    id: 'app.containers.Admin.Invitations.uploadCompletedFile',\n    defaultMessage: '2. Upload your completed template file',\n  },\n  configureInvitations: {\n    id: 'app.containers.Admin.Invitations.configureInvitations',\n    defaultMessage: '3. Configure the invitations',\n  },\n  required: {\n    id: 'UI.FormComponents.required',\n    defaultMessage: 'required',\n  },\n});\n"],"sourceRoot":""}