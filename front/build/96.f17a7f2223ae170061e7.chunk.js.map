{"version":3,"sources":["webpack:///./app/modules/commercial/custom_maps/admin/containers/ProjectCustomMapConfigPage/MapLayersList.tsx","webpack:///./app/modules/commercial/custom_maps/admin/containers/ProjectCustomMapConfigPage/MapConfigOverview.tsx","webpack:///./app/modules/commercial/custom_maps/admin/containers/ProjectCustomMapConfigPage/MapCenterAndZoomConfig.tsx","webpack:///./app/components/Map/index.tsx","webpack:///./app/components/UI/LeafletMap/events.ts","webpack:///./app/modules/commercial/custom_maps/admin/containers/ProjectCustomMapConfigPage/GeoJsonImportButton.tsx","webpack:///./app/modules/commercial/custom_maps/admin/containers/ProjectCustomMapConfigPage/messages.ts","webpack:///./app/modules/commercial/custom_maps/admin/containers/ProjectCustomMapConfigPage/index.tsx","webpack:///./app/modules/commercial/custom_maps/admin/containers/ProjectCustomMapConfigPage/MapLayerConfig.tsx"],"names":["Container","styled","div","StyledIconTooltip","IconTooltip","StyledSortableList","SortableList","ListItem","LayerIcon","Icon","props","color","LayerName","colors","adminTextColor","fontSizes","medium","Buttons","EditButton","Button","RemoveButton","Spacer","MapLayersList","memo","projectId","onEditLayer","className","formatMessage","intl","localize","mapConfig","removeLayer","layerId","event","preventDefault","message","messages","deleteConfirmation","window","confirm","deleteProjectMapLayer","supportArticleUrl","supportArticleLink","href","target","rel","FormattedMessage","supportArticle","SubSectionTitle","layers","content","layersTooltip","values","attributes","length","key","items","onReorder","mapLayerId","newOrder","reorderProjectMapLayer","id","itemsList","handleDragRow","handleDropRow","map","mapLayer","index","layerColor","getLayerColor","layerIconName","getLayerIcon","layerTitle","title_multiloc","SortableRow","lastItem","moveRow","dropRow","name","placement","edit","hideOnClick","arrow","icon","iconSize","buttonStyle","padding","onClick","remove","mapConfigId","injectIntl","Header","TitleContainer","StyledSectionTitle","SectionTitle","StyledMapLayersList","StyledMapCenterAndZoomConfig","MapCenterAndZoomConfig","useState","editedMapLayerId","setEditedMapLayerId","mapConfigurationTitle","SectionDescription","mapConfigurationDescription","onClose","SubSectionTitleWrapper","StyledSubSectionTitle","CopyIcon","CenterLatInput","Input","CenterLngInput","ZoomInput","ButtonWrapper","SaveButton","appConfig","defaultLatLng","getCenter","undefined","defaultLat","defaultLng","defaultZoom","getZoomLevel","touched","setTouched","processing","setProcessing","errors","setErrors","toString","formValues","setFormValues","useEffect","isNilOrError","formChange","validate","parseFloat","parseInt","inRange","changedFormValue","prevFormValues","handleOnSave","updateProjectMapConfig","center_geojson","type","coordinates","zoom_level","setLeafletMapCenter","setLeafletMapZoom","errorResponse","json","mapCenterAndZoom","mapCenterAndZoomTooltip","button","title","value","onChange","centerLat","label","latLabel","labelTooltipText","centerLatLabelTooltip","centerLng","lngLabel","centerLngLabelTooltip","min","max","zoom","zoomLabel","zoomLabelTooltip","disabled","save","isEmpty","text","errorMessage","marginTop","LeafletMap","lazy","defaultCardStyle","MapWrapper","BoxContainer","CloseButton","defaultOutline","media","smallerThanMinTablet","CloseIcon","centerLatLng","zoomLevel","mapHeight","points","noMarkerClustering","zoomControlPosition","layersControlPosition","boxContent","onInit","onBoxClose","hideLegend","additionalLeafletConfig","setAdditionalLeafletConfig","center","useMemo","tileProvider","getTileProvider","tileOptions","getTileOptions","leafletConfig","handleLeafletConfigChange","useCallback","Suspense","fallback","onLeafletConfigChange","eventEmitter","emit","events","leafletMapCenterChange","leafletMapZoomChange","markerId","leafletMapHoveredMarkerChange","leafletMapSelectedMarkerChange","latLng","leafletMapClicked","leafletMapCenter$","observeEvent","pipe","eventValue","distinctUntilChanged","x","y","isEqual","publishReplay","refCount","leafletMapZoom$","leafletMapHoveredMarker$","leafletMapSelectedMarker$","leafletMapClicked$","debounceTime","input","ButtonContainer","StyledButton","StyledLabel","fileAccept","tenantLocales","importError","setImportError","fileReader","FileReader","readAsText","files","onload","geojson","JSON","parse","result","createProjectMapLayer","getUnnamedLayerTitleMultiloc","default_enabled","accept","join","tabIndex","htmlFor","import","showIcon","defineMessages","defaultMessage","layerName","layerNameTooltip","layerTooltip","layerTooltipTooltip","cancel","layerColorTooltip","layerIconNameTooltip","here","editLayer","goToDefaultMapView","setAsDefaultMapView","currentLat","currentLng","currentZoomLevel","saved","Loading","StyledMapConfigOverview","MapConfigOverview","GoToDefaultViewportButtonWrapper","theme","borderRadius","SetAsDefaultViewportButtonWrapper","ProjectCustomMapConfigPage","params","defaultTileProvider","setCurrentLat","setCurrentLng","currentZoom","setCurrentZoom","toFixed","subscriptions","combineLatest","subscribe","forEach","subscription","unsubscribe","createProjectMapConfig","tile_provider","maxWidth","boxShadow","Spinner","withRouter","StyledSection","Section","Footer","FooterLeft","FooterRight","CancelButton","makiIconOptions","makiIconNames","makiIconName","getEditableTitleMultiloc","mutiloc","forOwn","MapLayerConfig","find","layer","getLayerType","markerSymbol","features","properties","tooltipContent","handleOnSubmit","Object","getOwnPropertyNames","every","cloneDeep","feature","fill","stroke","updateProjectMapLayer","SectionField","valueMultiloc","Select","option","url","options","ColorPickerInput","showBackground"],"mappings":"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","file":"96.f17a7f2223ae170061e7.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\n// components\nimport Button from 'components/UI/Button';\nimport { Icon, IconTooltip } from 'cl2-component-library';\nimport Tippy from '@tippyjs/react';\nimport { SubSectionTitle } from 'components/admin/Section';\nimport { SortableList, SortableRow } from 'components/admin/ResourceList';\nimport GeoJsonImportButton from './GeoJsonImportButton';\n\n// hooks\nimport useMapConfig from '../../../hooks/useMapConfig';\n\n// services\nimport {\n  deleteProjectMapLayer,\n  reorderProjectMapLayer,\n  IMapLayerAttributes,\n} from '../../../services/mapLayers';\n\n// utils\nimport { getLayerColor, getLayerIcon } from '../../../utils/map';\n\n// i18n\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\nconst Container = styled.div``;\n\nconst StyledIconTooltip = styled(IconTooltip)`\n  margin-left: 5px;\n`;\n\nconst StyledSortableList = styled(SortableList)`\n  margin-top: 5px;\n  margin-bottom: 25px;\n`;\n\nconst ListItem = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n`;\n\nconst LayerIcon = styled(Icon)<{ color: string }>`\n  fill: ${(props) => props.color};\n  width: 19px;\n  margin-right: 10px;\n`;\n\nconst LayerName = styled.div`\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.medium}px;\n  line-height: normal;\n  font-weight: 400;\n  flex: 1;\n  display: flex;\n  align-items: center;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 15px;\n`;\n\nconst EditButton = styled(Button)``;\n\nconst RemoveButton = styled(Button)``;\n\nconst Spacer = styled.div`\n  width: 14px;\n`;\n\ninterface Props {\n  projectId: string;\n  onEditLayer: (layerId: string) => void;\n  className?: string;\n}\n\nconst MapLayersList = memo<Props & InjectedIntlProps & InjectedLocalized>(\n  ({\n    projectId,\n    onEditLayer,\n    className,\n    intl: { formatMessage },\n    localize,\n  }) => {\n    const mapConfig = useMapConfig({ projectId });\n\n    const handleReorderLayers = (mapLayerId: string, newOrder: number) => {\n      reorderProjectMapLayer(projectId, mapLayerId, newOrder);\n    };\n\n    const removeLayer = (layerId: string) => (event: React.FormEvent) => {\n      event?.preventDefault();\n\n      const message = formatMessage(messages.deleteConfirmation);\n\n      if (window.confirm(message)) {\n        deleteProjectMapLayer(projectId, layerId);\n      }\n    };\n\n    const toggleLayerConfig = (layerId: string) => (event: React.FormEvent) => {\n      event?.preventDefault();\n      onEditLayer(layerId);\n    };\n\n    const supportArticleUrl = formatMessage(messages.supportArticleUrl);\n\n    const supportArticleLink = (\n      <a href={supportArticleUrl} target=\"_blank\" rel=\"noreferrer\">\n        <FormattedMessage {...messages.supportArticle} />\n      </a>\n    );\n\n    return (\n      <Container className={className || ''}>\n        <SubSectionTitle>\n          <FormattedMessage {...messages.layers} />\n          <StyledIconTooltip\n            content={\n              <FormattedMessage\n                {...messages.layersTooltip}\n                values={{\n                  supportArticle: supportArticleLink,\n                }}\n              />\n            }\n          />\n        </SubSectionTitle>\n        {mapConfig?.attributes?.layers &&\n          mapConfig?.attributes?.layers?.length > 0 && (\n            <StyledSortableList\n              key={mapConfig.attributes.layers.length}\n              items={mapConfig.attributes.layers}\n              onReorder={handleReorderLayers}\n              className=\"maplayers-list e2e-admin-maplayers-list\"\n              id=\"e2e-admin-maplayers-list\"\n            >\n              {({ itemsList, handleDragRow, handleDropRow }) => (\n                <>\n                  {(itemsList as IMapLayerAttributes[]).map(\n                    (mapLayer, index) => {\n                      const layerColor = getLayerColor(mapLayer);\n                      const layerIconName = getLayerIcon(mapLayer);\n                      const layerTitle = localize(mapLayer.title_multiloc);\n\n                      return (\n                        <SortableRow\n                          key={mapLayer.id}\n                          id={mapLayer.id}\n                          index={index}\n                          lastItem={\n                            index === mapConfig.attributes.layers.length - 1\n                          }\n                          moveRow={handleDragRow}\n                          dropRow={handleDropRow}\n                        >\n                          <ListItem>\n                            <LayerIcon\n                              name={layerIconName}\n                              color={layerColor}\n                            />\n                            <LayerName>{layerTitle}</LayerName>\n                            <Buttons>\n                              <Tippy\n                                placement=\"bottom\"\n                                content={\n                                  <FormattedMessage {...messages.edit} />\n                                }\n                                hideOnClick={false}\n                                arrow={false}\n                              >\n                                <div>\n                                  <EditButton\n                                    icon=\"edit\"\n                                    iconSize=\"16px\"\n                                    buttonStyle=\"text\"\n                                    padding=\"0px\"\n                                    onClick={toggleLayerConfig(mapLayer.id)}\n                                  />\n                                </div>\n                              </Tippy>\n\n                              <Spacer />\n\n                              <Tippy\n                                placement=\"bottom\"\n                                content={\n                                  <FormattedMessage {...messages.remove} />\n                                }\n                                hideOnClick={false}\n                                arrow={false}\n                              >\n                                <div>\n                                  <RemoveButton\n                                    icon=\"delete\"\n                                    iconSize=\"16px\"\n                                    buttonStyle=\"text\"\n                                    padding=\"0px\"\n                                    onClick={removeLayer(mapLayer.id)}\n                                  />\n                                </div>\n                              </Tippy>\n                            </Buttons>\n                          </ListItem>\n                        </SortableRow>\n                      );\n                    }\n                  )}\n                </>\n              )}\n            </StyledSortableList>\n          )}\n\n        {mapConfig?.id && (\n          <GeoJsonImportButton\n            projectId={projectId}\n            mapConfigId={mapConfig.id}\n          />\n        )}\n      </Container>\n    );\n  }\n);\n\nexport default injectIntl(injectLocalize(MapLayersList));\n","import React, { memo, useState } from 'react';\n\n// components\nimport MapLayersList from './MapLayersList';\nimport MapLayerConfig from './MapLayerConfig';\nimport MapCenterAndZoomConfig from './MapCenterAndZoomConfig';\nimport { SectionTitle, SectionDescription } from 'components/admin/Section';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\nconst Header = styled.div`\n  width: 100%;\n  max-width: 600px;\n  margin-bottom: 40px;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nconst StyledSectionTitle = styled(SectionTitle)`\n  flex: 1;\n  padding: 0;\n  margin: 0;\n`;\n\nconst StyledMapLayersList = styled(MapLayersList)`\n  margin-bottom: 80px;\n`;\n\nconst StyledMapCenterAndZoomConfig = styled(MapCenterAndZoomConfig)``;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\nconst MapConfigOverview = memo<Props>(({ projectId, className }) => {\n  const [editedMapLayerId, setEditedMapLayerId] = useState<string | null>(null);\n\n  const openLayerConfig = (layerId: string) => {\n    setEditedMapLayerId(layerId);\n  };\n\n  const closeLayerConfig = () => {\n    setEditedMapLayerId(null);\n  };\n\n  return (\n    <Container className={className || ''}>\n      <Header>\n        <TitleContainer>\n          <StyledSectionTitle>\n            <FormattedMessage {...messages.mapConfigurationTitle} />\n          </StyledSectionTitle>\n        </TitleContainer>\n        <SectionDescription>\n          <FormattedMessage {...messages.mapConfigurationDescription} />\n        </SectionDescription>\n      </Header>\n\n      {!editedMapLayerId ? (\n        <>\n          <StyledMapLayersList\n            projectId={projectId}\n            onEditLayer={openLayerConfig}\n          />\n          <StyledMapCenterAndZoomConfig projectId={projectId} />\n        </>\n      ) : (\n        <MapLayerConfig\n          projectId={projectId}\n          mapLayerId={editedMapLayerId}\n          onClose={closeLayerConfig}\n        />\n      )}\n    </Container>\n  );\n});\n\nexport default MapConfigOverview;\n","import React, { memo, useState, useEffect } from 'react';\nimport { isEmpty, inRange } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// services\nimport { updateProjectMapConfig } from '../../../services/mapConfigs';\n\n// hooks\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport useMapConfig from '../../../hooks/useMapConfig';\n\n// components\nimport { Input, IconTooltip, Icon } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\nimport Error from 'components/UI/Error';\nimport { SubSectionTitle } from 'components/admin/Section';\n\n// utils\nimport { getCenter, getZoomLevel } from '../../../utils/map';\n\n// events\nimport {\n  setLeafletMapCenter,\n  setLeafletMapZoom,\n} from 'components/UI/LeafletMap/events';\n\n// i18n\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst SubSectionTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 25px;\n`;\n\nconst StyledSubSectionTitle = styled(SubSectionTitle)`\n  padding: 0px;\n  margin: 0px;\n`;\n\nconst StyledIconTooltip = styled(IconTooltip)`\n  margin-left: 5px;\n`;\n\nconst CopyIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  fill: #fff;\n  margin-left: 2px;\n  margin-right: 2px;\n`;\n\nconst CenterLatInput = styled(Input)`\n  margin-bottom: 30px;\n`;\n\nconst CenterLngInput = styled(Input)`\n  margin-bottom: 30px;\n`;\n\nconst ZoomInput = styled(Input)`\n  margin-bottom: 25px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n`;\n\nconst SaveButton = styled(Button)`\n  margin-right: 10px;\n`;\n\ninterface Props {\n  projectId: string;\n  className?: string;\n}\n\ninterface IFormValues {\n  defaultLat: string | null;\n  defaultLng: string | null;\n  defaultZoom: number | null;\n}\n\nconst MapCenterAndZoomConfig = memo<Props & InjectedIntlProps>(\n  ({ projectId, className, intl: { formatMessage } }) => {\n    const appConfig = useAppConfiguration();\n    const mapConfig = useMapConfig({ projectId });\n\n    const defaultLatLng = getCenter(undefined, appConfig, mapConfig);\n    const defaultLat = defaultLatLng[0];\n    const defaultLng = defaultLatLng[1];\n    const defaultZoom = getZoomLevel(undefined, appConfig, mapConfig);\n\n    const [touched, setTouched] = useState(false);\n    const [processing, setProcessing] = useState(false);\n    const [errors, setErrors] = useState<{ [key: string]: any }>({});\n    const [formValues, setFormValues] = useState<IFormValues>({\n      defaultZoom,\n      defaultLat: defaultLat.toString(),\n      defaultLng: defaultLng.toString(),\n    });\n\n    useEffect(() => {\n      if (!isNilOrError(appConfig) && mapConfig) {\n        const defaultLatLng = getCenter(undefined, appConfig, mapConfig);\n        const defaultLat = defaultLatLng[0];\n        const defaultLng = defaultLatLng[1];\n        const defaultZoom = getZoomLevel(undefined, appConfig, mapConfig);\n\n        formChange(\n          {\n            defaultZoom,\n            defaultLat: defaultLat.toString(),\n            defaultLng: defaultLng.toString(),\n          },\n          false\n        );\n      }\n    }, [appConfig, mapConfig]);\n\n    const validate = () => {\n      const defaultLat = parseFloat(formValues.defaultLat as any);\n      const defaultLng = parseFloat(formValues.defaultLng as any);\n      const defaultZoom = parseInt(formValues.defaultZoom as any, 10);\n\n      if (\n        inRange(defaultLng, -180, 180) &&\n        inRange(defaultLat, -90, 90) &&\n        inRange(defaultZoom, 0, 21)\n      ) {\n        return true;\n      }\n\n      return false;\n    };\n\n    const formChange = (\n      changedFormValue: Partial<IFormValues>,\n      touched = true\n    ) => {\n      setTouched(touched);\n      setFormValues((prevFormValues) => ({\n        ...prevFormValues,\n        ...changedFormValue,\n      }));\n    };\n\n    const formProcessing = () => {\n      setProcessing(true);\n      setErrors({});\n    };\n\n    const formSuccess = () => {\n      setProcessing(false);\n      setErrors({});\n      setTouched(false);\n    };\n\n    const formError = (errorResponse) => {\n      setProcessing(false);\n      setErrors(errorResponse?.json?.errors || 'unknown error');\n    };\n\n    const handleCenterLatOnChange = (centerLat: string) => {\n      formChange({ defaultLat: centerLat });\n    };\n\n    const handleCenterLngOnChange = (centerLng: string) => {\n      formChange({ defaultLng: centerLng });\n    };\n\n    const handleZoomOnChange = (zoom: string) => {\n      formChange({ defaultZoom: parseInt(zoom, 10) });\n    };\n\n    const handleOnSave = async (event: React.FormEvent) => {\n      event.preventDefault();\n\n      if (mapConfig && validate()) {\n        try {\n          formProcessing();\n          const defaultLat = parseFloat(formValues.defaultLat as any);\n          const defaultLng = parseFloat(formValues.defaultLng as any);\n          const defaultZoom = formValues.defaultZoom?.toString() as string;\n\n          await updateProjectMapConfig(projectId, mapConfig.id, {\n            center_geojson: {\n              type: 'Point',\n              coordinates: [defaultLng, defaultLat],\n            },\n            zoom_level: defaultZoom,\n          });\n\n          setLeafletMapCenter([defaultLat, defaultLng]);\n          setLeafletMapZoom(parseInt(defaultZoom, 10));\n          formSuccess();\n        } catch (error) {\n          formError(error);\n        }\n      }\n    };\n\n    return (\n      <Container className={className || ''}>\n        <SubSectionTitleWrapper>\n          <StyledSubSectionTitle>\n            <FormattedMessage {...messages.mapCenterAndZoom} />\n            <StyledIconTooltip\n              content={\n                <FormattedMessage\n                  {...messages.mapCenterAndZoomTooltip}\n                  values={{ button: <CopyIcon title=\"save\" name=\"save\" /> }}\n                />\n              }\n            />\n          </StyledSubSectionTitle>\n        </SubSectionTitleWrapper>\n\n        <CenterLatInput\n          type=\"text\"\n          value={formValues.defaultLat}\n          onChange={handleCenterLatOnChange}\n          label={formatMessage(messages.latLabel)}\n          // label=\"Latitude\"\n          labelTooltipText={formatMessage(messages.centerLatLabelTooltip)}\n        />\n\n        <CenterLngInput\n          type=\"text\"\n          value={formValues.defaultLng}\n          onChange={handleCenterLngOnChange}\n          label={formatMessage(messages.lngLabel)}\n          // label=\"Longitude\"\n          labelTooltipText={formatMessage(messages.centerLngLabelTooltip)}\n        />\n\n        <ZoomInput\n          type=\"number\"\n          value={formValues.defaultZoom?.toString()}\n          min=\"1\"\n          max=\"18\"\n          onChange={handleZoomOnChange}\n          label={formatMessage(messages.zoomLabel)}\n          labelTooltipText={formatMessage(messages.zoomLabelTooltip)}\n        />\n\n        <ButtonWrapper>\n          <SaveButton\n            icon=\"save\"\n            buttonStyle=\"admin-dark\"\n            onClick={handleOnSave}\n            processing={processing}\n            disabled={!touched}\n          >\n            <FormattedMessage {...messages.save} />\n          </SaveButton>\n        </ButtonWrapper>\n\n        {!isEmpty(errors) && (\n          <Error text={formatMessage(messages.errorMessage)} marginTop=\"20px\" />\n        )}\n      </Container>\n    );\n  }\n);\n\nexport default injectIntl(MapCenterAndZoomConfig);\n","import React, {\n  memo,\n  useMemo,\n  useState,\n  lazy,\n  Suspense,\n  useCallback,\n} from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport Outlet from 'components/Outlet';\nconst LeafletMap = lazy(() => import('components/UI/LeafletMap'));\n\n// hooks\nimport useAppConfiguration from 'hooks/useAppConfiguration';\n\n// utils\nimport {\n  getCenter,\n  getZoomLevel,\n  getTileProvider,\n  getTileOptions,\n} from 'utils/map';\nimport { ILeafletMapConfig } from 'components/UI/LeafletMap/useLeaflet';\n\n// styling\nimport styled from 'styled-components';\nimport { media, defaultOutline, defaultCardStyle } from 'utils/styleUtils';\n\n// typings\nimport { LatLngTuple, Map as ILeafletMap } from 'leaflet';\n\nexport interface Point extends GeoJSON.Point {\n  data?: any;\n  id: string;\n  title?: string;\n}\n\nconst Container = styled.div`\n  ${defaultCardStyle};\n  background: transparent;\n  border: solid 1px #ccc;\n`;\n\nconst MapWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  position: relative;\n`;\n\nconst BoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  position: absolute;\n  top: 0;\n  z-index: 1001;\n  background: #fff;\n  width: 100%;\n  height: 80%;\n  max-height: 550px;\n`;\n\nconst CloseButton = styled.button`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n  border-radius: 50%;\n  border: solid 1px transparent;\n  background: #fff;\n  transition: all 100ms ease-out;\n  outline: none !important;\n\n  &:hover {\n    background: #ececec;\n  }\n\n  &.focus-visible {\n    ${defaultOutline};\n  }\n\n  ${media.smallerThanMinTablet`\n    top: 4px;\n    right: 4px;\n  `}\n`;\n\nconst CloseIcon = styled(Icon)`\n  width: 12px;\n  height: 12px;\n  fill: #000;\n`;\n\nexport interface IMapConfigProps {\n  centerLatLng?: LatLngTuple;\n  points?: Point[];\n  zoomLevel?: number;\n  areas?: GeoJSON.Polygon[];\n  mapHeight?: string;\n  noMarkerClustering?: boolean;\n  zoomControlPosition?: 'topleft' | 'topright' | 'bottomleft' | 'bottomright';\n  layersControlPosition?: 'topleft' | 'topright' | 'bottomleft' | 'bottomright';\n}\n\nexport interface IMapProps {\n  onInit?: (map: ILeafletMap) => void;\n  onBoxClose?: (event: React.FormEvent) => void;\n  className?: string;\n  projectId?: string | null;\n  hideLegend?: boolean;\n  boxContent?: JSX.Element | null;\n}\n\nconst Map = memo<IMapProps & IMapConfigProps>(\n  ({\n    projectId,\n    centerLatLng,\n    zoomLevel,\n    mapHeight,\n    points,\n    noMarkerClustering,\n    zoomControlPosition,\n    layersControlPosition,\n    boxContent,\n    onInit,\n    onBoxClose,\n    className,\n    hideLegend,\n  }) => {\n    const appConfig = useAppConfiguration();\n\n    const [\n      additionalLeafletConfig,\n      setAdditionalLeafletConfig,\n    ] = useState<ILeafletMapConfig | null>(null);\n\n    const center = useMemo(() => {\n      return getCenter(centerLatLng, appConfig);\n    }, [centerLatLng, appConfig]);\n\n    const zoom = useMemo(() => {\n      return getZoomLevel(zoomLevel, appConfig);\n    }, [zoomLevel, appConfig]);\n\n    const tileProvider = useMemo(() => {\n      return getTileProvider(appConfig);\n    }, [appConfig]);\n\n    const tileOptions = useMemo(() => {\n      return getTileOptions();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tileProvider]);\n\n    const leafletConfig = useMemo(() => {\n      return {\n        points,\n        noMarkerClustering,\n        zoom,\n        center,\n        tileProvider,\n        tileOptions,\n        zoomControlPosition,\n        layersControlPosition,\n        ...additionalLeafletConfig,\n      };\n    }, [\n      points,\n      noMarkerClustering,\n      zoom,\n      center,\n      tileProvider,\n      tileOptions,\n      zoomControlPosition,\n      layersControlPosition,\n      additionalLeafletConfig,\n    ]);\n\n    const handleLeafletConfigChange = useCallback(\n      (leafletConfig: ILeafletMapConfig) => {\n        setAdditionalLeafletConfig(leafletConfig);\n      },\n      []\n    );\n\n    const handleBoxOnClose = (event: React.FormEvent) => {\n      event.preventDefault();\n      onBoxClose?.(event);\n    };\n\n    const handleOnInit = (map: L.Map) => {\n      onInit?.(map);\n    };\n\n    return (\n      <Container className={className || ''}>\n        <MapWrapper>\n          {!isNilOrError(boxContent) && (\n            <BoxContainer>\n              <CloseButton onClick={handleBoxOnClose}>\n                <CloseIcon name=\"close\" />\n              </CloseButton>\n\n              {boxContent}\n            </BoxContainer>\n          )}\n\n          <Suspense fallback={false}>\n            <LeafletMap\n              id=\"mapid\"\n              className=\"e2e-leafletmap\"\n              mapHeight={mapHeight}\n              onInit={handleOnInit}\n              {...leafletConfig}\n            />\n          </Suspense>\n          <Outlet\n            id=\"app.components.Map.leafletConfig\"\n            projectId={projectId}\n            onLeafletConfigChange={handleLeafletConfigChange}\n            centerLatLng={centerLatLng}\n            zoomLevel={zoomLevel}\n            points={points}\n          />\n        </MapWrapper>\n\n        {!hideLegend && (\n          <Outlet id=\"app.components.Map.Legend\" projectId={projectId} />\n        )}\n      </Container>\n    );\n  }\n);\n\nexport default Map;\n","import {\n  distinctUntilChanged,\n  map,\n  publishReplay,\n  refCount,\n  debounceTime,\n} from 'rxjs/operators';\nimport { isEqual } from 'lodash-es';\nimport eventEmitter from 'utils/eventEmitter';\nimport { LatLngTuple } from 'leaflet';\n\nenum events {\n  leafletMapCenterChange = 'leafletMapCenterChange',\n  leafletMapZoomChange = 'leafletMapZoomChange',\n  leafletMapLatLngZoomChange = 'leafletMapLatLngZoomChange',\n  leafletMapHoveredMarkerChange = 'leafletMapHoveredMarkerChange',\n  leafletMapSelectedMarkerChange = 'leafletMapSelectedMarkerChange',\n  leafletMapClicked = 'leafletMapClicked',\n}\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapCenter(center: LatLngTuple | null) {\n  eventEmitter.emit<LatLngTuple | null>(events.leafletMapCenterChange, center);\n}\n\nexport const leafletMapCenter$ = eventEmitter\n  .observeEvent<LatLngTuple | null>(events.leafletMapCenterChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y)),\n    publishReplay(1),\n    refCount()\n  );\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapZoom(zoom: number | null) {\n  eventEmitter.emit<number | null>(events.leafletMapZoomChange, zoom);\n}\n\nexport const leafletMapZoom$ = eventEmitter\n  .observeEvent<number | null>(events.leafletMapZoomChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y)),\n    publishReplay(1),\n    refCount()\n  );\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapHoveredMarker(markerId: string | null) {\n  eventEmitter.emit<string | null>(\n    events.leafletMapHoveredMarkerChange,\n    markerId\n  );\n}\n\nexport const leafletMapHoveredMarker$ = eventEmitter\n  .observeEvent<string | null>(events.leafletMapHoveredMarkerChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y))\n  );\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapSelectedMarker(markerId: string | null) {\n  eventEmitter.emit<string | null>(\n    events.leafletMapSelectedMarkerChange,\n    markerId\n  );\n}\n\nexport const leafletMapSelectedMarker$ = eventEmitter\n  .observeEvent<string | null>(events.leafletMapSelectedMarkerChange)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y))\n  );\n\n// ----------------------------------------------------------------------------------------------\n\nexport function setLeafletMapClicked(latLng: L.LatLng) {\n  eventEmitter.emit<L.LatLng>(events.leafletMapClicked, latLng);\n}\n\nexport const leafletMapClicked$ = eventEmitter\n  .observeEvent<L.LatLng>(events.leafletMapClicked)\n  .pipe(\n    map(({ eventValue }) => eventValue),\n    distinctUntilChanged((x, y) => isEqual(x, y)),\n    debounceTime(50)\n  );\n\n// ----------------------------------------------------------------------------------------------\n","import React, { memo, useState } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// services\nimport { createProjectMapLayer } from '../../../services/mapLayers';\n\n// components\nimport Error from 'components/UI/Error';\n\n// hooks\nimport useAppConfigurationLocales from 'hooks/useAppConfigurationLocales';\n\n// utils\nimport { getUnnamedLayerTitleMultiloc } from '../../../utils/map';\n\n// i18n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// styling\nimport styled from 'styled-components';\n\n// components\nimport Button from 'components/UI/Button';\n\nconst Container = styled.div``;\n\nconst Input = styled.input`\n  opacity: 0;\n  position: absolute;\n  pointer-events: none;\n  width: 1px;\n  height: 1px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n`;\n\nconst StyledButton = styled(Button)`\n  & button {\n    position: relative;\n  }\n`;\n\nconst StyledLabel = styled.label`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  cursor: pointer;\n`;\n\n// accepted file extensions:\nconst fileAccept = [\n  '.json',\n  'application/json',\n  '.geojson',\n  'application/geojson',\n];\n\ninterface Props {\n  projectId: string;\n  mapConfigId: string;\n  className?: string;\n}\n\nconst GeoJsonImportButton = memo<Props>(\n  ({ projectId, mapConfigId, className }) => {\n    const tenantLocales = useAppConfigurationLocales();\n\n    const [importError, setImportError] = useState(false);\n\n    const handleGeoJsonImport = (event: any) => {\n      const fileReader = new FileReader();\n      fileReader.readAsText(event.target.files[0], 'UTF-8');\n      event.target.value = null;\n      fileReader.onload = (event: any) => {\n        const geojson = JSON.parse(event.target.result);\n\n        setImportError(false);\n\n        if (mapConfigId && !isNilOrError(tenantLocales)) {\n          try {\n            createProjectMapLayer(projectId, {\n              geojson,\n              id: mapConfigId,\n              title_multiloc: getUnnamedLayerTitleMultiloc(tenantLocales),\n              default_enabled: true,\n            });\n          } catch {\n            setImportError(true);\n          }\n        }\n      };\n    };\n\n    return (\n      <Container className={className || ''}>\n        <Input\n          id=\"file-attachment-uploader\"\n          onChange={handleGeoJsonImport}\n          type=\"file\"\n          accept={fileAccept.join(',')}\n          tabIndex={0}\n        />\n\n        <ButtonContainer>\n          <StyledButton icon=\"upload-file\" buttonStyle=\"secondary\">\n            <StyledLabel aria-hidden htmlFor=\"file-attachment-uploader\" />\n            <FormattedMessage {...messages.import} />\n          </StyledButton>\n        </ButtonContainer>\n\n        {importError && (\n          <Error\n            text={<FormattedMessage {...messages.importError} />}\n            marginTop=\"10px\"\n            showIcon={true}\n          />\n        )}\n      </Container>\n    );\n  }\n);\n\nexport default GeoJsonImportButton;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  errorMessage: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.errorMessage',\n    defaultMessage: 'Something went wrong, please try again later',\n  },\n  layerName: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layerName',\n    defaultMessage: 'Layer name',\n  },\n  layerNameTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layerNameTooltip',\n    defaultMessage: 'This layer name is shown on the map legend',\n  },\n  layerTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layerTooltip',\n    defaultMessage: 'Layer tooltip',\n  },\n  layerTooltipTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layerTooltipTooltip',\n    defaultMessage:\n      'This text is displayed as a tooltip when hovering over the layer features on the map',\n  },\n  save: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.cancel',\n    defaultMessage: 'Cancel editing',\n  },\n  remove: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.remove',\n    defaultMessage: 'Remove layer',\n  },\n  layers: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layers',\n    defaultMessage: 'Map layers',\n  },\n  mapConfigurationTitle: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.mapConfigurationTitle',\n    defaultMessage: 'Map configuration',\n  },\n  mapConfigurationDescription: {\n    id:\n      'app.containers.AdminPage.ProjectEdit.MapTab.mapConfigurationDescription',\n    defaultMessage:\n      'Customize the map view, including uploading and styling map layers and setting the map center and zoom level.',\n  },\n  supportArticle: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.supportArticle',\n    defaultMessage: 'support article',\n  },\n  supportArticleUrl: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.supportArticleUrl',\n    defaultMessage:\n      'https://support.citizenlab.co/en/articles/4910983-customize-your-project-map',\n  },\n  layersTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layersTooltip',\n    defaultMessage:\n      'We currently support GeoJSON files. Read the {supportArticle} for tips on how to convert and style map layers.',\n  },\n  edit: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.edit',\n    defaultMessage: 'Edit map layer',\n  },\n  import: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.import',\n    defaultMessage: 'Import GeoJSON file',\n  },\n  layerColor: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layerColor',\n    defaultMessage: 'Layer color',\n  },\n  layerColorTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layerColorTooltip',\n    defaultMessage:\n      'All features in the layer will be styled with this color. This color will also overwrite any existing styling in your GeoJSON file.',\n  },\n  layerIconName: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layerIconName',\n    defaultMessage: 'Marker icon',\n  },\n  layerIconNameTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.layerIconNameTooltip',\n    defaultMessage:\n      'Optionally select an icon that is displayed in the markers. Click {url} to see the list of icons you can select.',\n  },\n  here: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.here',\n    defaultMessage: 'here',\n  },\n  lngLabel: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.lngLabel',\n    defaultMessage: 'Default longitude',\n  },\n  centerLngLabelTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.centerLngLabelTooltip',\n    defaultMessage:\n      'The longitude of the default map center point. Accepts a value between -180 and 180.',\n  },\n  latLabel: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.latLabel',\n    defaultMessage: 'Default latitude',\n  },\n  centerLatLabelTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.centerLatLabelTooltip',\n    defaultMessage:\n      'The latitude of the default map center point. Accepts a value between -90 and 90.',\n  },\n  zoomLabel: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.zoomLabel',\n    defaultMessage: 'Map zoom level',\n  },\n  zoomLabelTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.zoomLabelTooltip',\n    defaultMessage:\n      'The default zoom level of the map. Accepts a value between 1 and 17, where 1 is fully zoomed out (the entire world is visible) and 17 is fully zoomed in (blocks and buildings are visible)',\n  },\n  editLayer: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.editLayer',\n    defaultMessage: 'Edit layer',\n  },\n  mapCenterAndZoom: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.mapCenterAndZoom',\n    defaultMessage: 'Map default center and zoom',\n  },\n  mapCenterAndZoomTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.MapTab.mapCenterAndZoomTooltip',\n    defaultMessage:\n      'The default center point and zoom level of the map. Manually adjust the values below, or click on the {button} button in the top right corner of the map to save the current center point and zoom level of the map as the default values.',\n  },\n  deleteConfirmation: {\n    id: 'app.components.admin.PostManager.deleteConfirmation',\n    defaultMessage: 'Are you sure you want to delete this layer?',\n  },\n  importError: {\n    id: 'app.components.admin.PostManager.importError',\n    defaultMessage: `The selected file could not be imported because it's not a valid GeoJSON file`,\n  },\n  goToDefaultMapView: {\n    id: 'app.components.admin.PostManager.goToDefaultMapView',\n    defaultMessage: `Pan and zoom to the default center point and zoom level`,\n  },\n  setAsDefaultMapView: {\n    id: 'app.components.admin.PostManager.setAsDefaultMapView',\n    defaultMessage: `Save the current center point and zoom level as the map defaults`,\n  },\n  currentLat: {\n    id: 'app.components.admin.PostManager.currentLat',\n    defaultMessage: `Center latitude`,\n  },\n  currentLng: {\n    id: 'app.components.admin.PostManager.currentLng',\n    defaultMessage: `Center longitude`,\n  },\n  currentZoomLevel: {\n    id: 'app.components.admin.PostManager.currentZoomLevel',\n    defaultMessage: `Zoom level`,\n  },\n  saved: {\n    id: 'app.components.admin.PostManager.saved',\n    defaultMessage: `Saved`,\n  },\n});\n","import React, { memo, useEffect, useState } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { isEqual } from 'lodash-es';\nimport { combineLatest } from 'rxjs';\n\n// components\nimport Map from 'components/Map';\nimport MapConfigOverview from './MapConfigOverview';\nimport { Spinner } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\nimport Tippy from '@tippyjs/react';\n\n// hooks\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport useMapConfig from '../../../hooks/useMapConfig';\n\n// services\nimport {\n  createProjectMapConfig,\n  updateProjectMapConfig,\n} from '../../../services/mapConfigs';\n\n// events\nimport {\n  leafletMapCenter$,\n  leafletMapZoom$,\n  setLeafletMapCenter,\n  setLeafletMapZoom,\n} from 'components/UI/LeafletMap/events';\n\n// utils\nimport { getCenter, getZoomLevel, getTileProvider } from '../../../utils/map';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\n\nconst Loading = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst StyledMapConfigOverview = styled(MapConfigOverview)`\n  flex: 0 0 400px;\n  width: 400px;\n`;\n\nconst MapWrapper = styled.div`\n  flex: 1;\n  margin-left: 60px;\n  position: relative;\n`;\n\nconst GoToDefaultViewportButtonWrapper = styled.div`\n  position: absolute;\n  top: 80px;\n  left: 11px;\n  z-index: 1000;\n  background: #fff;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n`;\n\nconst SetAsDefaultViewportButtonWrapper = styled.div`\n  position: absolute;\n  top: 122px;\n  left: 11px;\n  z-index: 1000;\n  background: #fff;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n`;\n\ninterface Props {\n  className?: string;\n}\n\nconst ProjectCustomMapConfigPage = memo<\n  Props & WithRouterProps & InjectedIntlProps\n>(({ params: { projectId }, className, intl: { formatMessage } }) => {\n  const appConfig = useAppConfiguration();\n  const mapConfig = useMapConfig({ projectId });\n\n  const defaultLatLng = getCenter(undefined, appConfig, mapConfig);\n  const defaultLat = defaultLatLng[0];\n  const defaultLng = defaultLatLng[1];\n  const defaultZoom = getZoomLevel(undefined, appConfig, mapConfig);\n  const defaultTileProvider = getTileProvider(appConfig, mapConfig);\n\n  const [currentLat, setCurrentLat] = useState<number | undefined>(undefined);\n  const [currentLng, setCurrentLng] = useState<number | undefined>(undefined);\n  const [currentZoom, setCurrentZoom] = useState<number | null>(null);\n\n  const disabled = isEqual(\n    [defaultLat.toFixed(4), defaultLng.toFixed(4), defaultZoom],\n    [currentLat?.toFixed(4), currentLng?.toFixed(4), currentZoom]\n  );\n\n  useEffect(() => {\n    const subscriptions = [\n      combineLatest(leafletMapCenter$, leafletMapZoom$).subscribe(\n        ([center, zoom]) => {\n          setCurrentLat(center?.[0]);\n          setCurrentLng(center?.[1]);\n          setCurrentZoom(zoom);\n        }\n      ),\n    ];\n\n    return () =>\n      subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }, []);\n\n  const goToDefaultMapView = () => {\n    setLeafletMapCenter([defaultLat, defaultLng]);\n    setLeafletMapZoom(defaultZoom);\n  };\n\n  const setAsDefaultMapView = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (\n      mapConfig &&\n      currentLat !== undefined &&\n      currentLng !== undefined &&\n      currentZoom !== null\n    ) {\n      updateProjectMapConfig(projectId, mapConfig.id, {\n        center_geojson: {\n          type: 'Point',\n          coordinates: [currentLng, currentLat],\n        },\n        zoom_level: currentZoom.toString(),\n      });\n    }\n  };\n\n  useEffect(() => {\n    // create project mapConfig if it doesn't yet exist\n    if (projectId && !isNilOrError(appConfig) && mapConfig === null) {\n      createProjectMapConfig(projectId, {\n        tile_provider: defaultTileProvider,\n        center_geojson: {\n          type: 'Point',\n          coordinates: [defaultLng, defaultLat],\n        },\n        zoom_level: defaultZoom.toString(),\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectId, appConfig, mapConfig]);\n\n  if (projectId && mapConfig?.id) {\n    return (\n      <Container className={className || ''}>\n        <StyledMapConfigOverview projectId={projectId} />\n        <MapWrapper>\n          <Map projectId={projectId} hideLegend={false} />\n          <GoToDefaultViewportButtonWrapper>\n            <Tippy\n              maxWidth=\"250px\"\n              placement=\"right\"\n              content={formatMessage(messages.goToDefaultMapView)}\n              hideOnClick={true}\n              disabled={disabled}\n            >\n              <div>\n                <Button\n                  icon=\"mapCenter\"\n                  buttonStyle=\"white\"\n                  padding=\"7px\"\n                  boxShadow=\"0px 2px 2px rgba(0, 0, 0, 0.2)\"\n                  onClick={goToDefaultMapView}\n                  disabled={disabled}\n                />\n              </div>\n            </Tippy>\n          </GoToDefaultViewportButtonWrapper>\n          <SetAsDefaultViewportButtonWrapper>\n            <Tippy\n              maxWidth=\"250px\"\n              placement=\"right\"\n              content={formatMessage(messages.setAsDefaultMapView)}\n              hideOnClick={true}\n              disabled={disabled}\n            >\n              <div>\n                <Button\n                  icon=\"save\"\n                  buttonStyle=\"white\"\n                  padding=\"7px\"\n                  boxShadow=\"0px 2px 2px rgba(0, 0, 0, 0.2)\"\n                  onClick={setAsDefaultMapView}\n                  disabled={disabled}\n                />\n              </div>\n            </Tippy>\n          </SetAsDefaultViewportButtonWrapper>\n        </MapWrapper>\n      </Container>\n    );\n  }\n\n  return (\n    <Loading>\n      <Spinner />\n    </Loading>\n  );\n});\n\nexport default withRouter(injectIntl(ProjectCustomMapConfigPage));\n","import React, { memo, useEffect, useState } from 'react';\nimport { isEmpty, cloneDeep, forOwn } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// services\nimport {\n  updateProjectMapLayer,\n  IMapLayerAttributes,\n} from '../../../services/mapLayers';\n\n// hooks\nimport useAppConfigurationLocales from 'hooks/useAppConfigurationLocales';\nimport useMapConfig from '../../../hooks/useMapConfig';\n\n// components\nimport {\n  Section,\n  SectionField,\n  SubSectionTitle,\n} from 'components/admin/Section';\nimport InputMultilocWithLocaleSwitcher from 'components/UI/InputMultilocWithLocaleSwitcher';\nimport Button from 'components/UI/Button';\nimport Error from 'components/UI/Error';\nimport { ColorPickerInput, Select } from 'cl2-component-library';\n\n// utils\nimport {\n  getLayerColor,\n  getLayerType,\n  makiIconNames,\n  getUnnamedLayerTitleMultiloc,\n} from '../../../utils/map';\n\n// i18n\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\n\n// typing\nimport { Multiloc, IOption } from 'typings';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledSection = styled(Section)`\n  margin-bottom: 10px;\n  padding-top: 25px;\n  border-top: solid 1px #ccc;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  padding-bottom: 25px;\n  border-bottom: solid 1px #ccc;\n`;\n\nconst FooterLeft = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst FooterRight = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 15px;\n`;\n\nconst CancelButton = styled(Button)`\n  margin-left: 10px;\n`;\n\ninterface Props {\n  projectId: string;\n  mapLayerId: string;\n  className?: string;\n  onClose: () => void;\n}\n\ninterface IFormValues {\n  title_multiloc: Multiloc | null;\n  tooltipContent: Multiloc | null;\n  color: string;\n  markerSymbol: string;\n}\n\nconst makiIconOptions: IOption[] = makiIconNames.map((makiIconName) => {\n  return {\n    value: makiIconName,\n    label: makiIconName,\n  };\n});\n\nconst getEditableTitleMultiloc = (\n  mapLayer: IMapLayerAttributes | undefined\n) => {\n  const mutiloc = {};\n\n  if (mapLayer?.title_multiloc) {\n    forOwn(mapLayer.title_multiloc, (value: string, key) => {\n      mutiloc[key] = value === 'Unnamed layer' ? '' : value;\n    });\n\n    return mutiloc as Multiloc;\n  }\n\n  return null;\n};\n\nconst MapLayerConfig = memo<Props & InjectedIntlProps>(\n  ({ projectId, mapLayerId, className, onClose, intl: { formatMessage } }) => {\n    const tenantLocales = useAppConfigurationLocales();\n    const mapConfig = useMapConfig({ projectId });\n\n    const mapLayer =\n      mapConfig?.attributes?.layers?.find((layer) => layer.id === mapLayerId) ||\n      undefined;\n    const type = getLayerType(mapLayer);\n\n    const [touched, setTouched] = useState(false);\n    const [processing, setProcessing] = useState(false);\n    const [errors, setErrors] = useState<{ [key: string]: any }>({});\n    const [formValues, setFormValues] = useState<IFormValues>({\n      title_multiloc: getEditableTitleMultiloc(mapLayer),\n      color: getLayerColor(mapLayer),\n      markerSymbol:\n        mapLayer?.geojson?.features?.[0]?.properties?.['marker-symbol'] || '',\n      tooltipContent:\n        mapLayer?.geojson?.features?.[0]?.properties?.tooltipContent,\n    });\n\n    useEffect(() => {\n      formChange(\n        {\n          title_multiloc: getEditableTitleMultiloc(mapLayer),\n          color: getLayerColor(mapLayer),\n          markerSymbol:\n            mapLayer?.geojson?.features?.[0]?.properties?.['marker-symbol'] ||\n            '',\n          tooltipContent:\n            mapLayer?.geojson?.features?.[0]?.properties?.tooltipContent,\n        },\n        false\n      );\n    }, [mapLayer]);\n\n    const handleTitleOnChange = (title_multiloc: Multiloc) => {\n      formChange({ title_multiloc });\n    };\n\n    const handleTooltipContentOnChange = (tooltipContent: Multiloc) => {\n      formChange({ tooltipContent });\n    };\n\n    const handleColorOnChange = (color: string) => {\n      formChange({ color });\n    };\n\n    const handleMarkerSymbolOnChange = (option: IOption) => {\n      formChange({ markerSymbol: option.value });\n    };\n\n    const validate = () => {\n      return true;\n    };\n\n    const formChange = (\n      changedFormValue: Partial<IFormValues>,\n      touched = true\n    ) => {\n      setTouched(touched);\n      setFormValues((prevFormValues) => ({\n        ...prevFormValues,\n        ...changedFormValue,\n      }));\n    };\n\n    const formProcessing = () => {\n      setProcessing(true);\n      setErrors({});\n    };\n\n    const formSuccess = () => {\n      setProcessing(false);\n      setErrors({});\n      setTouched(false);\n      onClose();\n    };\n\n    const formError = (errorResponse) => {\n      setProcessing(false);\n      setErrors(errorResponse?.json?.errors || 'unknown error');\n    };\n\n    const handleOnCancel = () => {\n      onClose();\n    };\n\n    const handleOnSubmit = async () => {\n      let { title_multiloc } = formValues;\n\n      if (!processing && validate() && title_multiloc && mapLayer) {\n        formProcessing();\n\n        const isTitleMultilocEmpty = Object.getOwnPropertyNames(\n          title_multiloc\n        ).every((key) => isEmpty((title_multiloc as Multiloc)[key]));\n\n        if (isTitleMultilocEmpty && mapConfig && !isNilOrError(tenantLocales)) {\n          title_multiloc = getUnnamedLayerTitleMultiloc(tenantLocales);\n        }\n\n        const geojson = cloneDeep(\n          mapLayer?.geojson || {}\n        ) as GeoJSON.FeatureCollection;\n\n        geojson?.features.forEach((feature) => {\n          feature.properties = {\n            ...feature.properties,\n            'fill-opacity': 0.3,\n            'stroke-width': 3,\n            'stroke-opacity': 1,\n            'marker-size': 'medium',\n            'marker-symbol': formValues.markerSymbol,\n            tooltipContent: formValues.tooltipContent,\n          };\n\n          if (formValues.color !== getLayerColor(mapLayer)) {\n            feature.properties = {\n              ...feature.properties,\n              fill: formValues.color,\n              stroke: formValues.color,\n              'marker-color': formValues.color,\n            };\n          }\n        });\n\n        try {\n          await updateProjectMapLayer(projectId, mapLayer.id, {\n            title_multiloc,\n            geojson,\n          });\n          formSuccess();\n        } catch (errorResponse) {\n          formError(errorResponse);\n        }\n      }\n    };\n\n    return (\n      <Container className={className || ''}>\n        <SubSectionTitle>\n          <FormattedMessage {...messages.editLayer} />\n        </SubSectionTitle>\n\n        <StyledSection>\n          <SectionField>\n            <InputMultilocWithLocaleSwitcher\n              type=\"text\"\n              valueMultiloc={formValues.title_multiloc}\n              onChange={handleTitleOnChange}\n              label={formatMessage(messages.layerName)}\n              labelTooltipText={formatMessage(messages.layerNameTooltip)}\n            />\n          </SectionField>\n\n          <SectionField>\n            <InputMultilocWithLocaleSwitcher\n              type=\"text\"\n              valueMultiloc={formValues.tooltipContent}\n              onChange={handleTooltipContentOnChange}\n              label={formatMessage(messages.layerTooltip)}\n              labelTooltipText={formatMessage(messages.layerTooltipTooltip)}\n            />\n          </SectionField>\n\n          {type === 'Point' && (\n            <SectionField>\n              <Select\n                onChange={handleMarkerSymbolOnChange}\n                label={formatMessage(messages.layerIconName)}\n                labelTooltipText={\n                  <FormattedMessage\n                    {...messages.layerIconNameTooltip}\n                    values={{\n                      url: (\n                        <a\n                          href=\"https://github.com/olistik/maki-icons-list\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {formatMessage(messages.here)}\n                        </a>\n                      ),\n                    }}\n                  />\n                }\n                value={formValues.markerSymbol}\n                options={[\n                  {\n                    value: '',\n                    label: '',\n                  },\n                  ...makiIconOptions,\n                ]}\n              />\n            </SectionField>\n          )}\n\n          <SectionField>\n            <ColorPickerInput\n              type=\"text\"\n              value={formValues.color}\n              onChange={handleColorOnChange}\n              label={formatMessage(messages.layerColor)}\n              labelTooltipText={formatMessage(messages.layerColorTooltip)}\n            />\n          </SectionField>\n        </StyledSection>\n\n        <Footer>\n          <FooterLeft>\n            <Button\n              buttonStyle=\"admin-dark\"\n              onClick={handleOnSubmit}\n              processing={processing}\n              disabled={!touched}\n            >\n              <FormattedMessage {...messages.save} />\n            </Button>\n\n            <CancelButton\n              buttonStyle=\"secondary\"\n              onClick={handleOnCancel}\n              disabled={processing}\n            >\n              <FormattedMessage {...messages.cancel} />\n            </CancelButton>\n          </FooterLeft>\n          <FooterRight>\n            {!isEmpty(errors) && (\n              <Error\n                text={formatMessage(messages.errorMessage)}\n                showBackground={false}\n                showIcon={false}\n              />\n            )}\n          </FooterRight>\n        </Footer>\n      </Container>\n    );\n  }\n);\n\nexport default injectIntl(MapLayerConfig);\n"],"sourceRoot":""}