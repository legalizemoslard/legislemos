{"version":3,"sources":["webpack:///./app/components/HelmetIntl/index.tsx","webpack:///./app/containers/Admin/dashboard/index.tsx","webpack:///./app/containers/Admin/dashboard/components/DashboardTabs.tsx","webpack:///./app/components/admin/NavigationTabs/Tab.tsx","webpack:///./app/components/admin/NavigationTabs/tabsStyleConstants.ts","webpack:///./app/components/admin/NavigationTabs/index.tsx","webpack:///./app/components/admin/NavigationTabs/TabsPageLayout.tsx"],"names":["HelmetIntl","formatMessage","this","props","intl","title","description","Helmet","meta","name","content","React","PureComponent","injectIntl","DashboardsPage","memo","authUser","children","insightsManualFlow","useState","label","messages","tabSummary","url","tabUsers","tabReports","feature","tabs","setTabs","moderatorTabs","useEffect","isAdmin","data","isProjectModerator","resource","titleDashboard","subtitle","subtitleDashboard","id","onData","insertConfiguration","filter","tab","helmetTitle","helmetDescription","DashboardsPageWithHoC","Data","adopt","dataProps","DashboardTabs","location","length","useMemo","className","map","key","Tab","active","Boolean","pathname","matchPathToUrl","test","to","TabsPageLayout","withRouter","styled","div","css","tabBorderSize","activeBorderSize","colors","fontSizes","base","tabLineHeight","tabPadding","adminTextColor","nav","theme","defaultStyles","boxShadow","borderRadius","separation","wrapperPadding"],"mappings":"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","file":"104.cf95e85163b3053c55ba.chunk.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\ntype Props = {\n  title: ReactIntl.FormattedMessage.MessageDescriptor;\n  description: ReactIntl.FormattedMessage.MessageDescriptor;\n};\n\ninterface State {}\n\nexport class HelmetIntl extends React.PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const { title, description } = this.props;\n\n    return (\n      <>\n        <Helmet\n          title={formatMessage(title)}\n          meta={[{ name: 'description', content: formatMessage(description) }]}\n        />\n      </>\n    );\n  }\n}\n\nexport default injectIntl<Props>(HelmetIntl);\n","import React, { memo, useState, useEffect } from 'react';\nimport { adopt } from 'react-adopt';\nimport { insertConfiguration } from 'utils/moduleUtils';\n\n// components\nimport HelmetIntl from 'components/HelmetIntl';\nimport DashboardTabs from './components/DashboardTabs';\nimport Outlet from 'components/Outlet';\n\n// resource\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// permissions\nimport { isAdmin, isProjectModerator } from 'services/permissions/roles';\n\n// i18n\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\n// typings\nimport { InsertConfigurationOptions, ITab } from 'typings';\n\n// hooks\nimport useFeatureFlag from 'hooks/useFeatureFlag';\n\ninterface Props {\n  authUser: GetAuthUserChildProps;\n  children: JSX.Element;\n}\n\nexport const DashboardsPage = memo(\n  ({\n    authUser,\n    children,\n    intl: { formatMessage },\n  }: Props & InjectedIntlProps) => {\n    const insightsManualFlow = useFeatureFlag('insights_manual_flow');\n\n    const [tabs, setTabs] = useState<ITab[]>([\n      {\n        label: formatMessage(messages.tabSummary),\n        url: '/admin/dashboard',\n        name: 'dashboard',\n      },\n      {\n        label: formatMessage(messages.tabUsers),\n        url: '/admin/dashboard/users',\n        name: 'users',\n      },\n      {\n        label: formatMessage(messages.tabReports),\n        url: '/admin/dashboard/reports',\n        feature: 'project_reports',\n        name: 'project_reports',\n      },\n    ]);\n\n    const moderatorTabs: ITab[] = [\n      {\n        label: formatMessage(messages.tabSummary),\n        url: '/admin/dashboard',\n        name: 'dashboard',\n      },\n      {\n        label: formatMessage(messages.tabReports),\n        url: '/admin/dashboard/reports',\n        feature: 'project_reports',\n        name: 'project_reports',\n      },\n    ];\n\n    useEffect(() => {\n      if (\n        authUser &&\n        !isAdmin({ data: authUser }) &&\n        isProjectModerator({ data: authUser })\n      ) {\n        setTabs(moderatorTabs);\n      }\n\n      return () => setTabs([]);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isProjectModerator, authUser]);\n\n    const resource = {\n      title: formatMessage(messages.titleDashboard),\n      subtitle: formatMessage(messages.subtitleDashboard),\n    };\n\n    const handleData = (data: InsertConfigurationOptions<ITab>) =>\n      setTabs((tabs) => insertConfiguration(data)(tabs));\n\n    if (\n      !authUser ||\n      (authUser &&\n        !isAdmin({ data: authUser }) &&\n        !isProjectModerator({ data: authUser }))\n    ) {\n      return null;\n    }\n\n    return (\n      <>\n        <Outlet\n          id=\"app.containers.Admin.dashboards.tabs\"\n          onData={handleData}\n          formatMessage={formatMessage}\n        />\n        {/* Filter out project tab when insights module is active */}\n        <DashboardTabs\n          resource={resource}\n          tabs={tabs.filter(\n            (tab) => !(insightsManualFlow && tab.name === 'project_reports')\n          )}\n        >\n          <HelmetIntl\n            title={messages.helmetTitle}\n            description={messages.helmetDescription}\n          />\n          {children}\n        </DashboardTabs>\n      </>\n    );\n  }\n);\n\nconst DashboardsPageWithHoC = injectIntl(DashboardsPage);\n\nconst Data = adopt({\n  authUser: <GetAuthUser />,\n});\n\nexport default (props) => (\n  <Data {...props}>\n    {(dataProps) => <DashboardsPageWithHoC {...dataProps} {...props} />}\n  </Data>\n);\n","import React, { memo, useMemo } from 'react';\n\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Link from 'utils/cl-router/Link';\n\n// typings\nimport { Message, ITab } from 'typings';\n\n// components\nimport FeatureFlag from 'components/FeatureFlag';\nimport NavigationTabs, {\n  Tab,\n  TabsPageLayout,\n} from 'components/admin/NavigationTabs';\n\n// utils\nimport { matchPathToUrl } from 'utils/helperUtils';\n\ninterface Props {\n  resource: {\n    title: string;\n    publicLink?: string;\n    subtitle?: string;\n  };\n  messages?: {\n    viewPublicResource: Message;\n  };\n  tabs?: ITab[];\n}\n\nconst DashboardTabs = memo<Props & WithRouterProps>(\n  ({ children, tabs, location }) => {\n    return (\n      <>\n        {tabs &&\n          tabs.length > 0 &&\n          // eslint-disable-next-line react-hooks/rules-of-hooks\n          useMemo(\n            () => (\n              <NavigationTabs className=\"e2e-resource-tabs\">\n                {tabs.map((tab) => {\n                  if (tab.feature) {\n                    return (\n                      <FeatureFlag key={tab.url} name={tab.feature}>\n                        <Tab\n                          key={tab.url}\n                          active={Boolean(\n                            location?.pathname &&\n                              matchPathToUrl(tab.url).test(location.pathname)\n                          )}\n                          className={tab.name}\n                        >\n                          <Link to={tab.url}>{tab.label}</Link>\n                        </Tab>\n                      </FeatureFlag>\n                    );\n                  } else {\n                    return (\n                      <Tab\n                        key={tab.url}\n                        active={Boolean(\n                          location?.pathname &&\n                            matchPathToUrl(tab.url).test(location.pathname)\n                        )}\n                        className={tab.name}\n                      >\n                        <Link to={tab.url}>{tab.label}</Link>\n                      </Tab>\n                    );\n                  }\n                })}\n              </NavigationTabs>\n            ),\n            [tabs, location]\n          )}\n\n        <TabsPageLayout>{children}</TabsPageLayout>\n      </>\n    );\n  }\n);\n\nexport default withRouter(DashboardTabs);\n","// style\nimport styled, { css } from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport {\n  tabLineHeight,\n  tabPadding,\n  tabBorderSize,\n  activeBorderSize,\n} from './tabsStyleConstants';\n\nconst Tab = styled.div`\n  ${({ active }: TabProps) => css`\n    list-style: none;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    margin-bottom: calc(${tabBorderSize}px * -1);\n    border-bottom: ${activeBorderSize}px solid transparent;\n\n    &:first-letter {\n      text-transform: uppercase;\n    }\n\n    &:not(:last-child) {\n      margin-right: 40px;\n    }\n\n    > * {\n      color: ${colors.label};\n      font-size: ${fontSizes.base}px;\n      font-weight: 400;\n      line-height: ${tabLineHeight}px;\n      padding: 0;\n      padding-top: ${tabPadding}px;\n      padding-bottom: ${tabPadding}px;\n      transition: all 100ms ease-out;\n    }\n\n    &:hover > * {\n      color: ${colors.adminTextColor};\n    }\n\n    ${!active &&\n    `&:hover {\n      border-color: #ddd;\n    }`}\n\n    ${active &&\n    `border-color: #7FBBCA;\n    // border-color: ${colors.adminTextColor}; TODO : set accent color in component library\n\n    > * {\n        color: ${colors.adminTextColor};\n    }`}\n  `}\n`;\n\ntype TabProps = { active: boolean } & React.HTMLAttributes<HTMLDivElement>;\n\nexport default Tab;\n","import { fontSizes } from 'utils/styleUtils';\n\nexport const tabLineHeight = fontSizes.base * 1.5;\nexport const tabPadding = fontSizes.base;\nexport const tabBorderSize = 1;\nexport const wrapperPadding = 42;\nexport const activeBorderSize = 3;\n","// style\nimport styled, { css } from 'styled-components';\nimport { colors, defaultStyles } from 'utils/styleUtils';\nimport { tabBorderSize } from './tabsStyleConstants';\n\n// components\nimport Tab from './Tab';\nimport TabsPageLayout from './TabsPageLayout';\n\nconst NavigationTabs = styled.nav`\n  ${({ theme }) => css`\n    position: fixed;\n    width: 100%;\n    // TODO : set bg color in component library\n    background: #fbfbfb;\n    z-index: 1000;\n    box-shadow: ${defaultStyles.boxShadow};\n    border-radius: ${theme.borderRadius} ${theme.borderRadius} 0 0;\n    padding-left: 44px;\n    display: flex;\n    border: ${tabBorderSize}px solid ${colors.separation};\n    border-bottom: ${tabBorderSize}px solid transparent;\n    @media print {\n      border: none;\n      padding: 0;\n      margin-bottom: 10px;\n    }\n  `}\n`;\n\nexport { Tab, TabsPageLayout };\nexport default NavigationTabs;\n","import styled from 'styled-components';\nimport {\n  tabLineHeight,\n  tabPadding,\n  tabBorderSize,\n  activeBorderSize,\n  wrapperPadding,\n} from './tabsStyleConstants';\n\nconst TabsPageLayout = styled.div`\n  width: 100%;\n  margin-bottom: 60px;\n  padding: ${wrapperPadding}px;\n  padding-top: ${wrapperPadding +\n  tabLineHeight +\n  tabPadding +\n  tabPadding +\n  tabBorderSize +\n  activeBorderSize}px;\n  max-width: 1400px;\n  margin: 0 auto;\n\n  @media print {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport default TabsPageLayout;\n"],"sourceRoot":""}