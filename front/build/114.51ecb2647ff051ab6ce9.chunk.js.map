{"version":3,"sources":["webpack:///./app/hooks/useProjectTopics.ts","webpack:///./app/modules/commercial/custom_topics/admin/containers/ProjectTopics/SortableProjectTopicList.tsx","webpack:///./app/resources/GetTopic.tsx","webpack:///./app/modules/commercial/custom_topics/admin/containers/ProjectTopics/ProjectTopicSelector.tsx","webpack:///./app/modules/commercial/custom_topics/admin/containers/ProjectTopics/index.tsx","webpack:///./app/modules/commercial/custom_topics/admin/containers/ProjectTopics/messages.ts","webpack:///./app/modules/commercial/custom_topics/admin/components/RowStyles.tsx"],"names":["projectId","useState","undefined","projectTopics","setProjectTopics","useEffect","of","subscription","projectTopicsStream","observable","pipe","map","topics","data","filter","topic","subscribe","unsubscribe","StyledWarning","Warning","SortableProjectTopicList","memo","params","showConfirmationModal","setShowConfirmationModal","processingDeletion","setProcessingDeletion","projectTopicIdToDelete","setProjectTopicIdToDelete","closeSendConfirmationModal","isNilOrError","length","isLastSelectedTopic","FormattedMessage","messages","lastTopicWarning","values","ideaFormLink","StyledLink","to","inputForm","SortableList","items","onReorder","projectTopicId","newOrder","reorderProjectTopic","className","id","key","itemsList","handleDragRow","handleDropRow","projectTopic","index","SortableRow","moveRow","dropRow","lastItem","RowContent","RowContentInner","relationships","RowTitle","value","attributes","title_multiloc","onClick","event","preventDefault","buttonStyle","icon","disabled","delete","opened","close","header","confirmHeader","ModalContentContainer","Content","generalTopicDeletionWarning","ButtonsWrapper","cancel","deleteProjectTopic","then","processing","withRouter","GetTopic","props","state","this","inputProps$","BehaviorSubject","subscriptions","distinctUntilChanged","prev","next","isString","switchMap","topicByIdStream","setState","forEach","children","React","Component","Container","styled","div","SelectGroupsContainer","AddTopicButton","Button","StyledMultipleSelect","MultipleSelect","ProjectTopicSelector","formatMessage","intl","localize","selectedTopicOptions","setSelectedTopicOptions","setProcessing","handleOnAddTopicsClick","_event","topicIdsToAdd","topicOption","promises","topicId","addProjectTopic","Promise","all","options","allTopics","selectedInProjectTopicIds","includes","label","getOptions","onChange","newSelectedTopicOptions","text","addTopics","injectIntl","SectionTitle","titleDescription","SectionDescription","projectTopicsDescription","item","type","path","action","topicManagerInfo","topicManagerLink","topicManager","defineMessages","defaultMessage","browseTopics","deleteTopicLabel","remove","T","fontSizes","base"],"mappings":"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","file":"114.51ecb2647ff051ab6ce9.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { IProjectTopicData, projectTopicsStream } from 'services/projectTopics';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Parameters {\n  projectId: string;\n}\n\nexport default function useProjectTopics({ projectId }: Parameters) {\n  const [projectTopics, setProjectTopics] = useState<\n    IProjectTopicData[] | undefined | null | Error\n  >(undefined);\n\n  useEffect(() => {\n    let observable: Observable<IProjectTopicData[] | null> = of(null);\n\n    observable = projectTopicsStream(projectId).observable.pipe(\n      map((topics) => topics.data.filter((topic) => topic))\n    );\n\n    const subscription = observable.subscribe((topics) => {\n      setProjectTopics(topics);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [projectId]);\n\n  return projectTopics;\n}\n","import React, { memo, FormEvent, useState } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport styled from 'styled-components';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// components\nimport Button from 'components/UI/Button';\nimport { SortableList, SortableRow } from 'components/admin/ResourceList';\nimport {\n  RowContent,\n  RowContentInner,\n  RowTitle,\n} from '../../components/RowStyles';\nimport Warning from 'components/UI/Warning';\nimport Modal, {\n  ModalContentContainer,\n  Content,\n  ButtonsWrapper,\n} from 'components/UI/Modal';\nimport { StyledLink } from 'components/admin/Section';\n\n// services\nimport {\n  deleteProjectTopic,\n  reorderProjectTopic,\n  IProjectTopicData,\n} from 'services/projectTopics';\n\n// hooks\nimport useProjectTopics from 'hooks/useProjectTopics';\n\n// resources\nimport GetTopic from 'resources/GetTopic';\n\nconst StyledWarning = styled(Warning)`\n  margin-bottom: 20px;\n`;\n\ninterface Props {}\n\nconst SortableProjectTopicList = memo(\n  ({ params: { projectId } }: Props & WithRouterProps) => {\n    const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n    const [processingDeletion, setProcessingDeletion] = useState(false);\n    const [projectTopicIdToDelete, setProjectTopicIdToDelete] = useState<\n      string | null\n    >(null);\n    const projectTopics = useProjectTopics({ projectId });\n\n    const handleProjectTopicDelete = (projectTopicId: string) => (\n      event: FormEvent\n    ) => {\n      event.preventDefault();\n\n      setShowConfirmationModal(true);\n      setProjectTopicIdToDelete(projectTopicId);\n    };\n\n    const handleProjectTopicDeletionConfirm = () => {\n      if (projectTopicIdToDelete) {\n        setProcessingDeletion(true);\n        deleteProjectTopic(projectId, projectTopicIdToDelete).then(() => {\n          setProcessingDeletion(false);\n          setShowConfirmationModal(false);\n          setProjectTopicIdToDelete(null);\n        });\n      }\n    };\n\n    const handleReorderTopicProject = (projectTopicId, newOrder) => {\n      reorderProjectTopic(projectTopicId, newOrder, projectId);\n    };\n\n    const closeSendConfirmationModal = () => {\n      setShowConfirmationModal(false);\n      setProjectTopicIdToDelete(null);\n    };\n\n    if (!isNilOrError(projectTopics) && projectTopics.length > 0) {\n      const isLastSelectedTopic = projectTopics.length === 1;\n\n      return (\n        <>\n          {isLastSelectedTopic && (\n            <StyledWarning>\n              <FormattedMessage\n                {...messages.lastTopicWarning}\n                values={{\n                  ideaFormLink: (\n                    <StyledLink to={`/admin/projects/${projectId}/ideaform`}>\n                      <FormattedMessage {...messages.inputForm} />\n                    </StyledLink>\n                  ),\n                }}\n              />\n            </StyledWarning>\n          )}\n          <SortableList\n            items={projectTopics}\n            onReorder={handleReorderTopicProject}\n            className=\"projects-list e2e-admin-projects-list\"\n            id=\"e2e-admin-published-projects-list\"\n            key={projectTopics.length}\n          >\n            {({ itemsList, handleDragRow, handleDropRow }) => (\n              <>\n                {itemsList.map(\n                  (projectTopic: IProjectTopicData, index: number) => (\n                    <SortableRow\n                      id={projectTopic.id}\n                      key={index}\n                      index={index}\n                      moveRow={handleDragRow}\n                      dropRow={handleDropRow}\n                      lastItem={index === projectTopics.length - 1}\n                    >\n                      <RowContent>\n                        <RowContentInner className=\"expand primary\">\n                          <GetTopic\n                            id={projectTopic.relationships.topic.data.id}\n                          >\n                            {(topic) =>\n                              !isNilOrError(topic) ? (\n                                <RowTitle\n                                  value={topic.attributes.title_multiloc}\n                                />\n                              ) : null\n                            }\n                          </GetTopic>\n                        </RowContentInner>\n                      </RowContent>\n                      <Button\n                        onClick={handleProjectTopicDelete(projectTopic.id)}\n                        buttonStyle=\"text\"\n                        icon=\"delete\"\n                        disabled={isLastSelectedTopic}\n                        id=\"e2e-project-topic-delete-button\"\n                      >\n                        <FormattedMessage {...messages.delete} />\n                      </Button>\n                    </SortableRow>\n                  )\n                )}\n              </>\n            )}\n          </SortableList>\n          <Modal\n            opened={showConfirmationModal}\n            close={closeSendConfirmationModal}\n            header={<FormattedMessage {...messages.confirmHeader} />}\n          >\n            <ModalContentContainer>\n              <Content>\n                <FormattedMessage {...messages.generalTopicDeletionWarning} />\n              </Content>\n              <ButtonsWrapper>\n                <Button\n                  buttonStyle=\"secondary\"\n                  onClick={closeSendConfirmationModal}\n                >\n                  <FormattedMessage {...messages.cancel} />\n                </Button>\n                <Button\n                  buttonStyle=\"delete\"\n                  onClick={handleProjectTopicDeletionConfirm}\n                  processing={processingDeletion}\n                  id=\"e2e-project-topic-delete-confirm-button\"\n                >\n                  <FormattedMessage {...messages.delete} />\n                </Button>\n              </ButtonsWrapper>\n            </ModalContentContainer>\n          </Modal>\n        </>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default withRouter(SortableProjectTopicList);\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { ITopicData, topicByIdStream } from 'services/topics';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  id: string;\n}\n\ntype children = (renderProps: GetTopicChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  topic: ITopicData | undefined | null | Error;\n}\n\nexport type GetTopicChildProps = ITopicData | undefined | null | Error;\n\nexport default class GetTopic extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      topic: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          filter(({ id }) => isString(id)),\n          switchMap(({ id }) => topicByIdStream(id).observable)\n        )\n        .subscribe((topic) =>\n          this.setState({ topic: !isNilOrError(topic) ? topic.data : topic })\n        ),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    this.inputProps$.next({ id });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { topic } = this.state;\n    return (children as children)(topic);\n  }\n}\n","// Libraries\nimport React, { memo, useState } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// Hooks\nimport useTopics from 'hooks/useTopics';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\nimport messages from './messages';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\n\n// Components\nimport Button from 'components/UI/Button';\nimport MultipleSelect from 'components/UI/MultipleSelect';\n\n// Style\nimport styled from 'styled-components';\n\n// Typings\nimport { IOption } from 'typings';\nimport { ITopicData } from 'services/topics';\n\n// Services\nimport { addProjectTopic } from 'services/projectTopics';\n\nconst Container = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst SelectGroupsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst AddTopicButton = styled(Button)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  margin-left: 30px;\n`;\n\nconst StyledMultipleSelect = styled(MultipleSelect)`\n  width: 350px;\n`;\n\ninterface Props {}\n\nconst ProjectTopicSelector = memo(\n  (props: Props & InjectedIntlProps & WithRouterProps & InjectedLocalized) => {\n    const {\n      intl: { formatMessage },\n      localize,\n      params: { projectId },\n    } = props;\n    const topics = useTopics({});\n    const projectTopics = useTopics({ projectId });\n    const [selectedTopicOptions, setSelectedTopicOptions] = useState<IOption[]>(\n      []\n    );\n    const [processing, setProcessing] = useState(false);\n\n    const handleTopicSelectionChange = (newSelectedTopicOptions: IOption[]) => {\n      setSelectedTopicOptions(newSelectedTopicOptions);\n    };\n\n    const handleOnAddTopicsClick = async (_event: React.FormEvent) => {\n      const topicIdsToAdd = selectedTopicOptions.map(\n        (topicOption) => topicOption.value\n      ) as string[];\n\n      setProcessing(true);\n\n      const promises = topicIdsToAdd.map((topicId) =>\n        addProjectTopic(projectId, topicId)\n      );\n\n      try {\n        await Promise.all(promises);\n        setProcessing(false);\n        setSelectedTopicOptions([]);\n      } catch {\n        setProcessing(false);\n      }\n    };\n\n    const getOptions = () => {\n      if (!isNilOrError(topics) && !isNilOrError(projectTopics)) {\n        const allTopics = topics.filter(\n          (topicId) => !isNilOrError(topicId)\n        ) as ITopicData[];\n        const selectedInProjectTopics = projectTopics.filter(\n          (topic) => !isNilOrError(topic)\n        ) as ITopicData[];\n        const selectedInProjectTopicIds = selectedInProjectTopics.map(\n          (topic) => topic.id\n        );\n        const selectableTopics = allTopics.filter(\n          (topic) => !selectedInProjectTopicIds.includes(topic.id)\n        );\n\n        return selectableTopics.map((topic) => {\n          return {\n            value: topic.id,\n            label: localize(topic.attributes.title_multiloc),\n          };\n        });\n      }\n\n      return [];\n    };\n\n    return (\n      <Container>\n        <SelectGroupsContainer>\n          <StyledMultipleSelect\n            value={selectedTopicOptions}\n            options={getOptions()}\n            onChange={handleTopicSelectionChange}\n            id=\"e2e-project-topic-multiselect\"\n          />\n\n          <AddTopicButton\n            text={formatMessage(messages.addTopics)}\n            buttonStyle=\"cl-blue\"\n            icon=\"plus-circle\"\n            onClick={handleOnAddTopicsClick}\n            disabled={\n              !selectedTopicOptions || selectedTopicOptions.length === 0\n            }\n            processing={processing}\n            id=\"e2e-add-project-topic-button\"\n          />\n        </SelectGroupsContainer>\n      </Container>\n    );\n  }\n);\n\nexport default injectIntl<Props>(\n  withRouter(injectLocalize(ProjectTopicSelector))\n);\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  SectionTitle,\n  SectionDescription,\n  StyledLink,\n} from 'components/admin/Section';\nimport ProjectTopicSelector from './ProjectTopicSelector';\nimport SortableProjectTopicList from './SortableProjectTopicList';\nimport HasPermission from 'components/HasPermission';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.div`\n  min-height: 80vh;\n`;\n\nconst ProjectTopics = memo(() => {\n  return (\n    <Container>\n      <SectionTitle>\n        <FormattedMessage {...messages.titleDescription} />\n      </SectionTitle>\n      <SectionDescription>\n        <FormattedMessage {...messages.projectTopicsDescription} />\n        <span>\n          <HasPermission\n            item={{ type: 'route', path: '/admin/settings/topics' }}\n            action=\"access\"\n          >\n            &nbsp;\n            <FormattedMessage\n              {...messages.topicManagerInfo}\n              values={{\n                topicManagerLink: (\n                  <StyledLink to=\"/admin/settings/topics\">\n                    <FormattedMessage {...messages.topicManager} />\n                  </StyledLink>\n                ),\n              }}\n            />\n          </HasPermission>\n        </span>\n      </SectionDescription>\n      <ProjectTopicSelector />\n      <SortableProjectTopicList />\n    </Container>\n  );\n});\n\nexport default ProjectTopics;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  titleDescription: {\n    id: 'app.containers.AdminPage.Topics.titleDescription',\n    defaultMessage: 'Topics',\n  },\n  browseTopics: {\n    id: 'app.containers.AdminPage.Topics.browseTopics',\n    defaultMessage: 'Browse topics',\n  },\n  addTopics: {\n    id: 'app.containers.AdminPage.Topics.addTopics',\n    defaultMessage: 'Add',\n  },\n  deleteTopicLabel: {\n    id: 'app.containers.AdminPage.Topics.deleteTopicLabel',\n    defaultMessage: 'Delete',\n  },\n  remove: {\n    id: 'app.containers.AdminPage.Topics.remove',\n    defaultMessage: 'Remove',\n  },\n  confirmHeader: {\n    id: 'app.containers.AdminPage.Topics.confirmHeader',\n    defaultMessage: 'Are you sure you want to delete this project topic?',\n  },\n  generalTopicDeletionWarning: {\n    id: 'app.containers.AdminPage.Topics.generalTopicDeletionWarning',\n    defaultMessage: 'This topic will no longer be able to used in projects.',\n  },\n  cancel: {\n    id: 'app.containers.AdminPage.Topics.cancel',\n    defaultMessage: 'Cancel',\n  },\n  delete: {\n    id: 'app.containers.AdminPage.Topics.delete',\n    defaultMessage: 'Delete',\n  },\n  topicManagerInfo: {\n    id: 'app.containers.AdminPage.Topics.topicManagerInfo',\n    defaultMessage:\n      'If you would like to add additional project topics, you can do so in the {topicManagerLink}.',\n  },\n  projectTopicsDescription: {\n    id: 'app.containers.AdminPage.Topics.projectTopicsDescription',\n    defaultMessage:\n      'You can add and delete the topics that can be assigned to inputs in this project.',\n  },\n  topicManager: {\n    id: 'app.containers.AdminPage.Topics.topicManager',\n    defaultMessage: 'Topic Manager',\n  },\n  lastTopicWarning: {\n    id: 'app.containers.AdminPage.Topics.lastTopicWarning',\n    defaultMessage:\n      'At least one topic is required. If you do not want to use topics, they can be disabled in the {ideaFormLink} tab.',\n  },\n  inputForm: {\n    id: 'app.containers.AdminPage.Topics.inputForm',\n    defaultMessage: 'Input form',\n  },\n});\n","// styles\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\n// components\nimport T from 'components/T';\n\nexport const RowContent = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const RowContentInner = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-right: 20px;\n`;\n\nexport const RowTitle = styled(T)`\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: 24px;\n  margin-right: 10px;\n`;\n"],"sourceRoot":""}