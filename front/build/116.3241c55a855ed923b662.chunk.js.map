{"version":3,"sources":["webpack:///./app/containers/IdeasProjectSelectPage/messages.ts","webpack:///./app/containers/IdeasProjectSelectPage/ProjectSelectionCard.tsx","webpack:///./app/resources/GetProjectImages.tsx","webpack:///./app/components/ButtonBar/index.tsx","webpack:///./app/resources/GetPermission.tsx","webpack:///./app/containers/IdeasProjectSelectPage/index.tsx"],"names":["defineMessages","pageTitle","id","defaultMessage","cityProjects","cityProjectsExplanation","openProject","openProjectExplanation","continueButton","loadMore","postingPossibleFuture","postingNotPossible","postingPossibleBecauseAdmin","postingDisabledNoPermissions","postingDisabledMaybeNoPermissions","noProjects","Container","styled","div","props","theme","borderRadius","colors","separation","clGreen","media","smallerThanMinTablet","ImageWrapper","ProjectImagePlaceholder","placeholderBg","ProjectImagePlaceholderIcon","Icon","ProjectContent","ProjectTitle","h3","fontSizes","xl","PostingDisabledReason","base","PostingEnabledReason","label","AdminIconWrapper","StyledRadio","Radio","ProjectSelectionCard","project","authUser","isNilOrError","attributes","action_descriptor","posting_idea","enabled","futureEnabled","future_enabled","disabledReason","disabled_reason","messages","permission","disabledMessage","calculateCardState","onClick","this","projectId","selected","className","projectImages","titleMultiloc","title_multiloc","smallImage","length","versions","small","cardState","futureEnabledDate","formattedFutureEnabledDate","format","handleOnClick","src","alt","name","value","FormattedMessage","values","date","ariaHidden","onChange","currentValue","disabled","buttonColor","PureComponent","Data","adopt","render","get","item","action","context","isError","inputProps","dataProps","GetProjectImages","state","undefined","resetOnChange","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","tap","setState","filter","isString","switchMap","projectImagesStream","observable","subscribe","data","forEach","subscription","unsubscribe","children","React","Component","ButtonBarContainer","ButtonBar","classNames","timeout","GetPermission","of","hasPermission","Loading","menuHeight","footerHeight","smallerThanMaxTablet","mobileMenuHeight","mobileTopBarHeight","main","background","StyledContentContainer","ContentContainer","PageTitle","h1","xxxxl","xxxl","isRtl","ColumnsContainer","Column","LeftColumn","RightColumn","ColumnTitle","h2","ColumnExplanation","medium","ProjectsList","ProjectCardWrapper","ButtonBarInner","maxPageWidth","EmptyStateContainer","large","IdeasProjectSelectPage","selectedProjectId","projectSlug","queryParams","location","search","clHistory","push","projectsList","projects","find","redirectTo","slug","isUndefined","Spinner","groupBy","internal_role","openProjects","open_idea_box","null","isEmpty","map","key","handleProjectClick","text","handleOnSubmitClick","IdeasProjectSelectPageWithHoCs","withRouter","publicationStatuses"],"mappings":"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","file":"116.3241c55a855ed923b662.chunk.js","sourcesContent":["/*\n * IdeasProjectSelect Messages\n *\n * This contains all the text for the IdeasProjectSelect component.\n */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  pageTitle: {\n    id: 'app.containers.IdeasProjectSelect.pageTitle',\n    defaultMessage: \"What's your idea about?\",\n  },\n  cityProjects: {\n    id: 'app.containers.IdeasProjectSelect.cityProjects',\n    defaultMessage:\n      '{orgType, select, generic {Projects} other {City projects}}',\n  },\n  cityProjectsExplanation: {\n    id: 'app.containers.IdeasProjectSelect.cityProjectsExplanation',\n    defaultMessage:\n      'These are the projects {orgName} is currently working on. Contribute by giving your input.',\n  },\n  openProject: {\n    id: 'app.containers.IdeasProjectSelect.openProject',\n    defaultMessage: 'Something else',\n  },\n  openProjectExplanation: {\n    id: 'app.containers.IdeasProjectSelect.openProjectExplanation',\n    defaultMessage:\n      'Have an idea about something else? See whether {orgType, select, generic {others} other {fellow citizens}} agree and make {orgName} notice!',\n  },\n  continueButton: {\n    id: 'app.containers.IdeasProjectSelect.continueButton',\n    defaultMessage: 'Continue',\n  },\n  loadMore: {\n    id: 'app.containers.IdeasProjectSelect.loadMore',\n    defaultMessage: 'Load more',\n  },\n  postingPossibleFuture: {\n    id: 'app.containers.IdeasProjectSelect.postingPossibleFuture',\n    defaultMessage:\n      'Adding ideas to this project will be possible from {date}.',\n  },\n  postingNotPossible: {\n    id: 'app.containers.IdeasProjectSelect.postingNotPossible',\n    defaultMessage: 'This project does currently not accept new ideas.',\n  },\n  postingPossibleBecauseAdmin: {\n    id: 'app.containers.IdeasProjectSelect.postingPossibleBecauseAdmin',\n    defaultMessage: 'Only administrators can currently post in this project.',\n  },\n  postingDisabledNoPermissions: {\n    id: 'app.containers.IdeasProjectSelect.postingDisabledNoPermissions',\n    defaultMessage: \"You don't have the rights to post in this project.\",\n  },\n  postingDisabledMaybeNoPermissions: {\n    id: 'app.containers.IdeasProjectSelect.postingDisabledMaybeNoPermissions',\n    defaultMessage:\n      'Only certain users can post in this project. Please sign in first.',\n  },\n  noProjects: {\n    id: 'app.containers.IdeasProjectSelect.noProjects',\n    defaultMessage: 'Sorry, there currently are no projects to add ideas to.',\n  },\n});\n","import React, { PureComponent } from 'react';\nimport moment from 'moment';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\nimport { get, isError } from 'lodash-es';\n\n// resources\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetProjectImages, {\n  GetProjectImagesChildProps,\n} from 'resources/GetProjectImages';\nimport GetPermission, {\n  GetPermissionChildProps,\n} from 'resources/GetPermission';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// components\nimport { FormattedMessage } from 'utils/cl-intl';\nimport { Icon, Radio } from 'cl2-component-library';\n\n// i18n\nimport T from 'components/T';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\nimport { media, colors, fontSizes } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  position: relative;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  background: #fff;\n  border: solid 1px ${colors.separation};\n  transition: transform 250ms ease-out;\n\n  &.enabled {\n    cursor: pointer;\n  }\n\n  &:not(.enabled) {\n    opacity: 0.45;\n    cursor: not-allowed;\n    background: transparent;\n  }\n\n  &.selected {\n    border-color: ${colors.clGreen};\n  }\n\n  &.enabled:hover {\n    border-color: #ccc;\n\n    &.selected {\n      border-color: ${colors.clGreen};\n    }\n  }\n\n  ${media.smallerThanMinTablet`\n    padding-top: 12px;\n    padding-bottom: 12px;\n  `}\n`;\n\nconst ImageWrapper = styled.div`\n  flex: 0 0 auto;\n  width: 80px;\n  height: 80px;\n  margin-right: 20px;\n\n  img {\n    width: 100%;\n    height: 100%;\n    border-radius: ${(props: any) => props.theme.borderRadius};\n    object-fit: cover;\n  }\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `}\n`;\n\nconst ProjectImagePlaceholder = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${(props) => props.theme.colors.placeholderBg};\n`;\n\nconst ProjectImagePlaceholderIcon = styled(Icon)`\n  width: 50%;\n  height: 50%;\n  fill: #fff;\n`;\n\nconst ProjectContent = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 5px;\n`;\n\nconst ProjectTitle = styled.h3`\n  color: #333;\n  font-size: ${fontSizes.xl}px;\n  line-height: 25px;\n  font-weight: 400;\n  margin: 0;\n`;\n\nconst PostingDisabledReason = styled.div`\n  color: black;\n  font-size: ${fontSizes.base}px;\n  line-height: 21px;\n  font-weight: 300;\n  margin-top: 10px;\n`;\n\nconst PostingEnabledReason = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  line-height: 21px;\n  font-weight: 300;\n  overflow: hidden;\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  margin-top: 10px;\n`;\n\nconst AdminIconWrapper = styled.div`\n  height: 18px;\n  margin-right: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledRadio = styled(Radio)`\n  flex: 0 0 auto;\n  width: 30px;\n  height: 30px;\n  margin: 0;\n  margin-left: 6px;\n  padding: 0;\n`;\n\ninterface InputProps {\n  projectId: string;\n  onClick: () => void;\n  selected: boolean;\n  className?: string;\n}\n\ninterface DataProps {\n  project: GetProjectChildProps;\n  projectImages: GetProjectImagesChildProps;\n  permission: GetPermissionChildProps;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass ProjectSelectionCard extends PureComponent<Props, State> {\n  disabledMessage = () => {\n    const { project, authUser } = this.props;\n\n    if (!isNilOrError(project)) {\n      const {\n        enabled,\n        future_enabled: futureEnabled,\n        disabled_reason: disabledReason,\n      } = project.attributes.action_descriptor.posting_idea;\n      if (enabled) {\n        return null;\n      } else if (disabledReason === 'not_permitted') {\n        if (isNilOrError(authUser)) {\n          return messages.postingDisabledMaybeNoPermissions;\n        } else {\n          return messages.postingDisabledNoPermissions;\n        }\n      } else if (futureEnabled) {\n        return messages.postingPossibleFuture;\n      } else {\n        return messages.postingNotPossible;\n      }\n    } else {\n      return null;\n    }\n  };\n\n  calculateCardState = () => {\n    const { permission } = this.props;\n    const disabledMessage = this.disabledMessage();\n\n    if (disabledMessage && permission) {\n      return 'enabledBecauseAdmin';\n    } else if (disabledMessage) {\n      return 'disabled';\n    } else {\n      return 'enabled';\n    }\n  };\n\n  handleOnClick = () => {\n    if (this.calculateCardState() !== 'disabled') {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    const { projectId, selected, className } = this.props;\n    const { project, projectImages, permission } = this.props;\n\n    if (\n      !isNilOrError(project) &&\n      !isNilOrError(permission) &&\n      !isNilOrError(projectImages)\n    ) {\n      const { title_multiloc: titleMultiloc } = project.attributes;\n      const smallImage =\n        projectImages.length > 0\n          ? projectImages[0].attributes.versions.small\n          : null;\n      const disabledMessage = this.disabledMessage();\n      const cardState = this.calculateCardState();\n      const enabled =\n        cardState === 'enabled' || cardState === 'enabledBecauseAdmin';\n      const futureEnabledDate =\n        project.attributes.action_descriptor.posting_idea.future_enabled;\n      const formattedFutureEnabledDate = futureEnabledDate\n        ? moment(futureEnabledDate, 'YYYY-MM-DD').format('LL')\n        : null;\n\n      return (\n        <Container\n          onClick={this.handleOnClick}\n          className={`${className} ${selected ? 'selected' : ''} ${\n            enabled ? 'enabled' : 'disabled'\n          }`}\n        >\n          <ImageWrapper>\n            {smallImage ? (\n              <img src={smallImage} alt=\"project image\" />\n            ) : (\n              <ProjectImagePlaceholder>\n                <ProjectImagePlaceholderIcon name=\"project\" />\n              </ProjectImagePlaceholder>\n            )}\n          </ImageWrapper>\n\n          <ProjectContent>\n            <ProjectTitle\n              className={`${selected && 'selected'} ${enabled && 'enabled'}`}\n            >\n              <T value={titleMultiloc} />\n            </ProjectTitle>\n\n            {cardState === 'disabled' && disabledMessage && (\n              <PostingDisabledReason>\n                <FormattedMessage\n                  {...disabledMessage}\n                  values={{ date: formattedFutureEnabledDate }}\n                />\n              </PostingDisabledReason>\n            )}\n\n            {cardState === 'enabledBecauseAdmin' && (\n              <PostingEnabledReason>\n                <AdminIconWrapper>\n                  <Icon name=\"admin\" ariaHidden />\n                </AdminIconWrapper>\n                <FormattedMessage {...messages.postingPossibleBecauseAdmin} />\n              </PostingEnabledReason>\n            )}\n          </ProjectContent>\n\n          <StyledRadio\n            onChange={this.handleOnClick}\n            currentValue={selected ? projectId : null}\n            value={projectId}\n            name=\"project\"\n            id={projectId}\n            label=\"\"\n            disabled={!enabled}\n            buttonColor={colors.clGreen}\n          />\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  project: ({ projectId, render }) => (\n    <GetProject projectId={projectId}>{render}</GetProject>\n  ),\n  projectImages: ({ project, render }) => (\n    <GetProjectImages projectId={get(project, 'id')}>{render}</GetProjectImages>\n  ),\n  permission: ({ project, render }) => (\n    <GetPermission\n      item=\"idea\"\n      action=\"create\"\n      context={{ project: !isError(project) ? project : null }}\n    >\n      {render}\n    </GetPermission>\n  ),\n  authUser: <GetAuthUser />,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <ProjectSelectionCard {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { IProjectImageData, projectImagesStream } from 'services/projectImages';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  projectId: string | null;\n  resetOnChange?: boolean;\n}\n\ntype children = (renderProps: GetProjectImagesChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  projectImages: IProjectImageData[] | undefined | null | Error;\n}\n\nexport type GetProjectImagesChildProps =\n  | IProjectImageData[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetProjectImages extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectImages: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { projectId, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ projectId });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(\n            () => resetOnChange && this.setState({ projectImages: undefined })\n          ),\n          filter(({ projectId }) => isString(projectId)),\n          switchMap(\n            ({ projectId }: { projectId: string }) =>\n              projectImagesStream(projectId).observable\n          )\n        )\n        .subscribe((projectImages) => {\n          this.setState({\n            projectImages: !isNilOrError(projectImages)\n              ? projectImages.data\n              : projectImages,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { projectId, resetOnChange } = this.props;\n    this.inputProps$.next({ projectId, resetOnChange });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { projectImages } = this.state;\n    return (children as children)(projectImages);\n  }\n}\n","import React from 'react';\n\n// style\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport styled from 'styled-components';\n\nconst transitionDuration = 600;\n\nconst ButtonBarContainer = styled.div`\n  width: 100%;\n  height: 68px;\n  position: fixed;\n  z-index: 2;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #fff;\n  border-top: solid 1px #ddd;\n\n  &.buttonbar-enter {\n    transform: translateY(64px);\n\n    &.buttonbar-enter-active {\n      transform: translateY(0);\n      transition: transform ${transitionDuration}ms\n        cubic-bezier(0.165, 0.84, 0.44, 1);\n    }\n  }\n\n  &.buttonbar-exit {\n    transform: translateY(0);\n\n    &.buttonbar-exit-active {\n      transform: translateY(64px);\n      transition: transform ${transitionDuration}ms\n        cubic-bezier(0.165, 0.84, 0.44, 1);\n    }\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface Props {\n  children: JSX.Element;\n}\n\ninterface GlobalState {\n  submitError: boolean;\n  processing: boolean;\n}\n\ninterface State extends GlobalState {}\n\nexport default class ButtonBar extends React.PureComponent<Props, State> {\n  render() {\n    return (\n      <CSSTransition classNames=\"buttonbar\" timeout={transitionDuration}>\n        <ButtonBarContainer>\n          <Container>{this.props.children}</Container>\n        </ButtonBarContainer>\n      </CSSTransition>\n    );\n  }\n}\n","import React from 'react';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { TPermissionItem, hasPermission } from 'services/permissions';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  item: TPermissionItem | null;\n  action: string;\n  context?: any;\n}\n\ntype children = (renderProps: GetPermissionChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  permission: boolean | undefined;\n}\n\nexport type GetPermissionChildProps = boolean | undefined;\n\nexport default class GetPermission extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      permission: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { item, action, context } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ item, action, context });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          switchMap(({ item, action, context }) => {\n            if (!isNilOrError(item)) {\n              return hasPermission({ item, action, context });\n            }\n\n            return of(false);\n          })\n        )\n        .subscribe((permission) => this.setState({ permission })),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { item, action, context } = this.props;\n    this.inputProps$.next({ item, action, context });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { permission } = this.state;\n    return (children as children)(permission);\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport clHistory from 'utils/cl-router/history';\nimport { groupBy, isEmpty, isUndefined } from 'lodash-es';\n\n// services\nimport { IProjectData } from 'services/projects';\n\n// resources\nimport GetProjects, { GetProjectsChildProps } from 'resources/GetProjects';\n\n// components\nimport ContentContainer from 'components/ContentContainer';\nimport ProjectSelectionCard from './ProjectSelectionCard';\nimport Button from 'components/UI/Button';\nimport ButtonBar from 'components/ButtonBar';\nimport { Spinner } from 'cl2-component-library';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\nimport { media, fontSizes, colors, isRtl } from 'utils/styleUtils';\n\nconst Loading = styled.div`\n  width: 100%;\n  height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${media.smallerThanMaxTablet`\n    height: calc(100vh - ${(props) => props.theme.mobileMenuHeight}px - ${(\n    props\n  ) => props.theme.mobileTopBarHeight}px);\n  `}\n`;\n\nconst Container = styled.main`\n  width: 100%;\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  background: ${colors.background};\n\n  ${media.smallerThanMaxTablet`\n    min-height: calc(100vh - ${(props) => props.theme.mobileMenuHeight}px - ${(\n    props\n  ) => props.theme.mobileTopBarHeight}px);\n  `}\n`;\n\nconst StyledContentContainer = styled(ContentContainer)`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 140px;\n\n  ${media.smallerThanMaxTablet`\n    padding-bottom: 60px;\n  `}\n`;\n\nconst PageTitle = styled.h1`\n  color: #333;\n  font-size: ${fontSizes.xxxxl}px;\n  line-height: 40px;\n  font-weight: 500;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n  padding-top: 60px;\n  padding-bottom: 40px;\n\n  ${media.smallerThanMaxTablet`\n    font-size: ${fontSizes.xxxl}px;\n    line-height: 34px;\n  `}\n\n  &:not(.noProjects) {\n    ${media.smallerThanMaxTablet`\n      text-align: left;\n      ${isRtl`\n        text-align: right;\n      `}\n    `}\n  }\n`;\n\nconst ColumnsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  ${isRtl`\n   flex-direction: row-reverse;\n `}\n\n  ${media.smallerThanMaxTablet`\n    flex-direction: column;\n    justify-content: flex-start;\n  `}\n`;\n\nconst Column = styled.div`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  width: 46%;\n  display: flex;\n  flex-direction: column;\n\n  &.fullWidth {\n    flex-grow: 1;\n    width: 100%;\n  }\n\n  ${media.smallerThanMaxTablet`\n    flex-grow: 1;\n    flex-shrink: 1;\n    width: 100%;\n  `}\n`;\n\nconst LeftColumn = styled(Column)`\n  ${media.smallerThanMaxTablet`\n    order: 2;\n    margin-bottom: 30px;\n  `}\n`;\n\nconst RightColumn = styled(Column)`\n  ${media.smallerThanMaxTablet`\n    order: 1;\n    margin-bottom: 60px;\n  `}\n`;\n\nconst ColumnTitle = styled.h2`\n  color: #333;\n  font-size: ${fontSizes.xl}px;\n  font-weight: 500;\n  line-height: 26px;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nconst ColumnExplanation = styled.div`\n  color: #666;\n  font-size: ${fontSizes.medium}px;\n  line-height: 24px;\n  font-weight: 300;\n  min-height: 7rem;\n\n  ${media.smallerThanMaxTablet`\n    margin-bottom: 15px;\n    min-height: auto;\n  `}\n`;\n\nconst ProjectsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst ProjectCardWrapper = styled.div`\n  margin-bottom: 20px;\n\n  ${media.smallerThanMaxTablet`\n    margin-bottom: 10px;\n  `}\n`;\n\nconst ButtonBarInner = styled.div`\n  flex-grow: 1;\n  flex-shrink: 0;\n  flex-basis: 100%;\n  max-width: ${(props) => props.theme.maxPageWidth}px;\n  display: flex;\n  align-items: center;\n\n  .Button {\n    margin-right: 10px;\n  }\n\n  ${media.smallerThanMaxTablet`\n    margin-left: 35px;\n  `}\n\n  ${isRtl`\n    flex-direction: row-reverse;\n    .Button {\n        margin-right: auto;\n        margin-left: 10px;\n    }\n `}\n`;\n\nconst EmptyStateContainer = styled.div`\n  color: #474747;\n  font-size: ${fontSizes.large}px;\n  line-height: 24px;\n  text-align: center;\n  padding-top: 15px;\n`;\n\ninterface InputProps {}\n\ninterface DataProps {\n  projects: GetProjectsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  selectedProjectId: string | null;\n}\n\nclass IdeasProjectSelectPage extends PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  constructor(props: Props & WithRouterProps) {\n    super(props);\n    this.state = {\n      selectedProjectId: null,\n    };\n  }\n\n  handleProjectClick = (project: IProjectData) => () => {\n    this.setState({ selectedProjectId: project.id });\n  };\n\n  redirectTo = (projectSlug: string) => {\n    const queryParams =\n      (this.props.location && this.props.location.search) || '';\n    clHistory.push(`/projects/${projectSlug}/ideas/new${queryParams}`);\n  };\n\n  handleOnSubmitClick = () => {\n    const { projectsList } = this.props.projects;\n\n    if (!isNilOrError(projectsList)) {\n      const project = projectsList.find(\n        (project) => project.id === this.state.selectedProjectId\n      );\n\n      if (project) {\n        this.redirectTo(project.attributes.slug);\n      }\n    }\n  };\n\n  render() {\n    const { projectsList } = this.props.projects;\n    const { selectedProjectId } = this.state;\n\n    if (isUndefined(projectsList)) {\n      return (\n        <Loading>\n          <Spinner />\n        </Loading>\n      );\n    }\n\n    if (!isNilOrError(projectsList)) {\n      const { open_idea_box: openProjects, null: cityProjects } = groupBy(\n        projectsList,\n        (project) => project.attributes.internal_role\n      );\n      const openProject =\n        openProjects && !isEmpty(openProjects) && openProjects[0];\n      const noProjects = isEmpty(projectsList);\n\n      return (\n        <Container className=\"e2e-project-selection-page\">\n          <StyledContentContainer>\n            <PageTitle className={noProjects ? 'noProjects' : ''}>\n              <FormattedMessage {...messages.pageTitle} />\n            </PageTitle>\n\n            {noProjects && (\n              <EmptyStateContainer>\n                <FormattedMessage {...messages.noProjects} />\n              </EmptyStateContainer>\n            )}\n\n            {!noProjects && (\n              <>\n                <ColumnsContainer>\n                  {cityProjects && (\n                    <LeftColumn className={!openProject ? 'fullWidth' : ''}>\n                      <ColumnTitle>\n                        <FormattedMessage {...messages.cityProjects} />\n                      </ColumnTitle>\n                      <ColumnExplanation>\n                        <FormattedMessage\n                          {...messages.cityProjectsExplanation}\n                        />\n                      </ColumnExplanation>\n                      <ProjectsList>\n                        {cityProjects.map((project) => (\n                          <ProjectCardWrapper key={project.id}>\n                            <ProjectSelectionCard\n                              onClick={this.handleProjectClick(project)}\n                              projectId={project.id}\n                              selected={selectedProjectId === project.id}\n                              className=\"e2e-project-card\"\n                            />\n                          </ProjectCardWrapper>\n                        ))}\n                      </ProjectsList>\n                    </LeftColumn>\n                  )}\n\n                  {openProject && (\n                    <RightColumn className={!cityProjects ? 'fullWidth' : ''}>\n                      {cityProjects && (\n                        <>\n                          <ColumnTitle>\n                            <FormattedMessage {...messages.openProject} />\n                          </ColumnTitle>\n                          <ColumnExplanation>\n                            <FormattedMessage\n                              {...messages.openProjectExplanation}\n                            />\n                          </ColumnExplanation>\n                        </>\n                      )}\n                      <ProjectsList>\n                        <ProjectCardWrapper>\n                          <ProjectSelectionCard\n                            key={openProject.id}\n                            onClick={this.handleProjectClick(openProject)}\n                            projectId={openProject.id}\n                            selected={selectedProjectId === openProject.id}\n                            className=\"e2e-project-card e2e-open-project\"\n                          />\n                        </ProjectCardWrapper>\n                      </ProjectsList>\n                    </RightColumn>\n                  )}\n                </ColumnsContainer>\n\n                <ButtonBar>\n                  <ButtonBarInner>\n                    <Button\n                      className=\"e2e-submit-project-select-form\"\n                      text={<FormattedMessage {...messages.continueButton} />}\n                      onClick={this.handleOnSubmitClick}\n                      disabled={!selectedProjectId}\n                    />\n                  </ButtonBarInner>\n                </ButtonBar>\n              </>\n            )}\n          </StyledContentContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst IdeasProjectSelectPageWithHoCs = withRouter(IdeasProjectSelectPage);\n\nexport default (inputProps: InputProps) => (\n  <GetProjects publicationStatuses={['published']}>\n    {(projects) => (\n      <IdeasProjectSelectPageWithHoCs {...inputProps} projects={projects} />\n    )}\n  </GetProjects>\n);\n"],"sourceRoot":""}