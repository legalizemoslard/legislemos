{"version":3,"sources":["webpack:///./app/containers/Admin/initiatives/messages.ts","webpack:///./app/components/admin/TabbedResource/index.tsx","webpack:///./app/components/HelmetIntl/index.tsx","webpack:///./app/components/admin/PageTitle/index.tsx","webpack:///./app/containers/Admin/initiatives/tracks.ts","webpack:///./app/containers/Admin/initiatives/index.tsx"],"names":["defineMessages","metaTitle","id","defaultMessage","metaDescription","titleInitiatives","settingsTab","manageTab","settingsTabTitle","settingsTabSubtitle","titleManageTab","subtitleManageTab","warningTresholdSettings","fieldVotingThreshold","fieldVotingDaysLimit","proposalEligibilityCriteria","proposalEligibilityCriteriaInfo","initiativeSettingsFormSave","initiativeSettingsFormSaved","initiativeSettingsFormError","initiativeSettingsVotingThresholdError","initiativeSettingsFormSuccess","fieldPostingEnabled","showProposalEnabled","showProposalEnabledInfo","showProposalPostingEnabledInfo","enabledToggle","proposalSuccessMessage","proposalSuccessMessageInfo","addNewProposal","ResourceHeader","styled","div","TabbedNav","nav","props","theme","borderRadius","colors","separation","Tab","label","fontSizes","base","adminTextColor","ChildWrapper","adminContentBackground","getRegularExpression","tabUrl","RegExp","TabbedResource","tab","pathname","location","active","url","test","this","children","resource","title","subtitle","publicLink","messages","tabs","className","SectionDescription","buttonStyle","icon","linkTo","FormattedMessage","viewPublicResource","length","map","feature","key","name","activeClassForTab","to","React","PureComponent","withRouter","HelmetIntl","formatMessage","intl","description","Helmet","meta","content","injectIntl","h1","xxxl","clickNewProposal","TopContainer","ActionsContainer","InitiativesPage","memo","useState","setTabs","onData","data","insertConfiguration","text","onClick","_event","trackEventByName","tracks","extra","pathnameFrom","onNewProposal"],"mappings":"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","file":"118.b5416a804f1f65dc77ed.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  metaTitle: {\n    id: 'app.containers.Admin.initiatives.metaTitle',\n    defaultMessage: 'Admin initiatives page',\n  },\n  metaDescription: {\n    id: 'app.containers.Admin.initiatives.metaDescription',\n    defaultMessage: 'Manage initiatives on your platform',\n  },\n  titleInitiatives: {\n    id: 'app.containers.Admin.initiatives.titleInitiatives',\n    defaultMessage: 'Initiatives',\n  },\n  settingsTab: {\n    id: 'app.containers.Admin.initiatives.settingsTab',\n    defaultMessage: 'Settings',\n  },\n  manageTab: {\n    id: 'app.containers.Admin.initiatives.manageTab',\n    defaultMessage: 'Manage',\n  },\n  settingsTabTitle: {\n    id: 'app.containers.Admin.initiatives.settingsTabTitle',\n    defaultMessage: 'Configure your proposals',\n  },\n  settingsTabSubtitle: {\n    id: 'app.containers.Admin.initiatives.settingsTabSubtitle',\n    defaultMessage:\n      'Configure the settings for proposals, including activating the feature, setting voting thresholds and including relevant information and proposal criteria.',\n  },\n  titleManageTab: {\n    id: 'app.containers.Admin.initiatives.titleManageTab',\n    defaultMessage: 'Manage the initiatives on the platform.',\n  },\n  subtitleManageTab: {\n    id: 'app.containers.Admin.initiatives.subtitleManageTab',\n    defaultMessage:\n      'Add topics to initiatives, consult or change their statuses, officially update the citizens. Contact us if you want to use custom topics or statuses.',\n  },\n  warningTresholdSettings: {\n    id: 'app.containers.Admin.initiatives.warningTresholdSettings',\n    defaultMessage: 'Changing this will impact all active initiatives',\n  },\n  fieldVotingThreshold: {\n    id: 'app.containers.Admin.initiatives.fieldVotingThreshold',\n    defaultMessage: 'Voting threshold',\n  },\n  fieldVotingDaysLimit: {\n    id: 'app.containers.Admin.initiatives.fieldVotingDaysLimit',\n    defaultMessage: 'Days to reach voting threshold',\n  },\n  proposalEligibilityCriteria: {\n    id: 'app.containers.Admin.initiatives.proposalEligibilityCriteria',\n    defaultMessage: 'Eligibility criteria',\n  },\n  proposalEligibilityCriteriaInfo: {\n    id: 'app.containers.Admin.initiatives.proposalEligibilityCriteriaInfo',\n    defaultMessage:\n      \"Give a clear description of the criteria you'll use to decide if a proposal is eligible or not.\",\n  },\n  initiativeSettingsFormSave: {\n    id: 'app.containers.Admin.initiatives.initiativeSettingsFormSave',\n    defaultMessage: 'Save',\n  },\n  initiativeSettingsFormSaved: {\n    id: 'app.containers.Admin.initiatives.initiativeSettingsFormSaved',\n    defaultMessage: 'Saved!',\n  },\n  initiativeSettingsFormError: {\n    id: 'app.containers.Admin.initiatives.initiativeSettingsFormError',\n    defaultMessage: 'Something went wrong. Please try again.',\n  },\n  initiativeSettingsVotingThresholdError: {\n    id:\n      'app.containers.Admin.initiatives.initiativeSettingsVotingThresholdError',\n    defaultMessage: 'The voting treshold needs to be at least 2',\n  },\n  initiativeSettingsFormSuccess: {\n    id: 'app.containers.Admin.initiatives.initiativeSettingsFormSuccess',\n    defaultMessage: 'Your changes have been saved.',\n  },\n  fieldPostingEnabled: {\n    id: 'app.containers.Admin.initiatives.fieldPostingEnabled',\n    defaultMessage: 'Proposal submission',\n  },\n  showProposalEnabled: {\n    id: 'app.containers.Admin.initiatives.showProposalEnabled',\n    defaultMessage: 'Proposals',\n  },\n  showProposalEnabledInfo: {\n    id: 'app.containers.Admin.initiatives.showProposalEnabledInfo',\n    defaultMessage: 'Enable or disable the proposals feature on your platform.',\n  },\n  showProposalPostingEnabledInfo: {\n    id: 'app.containers.Admin.initiatives.showProposalPostingEnabledInfo',\n    defaultMessage:\n      'Enable or disable new proposals from being posted on your platform. Existing proposals will remain visible.',\n  },\n  enabledToggle: {\n    id: 'app.containers.Admin.initiatives.enabledToggle',\n    defaultMessage: 'Enabled',\n  },\n  proposalSuccessMessage: {\n    id: 'app.containers.Admin.initiatives.proposalSuccessMessage',\n    defaultMessage: 'Success message',\n  },\n  proposalSuccessMessageInfo: {\n    id: 'app.containers.Admin.initiatives.proposalSuccessMessageInfo',\n    defaultMessage:\n      'Give a clear description of what proposal initiators can expect when their proposal reaches the voting threshold in time.',\n  },\n  addNewProposal: {\n    id: 'app.containers.Admin.initiatives.addNewProposal',\n    defaultMessage: 'Add a proposal',\n  },\n});\n","import React from 'react';\n\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Link from 'utils/cl-router/Link';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// localisation\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// typings\nimport { Message, ITab } from 'typings';\n\n// components\nimport FeatureFlag from 'components/FeatureFlag';\nimport Button from 'components/UI/Button';\nimport { SectionDescription } from 'components/admin/Section';\nimport Title from 'components/admin/PageTitle';\n\nconst ResourceHeader = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-bottom: 30px;\n\n  @media print {\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin-right: 40px;\n  }\n`;\n\nconst TabbedNav = styled.nav`\n  background: #fcfcfc;\n  border-radius: ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius} 0 0;\n  padding-left: 44px;\n  display: flex;\n  border: 1px solid ${colors.separation};\n  border-bottom: 1px solid transparent;\n  @media print {\n    border: none;\n    padding: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Tab = styled.div`\n  list-style: none;\n  cursor: pointer;\n  display: flex;\n  margin-bottom: -1px;\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  a {\n    color: ${colors.label};\n    font-size: ${fontSizes.base}px;\n    font-weight: 400;\n    line-height: 1.5rem;\n    padding: 0;\n    padding-top: 1em;\n    padding-bottom: 1em;\n    border-bottom: 3px solid transparent;\n    transition: all 100ms ease-out;\n  }\n\n  &:not(.active):hover a {\n    color: ${colors.adminTextColor};\n    border-color: #ddd;\n  }\n\n  &.active a {\n    color: ${colors.adminTextColor};\n    border-color: ${colors.adminTextColor};\n  }\n`;\n\nconst ChildWrapper = styled.div`\n  margin-bottom: 60px;\n  padding: 42px;\n  border: 1px solid ${colors.separation};\n  background: ${colors.adminContentBackground};\n\n  @media print {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\ntype Props = {\n  resource: {\n    title: string;\n    publicLink?: string;\n    subtitle?: string;\n  };\n  messages?: {\n    viewPublicResource: Message;\n  };\n  tabs?: ITab[];\n};\n\ninterface State {}\n\nfunction getRegularExpression(tabUrl: string) {\n  return new RegExp(`^/([a-zA-Z]{2,3}(-[a-zA-Z]{2,3})?)(${tabUrl})(/)?$`);\n}\n\nclass TabbedResource extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  activeClassForTab = (tab: ITab) => {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    return (\n      typeof tab.active === 'function'\n        ? tab.active(pathname)\n        : tab.active ||\n          (pathname && getRegularExpression(tab.url).test(location.pathname))\n    )\n      ? 'active'\n      : '';\n  };\n\n  render() {\n    const {\n      children,\n      resource: { title, subtitle, publicLink },\n      messages,\n      tabs,\n    } = this.props;\n\n    return (\n      <>\n        <ResourceHeader className=\"e2e-resource-header\">\n          <div>\n            <Title>{title}</Title>\n            {subtitle && <SectionDescription>{subtitle}</SectionDescription>}\n          </div>\n\n          {publicLink && messages && (\n            <Button buttonStyle=\"cl-blue\" icon=\"eye\" linkTo={publicLink}>\n              <FormattedMessage {...messages.viewPublicResource} />\n            </Button>\n          )}\n        </ResourceHeader>\n\n        {tabs && tabs.length > 0 && (\n          <TabbedNav className=\"e2e-resource-tabs\">\n            {tabs.map((tab) => {\n              if (tab.feature) {\n                return (\n                  <FeatureFlag key={tab.url} name={tab.feature}>\n                    <Tab\n                      key={tab.url}\n                      className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                    >\n                      <Link to={tab.url}>{tab.label}</Link>\n                    </Tab>\n                  </FeatureFlag>\n                );\n              } else {\n                return (\n                  <Tab\n                    key={tab.url}\n                    className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                  >\n                    <Link to={tab.url}>{tab.label}</Link>\n                  </Tab>\n                );\n              }\n            })}\n          </TabbedNav>\n        )}\n\n        <ChildWrapper>{children}</ChildWrapper>\n      </>\n    );\n  }\n}\n\nexport default withRouter(TabbedResource);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\ntype Props = {\n  title: ReactIntl.FormattedMessage.MessageDescriptor;\n  description: ReactIntl.FormattedMessage.MessageDescriptor;\n};\n\ninterface State {}\n\nexport class HelmetIntl extends React.PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const { title, description } = this.props;\n\n    return (\n      <>\n        <Helmet\n          title={formatMessage(title)}\n          meta={[{ name: 'description', content: formatMessage(description) }]}\n        />\n      </>\n    );\n  }\n}\n\nexport default injectIntl<Props>(HelmetIntl);\n","// style\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nexport default styled.h1`\n  font-size: ${fontSizes.xxxl}px;\n  line-height: 40px;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 15px;\n`;\n","export default {\n  clickNewProposal: {\n    name: 'New Proposal button clicked',\n  },\n};\n","import React, { memo, useState } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// components\nimport HelmetIntl from 'components/HelmetIntl';\nimport TabbedResource from 'components/admin/TabbedResource';\nimport Button from 'components/UI/Button';\n\n// i18n\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\n// tracks\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// styles\nimport styled from 'styled-components';\nimport { InsertConfigurationOptions, ITab } from 'typings';\nimport Outlet from 'components/Outlet';\nimport { insertConfiguration } from 'utils/moduleUtils';\n\nconst TopContainer = styled.div`\n  width: 100%;\n  margin-top: -5px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  position: relative;\n`;\n\nconst ActionsContainer = styled.div`\n  display: flex;\n\n  & > *:not(:last-child) {\n    margin-right: 15px;\n  }\n`;\nconst InitiativesPage = memo<InjectedIntlProps & WithRouterProps>(\n  ({ children, intl: { formatMessage }, location }) => {\n    const [tabs, setTabs] = useState<ITab[]>([\n      {\n        label: formatMessage(messages.settingsTab),\n        name: 'initiatives',\n        url: '/admin/initiatives',\n      },\n      {\n        label: formatMessage(messages.manageTab),\n        name: 'manage',\n        url: '/admin/initiatives/manage',\n      },\n    ]);\n\n    const resource = {\n      title: formatMessage(messages.titleInitiatives),\n    };\n\n    const onNewProposal = (pathname: string) => (_event) => {\n      trackEventByName(tracks.clickNewProposal.name, {\n        extra: { pathnameFrom: pathname },\n      });\n    };\n\n    const handleData = (data: InsertConfigurationOptions<ITab>) =>\n      setTabs(insertConfiguration<ITab>(data));\n\n    const { pathname } = location;\n    return (\n      <>\n        <Outlet\n          id=\"app.containers.Admin.initiatives.tabs\"\n          onData={handleData}\n          formatMessage={formatMessage}\n        />\n        <TopContainer>\n          <ActionsContainer>\n            <Button\n              id=\"e2e-new-proposal\"\n              buttonStyle=\"cl-blue\"\n              icon=\"initiativesAdminMenuIcon\"\n              linkTo={`/initiatives/new`}\n              text={formatMessage(messages.addNewProposal)}\n              onClick={onNewProposal(pathname)}\n            />\n          </ActionsContainer>\n        </TopContainer>\n        <TabbedResource resource={resource} tabs={tabs}>\n          <HelmetIntl\n            title={messages.metaTitle}\n            description={messages.metaDescription}\n          />\n          {children}\n        </TabbedResource>\n      </>\n    );\n  }\n);\n\nexport default withRouter(injectIntl(InitiativesPage));\n"],"sourceRoot":""}