{"version":3,"sources":["webpack:///./app/containers/Admin/projects/all/Lists/AdminProjectList.tsx"],"names":["StyledSortableRow","SortableRow","StyledListHeader","ListHeader","Spacer","styled","div","handleReorderAdminPublication","itemId","newOrder","reorderAdminPublication","memo","_props","rootLevelAdminPublications","publicationStatusFilter","rootLevelOnly","list","isProjectFoldersEnabled","isNilOrError","length","HeaderTitle","FormattedMessage","messages","existingProjects","id","SortableList","items","onReorder","className","key","itemsList","handleDragRow","handleDropRow","map","item","index","moveRow","dropRow","lastItem","publicationType","actions","publication"],"mappings":"iQAAA,M,ybAAA,YAGA,eAGA,YAGA,YACA,eACA,eACA,YAGA,YACA,eAGA,YACA,eAGA,e,+HAEA,IAAMA,GAAoB,aAAOC,eAAV,yFAAG,CAAH,uDAMjBC,GAAmB,aAAOC,cAAV,wFAAG,CAAH,yBAIhBC,EAASC,UAAOC,IAAV,8EAAGD,CAAH,aAMZ,SAASE,EAA8BC,EAAQC,IAC7C,IAAAC,yBAAwBF,EAAQC,GAGlC,I,GAAyB,IAAAE,OAAY,SAACC,GACpC,IAAcC,GAA+B,aAAqB,CAChEC,wBAAyB,CAAC,YAAa,WAAY,SACnDC,eAAe,IAFTC,KAIFC,GAA0B,aAAe,mBAE/C,QACG,IAAAC,cAAaL,IACdA,EAA2BM,OAAS,EAGlC,gDACE,wBAACjB,EAAD,KACE,wBAAC,EAAAkB,YAAD,MACIH,GACA,wBAAC,EAAAI,iBAAqBC,UAASC,kBAEjC,wBAAC,UAAD,CAAQC,GAAG,oEAEb,wBAACpB,EAAD,MACA,wBAAC,UAAD,CAAQoB,GAAG,sEAEb,wBAAC,EAAAC,aAAD,CACEC,MAAOb,EACPc,UAAWpB,EACXqB,UAAU,wCACVJ,GAAG,oCACHK,IAAKhB,EAA2BM,SAE/B,YAAiD,IAA9CW,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC5B,OACE,gDACGF,EAAUG,KACT,SAACC,EAAgCC,GAC/B,OACE,wBAACnC,EAAD,CACE6B,IAAKK,EAAKV,GACVA,GAAIU,EAAKV,GACTW,MAAOA,EACPC,QAASL,EACTM,QAASL,EACTM,SACEH,IAAUtB,EAA2BM,OAAS,GAGtB,YAAzBe,EAAKK,iBACJ,wBAAC,UAAD,CACEC,QAAS,CAAC,SAAU,UACpBC,YAAaP,IAGjB,wBAAC,UAAD,CACEV,GAAG,+DACHiB,YAAaP,aAc9B,Q","file":"177.ef8843b0cfb070444d7f.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\n// style\nimport styled from 'styled-components';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport { SortableList, SortableRow } from 'components/admin/ResourceList';\nimport ProjectRow from '../../components/ProjectRow';\nimport Outlet from 'components/Outlet';\nimport { ListHeader, HeaderTitle } from '../StyledComponents';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../messages';\n\n// services\nimport { reorderAdminPublication } from 'services/adminPublications';\nimport useAdminPublications, {\n  IAdminPublicationContent,\n} from 'hooks/useAdminPublications';\nimport useFeatureFlag from 'hooks/useFeatureFlag';\n\nconst StyledSortableRow = styled(SortableRow)`\n  & .sortablerow-draghandle {\n    align-self: flex-start;\n  }\n`;\n\nconst StyledListHeader = styled(ListHeader)`\n  margin-bottom: 30px;\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n`;\n\ninterface Props {}\n\nfunction handleReorderAdminPublication(itemId, newOrder) {\n  reorderAdminPublication(itemId, newOrder);\n}\n\nconst AdminProjectList = memo<Props>((_props) => {\n  const { list: rootLevelAdminPublications } = useAdminPublications({\n    publicationStatusFilter: ['published', 'archived', 'draft'],\n    rootLevelOnly: true,\n  });\n  const isProjectFoldersEnabled = useFeatureFlag('project_folders');\n\n  if (\n    !isNilOrError(rootLevelAdminPublications) &&\n    rootLevelAdminPublications.length > 0\n  ) {\n    return (\n      <>\n        <StyledListHeader>\n          <HeaderTitle>\n            {!isProjectFoldersEnabled && (\n              <FormattedMessage {...messages.existingProjects} />\n            )}\n            <Outlet id=\"app.containers.AdminPage.projects.all.projectsAndFolders.title\" />\n          </HeaderTitle>\n          <Spacer />\n          <Outlet id=\"app.containers.AdminPage.projects.all.projectsAndFolders.actions\" />\n        </StyledListHeader>\n        <SortableList\n          items={rootLevelAdminPublications}\n          onReorder={handleReorderAdminPublication}\n          className=\"projects-list e2e-admin-projects-list\"\n          id=\"e2e-admin-published-projects-list\"\n          key={rootLevelAdminPublications.length}\n        >\n          {({ itemsList, handleDragRow, handleDropRow }) => {\n            return (\n              <>\n                {itemsList.map(\n                  (item: IAdminPublicationContent, index: number) => {\n                    return (\n                      <StyledSortableRow\n                        key={item.id}\n                        id={item.id}\n                        index={index}\n                        moveRow={handleDragRow}\n                        dropRow={handleDropRow}\n                        lastItem={\n                          index === rootLevelAdminPublications.length - 1\n                        }\n                      >\n                        {item.publicationType === 'project' && (\n                          <ProjectRow\n                            actions={['delete', 'manage']}\n                            publication={item}\n                          />\n                        )}\n                        <Outlet\n                          id=\"app.containers.AdminPage.projects.all.projectsAndFolders.row\"\n                          publication={item}\n                        />\n                      </StyledSortableRow>\n                    );\n                  }\n                )}\n              </>\n            );\n          }}\n        </SortableList>\n      </>\n    );\n  }\n\n  return null;\n});\n\nexport default AdminProjectList;\n"],"sourceRoot":""}