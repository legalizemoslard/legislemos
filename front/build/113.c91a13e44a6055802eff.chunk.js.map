{"version":3,"sources":["webpack:///./app/containers/InitiativesNewPage/tracks.ts","webpack:///./app/resources/GetInitiativesPermissions.tsx","webpack:///./app/containers/InitiativesNewPage/InitiativesNewMeta.tsx","webpack:///./app/containers/InitiativesNewPage/InitiativesNewFormWrapper.tsx","webpack:///./app/hooks/useInitiativesPermissions.ts","webpack:///./app/containers/InitiativesNewPage/messages.ts","webpack:///./app/containers/InitiativesNewPage/index.tsx"],"names":["titleProfanityError","name","descriptionProfanityError","children","action","InitiativesNewMeta","React","memo","intl","authUser","tenantLocales","formatMessage","location","window","initiativesIndexTitle","messages","metaTitle","initiativesIndexDescription","metaDescription","Helmet","attributes","unread_notifications","content","property","href","InitiativesNewMetaWithHoc","injectIntl","Data","adopt","inputProps","dataprops","StyledInitiativeForm","InitiativeForm","media","smallerThanMaxTablet","InitiativesNewFormWrapper","props","changedKeys","Object","keys","initialValues","filter","key","isEqual","state","pick","changedValues","initiativeId","hasBannerChanged","hasImageChanged","image","banner","saving","isEmpty","setState","getValuesToSend","formAPIValues","updateInitiative","initiative","addInitiative","publication_status","data","id","getFormValues","base64","addInitiativeImage","imageRemote","imageId","deleteInitiativeImage","reportError","debounce","handleSave","publishing","locale","appConfiguration","then","clHistory","push","pathname","slug","search","apiErrors","get","profanityApiError","base","find","apiError","error","blocked_words","some","blockedWord","attribute","trackEventByName","tracks","profaneMessage","title_multiloc","proposalId","userId","isNilOrError","host","body_multiloc","publishError","topic_ids","position","location_point_geojson","undefined","newValue","file","addInitiativeFile","res","files","catch","errorResponse","setTimeout","fileToRemove","deleteInitiativeFile","location_description","geocode","this","positionInfo","parsePosition","omitBy","entry","header_bg","map","topic","otherProps","topics","onPublish","handlePublish","onSave","debouncedSave","onChangeTitle","onChangeBody","onChangeTopics","onChangePosition","onChangeBanner","onChangeImage","onAddFile","onRemoveFile","PureComponent","dataProps","useState","actionPermission","setActionPermission","useEffect","subscription","combineLatest","getInitiativeActionDescriptors","observable","currentAppConfigurationStream","authUserStream","subscribe","actionDescriptors","tenant","actionDescriptor","enabled","show","disabledReason","disabled_reason","unsubscribe","defineMessages","defaultMessage","locationNotFound","unkownAddress","InitiativesNewPage","replace","locationInfo","parse","ignoreQueryPrefix","decoder","str","_defaultEncoder","_charset","type","parseFloat","lat","lng","redirectIfNotPermittedOnPage","isNumber","reverseGeocode","address","coordinates","prevProps","postingPermission","redirectIfPostingNotEnabled","initiativeTopics","isAdmin","exclude_code","previousPathName","render","PreviousPathnameContext","Consumer","withRouter"],"mappings":"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","file":"113.c91a13e44a6055802eff.chunk.js","sourcesContent":["export default {\n  titleProfanityError: {\n    name: 'Profane proposal title blocked',\n  },\n  descriptionProfanityError: {\n    name: 'Profane proposal description blocked',\n  },\n};\n","import { IInitiativeAction } from 'services/initiatives';\nimport { ActionPermission } from 'services/actionTakingRules';\nimport useInitiativesPermissions, {\n  IInitiativeDisabledReason,\n} from 'hooks/useInitiativesPermissions';\n\ninterface InputProps {}\n\ntype children = (\n  renderProps: GetInitiativesPermissionsChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n  action: IInitiativeAction;\n}\n\nexport type GetInitiativesPermissionsChildProps =\n  | ActionPermission<IInitiativeDisabledReason>\n  | undefined;\n\nexport default ({ children, action }: Props) => {\n  const initiativesPermissions = useInitiativesPermissions(action);\n  return (children as children)(initiativesPermissions);\n};\n","// libraries\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { adopt } from 'react-adopt';\n\n// i18n\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetAppConfigurationLocales, {\n  GetAppConfigurationLocalesChildProps,\n} from 'resources/GetAppConfigurationLocales';\n\n// utils\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\ninterface InputProps {}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  tenantLocales: GetAppConfigurationLocalesChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst InitiativesNewMeta = React.memo<Props & InjectedIntlProps>(\n  ({ intl, authUser, tenantLocales }) => {\n    const { formatMessage } = intl;\n    const { location } = window;\n    const initiativesIndexTitle = formatMessage(messages.metaTitle);\n    const initiativesIndexDescription = formatMessage(messages.metaDescription);\n\n    return (\n      <Helmet>\n        <title>\n          {`\n          ${\n            authUser && authUser.attributes.unread_notifications\n              ? `(${authUser.attributes.unread_notifications}) `\n              : ''\n          }\n          ${initiativesIndexTitle}`}\n        </title>\n        {getAlternateLinks(tenantLocales)}\n        {getCanonicalLink()}\n        <meta name=\"title\" content={initiativesIndexTitle} />\n        <meta name=\"description\" content={initiativesIndexDescription} />\n        <meta property=\"og:title\" content={initiativesIndexTitle} />\n        <meta property=\"og:description\" content={initiativesIndexDescription} />\n        <meta property=\"og:url\" content={location.href} />\n      </Helmet>\n    );\n  }\n);\n\nconst InitiativesNewMetaWithHoc = injectIntl<Props>(InitiativesNewMeta);\n\nconst Data = adopt<DataProps, InputProps>({\n  tenantLocales: <GetAppConfigurationLocales />,\n  authUser: <GetAuthUser />,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataprops) => (\n      <InitiativesNewMetaWithHoc {...inputProps} {...dataprops} />\n    )}\n  </Data>\n);\n","import React from 'react';\nimport { adopt } from 'react-adopt';\n\n// components\nimport InitiativeForm, {\n  FormValues,\n  SimpleFormValues,\n} from 'components/InitiativeForm';\n\n// services\nimport { Locale, Multiloc, UploadFile } from 'typings';\nimport {\n  addInitiative,\n  updateInitiative,\n  IInitiativeData,\n  IInitiativeAdd,\n} from 'services/initiatives';\nimport { ITopicData } from 'services/topics';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// style\nimport { media } from 'utils/styleUtils';\nimport clHistory from 'utils/cl-router/history';\nimport styled from 'styled-components';\n\n// intl\nimport { geocode } from 'utils/locationTools';\nimport { isEqual, pick, get, omitBy, isEmpty, debounce } from 'lodash-es';\nimport { Point } from 'geojson';\nimport {\n  addInitiativeImage,\n  deleteInitiativeImage,\n} from 'services/initiativeImages';\nimport {\n  deleteInitiativeFile,\n  addInitiativeFile,\n} from 'services/initiativeFiles';\nimport { reportError } from 'utils/loggingUtils';\n\n// tracks\nimport tracks from './tracks';\nimport { trackEventByName } from 'utils/analytics';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\n\nconst StyledInitiativeForm = styled(InitiativeForm)`\n  width: 100%;\n  min-width: 530px;\n  height: 900px;\n  ${media.smallerThanMaxTablet`\n    min-width: 230px;\n  `}\n`;\n\ninterface InputProps {\n  locale: Locale;\n  location_description?: string;\n  location_point_geojson?: Point;\n  topics: ITopicData[];\n}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  appConfiguration: GetAppConfigurationChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State extends FormValues {\n  initiativeId: string | null;\n  saving: boolean;\n  publishing: boolean;\n  hasBannerChanged: boolean;\n  hasImageChanged: boolean;\n  imageId: string | null;\n  publishError: boolean;\n  apiErrors: any;\n  location_point_geojson?: Point;\n  titleProfanityError: boolean;\n  descriptionProfanityError: boolean;\n}\n\nexport class InitiativesNewFormWrapper extends React.PureComponent<\n  Props,\n  State\n> {\n  initialValues: SimpleFormValues;\n  constructor(props) {\n    super(props);\n    // These are the properties that really get matched against back-end before re-send\n    // the rest of formvalues (image, banner, files) get sent on each change.\n    this.initialValues = {\n      title_multiloc: undefined,\n      body_multiloc: undefined,\n      topic_ids: [],\n      position: undefined,\n    };\n\n    this.state = {\n      ...this.initialValues,\n      initiativeId: null,\n      saving: false,\n      publishing: false,\n      hasBannerChanged: false,\n      hasImageChanged: false,\n      imageId: null,\n      banner: undefined,\n      image: undefined,\n      files: [],\n      publishError: false,\n      apiErrors: null,\n      position: props.location_description,\n      location_point_geojson: props.location_point_geojson,\n      titleProfanityError: false,\n      descriptionProfanityError: false,\n    };\n  }\n\n  componentDidMount() {\n    addInitiative({ publication_status: 'draft' }).then((initiative) => {\n      this.setState({ initiativeId: initiative.data.id });\n    });\n  }\n\n  changedValues = () => {\n    const changedKeys = Object.keys(this.initialValues).filter((key) => {\n      return !isEqual(this.initialValues[key], this.state[key]);\n    });\n    return pick(this.state, changedKeys);\n  };\n\n  async parsePosition(position: string | undefined | null) {\n    let location_point_geojson: Point | null | undefined;\n    let location_description: string | null | undefined;\n    switch (position) {\n      case null:\n      case '':\n        location_point_geojson = null;\n        location_description = null;\n        break;\n\n      case undefined:\n        location_point_geojson = undefined;\n        location_description = undefined;\n        break;\n\n      default:\n        location_point_geojson = await geocode(position);\n        location_description = position;\n        break;\n    }\n    return { location_point_geojson, location_description };\n  }\n\n  async getValuesToSend(\n    changedValues: Partial<FormValues>,\n    hasBannerChanged: boolean,\n    banner: UploadFile | undefined | null\n  ) {\n    const {\n      title_multiloc,\n      body_multiloc,\n      topic_ids,\n      position,\n    } = changedValues;\n    const { location_point_geojson } = this.state;\n\n    let positionInfo;\n\n    if (location_point_geojson) {\n      positionInfo = {\n        location_point_geojson,\n        location_description: position,\n      };\n    } else {\n      positionInfo = await this.parsePosition(position);\n    }\n\n    // removes undefined values, not null values that are used to remove previously used values\n    const formAPIValues = omitBy(\n      {\n        title_multiloc,\n        body_multiloc,\n        topic_ids,\n        ...positionInfo,\n      },\n      (entry) => entry === undefined\n    );\n\n    if (hasBannerChanged) {\n      formAPIValues.header_bg = banner ? banner.base64 : null;\n    }\n    return formAPIValues as Partial<IInitiativeAdd>;\n  }\n\n  handleSave = async () => {\n    const changedValues = this.changedValues();\n    const {\n      initiativeId,\n      hasBannerChanged,\n      hasImageChanged,\n      image,\n      banner,\n      saving,\n    } = this.state;\n    // if nothing has changed, do noting.\n    if (isEmpty(changedValues) && !hasBannerChanged && !hasImageChanged) return;\n\n    // if we're already publishing, do nothing.\n    if (saving) return;\n\n    // setting flags for user feedback and avoiding double sends.\n    this.setState({ saving: true });\n\n    try {\n      const formAPIValues = await this.getValuesToSend(\n        changedValues,\n        hasBannerChanged,\n        banner\n      );\n      // save any changes to the initiative data.\n      if (!isEmpty(formAPIValues)) {\n        let initiative;\n\n        if (initiativeId) {\n          initiative = await updateInitiative(initiativeId, formAPIValues);\n        } else {\n          initiative = await addInitiative({\n            ...formAPIValues,\n            publication_status: 'draft',\n          });\n          this.setState({ initiativeId: initiative.data.id });\n        }\n        // feed back what was saved to the api into the initialValues object\n        // so that we can determine with certainty what has changed since last\n        // successful save.\n        this.initialValues = this.getFormValues(initiative.data);\n        this.setState({ hasBannerChanged: false });\n      }\n\n      // save any changes to initiative image.\n      if (hasImageChanged && initiativeId) {\n        if (image && image.base64) {\n          const imageRemote = await addInitiativeImage(\n            initiativeId,\n            image.base64\n          );\n          // save image id in case we need to remove it later.\n          this.setState({ imageId: imageRemote.data.id });\n        } else if (!image && this.state.imageId) {\n          deleteInitiativeImage(initiativeId, this.state.imageId);\n          this.setState({ imageId: null });\n        } else {\n          // Image saving mechanism works on the hypothesis that any defined\n          // image will have a base64 key, and when you need to remove an image\n          // it was previously saved. If not, let's report it so it gets fixed.\n          reportError('There was an error with an initiative image');\n        }\n        this.setState({ hasImageChanged: false });\n      }\n      this.setState({ saving: false });\n    } catch (errorResponse) {\n      // saving changes while working should have a minimal error feedback,\n      // maybe in the saving indicator, since it's error-resistant, ie what wasn't\n      // saved this time will be next time user leaves a field, or on publish call.\n      this.setState({ saving: false });\n    }\n  };\n\n  debouncedSave = debounce(this.handleSave, 500);\n\n  handlePublish = async () => {\n    const changedValues = this.changedValues();\n    const {\n      initiativeId,\n      hasBannerChanged,\n      hasImageChanged,\n      image,\n      banner,\n      publishing,\n    } = this.state;\n    const { locale, appConfiguration, authUser } = this.props;\n\n    // if we're already saving, do nothing.\n    if (publishing) return;\n\n    // setting flags for user feedback and avoiding double sends.\n    this.setState({ publishing: true });\n\n    try {\n      const formAPIValues = await this.getValuesToSend(\n        changedValues,\n        hasBannerChanged,\n        banner\n      );\n      let initiative;\n\n      // save any changes to the initiative data.\n      if (initiativeId) {\n        initiative = await updateInitiative(initiativeId, {\n          ...formAPIValues,\n          publication_status: 'published',\n        });\n      } else {\n        initiative = await addInitiative({\n          ...formAPIValues,\n          publication_status: 'published',\n        });\n\n        this.setState({ initiativeId: initiative.data.id });\n      }\n      // feed back what was saved to the api into the initialValues object\n      // so that we can determine with certainty what has changed since last\n      // successful save.\n      this.initialValues = this.getFormValues(initiative.data);\n      this.setState({ hasBannerChanged: false });\n\n      // save any changes to initiative image.\n      if (hasImageChanged && initiativeId) {\n        if (image && image.base64) {\n          const imageRemote = await addInitiativeImage(\n            initiativeId,\n            image.base64\n          );\n          // save image id in case we need to remove it later.\n          this.setState({ imageId: imageRemote.data.id });\n          // remove image from remote if it was saved\n        } else if (!image && this.state.imageId) {\n          deleteInitiativeImage(initiativeId, this.state.imageId).then(() => {\n            this.setState({ imageId: null });\n          });\n        } else if (image) {\n          // Image saving mechanism works on the hypothesis that any defined\n          // image will have a base64 key, if not, something wrong has happened.\n          reportError('Unexpected state of initiative image');\n        }\n        this.setState({ hasImageChanged: false });\n      }\n      this.setState({ publishing: false });\n\n      clHistory.push({\n        pathname: `/initiatives/${initiative.data.attributes.slug}`,\n        search: `?new_initiative_id=${initiative.data.id}`,\n      });\n    } catch (errorResponse) {\n      this.setState({ publishing: false });\n\n      const apiErrors = get(errorResponse, 'json.errors');\n\n      const profanityApiError = apiErrors.base.find(\n        (apiError) => apiError.error === 'includes_banned_words'\n      );\n\n      if (profanityApiError) {\n        const titleProfanityError = profanityApiError.blocked_words.some(\n          (blockedWord) => blockedWord.attribute === 'title_multiloc'\n        );\n        const descriptionProfanityError = profanityApiError.blocked_words.some(\n          (blockedWord) => blockedWord.attribute === 'body_multiloc'\n        );\n\n        if (titleProfanityError) {\n          trackEventByName(tracks.titleProfanityError.name, {\n            locale,\n            profaneMessage: changedValues.title_multiloc?.[locale],\n            proposalId: initiativeId,\n            location: 'InitiativesNewFormWrapper (citizen side)',\n            userId: !isNilOrError(authUser) ? authUser.id : null,\n            host: !isNilOrError(appConfiguration)\n              ? appConfiguration.attributes.host\n              : null,\n          });\n\n          this.setState({\n            titleProfanityError,\n          });\n        }\n\n        if (descriptionProfanityError) {\n          trackEventByName(tracks.descriptionProfanityError.name, {\n            locale,\n            profaneMessage: changedValues.body_multiloc?.[locale],\n            proposalId: initiativeId,\n            location: 'InitiativesNewFormWrapper (citizen side)',\n            userId: !isNilOrError(authUser) ? authUser.id : null,\n            host: !isNilOrError(appConfiguration)\n              ? appConfiguration.attributes.host\n              : null,\n          });\n          this.setState({\n            descriptionProfanityError,\n          });\n        }\n      }\n\n      this.setState((state) => ({\n        apiErrors: { ...state.apiErrors, ...apiErrors },\n        publishError: true,\n      }));\n    }\n  };\n\n  onChangeTitle = (title_multiloc: Multiloc) => {\n    this.setState({ title_multiloc, titleProfanityError: false });\n  };\n\n  onChangeBody = (body_multiloc: Multiloc) => {\n    this.setState({ body_multiloc, descriptionProfanityError: false });\n  };\n\n  onChangeTopics = (topic_ids: string[]) => {\n    this.setState({ topic_ids });\n  };\n\n  onChangePosition = (position: string) => {\n    this.setState({ position, location_point_geojson: undefined });\n  };\n\n  onChangeBanner = (newValue: UploadFile | null) => {\n    this.setState({ banner: newValue, hasBannerChanged: true });\n  };\n\n  onChangeImage = (newValue: UploadFile | null) => {\n    this.setState({ image: newValue, hasImageChanged: true });\n  };\n\n  onAddFile = (file: UploadFile) => {\n    const { initiativeId } = this.state;\n    if (initiativeId) {\n      this.setState({ saving: true });\n      addInitiativeFile(initiativeId, file.base64, file.name)\n        .then((res) => {\n          file.id = res.data.id;\n          this.setState(({ files }) => ({\n            files: [...files, file],\n            saving: false,\n          }));\n        })\n        .catch((errorResponse) => {\n          const apiErrors = get(errorResponse, 'json.errors');\n          this.setState((state) => ({\n            apiErrors: { ...state.apiErrors, ...apiErrors },\n            saving: false,\n          }));\n          setTimeout(() => {\n            this.setState((state) => ({\n              apiErrors: { ...state.apiErrors, file: undefined },\n            }));\n          }, 5000);\n        });\n    }\n  };\n\n  onRemoveFile = (fileToRemove: UploadFile) => {\n    const { initiativeId } = this.state;\n\n    if (initiativeId && fileToRemove.id) {\n      this.setState({ saving: true });\n      deleteInitiativeFile(initiativeId, fileToRemove.id).then(() =>\n        this.setState(({ files }) => ({\n          files: files.filter((file) => file.base64 !== fileToRemove.base64),\n          saving: false,\n        }))\n      );\n    }\n  };\n\n  getFormValues(initiative: IInitiativeData) {\n    if (isNilOrError(initiative)) {\n      return this.initialValues;\n    } else {\n      return {\n        title_multiloc:\n          get(initiative, 'attributes.title_multiloc', undefined) || undefined,\n        body_multiloc:\n          get(initiative, 'attributes.body_multiloc', undefined) || undefined,\n        topic_ids: get(initiative, 'relationships.topics.data', []).map(\n          (topic) => topic.id\n        ),\n        position:\n          get(initiative, 'attributes.location_description', undefined) ||\n          undefined,\n      };\n    }\n  }\n\n  render() {\n    const {\n      initiativeId: _initiativeId,\n      hasBannerChanged: _hasBannerChanged,\n      hasImageChanged: _hasImageChanged,\n      titleProfanityError,\n      descriptionProfanityError,\n      ...otherProps\n    } = this.state;\n    const { locale, topics } = this.props;\n\n    return (\n      <StyledInitiativeForm\n        onPublish={this.handlePublish}\n        onSave={this.debouncedSave}\n        locale={locale}\n        {...otherProps}\n        onChangeTitle={this.onChangeTitle}\n        onChangeBody={this.onChangeBody}\n        onChangeTopics={this.onChangeTopics}\n        onChangePosition={this.onChangePosition}\n        onChangeBanner={this.onChangeBanner}\n        onChangeImage={this.onChangeImage}\n        onAddFile={this.onAddFile}\n        onRemoveFile={this.onRemoveFile}\n        topics={topics}\n        titleProfanityError={titleProfanityError}\n        descriptionProfanityError={descriptionProfanityError}\n      />\n    );\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  appConfiguration: <GetAppConfiguration />,\n  authUser: <GetAuthUser />,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <InitiativesNewFormWrapper {...inputProps} {...dataProps} />\n    )}\n  </Data>\n);\n","import { useState, useEffect } from 'react';\nimport {\n  getInitiativeActionDescriptors,\n  IInitiativeAction,\n} from 'services/initiatives';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { ActionPermission } from 'services/actionTakingRules';\nimport { currentAppConfigurationStream } from 'services/appConfiguration';\nimport { authUserStream } from 'services/auth';\nimport { combineLatest } from 'rxjs';\n\nexport type IInitiativeDisabledReason = 'notPermitted';\n\nexport type IPreliminaryAction =\n  | 'sign_in_up'\n  | 'verify'\n  | 'sign_in_up_and_verify';\n\nexport default function useInitiativesPermissions(action: IInitiativeAction) {\n  const [actionPermission, setActionPermission] = useState<\n    ActionPermission<IInitiativeDisabledReason> | null | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const subscription = combineLatest(\n      getInitiativeActionDescriptors().observable,\n      currentAppConfigurationStream().observable,\n      authUserStream().observable\n    ).subscribe(([actionDescriptors, tenant, authUser]) => {\n      if (!isNilOrError(tenant) && !isNilOrError(actionDescriptors)) {\n        const actionDescriptor = actionDescriptors[action];\n\n        if (actionDescriptor.enabled) {\n          setActionPermission({\n            show: true,\n            enabled: true,\n            disabledReason: null,\n            action: null,\n          });\n        } else {\n          switch (actionDescriptor.disabled_reason) {\n            case 'not_verified':\n              if (isNilOrError(authUser)) {\n                setActionPermission({\n                  show: true,\n                  enabled: 'maybe',\n                  disabledReason: null,\n                  action: 'sign_in_up_and_verify',\n                });\n              } else {\n                setActionPermission({\n                  show: true,\n                  enabled: 'maybe',\n                  disabledReason: null,\n                  action: 'verify',\n                });\n              }\n              break;\n            case 'not_signed_in':\n              setActionPermission({\n                show: true,\n                enabled: 'maybe',\n                disabledReason: null,\n                action: 'sign_in_up',\n              });\n              break;\n            default:\n              setActionPermission({\n                show: true,\n                enabled: false,\n                disabledReason: 'notPermitted',\n                action: null,\n              });\n          }\n        }\n      }\n    });\n\n    return () => subscription.unsubscribe();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return actionPermission as ActionPermission<IInitiativeDisabledReason>;\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  metaTitle: {\n    id: 'app.containers.InitiativesNewPage.metaTitle',\n    defaultMessage: 'Start an Initiative • {orgName}',\n  },\n  metaDescription: {\n    id: 'app.containers.InitiativesNewPage.metaDescription',\n    defaultMessage:\n      'Start your own initiative and make your voice heard by {orgName}',\n  },\n  locationNotFound: {\n    id: 'app.containers.InitiativesNewPage.locationNotFound',\n    defaultMessage:\n      \"We couldn't find an approximate address for the location you selected. You can confirm as is to save this location or type in an address to change it.\",\n  },\n  unkownAddress: {\n    id: 'app.containers.InitiativesNewPage.unkownAddress',\n    defaultMessage: 'Unknown address',\n  },\n});\n","import React from 'react';\nimport { isNumber } from 'lodash-es';\n\n// libraries\nimport clHistory from 'utils/cl-router/history';\nimport { adopt } from 'react-adopt';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { reverseGeocode } from 'utils/locationTools';\nimport { parse } from 'qs';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport { PreviousPathnameContext } from 'context';\nimport GetTopics, { GetTopicsChildProps } from 'resources/GetTopics';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isAdmin } from 'services/permissions/roles';\n\n// components\nimport InitiativesNewMeta from './InitiativesNewMeta';\nimport InitiativesNewFormWrapper from './InitiativesNewFormWrapper';\nimport PageLayout from 'components/InitiativeForm/PageLayout';\nimport { ITopicData } from 'services/topics';\nimport { ILocationInfo } from 'typings';\nimport GetInitiativesPermissions, {\n  GetInitiativesPermissionsChildProps,\n} from 'resources/GetInitiativesPermissions';\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  locale: GetLocaleChildProps;\n  previousPathName: string | null;\n  topics: GetTopicsChildProps;\n  postingPermission: GetInitiativesPermissionsChildProps;\n}\n\ninterface Props extends DataProps {}\n\ninterface State {\n  locationInfo: undefined | null | ILocationInfo;\n}\n\nexport class InitiativesNewPage extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationInfo: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const { lat, lng } = parse(location.search, {\n      ignoreQueryPrefix: true,\n      decoder: (str, _defaultEncoder, _charset, type) => {\n        return type === 'value' ? parseFloat(str) : str;\n      },\n    }) as { [key: string]: string | number };\n\n    this.redirectIfNotPermittedOnPage();\n\n    if (isNumber(lat) && isNumber(lng)) {\n      // When an idea is posted through the map, we Google Maps gets an approximate address,\n      // but we also keep the exact coordinates from the click so the location indicator keeps its initial position on the map\n      // and doesn't readjust together with the address correction/approximation\n      reverseGeocode(lat, lng).then((address) => {\n        this.setState({\n          locationInfo: {\n            location_description: address,\n            location_point_geojson: {\n              type: 'Point',\n              coordinates: [lng, lat],\n            },\n          },\n        });\n      });\n    } else {\n      this.setState({ locationInfo: null });\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.authUser !== this.props.authUser) {\n      this.redirectIfNotPermittedOnPage();\n    }\n\n    if (\n      prevProps.postingPermission !== this.props.postingPermission &&\n      !isNilOrError(this.props.postingPermission)\n    ) {\n      this.redirectIfPostingNotEnabled();\n    }\n  }\n\n  redirectIfNotPermittedOnPage = () => {\n    const { authUser } = this.props;\n\n    if (authUser === null) {\n      clHistory.replace('/sign-up');\n    }\n  };\n\n  redirectIfPostingNotEnabled() {\n    if (\n      this.props.postingPermission?.enabled !== true &&\n      !isNilOrError(this.props.authUser)\n    ) {\n      clHistory.replace('/initiatives');\n    }\n  }\n\n  render() {\n    const { authUser, locale, topics } = this.props;\n    const { locationInfo } = this.state;\n    if (\n      isNilOrError(authUser) ||\n      isNilOrError(locale) ||\n      isNilOrError(topics) ||\n      locationInfo === undefined\n    ) {\n      return null;\n    }\n    const initiativeTopics = topics.filter(\n      (topic) => !isNilOrError(topic)\n    ) as ITopicData[];\n\n    return (\n      <>\n        <InitiativesNewMeta />\n        <PageLayout isAdmin={isAdmin({ data: authUser })}>\n          <InitiativesNewFormWrapper\n            locale={locale}\n            topics={initiativeTopics}\n            {...locationInfo}\n          />\n        </PageLayout>\n      </>\n    );\n  }\n}\n\nconst Data = adopt<DataProps>({\n  authUser: <GetAuthUser />,\n  locale: <GetLocale />,\n  topics: <GetTopics exclude_code={'custom'} />,\n  previousPathName: ({ render }) => (\n    <PreviousPathnameContext.Consumer>\n      {render as any}\n    </PreviousPathnameContext.Consumer>\n  ),\n  postingPermission: <GetInitiativesPermissions action=\"posting_initiative\" />,\n});\n\nexport default withRouter((inputProps: WithRouterProps) => (\n  <Data>\n    {(dataProps) => <InitiativesNewPage {...dataProps} {...inputProps} />}\n  </Data>\n));\n"],"sourceRoot":""}