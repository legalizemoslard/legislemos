{"version":3,"sources":["webpack:///./app/containers/Admin/pages/messages.js","webpack:///./app/components/PageForm/messages.js","webpack:///./app/components/UI/QuillEditor/FormikQuillMultiloc.tsx","webpack:///./app/containers/Admin/pages/New/index.tsx","webpack:///./app/components/PageForm/index.tsx","webpack:///./app/components/UI/GoBackButton/messages.ts","webpack:///./app/components/UI/FormikInput/index.tsx","webpack:///./app/components/UI/GoBackButton/index.tsx"],"names":["defineMessages","listTitle","id","defaultMessage","pageDeletionConfirmation","showButtonLabel","deleteButtonLabel","editButtonLabel","addPageButton","pageTitle","pageSlug","editContent","dontChange","fileUploadLabel","fileUploadLabelTooltip","FormikQuillMultiloc","newValue","props","form","setFieldValue","field","name","setStatus","setFieldTouched","this","valueMultiloc","value","onChange","handleOnChange","onBlur","handleOnBlur","PureComponent","PageTitle","styled","h1","values","setErrors","setSubmitting","createPage","then","clHistory","push","catch","errorResponse","isCLErrorJSON","apiErrors","json","errors","title_multiloc","body_multiloc","mode","onClick","goBack","FormattedMessage","messages","Formik","initialValues","onSubmit","handleSubmit","render","renderFn","validate","PageForm","React","Component","StyledSection","Section","label","slug","fieldName","withCTAButton","local_page_files","onFileAdd","handlePageFileOnAdd","onFileRemove","handlePageFileOnRemove","files","fileToAdd","fileToRemove","filter","file","isSubmitting","isValid","touched","hideTitle","status","Form","SectionField","Field","component","FormikInputMultilocWithLocaleSwitcher","className","renderQuill","Label","FormikInput","IconTooltip","content","renderFileUploader","every","isEmpty","error","_locale","Input","Container","div","GoBackButton","buttonStyle","icon","size","padding","text"],"mappings":"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","file":"99.ae52f369186d9c277031.chunk.js","sourcesContent":["/*\n * AdminPage.PagesPage Messages\n *\n * This contains all the text for the AdminPage.SettingsPage component.\n */\n\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  listTitle: {\n    id: 'app.containers.AdminPage.PagesPage.listTitle',\n    defaultMessage: 'Pages',\n  },\n  pageDeletionConfirmation: {\n    id: 'app.containers.AdminPage.PagesPage.pageDeletionConfirmation',\n    defaultMessage: 'Are you sure you want to delete this page?',\n  },\n  showButtonLabel: {\n    id: 'app.containers.AdminPage.PagesPage.showButtonLabel',\n    defaultMessage: 'View',\n  },\n  deleteButtonLabel: {\n    id: 'app.containers.AdminPage.PagesPage.deleteButtonLabel',\n    defaultMessage: 'Delete',\n  },\n  editButtonLabel: {\n    id: 'app.containers.AdminPage.PagesPage.editButtonLabel',\n    defaultMessage: 'Edit',\n  },\n  addPageButton: {\n    id: 'app.containers.AdminPage.PagesPage.addPageButton',\n    defaultMessage: 'Add page',\n  },\n});\n","/*\n * Components.PagesForm Messages\n *\n * This contains all the text for the Pages Form component.\n */\n\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  pageTitle: {\n    id: 'app.components.PagesForm.pageTitle',\n    defaultMessage: 'Title',\n  },\n  pageSlug: {\n    id: 'app.components.PagesForm.pageSlug',\n    defaultMessage: 'Slug',\n  },\n  editContent: {\n    id: 'app.components.PagesForm.editContent',\n    defaultMessage: 'Content',\n  },\n  dontChange: {\n    id: 'app.components.PagesForm.dontChange',\n    defaultMessage:\n      \"Don't change this! (unless you really know what you're doing)\",\n  },\n  fileUploadLabel: {\n    id: 'app.components.PagesForm.fileUploadLabel',\n    defaultMessage: 'Add files to this page',\n  },\n  fileUploadLabelTooltip: {\n    id: 'app.components.PagesForm.fileUploadLabelTooltip',\n    defaultMessage:\n      'Files should not be larger than 50Mb. Added files will be shown on the bottom of this page.',\n  },\n});\n","import React, { PureComponent } from 'react';\nimport { FieldProps } from 'formik';\n\n// components\nimport QuillMultilocWithLocaleSwitcher, {\n  Props,\n} from 'components/UI/QuillEditor/QuillMultilocWithLocaleSwitcher';\n\n// typings\nimport { Multiloc } from 'typings';\n\nexport default class FormikQuillMultiloc extends PureComponent<\n  FieldProps & Props\n> {\n  handleOnChange = (newValue: Multiloc) => {\n    this.props.form.setFieldValue(this.props.field.name, newValue);\n    this.props.form.setStatus('enabled');\n  };\n\n  handleOnBlur = () => {\n    this.props.form.setFieldTouched(this.props.field.name);\n  };\n\n  render() {\n    const { field } = this.props;\n\n    return (\n      <QuillMultilocWithLocaleSwitcher\n        {...this.props}\n        valueMultiloc={field.value}\n        onChange={this.handleOnChange}\n        onBlur={this.handleOnBlur}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { CLErrorsJSON } from 'typings';\nimport clHistory from 'utils/cl-router/history';\n\nimport GoBackButton from 'components/UI/GoBackButton';\nimport PageWrapper from 'components/admin/PageWrapper';\nimport PageForm from 'components/PageForm';\nimport { Formik } from 'formik';\n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../messages';\nimport { createPage } from 'services/pages';\nimport { isCLErrorJSON } from 'utils/errorUtils';\n\nconst PageTitle = styled.h1`\n  width: 100%;\n  font-size: 2rem;\n  margin: 1rem 0 3rem 0;\n`;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype Props = {};\n\nclass New extends React.Component<Props> {\n  // Still need to handle file saving if we'll use this form.\n  // Also change typing of values parameter to something different (probably FormValues) than 'any'\n  handleSubmit = (values: any, { setErrors, setSubmitting, setStatus }) => {\n    createPage({\n      ...values,\n    })\n      .then(() => {\n        clHistory.push('/admin/pages');\n      })\n      .catch((errorResponse) => {\n        if (isCLErrorJSON(errorResponse)) {\n          const apiErrors = (errorResponse as CLErrorsJSON).json.errors;\n          setErrors(apiErrors);\n        } else {\n          setStatus('error');\n        }\n        setSubmitting(false);\n      });\n  };\n\n  initialValues = () => {\n    return {\n      title_multiloc: {},\n      body_multiloc: {},\n    };\n  };\n\n  renderFn = (props) => <PageForm {...props} mode=\"new\" />;\n\n  goBack = () => {\n    clHistory.push('/admin/pages');\n  };\n\n  render() {\n    return (\n      <div>\n        <GoBackButton onClick={this.goBack} />\n        <PageTitle>\n          <FormattedMessage {...messages.addPageButton} />\n        </PageTitle>\n        <PageWrapper>\n          <Formik\n            initialValues={this.initialValues()}\n            onSubmit={this.handleSubmit}\n            render={this.renderFn}\n            validate={PageForm.validate}\n          />\n        </PageWrapper>\n      </div>\n    );\n  }\n}\n\nexport default New;\n","import React from 'react';\nimport { isEmpty, values as getValues, every } from 'lodash-es';\nimport { Form, Field, InjectedFormikProps, FormikErrors } from 'formik';\nimport styled from 'styled-components';\n\n// Components\nimport FormikInput from 'components/UI/FormikInput';\nimport FormikInputMultilocWithLocaleSwitcher from 'components/UI/FormikInputMultilocWithLocaleSwitcher';\nimport FormikQuillMultiloc from 'components/UI/QuillEditor/FormikQuillMultiloc';\nimport FormikSubmitWrapper from 'components/admin/FormikSubmitWrapper';\nimport { Section, SectionField } from 'components/admin/Section';\nimport ErrorComponent from 'components/UI/Error';\nimport { Label, IconTooltip } from 'cl2-component-library';\nimport Warning from 'components/UI/Warning';\nimport FileUploader from 'components/UI/FileUploader';\n\n// I18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// Typings\nimport { Multiloc, UploadFile } from 'typings';\n\nconst StyledSection = styled(Section)`\n  margin-bottom: 30px;\n`;\n\nexport interface FormValues {\n  title_multiloc: Multiloc;\n  body_multiloc: Multiloc;\n  local_page_files: UploadFile[] | [];\n  slug?: any;\n}\n\nexport interface Props {\n  slug?: string;\n  mode: 'simple' | 'edit';\n  hideTitle?: boolean;\n  pageId?: string;\n}\n\nclass PageForm extends React.Component<InjectedFormikProps<Props, FormValues>> {\n  public static validate = (values: FormValues): FormikErrors<FormValues> => {\n    const errors: FormikErrors<FormValues> = {};\n\n    if (every(getValues(values.title_multiloc), isEmpty)) {\n      errors.title_multiloc = [{ error: 'blank' }] as any;\n    }\n\n    if (every(getValues(values.body_multiloc), isEmpty)) {\n      errors.body_multiloc = [{ error: 'blank' }] as any;\n    }\n\n    return errors;\n  };\n\n  renderQuill = (props) => {\n    return (\n      <FormikQuillMultiloc\n        label={<FormattedMessage {...messages.editContent} />}\n        id={`${this.props.slug}-${props.fieldName}`}\n        {...props}\n        withCTAButton\n      />\n    );\n  };\n\n  renderFileUploader = (values: FormValues) => () => {\n    const { local_page_files } = values;\n\n    return (\n      <FileUploader\n        onFileAdd={this.handlePageFileOnAdd}\n        onFileRemove={this.handlePageFileOnRemove}\n        files={local_page_files}\n      />\n    );\n  };\n\n  handlePageFileOnAdd = (fileToAdd: UploadFile) => {\n    const { setFieldValue, setStatus, values } = this.props;\n    setFieldValue('local_page_files', [...values.local_page_files, fileToAdd]);\n    setStatus('enabled');\n  };\n\n  handlePageFileOnRemove = (fileToRemove: UploadFile) => {\n    const { setFieldValue, setStatus, values } = this.props;\n    const localPageFiles = [...values.local_page_files];\n    const filteredLocalPageFiles = localPageFiles.filter(\n      (file) => file !== fileToRemove\n    );\n    setFieldValue('local_page_files', filteredLocalPageFiles);\n    setStatus('enabled');\n  };\n\n  render() {\n    const {\n      isSubmitting,\n      errors,\n      isValid,\n      touched,\n      mode,\n      hideTitle,\n      values,\n      status,\n    } = this.props;\n    return (\n      <Form>\n        <StyledSection>\n          {!hideTitle && (\n            <SectionField>\n              <Field\n                name=\"title_multiloc\"\n                component={FormikInputMultilocWithLocaleSwitcher}\n                label={<FormattedMessage {...messages.pageTitle} />}\n              />\n              {touched.title_multiloc && (\n                <ErrorComponent\n                  fieldName=\"title_multiloc\"\n                  apiErrors={errors.title_multiloc as any}\n                />\n              )}\n            </SectionField>\n          )}\n\n          <SectionField className=\"fullWidth\">\n            <Field name=\"body_multiloc\" render={this.renderQuill} />\n            {touched.body_multiloc && (\n              <ErrorComponent\n                fieldName=\"body_multiloc\"\n                apiErrors={errors.body_multiloc as any}\n              />\n            )}\n          </SectionField>\n\n          {mode === 'edit' && (\n            <SectionField>\n              <Label>\n                <FormattedMessage {...messages.pageSlug} />\n              </Label>\n              <Field\n                name=\"slug\"\n                component={FormikInput}\n                label={<FormattedMessage {...messages.pageSlug} />}\n              />\n              {touched.slug && (\n                <ErrorComponent\n                  fieldName=\"slug\"\n                  apiErrors={errors.slug as any}\n                />\n              )}\n              <Warning>\n                <FormattedMessage {...messages.dontChange} />\n              </Warning>\n            </SectionField>\n          )}\n          <SectionField>\n            <Label>\n              <FormattedMessage {...messages.fileUploadLabel} />\n              <IconTooltip\n                content={\n                  <FormattedMessage {...messages.fileUploadLabelTooltip} />\n                }\n              />\n            </Label>\n            <Field name=\"page_files\" render={this.renderFileUploader(values)} />\n          </SectionField>\n        </StyledSection>\n\n        <FormikSubmitWrapper {...{ isValid, isSubmitting, status, touched }} />\n      </Form>\n    );\n  }\n}\n\nexport default PageForm;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  goBack: {\n    id: 'app.components.GoBackButton.group.edit.goBack',\n    defaultMessage: 'Go back',\n  },\n});\n","import React, { PureComponent } from 'react';\nimport { Input, InputProps } from 'cl2-component-library';\nimport { FieldProps } from 'formik';\nimport { Locale } from 'typings';\n\nclass FormikInput extends PureComponent<FieldProps & InputProps> {\n  handleOnChange = (newValue: string, _locale: Locale | undefined) => {\n    this.props.form.setFieldValue(this.props.field.name, newValue);\n  };\n\n  render() {\n    const { name, value } = this.props.field;\n    return (\n      <Input\n        {...this.props}\n        name={name}\n        value={value}\n        onChange={this.handleOnChange}\n      />\n    );\n  }\n}\n\nexport default FormikInput;\n","import React, { PureComponent, FormEvent } from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/UI/Button';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.div`\n  display: inline-block;\n`;\n\ntype Props = {\n  onClick: (arg: FormEvent) => void;\n  className?: string;\n};\n\ninterface State {}\n\nexport default class GoBackButton extends PureComponent<Props, State> {\n  render() {\n    const { onClick, className } = this.props;\n\n    return (\n      <Container className={className || ''}>\n        <Button\n          onClick={onClick}\n          buttonStyle=\"text\"\n          icon=\"arrow-back\"\n          size=\"2\"\n          padding=\"0px\"\n          text={<FormattedMessage {...messages.goBack} />}\n        />\n      </Container>\n    );\n  }\n}\n"],"sourceRoot":""}