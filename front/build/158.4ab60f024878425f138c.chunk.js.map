{"version":3,"sources":["webpack:///./app/containers/Admin/initiatives/messages.ts","webpack:///./app/containers/Admin/initiatives/settings/index.tsx"],"names":["defineMessages","metaTitle","id","defaultMessage","metaDescription","titleInitiatives","settingsTab","manageTab","settingsTabTitle","settingsTabSubtitle","titleManageTab","subtitleManageTab","warningTresholdSettings","fieldVotingThreshold","fieldVotingDaysLimit","proposalEligibilityCriteria","proposalEligibilityCriteriaInfo","initiativeSettingsFormSave","initiativeSettingsFormSaved","initiativeSettingsFormError","initiativeSettingsVotingThresholdError","initiativeSettingsFormSuccess","fieldPostingEnabled","showProposalEnabled","showProposalEnabledInfo","showProposalPostingEnabledInfo","enabledToggle","proposalSuccessMessage","proposalSuccessMessageInfo","addNewProposal","Container","styled","div","StyledToggle","Toggle","StyledWarning","Warning","StyledSectionField","SectionField","ButtonContainer","ErrorMessage","fontSizes","base","colors","clRedError","SuccessMessage","clGreenSuccess","StyledSectionDescription","SectionDescription","InitiativesSettingsPage","props","tenant","state","touched","processing","formValues","tenantLocales","isNilOrError","attributes","settings","core","locales","validated","isEmpty","isNaN","voting_threshold","days_limit","forEach","locale","eligibility_criteria","threshold_reached_message","validate","setState","updateAppConfiguration","initiatives","success","error","event","preventDefault","enabled","value","parseInt","valueMultiloc","this","initiativesSettings","_prevProps","prevState","className","intl","SectionTitle","FormattedMessage","messages","Section","SubSectionTitleWithDescription","checked","onChange","handleEnabledOnChange","label","SubSectionTitle","Input","name","type","min","required","toString","handleVotingTresholdOnChange","text","formatMessage","errorMessages","blank","handleDaysLimitOnChange","handleThresholdReachedMessageOnChange","noImages","noVideos","noAlign","limitedTextFormatting","withCTAButton","handleEligibilityCriteriaOnChange","buttonStyle","onClick","handleSubmit","disabled","PureComponent","Data","adopt","InitiativesSettingsPageWithHoC","injectIntl","dataProps"],"mappings":"iKAAA,I,GAEe,EAFf,UAEeA,gBAAe,CAC5BC,UAAW,CACTC,GAAI,6CACJC,eAAgB,0BAElBC,gBAAiB,CACfF,GAAI,mDACJC,eAAgB,uCAElBE,iBAAkB,CAChBH,GAAI,oDACJC,eAAgB,eAElBG,YAAa,CACXJ,GAAI,+CACJC,eAAgB,YAElBI,UAAW,CACTL,GAAI,6CACJC,eAAgB,UAElBK,iBAAkB,CAChBN,GAAI,oDACJC,eAAgB,4BAElBM,oBAAqB,CACnBP,GAAI,uDACJC,eACE,+JAEJO,eAAgB,CACdR,GAAI,kDACJC,eAAgB,2CAElBQ,kBAAmB,CACjBT,GAAI,qDACJC,eACE,yJAEJS,wBAAyB,CACvBV,GAAI,2DACJC,eAAgB,oDAElBU,qBAAsB,CACpBX,GAAI,wDACJC,eAAgB,oBAElBW,qBAAsB,CACpBZ,GAAI,wDACJC,eAAgB,kCAElBY,4BAA6B,CAC3Bb,GAAI,+DACJC,eAAgB,wBAElBa,gCAAiC,CAC/Bd,GAAI,mEACJC,eACE,mGAEJc,2BAA4B,CAC1Bf,GAAI,8DACJC,eAAgB,QAElBe,4BAA6B,CAC3BhB,GAAI,+DACJC,eAAgB,UAElBgB,4BAA6B,CAC3BjB,GAAI,+DACJC,eAAgB,2CAElBiB,uCAAwC,CACtClB,GACE,0EACFC,eAAgB,8CAElBkB,8BAA+B,CAC7BnB,GAAI,iEACJC,eAAgB,iCAElBmB,oBAAqB,CACnBpB,GAAI,uDACJC,eAAgB,uBAElBoB,oBAAqB,CACnBrB,GAAI,uDACJC,eAAgB,aAElBqB,wBAAyB,CACvBtB,GAAI,2DACJC,eAAgB,6DAElBsB,+BAAgC,CAC9BvB,GAAI,kEACJC,eACE,+GAEJuB,cAAe,CACbxB,GAAI,iDACJC,eAAgB,WAElBwB,uBAAwB,CACtBzB,GAAI,0DACJC,eAAgB,mBAElByB,2BAA4B,CAC1B1B,GAAI,8DACJC,eACE,6HAEJ0B,eAAgB,CACd3B,GAAI,kDACJC,eAAgB,oB,8ZCnHpB,E,ybAAA,YACA,YACA,YACA,YAGA,eACA,eAGA,YAGA,YAQA,eACA,eACA,YACA,eACA,eACA,eAGA,YACA,eAIA,YACA,e,opCAKA,IAAM2B,EAAYC,UAAOC,IAAV,0EAAGD,CAAH,MAETE,GAAe,aAAOC,UAAV,6EAAG,CAAH,wBAIZC,GAAgB,aAAOC,WAAV,8EAAG,CAAH,wBAIbC,GAAqB,aAAOC,gBAAV,mFAAG,CAAH,sBAIlBC,EAAkBR,UAAOC,IAAV,gFAAGD,CAAH,sCAKfS,EAAeT,UAAOC,IAAV,6EAAGD,CAAH,mFACHU,YAAUC,KACdC,SAAOC,YAMZC,EAAiBd,UAAOC,IAAV,+EAAGD,CAAH,mFACLU,YAAUC,KACdC,SAAOG,gBAMZC,GAA2B,aAAOC,sBAAV,yFAAG,CAAH,yBA+BxBC,E,0CAIJ,WAAYC,GAAO,kCACjB,cAAMA,IADW,0CAiDR,WACT,IAAQC,EAAW,EAAKD,MAAhBC,OACR,EAA4C,EAAKC,MAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,WACvBC,GAAiB,IAAAC,cAAaN,GAEhC,KADAA,EAAOO,WAAWC,SAASC,KAAKC,QAEhCC,GAAY,EAwBhB,OAtBIT,IAAYC,GAAcE,KAAkB,IAAAO,SAAQR,KACtDO,GAAY,IAGV,IAAAE,OAAMT,EAAWU,mBACjBV,EAAWU,iBAAmB,IAC9B,IAAAD,OAAMT,EAAWW,aACjBX,EAAWW,WAAa,KAExBJ,GAAY,GAGdN,EAAcW,SAAQ,SAACC,KAEnB,IAAAL,SAAQR,EAAWc,qBAAqBD,MACxC,IAAAL,SAAQR,EAAWe,0BAA0BF,OAE7CN,GAAY,OAKXA,MA/EU,2EAkFJ,+FACLX,EAAW,EAAKD,MAAhBC,OACAI,EAAe,EAAKH,MAApBG,YAEH,IAAAE,cAAaN,KAAW,EAAKoB,WAJrB,wBAKX,EAAKC,SAAS,CAAElB,YAAY,IALjB,mBAQH,IAAAmB,wBAAuB,CAC3Bd,SAAU,CACRe,YAAanB,KAVR,OAcT,EAAKiB,SAAS,CACZnB,SAAS,EACTC,YAAY,EACZqB,SAAS,EACTC,OAAO,IAlBA,kDAqBT,EAAKJ,SAAS,CACZlB,YAAY,EACZsB,OAAO,IAvBA,4DAlFI,uDA+GK,SAACC,GACvBA,EAAMC,iBAEN,EAAKN,UAAS,YAAoB,IAAjBjB,EAAiB,EAAjBA,WACPwB,EAAYxB,EAAZwB,QAER,MAAO,CACLxB,WAAY,EAAF,KACLA,GADK,IAERwB,SAAUA,YAxHC,8DA8HY,SAACC,GAC9B,EAAKR,UAAS,kBAAqB,CACjCjB,WAAY,EAAF,KADE,EAAGA,YACL,IAERU,iBAAkBgB,SAASD,EAAO,cAlIrB,yDAuIO,SAACA,GACzB,EAAKR,UAAS,kBAAqB,CACjCjB,WAAY,EAAF,KADE,EAAGA,YACL,IAERW,WAAYe,SAASD,EAAO,cA3If,mEAgJiB,SAClCE,EACAd,GAEIA,GACF,EAAKI,UAAS,kBAAqB,CACjCjB,WAAY,EAAF,KADE,EAAGA,YACL,IAERc,qBAAsBa,YAxJX,uEA8JqB,SACtCA,EACAd,GAEIA,GACF,EAAKI,UAAS,kBAAqB,CACjCjB,WAAY,EAAF,KADE,EAAGA,YACL,IAERe,0BAA2BY,WApKjC,EAAK9B,MAAQ,CACXG,WAAY,KACZF,SAAS,EACTC,YAAY,EACZsB,OAAO,EACPD,SAAS,GAPM,E,sDAWnB,WAAoB,QAClB,EAA2BQ,KAAKjC,MAAxBkB,EAAR,EAAQA,OAAQjB,EAAhB,EAAgBA,OAEhB,KACG,IAAAM,cAAaW,MACb,IAAAX,cAAaN,IADd,MAEAA,GAFA,UAEAA,EAAQO,kBAFR,iBAEA,EAAoBC,gBAFpB,OAEA,EAA8Be,YAC9B,CACA,IAAMU,EAAsBjC,EAAOO,WAAWC,SAASe,YAEvDS,KAAKX,SAAS,CACZjB,WAAY,CACVW,WAAYkB,EAAoBlB,WAChCG,qBAAsBe,EAAoBf,qBAC1CC,0BACEc,EAAoBd,0BACtBL,iBAAkBmB,EAAoBnB,iBACtCc,QAASK,EAAoBL,c,gCAMrC,SAAmBM,EAAmBC,GAElCA,EAAU/B,YACV4B,KAAK/B,MAAMG,YACX+B,EAAU/B,aAAe4B,KAAK/B,MAAMG,YAEpC4B,KAAKX,SAAS,CACZnB,SAAS,EACTC,YAAY,EACZqB,SAAS,EACTC,OAAO,M,oBAgIb,WACE,MAA4CO,KAAKjC,MAAzCkB,EAAR,EAAQA,OAAQjB,EAAhB,EAAgBA,OAAQoC,EAAxB,EAAwBA,UAAWC,EAAnC,EAAmCA,KACnC,EAAmDL,KAAK/B,MAAhDG,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,WAAYsB,EAAhC,EAAgCA,MAAOD,EAAvC,EAAuCA,QAEvC,OAAK,IAAAlB,cAAaW,KAAY,IAAAX,cAAaN,KAAWI,EAiJ/C,KA/IH,wBAACzB,EAAD,CAAWyD,UAAWA,GAAa,IACjC,wBAAC,EAAAE,aAAD,KACE,wBAAC,EAAAC,iBAAqBC,UAASnF,mBAEjC,wBAAC,EAAAwC,mBAAD,KACE,wBAAC,EAAA0C,iBAAqBC,UAASlF,sBAGjC,wBAAC,EAAAmF,QAAD,KACE,wBAAC,EAAAtD,aAAD,KACE,wBAAC,EAAAuD,+BAAD,KACE,wBAAC,EAAAH,iBAAqBC,UAASpE,sBAEjC,wBAACwB,EAAD,KACE,wBAAC,EAAA2C,iBAAqBC,UAASnE,0BAEjC,wBAACS,EAAD,CACE6D,QAASvC,EAAWwB,QACpBgB,SAAUZ,KAAKa,sBACfC,MAAO,wBAAC,EAAAP,iBAAqBC,UAASjE,kBAG1C,wBAAC,EAAAY,aAAD,KACE,wBAAC,EAAA4D,gBAAD,KACE,wBAAC,EAAAR,iBAAqBC,UAAS9E,uBAEjC,wBAACsB,EAAD,KACE,wBAAC,EAAAuD,iBAAqBC,UAAS/E,0BAEjC,wBAAC,EAAAuF,MAAD,CACEZ,UAAU,uBACVa,KAAK,mBACLC,KAAK,SACLC,IAAI,IACJC,UAAU,EACVvB,MAAOzB,EAAWU,iBAAiBuC,WACnCT,SAAUZ,KAAKsB,gCAGhB,IAAAzC,OAAMT,EAAWU,mBAChB,wBAAC,UAAD,CAAOyC,KAAMlB,EAAKmB,cAAcC,UAAcC,WAG9C,IAAA7C,OAAMT,EAAWU,mBACjBV,EAAWU,iBAAmB,GAC5B,wBAAC,UAAD,CACEyC,KAAMlB,EAAKmB,cACThB,UAASvE,2CAMnB,wBAAC,EAAAkB,aAAD,KACE,wBAAC,EAAA4D,gBAAD,KACE,wBAAC,EAAAR,iBAAqBC,UAAS7E,uBAEjC,wBAACqB,EAAD,KACE,wBAAC,EAAAuD,iBAAqBC,UAAS/E,0BAEjC,wBAAC,EAAAuF,MAAD,CACEZ,UAAU,iBACVa,KAAK,aACLC,KAAK,SACLC,IAAI,IACJC,UAAU,EACVvB,MAAOzB,EAAWW,WAAWsC,WAC7BT,SAAUZ,KAAK2B,2BAEhB,IAAA9C,OAAMT,EAAWW,aAChB,wBAAC,UAAD,CAAOwC,KAAMlB,EAAKmB,cAAcC,UAAcC,UAIlD,wBAACxE,EAAD,KACE,wBAAC,EAAAwD,+BAAD,KACE,wBAAC,EAAAH,iBAAqBC,UAAShE,yBAEjC,wBAACoB,EAAD,KACE,wBAAC,EAAA2C,iBAAqBC,UAAS/D,6BAEjC,wBAAC,UAAD,CACE1B,GAAG,4BACHgF,cAAe3B,EAAWe,0BAC1ByB,SAAUZ,KAAK4B,sCACfC,UAAU,EACVC,UAAU,EACVC,SAAS,EACTC,uBAAuB,EACvBC,eAAa,KAGjB,wBAAC,EAAA9E,aAAD,KACE,wBAAC,EAAAuD,+BAAD,KACE,wBAAC,EAAAH,iBAAqBC,UAAS5E,8BAEjC,wBAACgC,EAAD,KACE,wBAAC,EAAA2C,iBACKC,UAAS3E,kCAGjB,wBAAC,UAAD,CACEd,GAAG,uBACHgF,cAAe3B,EAAWc,qBAC1B0B,SAAUZ,KAAKkC,kCACfL,UAAU,EACVC,UAAU,EACVC,SAAS,EACTE,eAAa,MAKnB,wBAAC7E,EAAD,KACE,wBAAC,UAAD,CACE+E,YAAY,aACZC,QAASpC,KAAKqC,aACdC,UAAWtC,KAAKZ,WAChBjB,WAAYA,GAEXqB,EACC,wBAAC,EAAAe,iBAAqBC,UAASzE,6BAE/B,wBAAC,EAAAwE,iBAAqBC,UAAS1E,6BAIlC2D,GACC,wBAACpC,EAAD,KACE,wBAAC,EAAAkD,iBAAqBC,UAASxE,8BAIlCwD,GACC,wBAAC9B,EAAD,KACE,wBAAC,EAAA6C,iBAAqBC,UAAStE,sC,GA7TTqG,iBAyUhCC,GAAO,IAAAC,OAAiB,CAC5BxD,OAAQ,wBAAC,UAAD,MACRjB,OAAQ,wBAAC,UAAD,QAGJ0E,GAAiC,IAAAC,YACrC7E,G,EAGqC,kBACrC,wBAAC0E,EAAD,MACG,SAACI,GAAD,OAAe,wBAACF,EAAmCE,O","file":"158.4ab60f024878425f138c.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  metaTitle: {\n    id: 'app.containers.Admin.initiatives.metaTitle',\n    defaultMessage: 'Admin initiatives page',\n  },\n  metaDescription: {\n    id: 'app.containers.Admin.initiatives.metaDescription',\n    defaultMessage: 'Manage initiatives on your platform',\n  },\n  titleInitiatives: {\n    id: 'app.containers.Admin.initiatives.titleInitiatives',\n    defaultMessage: 'Initiatives',\n  },\n  settingsTab: {\n    id: 'app.containers.Admin.initiatives.settingsTab',\n    defaultMessage: 'Settings',\n  },\n  manageTab: {\n    id: 'app.containers.Admin.initiatives.manageTab',\n    defaultMessage: 'Manage',\n  },\n  settingsTabTitle: {\n    id: 'app.containers.Admin.initiatives.settingsTabTitle',\n    defaultMessage: 'Configure your proposals',\n  },\n  settingsTabSubtitle: {\n    id: 'app.containers.Admin.initiatives.settingsTabSubtitle',\n    defaultMessage:\n      'Configure the settings for proposals, including activating the feature, setting voting thresholds and including relevant information and proposal criteria.',\n  },\n  titleManageTab: {\n    id: 'app.containers.Admin.initiatives.titleManageTab',\n    defaultMessage: 'Manage the initiatives on the platform.',\n  },\n  subtitleManageTab: {\n    id: 'app.containers.Admin.initiatives.subtitleManageTab',\n    defaultMessage:\n      'Add topics to initiatives, consult or change their statuses, officially update the citizens. Contact us if you want to use custom topics or statuses.',\n  },\n  warningTresholdSettings: {\n    id: 'app.containers.Admin.initiatives.warningTresholdSettings',\n    defaultMessage: 'Changing this will impact all active initiatives',\n  },\n  fieldVotingThreshold: {\n    id: 'app.containers.Admin.initiatives.fieldVotingThreshold',\n    defaultMessage: 'Voting threshold',\n  },\n  fieldVotingDaysLimit: {\n    id: 'app.containers.Admin.initiatives.fieldVotingDaysLimit',\n    defaultMessage: 'Days to reach voting threshold',\n  },\n  proposalEligibilityCriteria: {\n    id: 'app.containers.Admin.initiatives.proposalEligibilityCriteria',\n    defaultMessage: 'Eligibility criteria',\n  },\n  proposalEligibilityCriteriaInfo: {\n    id: 'app.containers.Admin.initiatives.proposalEligibilityCriteriaInfo',\n    defaultMessage:\n      \"Give a clear description of the criteria you'll use to decide if a proposal is eligible or not.\",\n  },\n  initiativeSettingsFormSave: {\n    id: 'app.containers.Admin.initiatives.initiativeSettingsFormSave',\n    defaultMessage: 'Save',\n  },\n  initiativeSettingsFormSaved: {\n    id: 'app.containers.Admin.initiatives.initiativeSettingsFormSaved',\n    defaultMessage: 'Saved!',\n  },\n  initiativeSettingsFormError: {\n    id: 'app.containers.Admin.initiatives.initiativeSettingsFormError',\n    defaultMessage: 'Something went wrong. Please try again.',\n  },\n  initiativeSettingsVotingThresholdError: {\n    id:\n      'app.containers.Admin.initiatives.initiativeSettingsVotingThresholdError',\n    defaultMessage: 'The voting treshold needs to be at least 2',\n  },\n  initiativeSettingsFormSuccess: {\n    id: 'app.containers.Admin.initiatives.initiativeSettingsFormSuccess',\n    defaultMessage: 'Your changes have been saved.',\n  },\n  fieldPostingEnabled: {\n    id: 'app.containers.Admin.initiatives.fieldPostingEnabled',\n    defaultMessage: 'Proposal submission',\n  },\n  showProposalEnabled: {\n    id: 'app.containers.Admin.initiatives.showProposalEnabled',\n    defaultMessage: 'Proposals',\n  },\n  showProposalEnabledInfo: {\n    id: 'app.containers.Admin.initiatives.showProposalEnabledInfo',\n    defaultMessage: 'Enable or disable the proposals feature on your platform.',\n  },\n  showProposalPostingEnabledInfo: {\n    id: 'app.containers.Admin.initiatives.showProposalPostingEnabledInfo',\n    defaultMessage:\n      'Enable or disable new proposals from being posted on your platform. Existing proposals will remain visible.',\n  },\n  enabledToggle: {\n    id: 'app.containers.Admin.initiatives.enabledToggle',\n    defaultMessage: 'Enabled',\n  },\n  proposalSuccessMessage: {\n    id: 'app.containers.Admin.initiatives.proposalSuccessMessage',\n    defaultMessage: 'Success message',\n  },\n  proposalSuccessMessageInfo: {\n    id: 'app.containers.Admin.initiatives.proposalSuccessMessageInfo',\n    defaultMessage:\n      'Give a clear description of what proposal initiators can expect when their proposal reaches the voting threshold in time.',\n  },\n  addNewProposal: {\n    id: 'app.containers.Admin.initiatives.addNewProposal',\n    defaultMessage: 'Add a proposal',\n  },\n});\n","import React, { PureComponent } from 'react';\nimport { isEmpty, isNaN } from 'lodash-es';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// services\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport { updateAppConfiguration } from 'services/appConfiguration';\n\n// components\nimport {\n  SectionTitle,\n  SectionDescription,\n  Section,\n  SectionField,\n  SubSectionTitle,\n  SubSectionTitleWithDescription,\n} from 'components/admin/Section';\nimport Button from 'components/UI/Button';\nimport QuillMultilocWithLocaleSwitcher from 'components/UI/QuillEditor/QuillMultilocWithLocaleSwitcher';\nimport { Toggle, Input } from 'cl2-component-library';\nimport Warning from 'components/UI/Warning';\nimport Error from 'components/UI/Error';\nimport errorMessages from 'components/UI/Error/messages';\n\n// i18n\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport messages from '../messages';\nimport { InjectedIntlProps } from 'react-intl';\n\n// stylings\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\n// typings\nimport { Multiloc, Locale } from 'typings';\n\nconst Container = styled.div``;\n\nconst StyledToggle = styled(Toggle)`\n  margin-right: 10px;\n`;\n\nconst StyledWarning = styled(Warning)`\n  margin-bottom: 7px;\n`;\n\nconst StyledSectionField = styled(SectionField)`\n  margin-top: 45px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ErrorMessage = styled.div`\n  font-size: ${fontSizes.base}px;\n  color: ${colors.clRedError};\n  font-weight: 400;\n  line-height: normal;\n  margin-left: 14px;\n`;\n\nconst SuccessMessage = styled.div`\n  font-size: ${fontSizes.base}px;\n  color: ${colors.clGreenSuccess};\n  font-weight: 400;\n  line-height: normal;\n  margin-left: 14px;\n`;\n\nconst StyledSectionDescription = styled(SectionDescription)`\n  margin-bottom: 20px;\n`;\n\ninterface InputProps {\n  className?: string;\n}\n\ninterface DataProps {\n  locale: GetLocaleChildProps;\n  tenant: GetAppConfigurationChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface FormValues {\n  days_limit: number;\n  eligibility_criteria: Multiloc;\n  threshold_reached_message: Multiloc;\n  voting_threshold: number;\n  enabled: boolean;\n}\n\ninterface State {\n  formValues: FormValues;\n  touched: boolean;\n  processing: boolean;\n  error: boolean;\n  success: boolean;\n}\n\nclass InitiativesSettingsPage extends PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: null as any,\n      touched: false,\n      processing: false,\n      error: false,\n      success: false,\n    };\n  }\n\n  componentDidMount() {\n    const { locale, tenant } = this.props;\n\n    if (\n      !isNilOrError(locale) &&\n      !isNilOrError(tenant) &&\n      tenant?.attributes?.settings?.initiatives\n    ) {\n      const initiativesSettings = tenant.attributes.settings.initiatives;\n\n      this.setState({\n        formValues: {\n          days_limit: initiativesSettings.days_limit,\n          eligibility_criteria: initiativesSettings.eligibility_criteria,\n          threshold_reached_message:\n            initiativesSettings.threshold_reached_message,\n          voting_threshold: initiativesSettings.voting_threshold,\n          enabled: initiativesSettings.enabled,\n        },\n      });\n    }\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (\n      prevState.formValues &&\n      this.state.formValues &&\n      prevState.formValues !== this.state.formValues\n    ) {\n      this.setState({\n        touched: true,\n        processing: false,\n        success: false,\n        error: false,\n      });\n    }\n  }\n\n  validate = () => {\n    const { tenant } = this.props;\n    const { touched, processing, formValues } = this.state;\n    const tenantLocales = !isNilOrError(tenant)\n      ? tenant.attributes.settings.core.locales\n      : null;\n    let validated = false;\n\n    if (touched && !processing && tenantLocales && !isEmpty(formValues)) {\n      validated = true;\n\n      if (\n        isNaN(formValues.voting_threshold) ||\n        formValues.voting_threshold < 2 ||\n        isNaN(formValues.days_limit) ||\n        formValues.days_limit < 1\n      ) {\n        validated = false;\n      }\n\n      tenantLocales.forEach((locale) => {\n        if (\n          isEmpty(formValues.eligibility_criteria[locale]) ||\n          isEmpty(formValues.threshold_reached_message[locale])\n        ) {\n          validated = false;\n        }\n      });\n    }\n\n    return validated;\n  };\n\n  handleSubmit = async () => {\n    const { tenant } = this.props;\n    const { formValues } = this.state;\n\n    if (!isNilOrError(tenant) && this.validate()) {\n      this.setState({ processing: true });\n\n      try {\n        await updateAppConfiguration({\n          settings: {\n            initiatives: formValues,\n          },\n        });\n\n        this.setState({\n          touched: false,\n          processing: false,\n          success: true,\n          error: false,\n        });\n      } catch (error) {\n        this.setState({\n          processing: false,\n          error: true,\n        });\n      }\n    }\n  };\n\n  handleEnabledOnChange = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    this.setState(({ formValues }) => {\n      const { enabled } = formValues;\n\n      return {\n        formValues: {\n          ...formValues,\n          enabled: !enabled,\n        },\n      };\n    });\n  };\n\n  handleVotingTresholdOnChange = (value: string) => {\n    this.setState(({ formValues }) => ({\n      formValues: {\n        ...formValues,\n        voting_threshold: parseInt(value, 10),\n      },\n    }));\n  };\n\n  handleDaysLimitOnChange = (value: string) => {\n    this.setState(({ formValues }) => ({\n      formValues: {\n        ...formValues,\n        days_limit: parseInt(value, 10),\n      },\n    }));\n  };\n\n  handleEligibilityCriteriaOnChange = (\n    valueMultiloc: Multiloc,\n    locale: Locale | undefined\n  ) => {\n    if (locale) {\n      this.setState(({ formValues }) => ({\n        formValues: {\n          ...formValues,\n          eligibility_criteria: valueMultiloc,\n        },\n      }));\n    }\n  };\n\n  handleThresholdReachedMessageOnChange = (\n    valueMultiloc: Multiloc,\n    locale: Locale | undefined\n  ) => {\n    if (locale) {\n      this.setState(({ formValues }) => ({\n        formValues: {\n          ...formValues,\n          threshold_reached_message: valueMultiloc,\n        },\n      }));\n    }\n  };\n\n  render() {\n    const { locale, tenant, className, intl } = this.props;\n    const { formValues, processing, error, success } = this.state;\n\n    if (!isNilOrError(locale) && !isNilOrError(tenant) && formValues) {\n      return (\n        <Container className={className || ''}>\n          <SectionTitle>\n            <FormattedMessage {...messages.settingsTabTitle} />\n          </SectionTitle>\n          <SectionDescription>\n            <FormattedMessage {...messages.settingsTabSubtitle} />\n          </SectionDescription>\n\n          <Section>\n            <SectionField>\n              <SubSectionTitleWithDescription>\n                <FormattedMessage {...messages.showProposalEnabled} />\n              </SubSectionTitleWithDescription>\n              <StyledSectionDescription>\n                <FormattedMessage {...messages.showProposalEnabledInfo} />\n              </StyledSectionDescription>\n              <StyledToggle\n                checked={formValues.enabled}\n                onChange={this.handleEnabledOnChange}\n                label={<FormattedMessage {...messages.enabledToggle} />}\n              />\n            </SectionField>\n            <SectionField>\n              <SubSectionTitle>\n                <FormattedMessage {...messages.fieldVotingThreshold} />\n              </SubSectionTitle>\n              <StyledWarning>\n                <FormattedMessage {...messages.warningTresholdSettings} />\n              </StyledWarning>\n              <Input\n                className=\"e2e-voting-threshold\"\n                name=\"voting_threshold\"\n                type=\"number\"\n                min=\"2\"\n                required={true}\n                value={formValues.voting_threshold.toString()}\n                onChange={this.handleVotingTresholdOnChange}\n              />\n\n              {isNaN(formValues.voting_threshold) && (\n                <Error text={intl.formatMessage(errorMessages.blank)} />\n              )}\n\n              {!isNaN(formValues.voting_threshold) &&\n                formValues.voting_threshold < 2 && (\n                  <Error\n                    text={intl.formatMessage(\n                      messages.initiativeSettingsVotingThresholdError\n                    )}\n                  />\n                )}\n            </SectionField>\n\n            <SectionField>\n              <SubSectionTitle>\n                <FormattedMessage {...messages.fieldVotingDaysLimit} />\n              </SubSectionTitle>\n              <StyledWarning>\n                <FormattedMessage {...messages.warningTresholdSettings} />\n              </StyledWarning>\n              <Input\n                className=\"e2e-days-limit\"\n                name=\"days_limit\"\n                type=\"number\"\n                min=\"1\"\n                required={true}\n                value={formValues.days_limit.toString()}\n                onChange={this.handleDaysLimitOnChange}\n              />\n              {isNaN(formValues.days_limit) && (\n                <Error text={intl.formatMessage(errorMessages.blank)} />\n              )}\n            </SectionField>\n\n            <StyledSectionField>\n              <SubSectionTitleWithDescription>\n                <FormattedMessage {...messages.proposalSuccessMessage} />\n              </SubSectionTitleWithDescription>\n              <StyledSectionDescription>\n                <FormattedMessage {...messages.proposalSuccessMessageInfo} />\n              </StyledSectionDescription>\n              <QuillMultilocWithLocaleSwitcher\n                id=\"threshold_reached_message\"\n                valueMultiloc={formValues.threshold_reached_message}\n                onChange={this.handleThresholdReachedMessageOnChange}\n                noImages={true}\n                noVideos={true}\n                noAlign={true}\n                limitedTextFormatting={true}\n                withCTAButton\n              />\n            </StyledSectionField>\n            <SectionField>\n              <SubSectionTitleWithDescription>\n                <FormattedMessage {...messages.proposalEligibilityCriteria} />\n              </SubSectionTitleWithDescription>\n              <StyledSectionDescription>\n                <FormattedMessage\n                  {...messages.proposalEligibilityCriteriaInfo}\n                />\n              </StyledSectionDescription>\n              <QuillMultilocWithLocaleSwitcher\n                id=\"eligibility_criteria\"\n                valueMultiloc={formValues.eligibility_criteria}\n                onChange={this.handleEligibilityCriteriaOnChange}\n                noImages={true}\n                noVideos={true}\n                noAlign={true}\n                withCTAButton\n              />\n            </SectionField>\n          </Section>\n\n          <ButtonContainer>\n            <Button\n              buttonStyle=\"admin-dark\"\n              onClick={this.handleSubmit}\n              disabled={!this.validate()}\n              processing={processing}\n            >\n              {success ? (\n                <FormattedMessage {...messages.initiativeSettingsFormSaved} />\n              ) : (\n                <FormattedMessage {...messages.initiativeSettingsFormSave} />\n              )}\n            </Button>\n\n            {error && (\n              <ErrorMessage>\n                <FormattedMessage {...messages.initiativeSettingsFormError} />\n              </ErrorMessage>\n            )}\n\n            {success && (\n              <SuccessMessage>\n                <FormattedMessage {...messages.initiativeSettingsFormSuccess} />\n              </SuccessMessage>\n            )}\n          </ButtonContainer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps>({\n  locale: <GetLocale />,\n  tenant: <GetAppConfiguration />,\n});\n\nconst InitiativesSettingsPageWithHoC = injectIntl<Props>(\n  InitiativesSettingsPage\n);\n\nconst WrappedInitiativesSettingsPage = () => (\n  <Data>\n    {(dataProps) => <InitiativesSettingsPageWithHoC {...dataProps} />}\n  </Data>\n);\n\nexport default WrappedInitiativesSettingsPage;\n"],"sourceRoot":""}