{"version":3,"sources":["webpack:///./app/modules/commercial/admin_project_templates/citizen/containers/ProjectTemplatePreviewCitizen.tsx"],"names":["Container","styled","div","props","theme","menuHeight","footerHeight","colors","background","media","smallerThanMaxTablet","mobileMenuHeight","mobileTopBarHeight","smallerThanMinTablet","ContainerInner","InfoboxContainer","borderRadius","clBlueDarkBg","InfoboxIcon","Icon","InfoboxText","clBlueDarker","fontSizes","base","darken","ProjectTemplatePreviewCitizen","memo","params","className","authUser","projectTemplateId","get","isNilOrError","isAdmin","data","link","href","target","rel","FormattedMessage","messages","citizenlabExpert","name","infoboxLine1","infoboxLine2","values","clHistory","push","withRouter"],"mappings":"6RAAA,E,ybAAA,YACA,YACA,YACA,eAGA,eACA,YAGA,YACA,YAGA,eAGA,YACA,eAGA,eACA,YACA,Y,+HAEA,IAAMA,EAAYC,UAAOC,IAAV,2FAAGD,CAAH,yHAGD,SAACE,GAAD,OAAWA,EAAMC,MAAMC,WAAaF,EAAMC,MAAME,eAK9CC,SAAOC,WAEnBC,QAAMC,qBAVK,8EAWgB,SAACP,GAAD,OAAWA,EAAMC,MAAMO,oBAAwB,SAC1ER,GAD0E,OAEvEA,EAAMC,MAAMQ,sBAGfH,QAAMI,qBAhBK,qDAqBTC,EAAiBb,UAAOC,IAAV,gGAAGD,CAAH,0HAIN,SAACE,GAAD,OAAWA,EAAMC,MAAMC,WAAaF,EAAMC,MAAME,gBAOxDS,EAAmBd,UAAOC,IAAV,kGAAGD,CAAH,uGAKH,SAACE,GAAD,OAAgBA,EAAMC,MAAMY,eAC/BT,SAAOU,cAGjBC,GAAc,aAAOC,QAAV,6FAAG,CAAH,iGAUXC,EAAcnB,UAAOC,IAAV,6FAAGD,CAAH,qPACNM,SAAOc,aACHC,YAAUC,KAYZhB,SAAOc,cAKL,IAAAG,QAAO,IAAMjB,SAAOc,eAc7BI,GAAgC,IAAAC,OACpC,YAA2B,IAAxBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACHC,GAAW,eACXC,GAAwC,IAAAC,KAC5CJ,EACA,qBAGF,GAAIG,EAAmB,CACrB,IAAK,IAAAE,cAAaH,MAAa,IAAAI,SAAQ,CAAEC,KAAML,IAExC,CACL,IAAMM,EACJ,6BACEC,KAAK,+BACLC,OAAO,SACPC,IAAI,cAEJ,wBAAC,EAAAC,iBAAqBC,UAASC,mBAInC,OACE,wBAACzC,EAAD,CAAW4B,UAAWA,GAAa,IACjC,wBAACd,EAAD,KACE,wBAACC,EAAD,CAAkBa,UAAWA,GAC3B,wBAACV,EAAD,CAAawB,KAAK,QAClB,wBAACtB,EAAD,KACE,iCACE,sCACE,wBAAC,EAAAmB,iBAAqBC,UAASG,gBAGnC,iCACE,wBAAC,EAAAJ,kBAAD,gBACMC,UAASI,aADf,CAEEC,OAAQ,CAAEV,cAMlB,wBAAC,UAAD,CAAwBL,kBAAmBA,MAhCjDgB,UAAUC,KAAV,oCAA4CjB,IAuChD,OAAO,Q,GAII,IAAAkB,YAAWvB,G","file":"184.85f8c494486b1c808d49.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { get } from 'lodash-es';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport clHistory from 'utils/cl-router/history';\n\n// components\nimport ProjectTemplatePreview from '../../components/ProjectTemplatePreview';\nimport { Icon } from 'cl2-component-library';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isAdmin } from 'services/permissions/roles';\n\n// resources\nimport useAuthUser from 'hooks/useAuthUser';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../../admin/containers/messages';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, media, fontSizes } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  display: flex;\n  justify-content: center;\n  padding: 50px;\n  background: ${colors.background};\n\n  ${media.smallerThanMaxTablet`\n    min-height: calc(100vh - ${(props) => props.theme.mobileMenuHeight}px - ${(\n    props\n  ) => props.theme.mobileTopBarHeight}px);\n  `}\n\n  ${media.smallerThanMinTablet`\n    padding: 20px;\n  `}\n`;\n\nconst ContainerInner = styled.div`\n  width: 100%;\n  max-width: 1050px;\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst InfoboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 27px;\n  margin-bottom: 25px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  background: ${colors.clBlueDarkBg};\n`;\n\nconst InfoboxIcon = styled(Icon)`\n  flex: 0 0 31px;\n  width: 31px;\n  height: 31px;\n  fill: #80cfd8;\n  padding: 0px;\n  margin: 0px;\n  margin-right: 27px;\n`;\n\nconst InfoboxText = styled.div`\n  color: ${colors.clBlueDarker};\n  font-size: ${fontSizes.base}px;\n  line-height: 21px;\n  font-weight: 400;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    margin: 0;\n    padding: 0;\n  }\n\n  a {\n    color: ${colors.clBlueDarker};\n    font-weight: 400;\n    text-decoration: underline;\n\n    &:hover {\n      color: ${darken(0.15, colors.clBlueDarker)};\n      text-decoration: underline;\n    }\n  }\n\n  strong {\n    font-weight: 600;\n  }\n`;\n\nexport interface Props {\n  className?: string;\n}\n\nconst ProjectTemplatePreviewCitizen = memo<Props & WithRouterProps>(\n  ({ params, className }) => {\n    const authUser = useAuthUser();\n    const projectTemplateId: string | undefined = get(\n      params,\n      'projectTemplateId'\n    );\n\n    if (projectTemplateId) {\n      if (!isNilOrError(authUser) && isAdmin({ data: authUser })) {\n        clHistory.push(`/admin/projects/templates/${projectTemplateId}`);\n      } else {\n        const link = (\n          <a\n            href=\"mailto:support@citizenlab.co\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <FormattedMessage {...messages.citizenlabExpert} />\n          </a>\n        );\n\n        return (\n          <Container className={className || ''}>\n            <ContainerInner>\n              <InfoboxContainer className={className}>\n                <InfoboxIcon name=\"key\" />\n                <InfoboxText>\n                  <p>\n                    <strong>\n                      <FormattedMessage {...messages.infoboxLine1} />\n                    </strong>\n                  </p>\n                  <p>\n                    <FormattedMessage\n                      {...messages.infoboxLine2}\n                      values={{ link }}\n                    />\n                  </p>\n                </InfoboxText>\n              </InfoboxContainer>\n\n              <ProjectTemplatePreview projectTemplateId={projectTemplateId} />\n            </ContainerInner>\n          </Container>\n        );\n      }\n    }\n\n    return null;\n  }\n);\n\nexport default withRouter(ProjectTemplatePreviewCitizen);\n"],"sourceRoot":""}