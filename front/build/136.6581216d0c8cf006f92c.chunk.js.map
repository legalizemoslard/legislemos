{"version":3,"sources":["webpack:///./app/components/admin/PostManager/components/LazyPostPreview/messages.ts","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Idea/IdeaEdit.tsx","webpack:///./app/resources/GetResourceFileObjects.tsx","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Idea/tracks.ts"],"names":["defineMessages","edit","id","defaultMessage","delete","deleteInputConfirmation","deleteInputInTimelineConfirmation","deleteInitiativeConfirmation","voteCounts","currentStatus","assignee","picks","pbItemCountTooltip","cancelEdit","noOne","save","submitError","postedIn","xDaysLeft","proposedBudgetTitle","bodyTitle","ButtonWrapper","styled","div","SaveButton","Button","IdeaEdit","props","eventEmitter","emit","ideaFormOutput","ideaId","goBack","authUser","appConfiguration","state","locale","titleMultiloc","descriptionMultiloc","imageId","imageFile","authorId","savedAddress","address","projectId","title","description","selectedTopics","ideaFormAddress","budget","proposedBudget","ideaFiles","ideaFilesToRemove","newAuthorId","oldImageId","oldImage","length","oldImageBase64","base64","newImage","newImageBase64","imageToAddPromise","addIdeaImage","Promise","resolve","filesToAddPromises","filter","file","remote","map","addIdeaFile","name","filesToRemovePromises","deleteIdeaFile","finalAuthorId","addressDiff","geocode","locationPoint","location_description","location_point_geojson","updateIdeaPromise","updateIdea","proposed_budget","title_multiloc","body_multiloc","topic_ids","author_id","setState","processing","deleteIdeaImage","all","apiErrors","json","errors","profanityApiError","base","find","apiError","error","titleProfanityError","blocked_words","some","blockedWord","attribute","descriptionProfanityError","trackEventByName","tracks","profaneMessage","location","userId","isNilOrError","host","attributes","loaded","subscriptions","this","locale$","localeStream","observable","currentTenantLocales$","currentAppConfigurationStream","pipe","currentTenant","data","settings","core","locales","idea$","ideaByIdStream","ideaWithRelationships$","combineLatest","switchMap","idea","ideaImages","relationships","idea_images","ideaImageId","ideaImage$","ideaImageStream","first","ideaImage","versions","large","url","convertUrlToUploadFileObservable","of","granted$","hasPermission","item","action","context","subscribe","topics","topic","project","author","clHistory","push","forEach","subscription","unsubscribe","remoteIdeaFiles","submitErrorMessage","FormattedMessage","messages","Container","Top","icon","buttonStyle","textColor","colors","adminTextColor","onClick","Content","className","onSubmit","handleIdeaFormOutput","hasTitleProfanityError","hasDescriptionProfanityError","onTitleChange","onDescriptionChange","text","handleOnSaveButtonClick","marginTop","PureComponent","Data","adopt","render","resourceId","resourceType","inputProps","dataProps","GetResourceFileObjects","files","undefined","resetOnChange","inputProps$","BehaviorSubject","distinctUntilChanged","prev","next","tap","isString","streamFn","projectFilesStream","phaseFilesStream","eventFilesStream","pageFilesStream","ideaFilesStream","initiativeFilesStream","children","React","Component"],"mappings":"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","file":"136.6581216d0c8cf006f92c.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  edit: {\n    id: 'app.components.admin.PostManager.PostPreview.edit',\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: 'app.components.admin.PostManager.PostPreview.delete',\n    defaultMessage: 'Delete',\n  },\n  deleteInputConfirmation: {\n    id: 'app.components.admin.PostManager.PostPreview.deleteInputConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? This action cannot be undone.',\n  },\n  deleteInputInTimelineConfirmation: {\n    id:\n      'app.components.admin.PostManager.PostPreview.deleteInputInTimelineConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? The input will be deleted from all project phases and cannot be recovered.',\n  },\n  deleteInitiativeConfirmation: {\n    id:\n      'app.components.admin.PostManager.PostPreview.deleteInitiativeConfirmation',\n    defaultMessage: 'Are you sure you want to delete this initiative?',\n  },\n  voteCounts: {\n    id: 'app.components.admin.PostManager.PostPreview.voteCounts',\n    defaultMessage: 'Vote counts:',\n  },\n  currentStatus: {\n    id: 'app.components.admin.PostManager.PostPreview.currentStatus',\n    defaultMessage: 'Current status',\n  },\n  assignee: {\n    id: 'app.components.admin.PostManager.PostPreview.assignee',\n    defaultMessage: 'Assignee',\n  },\n  picks: {\n    id: 'app.components.admin.PostManager.PostPreview.picks',\n    defaultMessage: 'Picks: {picksNumber}',\n  },\n  pbItemCountTooltip: {\n    id: 'app.components.admin.PostManager.PostPreview.pbItemCountTooltip',\n    defaultMessage:\n      \"The number of times this has been included in other participants' participatory budgets\",\n  },\n  cancelEdit: {\n    id: 'app.components.admin.PostManager.PostPreview.cancelEdit',\n    defaultMessage: 'Cancel edit',\n  },\n  noOne: {\n    id: 'app.components.admin.PostManager.PostPreview.noOne',\n    defaultMessage: 'Unassigned',\n  },\n  save: {\n    id: 'app.components.admin.PostManager.PostPreview.save',\n    defaultMessage: 'Save',\n  },\n  submitError: {\n    id: 'app.components.admin.PostManager.PostPreview.submitError',\n    defaultMessage: 'Error',\n  },\n  postedIn: {\n    id: 'app.containers.IdeasShow.postedIn',\n    defaultMessage: 'Posted in {projectLink}',\n  },\n  xDaysLeft: {\n    id: 'app.containers.IdeasShow.xDaysLeft',\n    defaultMessage:\n      '{x, plural, =0 {Less than a day} one {One day} other {# days}} left',\n  },\n  proposedBudgetTitle: {\n    id: 'app.containers.IdeasShow.proposedBudgetTitle',\n    defaultMessage: 'Proposed budget',\n  },\n  bodyTitle: {\n    id: 'app.containers.IdeasShow.bodyTitle',\n    defaultMessage: 'Description',\n  },\n});\n","// Copied IdeaEditPage and made the minimal modifications for this use.\n\nimport React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { Subscription, combineLatest, of } from 'rxjs';\nimport { switchMap, map, first } from 'rxjs/operators';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// router\nimport clHistory from 'utils/cl-router/history';\n\n// components\nimport Button from 'components/UI/Button';\nimport Error from 'components/UI/Error';\nimport IdeaForm, { IIdeaFormOutput } from 'components/IdeaForm';\nimport { Content, Top, Container } from '../PostPreview';\n\n// services\nimport { localeStream } from 'services/locale';\nimport { currentAppConfigurationStream } from 'services/appConfiguration';\nimport { ideaByIdStream, updateIdea } from 'services/ideas';\nimport {\n  ideaImageStream,\n  addIdeaImage,\n  deleteIdeaImage,\n} from 'services/ideaImages';\nimport { hasPermission } from 'services/permissions';\nimport { addIdeaFile, deleteIdeaFile } from 'services/ideaFiles';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../messages';\n\n// utils\nimport eventEmitter from 'utils/eventEmitter';\nimport { convertUrlToUploadFileObservable } from 'utils/fileTools';\nimport { geocode } from 'utils/locationTools';\n\n// typings\nimport { UploadFile, Multiloc, Locale, ILocationInfo } from 'typings';\n\n// style\nimport { colors } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\n// resource components\nimport GetResourceFileObjects, {\n  GetResourceFileObjectsChildProps,\n} from 'resources/GetResourceFileObjects';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\n\n// tracks\nimport tracks from './tracks';\nimport { trackEventByName } from 'utils/analytics';\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst SaveButton = styled(Button)`\n  margin-right: 10px;\n`;\n\nexport interface InputProps {\n  ideaId: string;\n  goBack: () => void;\n}\n\ninterface DataProps {\n  remoteIdeaFiles: GetResourceFileObjectsChildProps;\n  locale: GetLocaleChildProps;\n  authUser: GetAuthUserChildProps;\n  appConfiguration: GetAppConfigurationChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  projectId: string | null;\n  locale: Locale;\n  titleMultiloc: Multiloc | null;\n  descriptionMultiloc: Multiloc | null;\n  selectedTopics: string[];\n  budget: number | null;\n  proposedBudget: number | null;\n  address: string | null;\n  imageFile: UploadFile[];\n  imageId: string | null;\n  submitError: boolean;\n  titleProfanityError: boolean;\n  descriptionProfanityError: boolean;\n  loaded: boolean;\n  processing: boolean;\n  authorId: string | null;\n}\n\nclass IdeaEdit extends PureComponent<Props, State> {\n  subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props as any);\n    this.state = {\n      projectId: null,\n      authorId: null,\n      locale: 'en',\n      titleMultiloc: null,\n      descriptionMultiloc: null,\n      selectedTopics: [],\n      budget: null,\n      proposedBudget: null,\n      address: null,\n      imageFile: [],\n      imageId: null,\n      submitError: false,\n      titleProfanityError: false,\n      descriptionProfanityError: false,\n      loaded: false,\n      processing: false,\n    };\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    const { ideaId } = this.props;\n    const locale$ = localeStream().observable;\n    const currentTenantLocales$ = currentAppConfigurationStream().observable.pipe(\n      map(\n        (currentTenant) => currentTenant.data.attributes.settings.core.locales\n      )\n    );\n    const idea$ = ideaByIdStream(ideaId).observable;\n    const ideaWithRelationships$ = combineLatest(\n      locale$,\n      currentTenantLocales$,\n      idea$\n    ).pipe(\n      switchMap(([_locale, _currentTenantLocales, idea]) => {\n        const ideaId = idea.data.id;\n        const ideaImages = idea.data.relationships.idea_images.data;\n        const ideaImageId =\n          ideaImages && ideaImages.length > 0 ? ideaImages[0].id : null;\n        const ideaImage$ = ideaImageId\n          ? ideaImageStream(ideaId, ideaImageId).observable.pipe(\n              first(),\n              switchMap((ideaImage) => {\n                if (\n                  ideaImage &&\n                  ideaImage.data &&\n                  ideaImage.data.attributes.versions.large\n                ) {\n                  const url = ideaImage.data.attributes.versions.large;\n                  const id = ideaImage.data.id;\n                  return convertUrlToUploadFileObservable(url, id, null);\n                }\n\n                return of(null);\n              })\n            )\n          : of(null);\n\n        const granted$ = hasPermission({\n          item: idea.data,\n          action: 'edit',\n          context: idea.data,\n        });\n\n        return combineLatest(locale$, idea$, ideaImage$, granted$);\n      })\n    );\n\n    this.subscriptions = [\n      ideaWithRelationships$.subscribe(([locale, idea, ideaImage, granted]) => {\n        if (granted) {\n          this.setState({\n            locale,\n            selectedTopics:\n              idea.data.relationships.topics?.data.map((topic) => topic.id) ||\n              [],\n            projectId: idea.data.relationships.project.data.id,\n            loaded: true,\n            titleMultiloc: idea.data.attributes.title_multiloc,\n            descriptionMultiloc: idea.data.attributes.body_multiloc,\n            address: idea.data.attributes.location_description,\n            budget: idea.data.attributes.budget,\n            authorId: idea.data.relationships.author.data?.id || null,\n            proposedBudget: idea.data.attributes.proposed_budget,\n            imageFile: ideaImage ? [ideaImage] : [],\n            imageId: ideaImage && ideaImage.id ? ideaImage.id : null,\n          });\n        } else {\n          clHistory.push('/');\n        }\n      }),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  handleOnSaveButtonClick = () => {\n    eventEmitter.emit('IdeaFormSubmitEvent');\n  };\n\n  handleIdeaFormOutput = async (ideaFormOutput: IIdeaFormOutput) => {\n    const { ideaId, goBack, authUser, appConfiguration } = this.props;\n    const {\n      locale,\n      titleMultiloc,\n      descriptionMultiloc,\n      imageId,\n      imageFile,\n      authorId,\n      address: savedAddress,\n      projectId,\n    } = this.state;\n    const {\n      title,\n      description,\n      selectedTopics,\n      address: ideaFormAddress,\n      budget,\n      proposedBudget,\n      ideaFiles,\n      ideaFilesToRemove,\n      authorId: newAuthorId,\n    } = ideaFormOutput;\n    const oldImageId = imageId;\n    const oldImage = imageFile && imageFile.length > 0 ? imageFile[0] : null;\n    const oldImageBase64 = oldImage ? oldImage.base64 : null;\n    const newImage =\n      ideaFormOutput.imageFile && ideaFormOutput.imageFile.length > 0\n        ? ideaFormOutput.imageFile[0]\n        : null;\n    const newImageBase64 = newImage ? newImage.base64 : null;\n    const imageToAddPromise =\n      newImageBase64 && oldImageBase64 !== newImageBase64\n        ? addIdeaImage(ideaId, newImageBase64, 0)\n        : Promise.resolve(null);\n    const filesToAddPromises = ideaFiles\n      .filter((file) => !file.remote)\n      .map((file) => addIdeaFile(ideaId, file.base64, file.name));\n    const filesToRemovePromises = ideaFilesToRemove\n      .filter((file) => !!(file.remote && file.id))\n      .map((file) => deleteIdeaFile(ideaId, file.id as string));\n\n    const finalAuthorId = newAuthorId || authorId;\n    const addressDiff: ILocationInfo = {} as any;\n\n    if (ideaFormAddress !== savedAddress) {\n      const locationPoint = await geocode(ideaFormAddress);\n      addressDiff.location_description = ideaFormAddress;\n\n      if (locationPoint) {\n        addressDiff.location_point_geojson = locationPoint;\n      }\n    }\n\n    const updateIdeaPromise = updateIdea(ideaId, {\n      budget,\n      proposed_budget: proposedBudget,\n      title_multiloc: {\n        ...titleMultiloc,\n        [locale]: title,\n      },\n      body_multiloc: {\n        ...descriptionMultiloc,\n        [locale]: description,\n      },\n      topic_ids: selectedTopics,\n      author_id: finalAuthorId,\n      ...addressDiff,\n    });\n\n    this.setState({ processing: true, submitError: false });\n\n    try {\n      if (oldImageId && oldImageBase64 !== newImageBase64) {\n        await deleteIdeaImage(ideaId, oldImageId);\n      }\n\n      await Promise.all([\n        updateIdeaPromise,\n        imageToAddPromise,\n        ...filesToAddPromises,\n        ...filesToRemovePromises,\n      ] as Promise<any>[]);\n\n      goBack();\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      if (process.env.NODE_ENV === 'development') console.log(error);\n      const apiErrors = error.json.errors;\n      const profanityApiError = apiErrors.base.find(\n        (apiError) => apiError.error === 'includes_banned_words'\n      );\n\n      if (profanityApiError) {\n        const titleProfanityError = profanityApiError.blocked_words.some(\n          (blockedWord) => blockedWord.attribute === 'title_multiloc'\n        );\n        const descriptionProfanityError = profanityApiError.blocked_words.some(\n          (blockedWord) => blockedWord.attribute === 'body_multiloc'\n        );\n\n        if (titleProfanityError) {\n          trackEventByName(tracks.titleProfanityError.name, {\n            ideaId,\n            projectId,\n            locale,\n            profaneMessage: title,\n            location: 'IdeaEdit (Input manager in admin)',\n            userId: !isNilOrError(authUser) ? authUser.id : null,\n            host: !isNilOrError(appConfiguration)\n              ? appConfiguration.attributes.host\n              : null,\n          });\n          this.setState({\n            titleProfanityError,\n          });\n        }\n\n        if (descriptionProfanityError) {\n          trackEventByName(tracks.descriptionProfanityError.name, {\n            ideaId,\n            projectId,\n            locale,\n            profaneMessage: description,\n            location: 'IdeaEdit (Input manager in admin)',\n            userId: !isNilOrError(authUser) ? authUser.id : null,\n            host: !isNilOrError(appConfiguration)\n              ? appConfiguration.attributes.host\n              : null,\n          });\n          this.setState({\n            descriptionProfanityError,\n          });\n        }\n      }\n      this.setState({ processing: false, submitError: true });\n    }\n  };\n\n  onTitleChange = (title: string) => {\n    const { locale } = this.props;\n\n    if (!isNilOrError(locale)) {\n      const titleMultiloc = { [locale]: title };\n\n      this.setState({ titleMultiloc, titleProfanityError: false });\n    }\n  };\n\n  onDescriptionChange = (description: string) => {\n    const { locale } = this.props;\n\n    if (!isNilOrError(locale)) {\n      const descriptionMultiloc = { [locale]: description };\n\n      this.setState({ descriptionMultiloc, descriptionProfanityError: false });\n    }\n  };\n  render() {\n    if (this.state && this.state.loaded) {\n      const { remoteIdeaFiles, goBack } = this.props;\n      const {\n        locale,\n        projectId,\n        titleMultiloc,\n        descriptionMultiloc,\n        selectedTopics,\n        address,\n        imageFile,\n        submitError,\n        processing,\n        budget,\n        proposedBudget,\n        titleProfanityError,\n        descriptionProfanityError,\n        authorId,\n      } = this.state;\n      const title = locale && titleMultiloc ? titleMultiloc[locale] || '' : '';\n      const description =\n        locale && descriptionMultiloc\n          ? descriptionMultiloc[locale] || ''\n          : null;\n      const submitErrorMessage = submitError ? (\n        <FormattedMessage {...messages.submitError} />\n      ) : null;\n\n      if (projectId) {\n        return (\n          <Container>\n            <Top>\n              <Button\n                icon=\"arrow-back\"\n                buttonStyle=\"text\"\n                textColor={colors.adminTextColor}\n                onClick={goBack}\n              >\n                <FormattedMessage {...messages.cancelEdit} />\n              </Button>\n            </Top>\n\n            <Content className=\"idea-form\">\n              <IdeaForm\n                authorId={authorId}\n                projectId={projectId}\n                title={title}\n                description={description}\n                selectedTopics={selectedTopics}\n                budget={budget}\n                proposedBudget={proposedBudget}\n                address={address || ''}\n                imageFile={imageFile}\n                onSubmit={this.handleIdeaFormOutput}\n                remoteIdeaFiles={\n                  !isNilOrError(remoteIdeaFiles) ? remoteIdeaFiles : null\n                }\n                hasTitleProfanityError={titleProfanityError}\n                hasDescriptionProfanityError={descriptionProfanityError}\n                onTitleChange={this.onTitleChange}\n                onDescriptionChange={this.onDescriptionChange}\n              />\n\n              <ButtonWrapper>\n                <SaveButton\n                  processing={processing}\n                  text={<FormattedMessage {...messages.save} />}\n                  onClick={this.handleOnSaveButtonClick}\n                />\n                <Error text={submitErrorMessage} marginTop=\"0px\" />\n              </ButtonWrapper>\n            </Content>\n          </Container>\n        );\n      }\n\n      return null;\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  appConfiguration: <GetAppConfiguration />,\n  locale: <GetLocale />,\n  remoteIdeaFiles: ({ ideaId, render }) => (\n    <GetResourceFileObjects resourceId={ideaId} resourceType=\"idea\">\n      {render}\n    </GetResourceFileObjects>\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeaEdit {...dataProps} {...inputProps} />}\n  </Data>\n);\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport {\n  Subscription,\n  BehaviorSubject,\n  combineLatest,\n  of,\n  Observable,\n} from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { projectFilesStream, IProjectFiles } from 'services/projectFiles';\nimport { phaseFilesStream, IPhaseFiles } from 'services/phaseFiles';\nimport { pageFilesStream, IPageFiles } from 'services/pageFiles';\nimport { eventFilesStream, IEventFiles } from 'services/eventFiles';\nimport { ideaFilesStream, IIdeaFiles } from 'services/ideaFiles';\nimport {\n  initiativeFilesStream,\n  IInitiativeFiles,\n} from 'services/initiativeFiles';\nimport { convertUrlToUploadFileObservable } from 'utils/fileTools';\nimport { UploadFile } from 'typings';\n\n// Converted file objects (to JS objects of type File).\n// Useful when you combining local files and remote files,\n// so you don't have to convert (file uploader)\n\ninterface InputProps {\n  resetOnChange?: boolean;\n  resourceType: 'project' | 'phase' | 'event' | 'page' | 'idea' | 'initiative';\n  resourceId: string | null;\n}\n\ntype Children = (\n  renderProps: GetResourceFileObjectsChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: Children;\n}\n\ninterface State {\n  files: UploadFile[] | undefined | null | Error;\n}\n\nexport type GetResourceFileObjectsChildProps = State['files'];\n\nexport default class GetResourceFileObjects extends React.Component<\n  Props,\n  State\n> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  public static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      files: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ resourceId, resourceType });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ files: undefined })),\n          filter(({ resourceId }) => isString(resourceId)),\n          switchMap(\n            ({\n              resourceId,\n              resourceType,\n            }: {\n              resourceId: string;\n              resourceType: InputProps['resourceType'];\n            }) => {\n              let streamFn;\n              if (resourceType === 'project') {\n                streamFn = projectFilesStream;\n              }\n              if (resourceType === 'phase') {\n                streamFn = phaseFilesStream;\n              }\n              if (resourceType === 'event') {\n                streamFn = eventFilesStream;\n              }\n              if (resourceType === 'page') {\n                streamFn = pageFilesStream;\n              }\n              if (resourceType === 'idea') {\n                streamFn = ideaFilesStream;\n              }\n              if (resourceType === 'initiative') {\n                streamFn = initiativeFilesStream;\n              }\n\n              return streamFn(resourceId).observable as Observable<\n                | IProjectFiles\n                | IPhaseFiles\n                | IEventFiles\n                | IPageFiles\n                | IIdeaFiles\n                | IInitiativeFiles\n                | null\n              >;\n            }\n          ),\n          switchMap((files) => {\n            if (files && files.data && files.data.length > 0) {\n              return combineLatest(\n                files.data.map((file) =>\n                  convertUrlToUploadFileObservable(\n                    file.attributes.file.url,\n                    file.id,\n                    file.attributes.name\n                  )\n                )\n              );\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((files) => {\n          this.setState({\n            files: files\n              ? (files.filter((file) => !isNilOrError(file)) as UploadFile[])\n              : null,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n    this.inputProps$.next({ resourceId, resourceType, resetOnChange });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { files } = this.state;\n    return (children as Children)(files);\n  }\n}\n","export default {\n  titleProfanityError: {\n    name: 'Profane idea title blocked',\n  },\n  descriptionProfanityError: {\n    name: 'Profane idea description blocked',\n  },\n};\n"],"sourceRoot":""}