{"version":3,"sources":["webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/TopicCircleLabel.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/InfoPane/IdeaDetails.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/IdeaCircleLabel.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/index.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/TopicCircle.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/IdeaCircle.tsx","webpack:///./app/modules/commercial/clusterings/services/clusterings.ts","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/InfoPane/index.tsx","webpack:///./app/services/globalState.ts","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/InfoPane/ClusterDetails.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/ProjectCircle.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/index.tsx","webpack:///./app/resources/GetTopic.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/CustomCircleLabel.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/LegendPanel.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/CustomCircle.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/InfoPane/DomicileChart.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/Circles/ProjectCircleLabel.tsx","webpack:///./app/resources/GetIdeas.tsx","webpack:///./app/modules/commercial/clusterings/resources/GetClustering.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/InfoPane/GenderChart.tsx","webpack:///./app/components/UI/GoBackButton/messages.ts","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/InfoPane/ComparisonLegend.tsx","webpack:///./app/modules/commercial/clusterings/admin/containers/tracks.ts","webpack:///./app/modules/commercial/clusterings/admin/containers/Show/InfoPane/AgeChart.tsx","webpack:///./app/components/UI/GoBackButton/index.tsx"],"names":["borderColor","TopicCircleLabel","this","props","node","hovered","topic","intl","isNilOrError","value","attributes","title_multiloc","localizedTitle","width","length","xPos","yPos","round","r","x","y","height","style","display","rx","ry","stroke","strokeWidth","fill","fontSize","fontWeight","textAnchor","alignmentBaseline","formatMessage","messages","PureComponent","TopicLabelWithIntl","injectIntl","inputProps","id","topicId","Container","styled","div","fontSizes","base","IdeaDetails","idea","className","body_multiloc","supportHtml","ideaId","IdeaCircleLabel","title","IdeaLabelWithIntl","LegendCorner","StyledIcon","Icon","Circles","containerRef","ideasById","keyBy","ideas","list","rootNode","hierarchy","structure","sum","d","upvotes_count","downvotes_count","svgWidth","offsetWidth","svgHeight","offsetHeight","svgSize","pack","size","padding","packFn","setState","nodes","descendants","selectedNodes","activeComparison","ref","event","shiftKey","onShiftClickNode","data","state","ctrlKeyPressed","onCtrlClickNode","onClickNode","preventDefault","hoveredNode","key","_event","_node","index","findIndex","find","showLegend","window","addEventListener","calculateNodePositions","handleOnKeyDown","handleOnKeyUp","handleContextMenu","removeEventListener","CirclesElements","HoverLabelElements","CustomLabelElements","map","type","push","selectionIndex","onClick","handleOnClickNode","onMouseEnter","handleOnMouseEnter","onMouseLeave","handleOnMouseLeave","projectId","setContainerRef","preserveAspectRatio","overflow","onClickOutside","onHideLegend","onShowLegend","name","pageSize","sort","ideasProps","StyledCircle","circle","isNil","theme","comparisonColors","TopicCircle","transform","handleOnClick","mix","upvoteRatio","IdeaCircle","up","down","clusteringId","streams","get","apiEndpoint","streamParams","object","add","clustering","update","delete","API_PATH","ideasUnder","flatten","children","c","TabbedNav","nav","borderRadius","colors","separation","Tab","li","label","adminTextColor","clBlueDark","Content","adminBorder","RadioButtons","StyledRadio","Radio","Details","ChartTitle","h3","StyledGenderChart","GenderChart","StyledAgeChart","AgeChart","StyledDomicileChart","DomicileChart","uniq","comparisonSet","selectedNode","normalization","trackEventByName","tracks","switchNormalization","extra","tabName","changeTab","tab","selectedTab","handleTabOnClick","FormattedMessage","votes","details","ideaIds","selectedIdeas","onChange","handleOnChangeNormalization","currentValue","absolute","relative","IconTooltip","content","relativeImportanceInputsTooltip","gender","ideaIdsComparisons","comparisonIdeas","age","domicile","globalState","stream","observer","observable","Observable","pipe","startWith","scan","oldState","stateInput","propertyName","updatedStateProperties","filter","isObject","isEmpty","publishReplay","refCount","subscribe","initialState","filteredState","distinctUntilChanged","newFilteredState","set","newState","setTimeout","next","has","first","toPromise","List","ul","ListItem","keywords","kw","clusterContainsSelectedInputs","ProjectCircle","project","TwoColumns","menuHeight","StyledCircles","StyledInfoPane","InfoPane","media","smallerThan1280px","StyledGoBackButton","GoBackButton","ClusterViewer","upvotes","clGreen","downvotes","clRed","chartLabelColor","chartLabelSize","activeComparisonCount","newSelectedNodes","clone","splice","newActiveComparison","trackClickIdea","trackClickCluster","trackShiftClickIdea","trackShiftClickCluster","trackCtrlClickIdea","trackCtrlClickCluster","item","clHistory","init","enabled","goBack","PageTitle","ThemeProvider","handleOnShiftClickNode","handleOnCtrlClickNode","onAddComparison","handleOnAddComparison","onChangeActiveComparison","handleOnChangeActiveComparison","onDeleteComparison","handleOnDeleteComparison","ClusterViewerWithHocs","injectTracks","clickCluster","ctrlClickCluster","shiftClickCluster","clickIdea","ctrlClickIdea","shiftClickIdea","withRouter","params","GetTopic","undefined","inputProps$","BehaviorSubject","subscriptions","prev","isString","switchMap","topicByIdStream","forEach","subscription","unsubscribe","React","Component","StyledText","text","nodeData","take","k","join","show","nodeLabel","clickOutside","showContent","color","StyledEmptyCircle","StyledLine","line","LegendPanel","legend","controls","noVotes","x1","y1","x2","y2","numVotes","clickLegend","shiftLegend","ctrlLegend","series","areas","areaBucketsRecord","area","record","localize","serie","serieIndex","total","blankRecord","resubscribe","prevProps","isEqual","combineLatest","votesByDomicileStream","queryParameters","convertToGraphFormat","ResponsiveContainer","aspect","BarChart","stackOffset","margin","right","top","XAxis","dataKey","YAxis","Tooltip","ReferenceLine","_","Bar","stackId","maxBarSize","DomicileChartWithHOCs","withTheme","ProjectCircleLabel","ProjectLabelWithIntl","GetIdeas","projects","projectIds","pageNumber","phase","phaseId","author","authorId","topics","idea_status","ideaStatusId","publication_status","publicationStatus","project_publication_status","projectPublicationStatus","bounding_box","boundingBox","assignee","feedback_needed","feedbackNeeded","search","queryParamsShaped","propsToQueryParamsShape","Object","keys","isArray","inputPropsQueryParameters","omitBy","loadingMore","queryParameters$","ideaStatus","ideaFilters","paramsToOmit","defaultQueryParameters","getQueryParametersFromProps","omit","getQueryParameters","hasMore","querying","sortAttribute","getSortAttribute","sortDirection","getSortDirection","currentPage","lastPage","startAccumulatorValue","oldPageNumber","newPageNumber","mini","ideasMiniStream","ideasStream","getPageNumberFromUrl","links","self","last","mergeScan","acc","newQueryParameters","oldQueryParamsWithoutPageNumber","cloneDeep","newQueryParamsWithoutPageNumber","isLoadingMore","selfLink","lastLink","unionBy","_prevState","prevPropsWithoutChildren","nextPropsWithoutChildren","onLoadMore","loadMore","onChangePage","handleChangePage","onChangeProjects","handleProjectsOnChange","onChangePhase","handlePhaseOnChange","onChangeSearchTerm","handleSearchOnChange","onChangeSorting","handleSortOnChange","onChangeTopics","handleTopicsOnChange","onChangeAreas","handleAreasOnchange","onChangeStatus","handleStatusOnChange","onChangePublicationStatus","handlePublicationStatusOnChange","onChangeProjectPublicationStatus","handleProjectPublicationStatusOnChange","onChangeAssignee","handleAssigneeOnChange","onChangeFeedbackFilter","handleFeedbackFilterOnChange","onIdeaFiltering","handleIdeaFiltering","onResetParams","handleResetParamsToProps","GetClustering","clusteringByIdStream","votesByGenderStream","defineMessages","defaultMessage","Row","ColorIndicator","TitleContainer","Title","LegendTitle","selectionTitle","currentYear","year","ageBucketRecords","minAge","maxAge","each","mode","forOwn","voteCount","birthYear","parseInt","votesByBirthyearStream","buttonStyle","icon"],"mappings":"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","file":"75.f2923ad08e5fd59cccaf.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport GetTopic, { GetTopicChildProps } from 'resources/GetTopic';\nimport T from 'components/T';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../../messages';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { round } from 'lodash-es';\nimport { D3Node } from './';\n\nconst borderColor = 'purple';\n\ninterface InputProps {\n  node: D3Node;\n  topicId: string;\n  selectionIndex: number | null;\n  hovered: boolean;\n  onClick: (node: D3Node, event: MouseEvent) => void;\n  onMouseEnter: (node: D3Node, event: MouseEvent) => void;\n  onMouseLeave: (node: D3Node, event: MouseEvent) => void;\n}\n\ninterface DataProps {\n  topic: GetTopicChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass TopicCircleLabel extends PureComponent<Props & InjectedIntlProps, State> {\n  render() {\n    const { node, hovered, topic, intl } = this.props;\n\n    if (isNilOrError(topic)) return null;\n\n    return (\n      <T value={topic.attributes.title_multiloc}>\n        {(localizedTitle) => {\n          const width = localizedTitle.length * 7 + 50;\n          const height = 60;\n          const xPos = -width / 2;\n          const yPos = -round(node.r + height + 2);\n          const borderRadius = 5;\n\n          return (\n            <svg\n              x={xPos + node.x}\n              y={yPos + node.y}\n              width={width}\n              height={height}\n              style={{ display: `${hovered ? 'block' : 'none'}` }}\n            >\n              <rect\n                x=\"0\"\n                y=\"0\"\n                width={width}\n                height={height}\n                rx={borderRadius}\n                ry={borderRadius}\n                stroke={borderColor}\n                strokeWidth=\"2\"\n                fill=\"#fff\"\n              />\n              <text fill={borderColor} fontSize=\"16\">\n                <tspan\n                  x={width / 2}\n                  y={height / 2 - 10}\n                  fontWeight=\"bold\"\n                  textAnchor=\"middle\"\n                  alignmentBaseline=\"central\"\n                >\n                  {intl.formatMessage(messages.topic)}\n                </tspan>\n                <tspan\n                  x={width / 2}\n                  y={height / 2 + 10}\n                  fontWeight=\"normal\"\n                  textAnchor=\"middle\"\n                  alignmentBaseline=\"central\"\n                >\n                  {localizedTitle}\n                </tspan>\n              </text>\n            </svg>\n          );\n        }}\n      </T>\n    );\n  }\n}\n\nconst TopicLabelWithIntl = injectIntl(TopicCircleLabel);\n\nexport default (inputProps: InputProps) => (\n  <GetTopic id={inputProps.topicId}>\n    {(topic) => <TopicLabelWithIntl {...inputProps} topic={topic} />}\n  </GetTopic>\n);\n","import React, { PureComponent } from 'react';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport { isNilOrError } from 'utils/helperUtils';\nimport T from 'components/T';\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\ntype Props = {\n  idea: GetIdeaChildProps;\n};\n\nconst Container = styled.div`\n  p {\n    font-size: ${fontSizes.base}px;\n  }\n`;\n\nclass IdeaDetails extends PureComponent<Props> {\n  render() {\n    const { idea } = this.props;\n\n    if (isNilOrError(idea)) return null;\n\n    return (\n      <Container className={this.props['className']}>\n        <T value={idea.attributes.body_multiloc} supportHtml />\n      </Container>\n    );\n  }\n}\n\nexport default (inputProps) => (\n  <GetIdea ideaId={inputProps.ideaId}>\n    {(idea) => <IdeaDetails {...inputProps} idea={idea} />}\n  </GetIdea>\n);\n","import React, { PureComponent } from 'react';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport T from 'components/T';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../../messages';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { round } from 'lodash-es';\nimport { D3Node } from './';\n\nconst borderColor = '#00a2b1';\n\ninterface InputProps {\n  node: D3Node;\n  ideaId: string;\n  hovered: boolean;\n  selectionIndex: number | null;\n  onClick: (node: D3Node, event: MouseEvent) => void;\n  onMouseEnter: (node: D3Node, event: MouseEvent) => void;\n  onMouseLeave: (node: D3Node, event: MouseEvent) => void;\n}\n\ninterface DataProps {\n  idea: GetIdeaChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass IdeaCircleLabel extends PureComponent<Props & InjectedIntlProps, State> {\n  render() {\n    const { node, hovered, idea, intl } = this.props;\n\n    if (isNilOrError(idea)) return null;\n\n    return (\n      <>\n        <T value={idea.attributes.title_multiloc}>\n          {(localizedTitle) => {\n            const width = localizedTitle.length * 7 + 50;\n            const height = 60;\n            const xPos = -width / 2;\n            const yPos = -round(node.r + height + 2);\n            const borderRadius = 5;\n\n            return (\n              <svg\n                x={xPos + node.x}\n                y={yPos + node.y}\n                width={width}\n                height={height}\n                style={{ display: `${hovered ? 'block' : 'none'}` }}\n              >\n                <rect\n                  x=\"0\"\n                  y=\"0\"\n                  width={width}\n                  height={height}\n                  rx={borderRadius}\n                  ry={borderRadius}\n                  stroke={borderColor}\n                  strokeWidth=\"2\"\n                  fill=\"#fff\"\n                />\n                <text fill={borderColor} fontSize=\"16\">\n                  <tspan\n                    x={width / 2}\n                    y={height / 2 - 10}\n                    fontWeight=\"bold\"\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"central\"\n                  >\n                    {intl.formatMessage(messages.title)}\n                  </tspan>\n                  <tspan\n                    x={width / 2}\n                    y={height / 2 + 10}\n                    fontWeight=\"normal\"\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"central\"\n                  >\n                    {localizedTitle}\n                  </tspan>\n                </text>\n              </svg>\n            );\n          }}\n        </T>\n      </>\n    );\n  }\n}\n\nconst IdeaLabelWithIntl = injectIntl(IdeaCircleLabel);\n\nexport default (inputProps: InputProps) => (\n  <GetIdea ideaId={inputProps.ideaId}>\n    {(idea) => <IdeaLabelWithIntl {...inputProps} idea={idea} />}\n  </GetIdea>\n);\n","import React, { PureComponent } from 'react';\nimport { hierarchy, pack } from 'd3-hierarchy';\nimport { keyBy, find, findIndex } from 'lodash-es';\nimport styled from 'styled-components';\n\nimport { Icon } from 'cl2-component-library';\nimport IdeaCircle from './IdeaCircle';\nimport IdeaCircleLabel from './IdeaCircleLabel';\nimport CustomCircle from './CustomCircle';\nimport CustomCircleLabel from './CustomCircleLabel';\nimport ProjectCircle from './ProjectCircle';\nimport ProjectCircleLabel from './ProjectCircleLabel';\nimport TopicCircle from './TopicCircle';\nimport TopicCircleLabel from './TopicCircleLabel';\nimport LegendPanel from './LegendPanel';\n\nimport GetIdeas, { GetIdeasChildProps } from 'resources/GetIdeas';\nimport { Node, ParentNode, CustomNode } from '../../../../services/clusterings';\n\nexport type D3Node<N = Node> = {\n  data: N;\n  [key: string]: any;\n};\n\ninterface InputProps {\n  structure: ParentNode;\n  selectedNodes: Node[][];\n  activeComparison: number;\n  onClickNode: (Node) => void;\n  onShiftClickNode: (Node) => void;\n  onCtrlClickNode: (Node) => void;\n}\n\ninterface DataProps {\n  ideas: GetIdeasChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ntype State = {\n  svgSize: number | null;\n  nodes: D3Node[];\n  hoveredNode: D3Node | null;\n  ctrlKeyPressed: boolean;\n  showLegend: boolean;\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`;\n\nconst LegendCorner = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n`;\nconst StyledIcon = styled(Icon)`\n  width: 30px;\n  height: 30px;\n`;\n\nclass Circles extends PureComponent<Props, State> {\n  containerRef: HTMLDivElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      svgSize: null,\n      nodes: [],\n      hoveredNode: null,\n      ctrlKeyPressed: false,\n      showLegend: false,\n    };\n    this.containerRef = null;\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.calculateNodePositions);\n    window.addEventListener('keydown', this.handleOnKeyDown);\n    window.addEventListener('keyup', this.handleOnKeyUp);\n    window.addEventListener('contextmenu', this.handleContextMenu);\n    this.calculateNodePositions();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.calculateNodePositions);\n    window.removeEventListener('keydown', this.handleOnKeyDown);\n    window.removeEventListener('keyup', this.handleOnKeyUp);\n    window.removeEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  calculateNodePositions = () => {\n    if (this.containerRef) {\n      const ideasById = keyBy(this.props.ideas.list, 'id');\n      const rootNode = hierarchy(this.props.structure).sum((d) =>\n        ideasById[d.id]\n          ? ideasById[d.id].attributes.upvotes_count +\n            ideasById[d.id].attributes.downvotes_count +\n            1\n          : 1\n      );\n      const svgWidth = this.containerRef.offsetWidth;\n      const svgHeight = this.containerRef.offsetHeight;\n      const svgSize = (svgWidth >= svgHeight ? svgHeight : svgWidth) - 30;\n      const packFn = pack().size([svgSize, svgSize]).padding(10);\n\n      packFn(rootNode);\n\n      this.setState({\n        svgSize,\n        nodes: rootNode.descendants(),\n      });\n    }\n  };\n\n  comparisonSet = () => {\n    return this.props.selectedNodes[this.props.activeComparison];\n  };\n\n  setContainerRef = (ref: HTMLDivElement) => {\n    this.containerRef = ref;\n  };\n\n  handleOnClickNode = (node: D3Node, event: MouseEvent) => {\n    if (event.shiftKey) {\n      this.props.onShiftClickNode(node.data);\n    } else if (this.state.ctrlKeyPressed) {\n      this.props.onCtrlClickNode(node.data);\n    } else {\n      this.props.onClickNode(node.data);\n    }\n  };\n\n  handleContextMenu = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({ ctrlKeyPressed: true });\n\n    if (this.state.hoveredNode) {\n      this.props.onCtrlClickNode(this.state.hoveredNode.data);\n    }\n  };\n\n  handleOnKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Control') {\n      this.setState({ ctrlKeyPressed: true });\n    }\n  };\n\n  handleOnKeyUp = (event: KeyboardEvent) => {\n    if (event.key === 'Control') {\n      this.setState({ ctrlKeyPressed: false });\n    }\n  };\n\n  handleOnMouseEnter = (hoveredNode: D3Node, _event: MouseEvent) => {\n    this.setState({ hoveredNode });\n  };\n\n  handleOnMouseLeave = (_node: D3Node, _event: MouseEvent) => {\n    this.setState({ hoveredNode: null });\n  };\n\n  selectionIndex = (node: D3Node) => {\n    const index = findIndex(\n      this.props.selectedNodes,\n      (nodes) => !!find(nodes, { id: node.data.id })\n    );\n    return index === -1 ? null : index;\n  };\n\n  onShowLegend = () => {\n    this.setState({ showLegend: true });\n  };\n  onHideLegend = () => {\n    this.setState({ showLegend: false });\n  };\n\n  render() {\n    const { nodes, svgSize, hoveredNode, showLegend } = this.state;\n\n    const CirclesElements: any = [];\n    const HoverLabelElements: any = [];\n    const CustomLabelElements: any = [];\n    nodes.map((node, index) => {\n      if (node.data.type === 'idea') {\n        CirclesElements.push(\n          <IdeaCircle\n            key={index}\n            node={node}\n            ideaId={node.data.id}\n            hovered={node === hoveredNode}\n            selectionIndex={this.selectionIndex(node)}\n            onClick={this.handleOnClickNode}\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseLeave={this.handleOnMouseLeave}\n          />\n        );\n        HoverLabelElements.push(\n          <IdeaCircleLabel\n            key={index}\n            node={node}\n            ideaId={node.data.id}\n            hovered={node === hoveredNode}\n            selectionIndex={this.selectionIndex(node)}\n            onClick={this.handleOnClickNode}\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseLeave={this.handleOnMouseLeave}\n          />\n        );\n      }\n      if (node.data.type === 'custom') {\n        CirclesElements.push(\n          <CustomCircle\n            key={index}\n            node={node as D3Node<CustomNode>}\n            onClick={this.handleOnClickNode}\n            selectionIndex={this.selectionIndex(node)}\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseLeave={this.handleOnMouseLeave}\n          />\n        );\n        CustomLabelElements.push(\n          <CustomCircleLabel\n            key={index}\n            node={node as D3Node<CustomNode>}\n            onClick={this.handleOnClickNode}\n            selectionIndex={this.selectionIndex(node)}\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseLeave={this.handleOnMouseLeave}\n          />\n        );\n      }\n      if (node.data.type === 'project') {\n        CirclesElements.push(\n          <ProjectCircle\n            key={index}\n            node={node}\n            projectId={node.data.id}\n            hovered={node === hoveredNode}\n            selectionIndex={this.selectionIndex(node)}\n            onClick={this.handleOnClickNode}\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseLeave={this.handleOnMouseLeave}\n          />\n        );\n        HoverLabelElements.push(\n          <ProjectCircleLabel\n            key={index}\n            node={node}\n            projectId={node.data.id}\n            hovered={node === hoveredNode}\n            selectionIndex={this.selectionIndex(node)}\n            onClick={this.handleOnClickNode}\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseLeave={this.handleOnMouseLeave}\n          />\n        );\n      }\n      if (node.data.type === 'topic') {\n        CirclesElements.push(\n          <TopicCircle\n            key={index}\n            node={node}\n            topicId={node.data.id}\n            hovered={node === hoveredNode}\n            selectionIndex={this.selectionIndex(node)}\n            onClick={this.handleOnClickNode}\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseLeave={this.handleOnMouseLeave}\n          />\n        );\n        HoverLabelElements.push(\n          <TopicCircleLabel\n            key={index}\n            node={node}\n            topicId={node.data.id}\n            hovered={node === hoveredNode}\n            selectionIndex={this.selectionIndex(node)}\n            onClick={this.handleOnClickNode}\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseLeave={this.handleOnMouseLeave}\n          />\n        );\n      }\n    });\n    return (\n      <Container ref={this.setContainerRef} className={this.props['className']}>\n        {svgSize && (\n          <svg\n            width={svgSize}\n            height={svgSize}\n            preserveAspectRatio=\"xMidYMid meet\"\n            style={{ overflow: 'visible' }}\n          >\n            <g className=\"circles\">{CirclesElements}</g>\n            <g className=\"labels\">\n              {CustomLabelElements}\n              {HoverLabelElements}\n            </g>\n          </svg>\n        )}\n        <LegendCorner>\n          {!showLegend ? (\n            <button onClick={this.onShowLegend}>\n              <StyledIcon name=\"info\" />\n            </button>\n          ) : (\n            <LegendPanel onClickOutside={this.onHideLegend} />\n          )}\n        </LegendCorner>\n      </Container>\n    );\n  }\n}\nexport default (inputProps: InputProps) => (\n  <GetIdeas type=\"load-more\" pageSize={1000} sort=\"new\">\n    {(ideasProps) =>\n      ideasProps.list ? <Circles {...inputProps} ideas={ideasProps} /> : null\n    }\n  </GetIdeas>\n);\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport GetTopic, { GetTopicChildProps } from 'resources/GetTopic';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isNil } from 'lodash-es';\nimport { D3Node } from './';\n\nconst borderColor = 'purple';\n\nconst StyledCircle: any = styled.circle`\n  position: relative;\n  fill: green;\n  fill-opacity: 0.2;\n  cursor: pointer;\n\n  &:hover {\n    stroke: ${borderColor};\n    stroke-width: 2px;\n  }\n\n  ${(props) =>\n    !isNil((props as any).selectionIndex) &&\n    `\n    stroke: black;\n    stroke-width: 2px;\n    fill: ${props.theme.comparisonColors[(props as any).selectionIndex]};\n  `}\n`;\n\ninterface InputProps {\n  node: D3Node;\n  topicId: string;\n  selectionIndex: number | null;\n  hovered: boolean;\n  onClick: (node: D3Node, event: MouseEvent) => void;\n  onMouseEnter: (node: D3Node, event: MouseEvent) => void;\n  onMouseLeave: (node: D3Node, event: MouseEvent) => void;\n}\n\ninterface DataProps {\n  topic: GetTopicChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass TopicCircle extends PureComponent<Props, State> {\n  handleOnClick = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onClick && this.props.onClick(node, event);\n  };\n\n  handleOnMouseEnter = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onMouseEnter && this.props.onMouseEnter(node, event);\n  };\n\n  handleOnMouseLeave = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onMouseLeave && this.props.onMouseLeave(node, event);\n  };\n\n  render() {\n    const { node, selectionIndex, hovered, topic } = this.props;\n\n    if (isNilOrError(topic)) return null;\n\n    return (\n      <StyledCircle\n        transform={`translate(${node.x},${node.y})`}\n        r={node.r}\n        onClick={this.handleOnClick}\n        onMouseEnter={this.handleOnMouseEnter}\n        onMouseLeave={this.handleOnMouseLeave}\n        selectionIndex={selectionIndex}\n        hovered={hovered}\n      />\n    );\n  }\n}\n\nexport default (inputProps: InputProps) => (\n  <GetTopic id={inputProps.topicId}>\n    {(topic) => <TopicCircle {...inputProps} topic={topic} />}\n  </GetTopic>\n);\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { mix } from 'polished';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isNil } from 'lodash-es';\nimport { D3Node } from './';\n\nconst borderColor = '#00a2b1';\n\nconst StyledCircle: any = styled.circle`\n  position: relative;\n  fill: ${(props) => mix((props as any).upvoteRatio, 'green', 'red')};\n  fill-opacity: 0.75;\n  cursor: pointer;\n\n  ${(props) =>\n    (props as any).hovered &&\n    `\n    stroke: ${borderColor};\n    stroke-width: 2px;\n  `}\n\n  ${(props) =>\n    !isNil((props as any).selectionIndex) &&\n    `\n    stroke: black;\n    stroke-width: 2px;\n    fill: ${props.theme.comparisonColors[(props as any).selectionIndex]};\n  `}\n`;\n\ninterface InputProps {\n  node: D3Node;\n  ideaId: string;\n  selectionIndex: number | null;\n  hovered: boolean;\n  onClick: (node: D3Node, event: MouseEvent) => void;\n  onMouseEnter: (node: D3Node, event: MouseEvent) => void;\n  onMouseLeave: (node: D3Node, event: MouseEvent) => void;\n}\n\ninterface DataProps {\n  idea: GetIdeaChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass IdeaCircle extends PureComponent<Props, State> {\n  upvoteRatio = (up: number, down: number) => {\n    return up / (up + down);\n  };\n\n  handleOnClick = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onClick(node, event);\n  };\n\n  handleOnMouseEnter = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onMouseEnter(node, event);\n  };\n\n  handleOnMouseLeave = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onMouseLeave(node, event);\n  };\n\n  render() {\n    const { node, selectionIndex, hovered, idea } = this.props;\n\n    if (isNilOrError(idea)) return null;\n\n    return (\n      <StyledCircle\n        r={node.r}\n        transform={`translate(${node.x},${node.y})`}\n        onClick={this.handleOnClick}\n        onMouseEnter={this.handleOnMouseEnter}\n        onMouseLeave={this.handleOnMouseLeave}\n        selectionIndex={selectionIndex}\n        hovered={hovered}\n        upvoteRatio={this.upvoteRatio(\n          idea.attributes.upvotes_count,\n          idea.attributes.downvotes_count\n        )}\n      />\n    );\n  }\n}\n\nexport default (inputProps: InputProps) => (\n  <GetIdea ideaId={inputProps.ideaId}>\n    {(idea) => <IdeaCircle {...inputProps} idea={idea} />}\n  </GetIdea>\n);\n","import { flatten } from 'lodash-es';\nimport { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { Multiloc } from 'typings';\n\nconst apiEndpoint = `${API_PATH}/clusterings`;\n\ninterface BaseNode {\n  id: string;\n}\n\nexport interface ProjectNode extends BaseNode {\n  type: 'project';\n  children: Node[];\n}\n\nexport interface TopicNode extends BaseNode {\n  type: 'topic';\n  children: Node[];\n}\n\nexport interface CustomNode extends BaseNode {\n  type: 'custom';\n  title?: string;\n  children: Node[];\n  keywords?: {\n    name: string;\n  }[];\n}\n\nexport interface IdeaNode extends BaseNode {\n  type: 'idea';\n}\n\nexport type ParentNode = ProjectNode | TopicNode | CustomNode;\n\nexport type Node = ParentNode | IdeaNode;\n\nexport const ideasUnder = (node: Node): string[] => {\n  if (node.type === 'idea') {\n    return [node.id];\n  } else {\n    return flatten(node.children.map((c) => ideasUnder(c)));\n  }\n};\n\nexport interface IClusteringData {\n  id: string;\n  type: string;\n  attributes: {\n    title_multiloc: Multiloc;\n    structure: ParentNode;\n    created_at: string;\n    updated_at: string;\n  };\n}\n\nexport interface IClusteringLinks {\n  self: string;\n  first: string;\n  prev: string;\n  next: string;\n  last: string;\n}\n\nexport interface IClusterings {\n  data: IClusteringData[];\n  links: IClusteringLinks;\n}\n\nexport interface IClustering {\n  data: IClusteringData;\n}\n\nexport function clusteringByIdStream(clusteringId: string) {\n  return streams.get<IClustering>({\n    apiEndpoint: `${apiEndpoint}/${clusteringId}`,\n  });\n}\n\nexport function clusteringsStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IClusterings>({ apiEndpoint, ...streamParams });\n}\n\nexport function addClustering(object) {\n  return streams.add<IClustering>(apiEndpoint, { clustering: object });\n}\n\nexport function updateClustering(clusteringId: string, object) {\n  return streams.update<IClustering>(\n    `${apiEndpoint}/${clusteringId}`,\n    clusteringId,\n    { clustering: object }\n  );\n}\n\nexport function deleteClustering(clusteringId: string) {\n  return streams.delete(`${apiEndpoint}/${clusteringId}`, clusteringId);\n}\n","// libraries\nimport React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { map, flatten, uniq } from 'lodash-es';\n\n// styling\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// typings\nimport { Node, ParentNode, ideasUnder } from '../../../../services/clusterings';\n\n// components\nimport GenderChart from './GenderChart';\nimport AgeChart from './AgeChart';\nimport DomicileChart from './DomicileChart';\nimport IdeaDetails from './IdeaDetails';\nimport ClusterDetails from './ClusterDetails';\nimport { Radio, IconTooltip } from 'cl2-component-library';\nimport ComparisonLegend from './ComparisonLegend';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../../../messages';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from '../../tracks';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TabbedNav = styled.nav`\n  flex: 0 0 55px;\n  background: #fcfcfc;\n  border-radius: ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius} 0 0;\n  padding-left: 30px;\n  display: flex;\n  align-items: stretch;\n  border: solid 1px ${colors.separation};\n  border-bottom: none;\n`;\n\nconst Tab = styled.li`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  list-style: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  border-bottom: solid 3px transparent;\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  &.active {\n    color: ${colors.adminTextColor};\n    border-color: ${colors.clBlueDark};\n  }\n\n  &:not(.active):hover {\n    border-color: transparent;\n  }\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  border: solid 1px ${colors.adminBorder};\n  border-radius: 0 0 ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius};\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-top: 30px;\n  padding-bottom: 10px;\n  overflow-y: scroll;\n`;\n\nconst RadioButtons = styled.div`\n  flex: 0 0 40px;\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n  margin-left: 20px;\n  margin-bottom: 25px;\n`;\n\nconst StyledRadio = styled(Radio)`\n  margin: 0;\n  padding: 0;\n  margin-right: 25px;\n`;\n\nconst Details = styled.div`\n  padding: 20px;\n  padding-top: 0;\n`;\n\nconst ChartTitle = styled.h3`\n  margin: 0;\n  margin-left: 20px;\n`;\n\nconst StyledGenderChart = styled(GenderChart)`\n  margin-top: 15px;\n  margin-bottom: 25px;\n`;\n\nconst StyledAgeChart = styled(AgeChart)`\n  margin-top: 15px;\n  margin-bottom: 25px;\n`;\n\nconst StyledDomicileChart = styled(DomicileChart)`\n  margin-top: 15px;\n  margin-bottom: 25px;\n`;\n\ntype Props = {\n  selectedNodes: Node[][];\n  activeComparison: number;\n  onAddComparison: () => void;\n  onChangeActiveComparison: (index: number) => void;\n  onDeleteComparison: (index: number) => void;\n};\n\ntype TabName = 'votes' | 'details' | 'options';\n\ntype State = {\n  normalization: 'absolute' | 'relative';\n  selectedTab: TabName;\n};\n\nclass InfoPane extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      normalization: 'absolute',\n      selectedTab: 'votes',\n    };\n  }\n\n  selectedIdeas = () => {\n    return uniq(flatten(map(this.comparisonSet(), ideasUnder)));\n  };\n\n  comparisonIdeas = () => {\n    return this.props.selectedNodes.map((selectedNode) => {\n      return uniq(flatten(map(selectedNode, ideasUnder)));\n    });\n  };\n\n  handleOnChangeNormalization = (normalization: 'absolute' | 'relative') => {\n    trackEventByName(tracks.switchNormalization.name, {\n      extra: { normalization },\n    });\n    this.setState({ normalization });\n  };\n\n  comparisonSet = () => {\n    return this.props.selectedNodes[this.props.activeComparison] || [];\n  };\n\n  handleTabOnClick = (tabName: TabName) => (event: any) => {\n    event.preventDefault();\n    trackEventByName(tracks.changeTab.name, { extra: { tab: tabName } });\n    this.setState({ selectedTab: tabName });\n  };\n\n  render() {\n    const { selectedNodes } = this.props;\n    const { normalization, selectedTab } = this.state;\n    const comparisonSet = this.comparisonSet();\n\n    return (\n      <Container className={this.props['className']}>\n        <TabbedNav>\n          <Tab\n            onClick={this.handleTabOnClick('votes')}\n            data-tab=\"votes\"\n            className={`${selectedTab === 'votes' && 'active'}`}\n          >\n            <FormattedMessage {...messages.votes} />\n          </Tab>\n          <Tab\n            onClick={this.handleTabOnClick('details')}\n            data-tab=\"details\"\n            className={`${selectedTab === 'details' && 'active'}`}\n          >\n            <FormattedMessage {...messages.details} />\n          </Tab>\n        </TabbedNav>\n        <Content>\n          <ComparisonLegend selectedNodes={this.props.selectedNodes} />\n          {selectedTab === 'details' && (\n            <Details>\n              {selectedNodes.length === 1 &&\n                comparisonSet.length >= 1 &&\n                comparisonSet[0].type === 'idea' && (\n                  <IdeaDetails ideaId={comparisonSet[0].id} />\n                )}\n              {selectedNodes.length === 1 &&\n                comparisonSet.length >= 1 &&\n                comparisonSet[0].type !== 'idea' && (\n                  <ClusterDetails\n                    node={comparisonSet[0] as ParentNode}\n                    ideaIds={this.selectedIdeas()}\n                  />\n                )}\n            </Details>\n          )}\n\n          {selectedTab === 'votes' && (\n            <>\n              <RadioButtons>\n                <StyledRadio\n                  key=\"absolute\"\n                  onChange={this.handleOnChangeNormalization}\n                  currentValue={this.state.normalization}\n                  value=\"absolute\"\n                  label={<FormattedMessage {...messages.absolute} />}\n                  name=\"normalization\"\n                />\n                <StyledRadio\n                  key=\"relative\"\n                  onChange={this.handleOnChangeNormalization}\n                  currentValue={this.state.normalization}\n                  value=\"relative\"\n                  label={\n                    <>\n                      <FormattedMessage {...messages.relative} />\n                      <IconTooltip\n                        content={\n                          <FormattedMessage\n                            {...messages.relativeImportanceInputsTooltip}\n                          />\n                        }\n                      />\n                    </>\n                  }\n                  name=\"normalization\"\n                />\n              </RadioButtons>\n              <ChartTitle>\n                <FormattedMessage {...messages.gender} />\n              </ChartTitle>\n              <StyledGenderChart\n                ideaIdsComparisons={this.comparisonIdeas()}\n                normalization={normalization}\n              />\n              <ChartTitle>\n                <FormattedMessage {...messages.age} />\n              </ChartTitle>\n              <StyledAgeChart\n                ideaIdsComparisons={this.comparisonIdeas()}\n                normalization={normalization}\n              />\n              <ChartTitle>\n                <FormattedMessage {...messages.domicile} />\n              </ChartTitle>\n              <StyledDomicileChart\n                ideaIdsComparisons={this.comparisonIdeas()}\n                normalization={normalization}\n              />\n            </>\n          )}\n        </Content>\n      </Container>\n    );\n  }\n}\n\nexport default InfoPane;\n","import { Observer, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  startWith,\n  scan,\n  refCount,\n  publishReplay,\n  first,\n} from 'rxjs/operators';\nimport { isObject, isEmpty, has } from 'lodash-es';\n\n// utils\nimport shallowCompare from 'utils/shallowCompare';\n\n// typings\nimport { UploadFile } from 'typings';\n\nexport interface IIdeasPageGlobalState {\n  title: string | null;\n  description: string | null;\n  selectedTopics: string[];\n  budget: number | null;\n  proposedBudget: number | null;\n  position: string;\n  position_coordinates: GeoJSON.Point | null;\n  submitError: boolean;\n  titleProfanityError: boolean;\n  descriptionProfanityError: boolean;\n  fileOrImageError: boolean;\n  processing: boolean;\n  ideaId: string | null;\n  ideaSlug: string | null;\n  imageFile: UploadFile[];\n  imageId: string | null;\n  ideaFiles: UploadFile[];\n  authorId: string | null;\n}\n\nexport interface IAdminFullWidth {\n  enabled: boolean;\n}\n\nexport interface IAdminNoPadding {\n  enabled: boolean;\n}\n\ntype valueof<T> = T[keyof T];\n\ntype State = {\n  IdeasNewPage?: IIdeasPageGlobalState;\n  IdeasEditPage?: IIdeasPageGlobalState;\n  AdminFullWidth?: IAdminFullWidth;\n  AdminNoPadding?: IAdminNoPadding;\n};\n\ninterface IStateInput {\n  propertyName: keyof State;\n  updatedStateProperties: valueof<State>;\n}\n\ninterface IStream<T> {\n  observer: Observer<T>;\n  observable: Observable<T>;\n}\n\nexport interface IGlobalStateService<T> {\n  observable: Observable<T>;\n  set: (newState: Partial<T>) => void;\n  get: () => Promise<T>;\n}\n\nclass GlobalState {\n  private stream: IStream<any>;\n\n  constructor() {\n    this.stream = {\n      observer: null as any,\n      observable: null as any,\n    };\n\n    this.stream.observable = new Observable<State>((observer) => {\n      this.stream.observer = observer;\n    }).pipe(\n      startWith({}),\n      scan((oldState: State, stateInput: IStateInput) => {\n        const { propertyName, updatedStateProperties } = stateInput;\n\n        const newState = {\n          ...oldState,\n          [propertyName]: {\n            ...oldState[propertyName],\n            ...updatedStateProperties,\n          },\n        };\n\n        return newState;\n      }),\n      filter((state) => isObject(state) && !isEmpty(state)),\n      publishReplay(1),\n      refCount()\n    );\n\n    // keep stream hot\n    this.stream.observable.subscribe();\n  }\n\n  init<T>(propertyName: keyof State, initialState?: T) {\n    const observable: Observable<T> = this.stream.observable.pipe(\n      map((state) => state[propertyName]),\n      filter(\n        (filteredState) => isObject(filteredState) && !isEmpty(filteredState)\n      ),\n      distinctUntilChanged((filteredState, newFilteredState) =>\n        shallowCompare(filteredState, newFilteredState)\n      )\n    );\n\n    const set = (newState: Partial<T>) => this.set(propertyName, newState);\n\n    const get = () => this.get<T>(propertyName);\n\n    if (initialState && isObject(initialState) && !isEmpty(initialState)) {\n      if (!this.stream.observer) {\n        setTimeout(() => set(initialState), 0);\n      } else {\n        set(initialState);\n      }\n    }\n\n    return {\n      observable,\n      set,\n      get,\n    } as IGlobalStateService<T>;\n  }\n\n  set<T>(propertyName: keyof State, updatedStateProperties: Partial<T>) {\n    this.stream.observer.next({\n      propertyName,\n      updatedStateProperties,\n    });\n  }\n\n  get<T>(propertyName: keyof State) {\n    return this.stream.observable\n      .pipe(\n        map((state) => (has(state, propertyName) ? state[propertyName] : null)),\n        first()\n      )\n      .toPromise() as Promise<T>;\n  }\n}\n\nexport const globalState = new GlobalState();\n","import React, { PureComponent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isEmpty } from 'lodash-es';\nimport { ParentNode } from '../../../../services/clusterings';\nimport GetIdea from 'resources/GetIdea';\n\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport T from 'components/T';\nimport messages from '../../../messages';\n\ntype Props = {\n  ideaIds: string[];\n  node: ParentNode;\n};\n\nconst Container = styled.div``;\n\nconst List = styled.ul`\n  padding: 0;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin: 0;\n`;\n\nconst ListItem = styled.li`\n  font-size: ${fontSizes.base}px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n\nclass ClusterDetails extends PureComponent<Props> {\n  keywords = (): { name: string }[] => {\n    const { node } = this.props;\n    return (node.type === 'custom' && node.keywords) || [];\n  };\n\n  render() {\n    const { ideaIds, node } = this.props;\n\n    if (!node) return null;\n\n    const keywords = this.keywords();\n\n    return (\n      <Container className={this.props['className']}>\n        {!isEmpty(keywords) && (\n          <>\n            <h4>\n              <FormattedMessage {...messages.keywords} />\n            </h4>\n            <List>\n              {keywords.map((kw) => (\n                <ListItem key={kw.name}>{kw.name}</ListItem>\n              ))}\n            </List>\n          </>\n        )}\n        <h4>\n          <FormattedMessage {...messages.clusterContainsSelectedInputs} />\n        </h4>\n        <List>\n          {ideaIds.map((id) => (\n            <GetIdea key={id} ideaId={id}>\n              {(idea) =>\n                isNilOrError(idea) ? null : (\n                  <ListItem key={idea.id}>\n                    <T value={idea.attributes.title_multiloc} />\n                  </ListItem>\n                )\n              }\n            </GetIdea>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n\nexport default ClusterDetails;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isNil } from 'lodash-es';\nimport { D3Node } from './';\n\nconst borderColor = '#003348';\n\nconst StyledCircle: any = styled.circle`\n  position: relative;\n  fill: green;\n  fill-opacity: 0.2;\n  cursor: pointer;\n\n  &:hover {\n    stroke: ${borderColor};\n    stroke-width: 2px;\n  }\n\n  ${(props) =>\n    !isNil((props as any).selectionIndex) &&\n    `\n    stroke: black;\n    stroke-width: 2px;\n    fill: ${props.theme.comparisonColors[(props as any).selectionIndex]};\n  `}\n`;\n\ninterface InputProps {\n  node: D3Node;\n  projectId: string;\n  selectionIndex: number | null;\n  hovered: boolean;\n  onClick: (node: D3Node, event: MouseEvent) => void;\n  onMouseEnter: (node: D3Node, event: MouseEvent) => void;\n  onMouseLeave: (node: D3Node, event: MouseEvent) => void;\n}\n\ninterface DataProps {\n  project: GetProjectChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass ProjectCircle extends PureComponent<Props, State> {\n  handleOnClick = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onClick && this.props.onClick(node, event);\n  };\n\n  handleOnMouseEnter = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onMouseEnter && this.props.onMouseEnter(node, event);\n  };\n\n  handleOnMouseLeave = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onMouseLeave && this.props.onMouseLeave(node, event);\n  };\n\n  render() {\n    const { node, selectionIndex, hovered, project } = this.props;\n\n    if (isNilOrError(project)) return null;\n    return (\n      <StyledCircle\n        r={node.r}\n        onClick={this.handleOnClick}\n        onMouseEnter={this.handleOnMouseEnter}\n        onMouseLeave={this.handleOnMouseLeave}\n        selectionIndex={selectionIndex}\n        hovered={hovered}\n        transform={`translate(${node.x},${node.y})`}\n      />\n    );\n  }\n}\n\nexport default (inputProps: InputProps) => (\n  <GetProject projectId={inputProps.projectId}>\n    {(project) => <ProjectCircle {...inputProps} project={project} />}\n  </GetProject>\n);\n","// libraries\nimport React, { PureComponent } from 'react';\nimport { clone } from 'lodash-es';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { isNilOrError } from 'utils/helperUtils';\nimport clHistory from 'utils/cl-router/history';\n\n// components\nimport Circles from './Circles';\nimport InfoPane from './InfoPane';\nimport GoBackButton from 'components/UI/GoBackButton';\nimport { PageTitle } from 'components/admin/Section';\nimport T from 'components/T';\n\n// typings\nimport { Node } from '../../../services/clusterings';\nimport {\n  globalState,\n  IGlobalStateService,\n  IAdminFullWidth,\n} from 'services/globalState';\n\n// resources\nimport GetClustering, {\n  GetClusteringChildProps,\n} from '../../../resources/GetClustering';\n\n// styling\nimport styled, { ThemeProvider } from 'styled-components';\nimport { colors, media } from 'utils/styleUtils';\n\n// analytics\nimport { injectTracks } from 'utils/analytics';\nimport tracks from '../tracks';\n\nconst TwoColumns = styled.div`\n  flex-shrink: 0;\n  flex-grow: 1;\n  flex-basis: auto;\n  width: 100%;\n  height: calc(100vh - ${(props) => props.theme.menuHeight}px - 85px);\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: stretch;\n  margin-bottom: 35px;\n`;\n\nconst StyledCircles = styled(Circles)`\n  flex-shrink: 1;\n  flex-grow: 1;\n  flex-basis: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #fff;\n  border: solid 1px ${colors.separation};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  padding: 25px;\n`;\n\nconst StyledInfoPane = styled(InfoPane)`\n  flex: 0 0 350px;\n  margin-left: 20px;\n\n  ${media.smallerThan1280px`\n    flex:  0 0 300px;\n  `}\n`;\n\nconst StyledGoBackButton = styled(GoBackButton)`\n  margin-bottom: 20px;\n`;\n\ninterface InputProps {}\n\ninterface DataProps {\n  clustering: GetClusteringChildProps;\n}\n\ntype TrackArgs = { extra: { id: string; type?: string } };\n\ninterface TrackProps {\n  trackClickCluster: (args: TrackArgs) => void;\n  trackCtrlClickCluster: (args: TrackArgs) => void;\n  trackShiftClickCluster: (args: TrackArgs) => void;\n  trackClickIdea: (args: TrackArgs) => void;\n  trackCtrlClickIdea: (args: TrackArgs) => void;\n  trackShiftClickIdea: (args: TrackArgs) => void;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  activeComparisonCount: number;\n  selectedNodes: Node[][];\n}\n\nclass ClusterViewer extends PureComponent<\n  Props & WithRouterProps & TrackProps,\n  State\n> {\n  globalState: IGlobalStateService<IAdminFullWidth>;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeComparisonCount: 0,\n      selectedNodes: [[]],\n    };\n    this.globalState = globalState.init('AdminFullWidth');\n  }\n\n  componentDidMount() {\n    this.globalState.set({ enabled: true });\n  }\n\n  componentWillUnmount() {\n    this.globalState.set({ enabled: false });\n  }\n\n  theme = (theme) => {\n    const comparisonColors = ['#fbbd08', '#a333c8', '#f2711c', '#00b5ad'];\n\n    return {\n      ...theme,\n      comparisonColors,\n      upvotes: theme.colors.clGreen,\n      downvotes: theme.colors.clRed,\n      chartLabelColor: '#999999',\n      chartLabelSize: 13,\n    };\n  };\n\n  handleOnChangeActiveComparison = (activeComparisonCount: number) => {\n    this.setState({ activeComparisonCount });\n  };\n\n  handleOnAddComparison = () => {\n    this.setState(({ selectedNodes }) => ({\n      selectedNodes: [...selectedNodes, []],\n      activeComparisonCount: selectedNodes.length,\n    }));\n  };\n\n  handleOnDeleteComparison = (index: number) => {\n    const { activeComparisonCount, selectedNodes } = this.state;\n    const newSelectedNodes = clone(selectedNodes);\n    newSelectedNodes.splice(index, 1);\n    const newActiveComparison =\n      activeComparisonCount >= index\n        ? newSelectedNodes.length - 1\n        : activeComparisonCount;\n    this.setState({\n      selectedNodes: newSelectedNodes,\n      activeComparisonCount: newActiveComparison,\n    });\n  };\n\n  handleOnClickNode = (node: Node) => {\n    if (node.type === 'idea') {\n      this.props.trackClickIdea({ extra: { id: node.id } });\n    } else {\n      this.props.trackClickCluster({ extra: { type: node.type, id: node.id } });\n    }\n    this.setState({\n      selectedNodes: [[node]],\n      activeComparisonCount: 0,\n    });\n  };\n\n  handleOnShiftClickNode = (node: Node) => {\n    if (node.type === 'idea') {\n      this.props.trackShiftClickIdea({ extra: { id: node.id } });\n    } else {\n      this.props.trackShiftClickCluster({\n        extra: { type: node.type, id: node.id },\n      });\n    }\n\n    const selectedNodes = clone(this.state.selectedNodes);\n    selectedNodes[this.state.activeComparisonCount] = [\n      ...this.state.selectedNodes[this.state.activeComparisonCount],\n      node,\n    ];\n    this.setState({ selectedNodes });\n  };\n\n  handleOnCtrlClickNode = (node: Node) => {\n    if (node.type === 'idea') {\n      this.props.trackCtrlClickIdea({ extra: { id: node.id } });\n    } else {\n      this.props.trackCtrlClickCluster({\n        extra: { type: node.type, id: node.id },\n      });\n    }\n    const { selectedNodes } = this.state;\n    // prevents selecting twice the same node by looking for [node] in the selected nodes array.\n    if (\n      selectedNodes.length < 4 &&\n      selectedNodes.findIndex(\n        (item) => item.length === 1 && item[0].id === node.id\n      ) < 0\n    ) {\n      this.setState(({ selectedNodes }) => ({\n        selectedNodes: [...selectedNodes, [node]],\n        activeComparisonCount: selectedNodes.length,\n      }));\n    }\n  };\n\n  goBack = () => {\n    clHistory.push('/admin/dashboard/insights');\n  };\n\n  render() {\n    const { clustering } = this.props;\n    const { activeComparisonCount, selectedNodes } = this.state;\n\n    if (isNilOrError(clustering)) return null;\n\n    return (\n      <>\n        <StyledGoBackButton onClick={this.goBack} />\n        <PageTitle>\n          <T value={clustering.attributes.title_multiloc} />\n        </PageTitle>\n        <ThemeProvider theme={this.theme}>\n          <TwoColumns>\n            <StyledCircles\n              activeComparison={activeComparisonCount}\n              selectedNodes={selectedNodes}\n              structure={clustering.attributes.structure}\n              onClickNode={this.handleOnClickNode}\n              onShiftClickNode={this.handleOnShiftClickNode}\n              onCtrlClickNode={this.handleOnCtrlClickNode}\n            />\n            <StyledInfoPane\n              activeComparison={activeComparisonCount}\n              selectedNodes={selectedNodes}\n              onAddComparison={this.handleOnAddComparison}\n              onChangeActiveComparison={this.handleOnChangeActiveComparison}\n              onDeleteComparison={this.handleOnDeleteComparison}\n            />\n          </TwoColumns>\n        </ThemeProvider>\n      </>\n    );\n  }\n}\n\nconst ClusterViewerWithHocs = injectTracks<Props>({\n  trackClickCluster: tracks.clickCluster,\n  trackCtrlClickCluster: tracks.ctrlClickCluster,\n  trackShiftClickCluster: tracks.shiftClickCluster,\n  trackClickIdea: tracks.clickIdea,\n  trackCtrlClickIdea: tracks.ctrlClickIdea,\n  trackShiftClickIdea: tracks.shiftClickIdea,\n})(ClusterViewer);\n\nexport default withRouter((inputProps: InputProps & WithRouterProps) => (\n  <GetClustering id={inputProps.params.clusteringId}>\n    {(clustering) => (\n      <ClusterViewerWithHocs {...inputProps} clustering={clustering} />\n    )}\n  </GetClustering>\n));\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { ITopicData, topicByIdStream } from 'services/topics';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  id: string;\n}\n\ntype children = (renderProps: GetTopicChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  topic: ITopicData | undefined | null | Error;\n}\n\nexport type GetTopicChildProps = ITopicData | undefined | null | Error;\n\nexport default class GetTopic extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      topic: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          filter(({ id }) => isString(id)),\n          switchMap(({ id }) => topicByIdStream(id).observable)\n        )\n        .subscribe((topic) =>\n          this.setState({ topic: !isNilOrError(topic) ? topic.data : topic })\n        ),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    this.inputProps$.next({ id });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { topic } = this.state;\n    return (children as children)(topic);\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { isNil, take } from 'lodash-es';\nimport styled from 'styled-components';\nimport { D3Node } from './';\nimport { CustomNode } from '../../../../services/clusterings';\n\nconst StyledText: any = styled.text`\n  font-size: ${(props) => (props as any).size}px;\n  text-shadow: white 0px 0px 10px;\n`;\n\ninterface InputProps {\n  node: D3Node<CustomNode>;\n  selectionIndex: number | null;\n  hovered?: boolean;\n  onClick?: (node: D3Node<CustomNode>, event: MouseEvent) => void;\n  onMouseEnter?: (node: D3Node<CustomNode>, event: MouseEvent) => void;\n  onMouseLeave?: (node: D3Node<CustomNode>, event: MouseEvent) => void;\n}\n\ninterface DataProps {}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass ClusterCircleLabel extends PureComponent<Props, State> {\n  nodeLabel = () => {\n    const nodeData = this.props.node.data;\n    return (\n      nodeData.title ||\n      (nodeData.keywords &&\n        take(\n          nodeData.keywords.map((k) => k.name),\n          1\n        ).join(' '))\n    );\n  };\n\n  render() {\n    const { node, selectionIndex, hovered } = this.props;\n\n    return (\n      <StyledText\n        transform={`translate(${node.x},${node.y - node.r})`}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"central\"\n        show={!isNil(selectionIndex) || hovered}\n        size={12 + 2 * node.height}\n      >\n        {this.nodeLabel()}\n      </StyledText>\n    );\n  }\n}\n\nexport default ClusterCircleLabel;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport clickOutside from 'utils/containers/clickOutside';\n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../../../messages';\n\nconst Container = styled(clickOutside)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TabbedNav = styled.nav`\n  flex: 0 0 55px;\n  background: #fcfcfc;\n  border-radius: ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius} 0 0;\n  padding-left: 30px;\n  display: flex;\n  align-items: stretch;\n  border: solid 1px ${colors.separation};\n  border-bottom: none;\n`;\n\nconst Tab = styled.li`\n  color: ${colors.label};\n  font-size: ${fontSizes.base};\n  font-weight: 400;\n  list-style: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  border-bottom: solid 3px transparent;\n  margin-right: 40px;\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n\n  &.active {\n    color: ${colors.adminTextColor};\n    border-color: ${colors.clBlueDark};\n  }\n\n  &:not(.active):hover {\n    border-color: transparent;\n  }\n`;\n\nconst Content: any = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  border: solid 1px ${colors.adminBorder};\n  border-radius: 0 0 ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius};\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-top: 20px;\n  overflow: hidden;\n  display: ${(props) => ((props as any).showContent ? 'block' : 'none')};\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 10px;\n  svg {\n    margin-right: 15px;\n  }\n  .key {\n    margin-right: 15px;\n    border-radius: ${(props: any) => props.theme.borderRadius};\n    padding: 2px 5px;\n    border: 1px solid;\n    font-weight: 600;\n  }\n`;\n\nconst StyledCircle: any = styled.circle`\n  position: relative;\n  fill: ${(props) => props.color};\n`;\nconst StyledEmptyCircle: any = styled.circle`\n  position: relative;\n  fill: transparent;\n  stroke: ${colors.adminTextColor};\n  stroke-width: 2;\n`;\nconst StyledLine: any = styled.line`\n  position: relative;\n  fill: transparent;\n  stroke: ${colors.adminTextColor};\n  stroke-width: 2;\n`;\n\ninterface Props {\n  onClickOutside: () => void;\n}\n\ninterface State {\n  selectedTab: 'legend' | 'controls';\n}\n\nexport default class LegendPanel extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: 'legend',\n    };\n  }\n\n  handleTabOnClick = (tabName: 'legend' | 'controls') => (event: any) => {\n    event.preventDefault();\n    this.setState({ selectedTab: tabName });\n  };\n\n  render() {\n    const { selectedTab } = this.state;\n    const { onClickOutside } = this.props;\n    return (\n      <Container\n        className={this.props['className']}\n        onClickOutside={onClickOutside}\n      >\n        <TabbedNav>\n          <Tab\n            onClick={this.handleTabOnClick('legend')}\n            data-tab=\"legend\"\n            className={`${selectedTab === 'legend' && 'active'}`}\n          >\n            <FormattedMessage {...messages.legend} />\n          </Tab>\n          <Tab\n            onClick={this.handleTabOnClick('controls')}\n            data-tab=\"controls\"\n            className={`${selectedTab === 'controls' && 'active'}`}\n          >\n            <FormattedMessage {...messages.controls} />\n          </Tab>\n        </TabbedNav>\n        <Content showContent={selectedTab === 'legend'}>\n          <ListItem>\n            <svg height={20} width={20}>\n              <StyledCircle r={10} transform=\"translate(10,10)\" color=\"green\" />\n            </svg>\n            <FormattedMessage {...messages.upvotes} />\n          </ListItem>\n          <ListItem>\n            <svg height={20} width={20}>\n              <StyledCircle r={10} transform=\"translate(10,10)\" color=\"red\" />\n            </svg>\n            <FormattedMessage {...messages.downvotes} />\n          </ListItem>\n          <ListItem>\n            <svg height={20} width={20}>\n              <StyledCircle r={10} transform=\"translate(10,10)\" color=\"blue\" />\n            </svg>\n            <FormattedMessage {...messages.noVotes} />\n          </ListItem>\n          <ListItem>\n            <svg height={20} width={20}>\n              <StyledLine x1=\"0\" y1=\"20\" x2=\"20\" y2=\"0\" />\n              <StyledEmptyCircle r={9} transform=\"translate(10,10)\" />\n            </svg>\n            <FormattedMessage {...messages.numVotes} />\n          </ListItem>\n        </Content>\n        <Content showContent={selectedTab === 'controls'}>\n          <ListItem>\n            <span className=\"key\">Click</span>\n            <FormattedMessage {...messages.clickLegend} />\n          </ListItem>\n          <ListItem>\n            <span className=\"key\">Shift</span>\n            <FormattedMessage {...messages.shiftLegend} />\n          </ListItem>\n          <ListItem>\n            <span className=\"key\">Ctrl</span>\n            <FormattedMessage {...messages.ctrlLegend} />\n          </ListItem>\n        </Content>\n      </Container>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { isNil } from 'lodash-es';\nimport styled from 'styled-components';\nimport { D3Node } from './';\nimport { CustomNode } from '../../../../services/clusterings';\n\nconst StyledCircle: any = styled.circle`\n  position: relative;\n  fill: green;\n  fill-opacity: 0.2;\n  cursor: pointer;\n\n  ${(props) =>\n    !isNil((props as any).selectionIndex) &&\n    `\n    stroke: black;\n    stroke-width: 2px;\n    fill: ${props.theme.comparisonColors[(props as any).selectionIndex]};\n  `}\n`;\n\ninterface InputProps {\n  node: D3Node<CustomNode>;\n  selectionIndex: number | null;\n  hovered?: boolean;\n  onClick?: (node: D3Node<CustomNode>, event: MouseEvent) => void;\n  onMouseEnter?: (node: D3Node<CustomNode>, event: MouseEvent) => void;\n  onMouseLeave?: (node: D3Node<CustomNode>, event: MouseEvent) => void;\n}\n\ninterface DataProps {}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass ClusterCircle extends PureComponent<Props, State> {\n  handleOnClick = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onClick && this.props.onClick(node, event);\n  };\n\n  handleOnMouseEnter = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onMouseEnter && this.props.onMouseEnter(node, event);\n  };\n\n  handleOnMouseLeave = (event: MouseEvent) => {\n    const { node } = this.props;\n    this.props.onMouseLeave && this.props.onMouseLeave(node, event);\n  };\n\n  render() {\n    const { node, selectionIndex } = this.props;\n\n    return (\n      <StyledCircle\n        transform={`translate(${node.x},${node.y})`}\n        r={node.r}\n        onClick={this.handleOnClick}\n        onMouseEnter={this.handleOnMouseEnter}\n        onMouseLeave={this.handleOnMouseLeave}\n        selectionIndex={selectionIndex}\n      />\n    );\n  }\n}\n\nexport default ClusterCircle;\n","import React, { PureComponent } from 'react';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { isEqual, isEmpty } from 'lodash-es';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ReferenceLine,\n  ResponsiveContainer,\n} from 'recharts';\nimport {\n  votesByDomicileStream,\n  IVotesByDomicile,\n} from 'modules/commercial/user_custom_fields/services/stats';\n\nimport GetAreas, { GetAreasChildProps } from 'resources/GetAreas';\nimport { isNilOrError } from 'utils/helperUtils';\nimport localize, { InjectedLocalized } from 'utils/localize';\nimport styled, { withTheme } from 'styled-components';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../../messages';\n\ninterface InputProps {\n  ideaIdsComparisons: string[][];\n  normalization: 'absolute' | 'relative';\n}\n\ninterface DataProps {\n  areas: GetAreasChildProps;\n}\n\ninterface Props extends InputProps, DataProps {\n  theme: any;\n}\n\ninterface State {\n  series: any[];\n}\n\nconst Container = styled.div``;\n\nclass DomicileChart extends PureComponent<\n  Props & InjectedIntlProps & InjectedLocalized,\n  State\n> {\n  subscription: Subscription;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resubscribe();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isEqual(this.props.ideaIdsComparisons, prevProps.ideaIdsComparisons) ||\n      !isEqual(this.props.normalization, prevProps.normalization)\n    ) {\n      this.resubscribe();\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  convertToGraphFormat = (series: IVotesByDomicile[]) => {\n    if (!isNilOrError(this.props.areas)) {\n      const areaBucketsRecord = this.props.areas.map((area) => {\n        const record = {\n          label: this.props.localize(area.attributes.title_multiloc),\n        };\n\n        series.forEach((serie, serieIndex) => {\n          record[`up ${serieIndex + 1}`] = serie.series.up[area.id] || 0;\n          record[`down ${serieIndex + 1}`] = -serie.series.down[area.id] || 0;\n          record[`total ${serieIndex + 1}`] = serie.series.total[area.id] || 0;\n        });\n\n        return record;\n      });\n\n      const blankRecord = {\n        label: this.props.intl.formatMessage(messages['_blank']),\n      };\n      series.forEach((serie, serieIndex) => {\n        blankRecord[`up ${serieIndex + 1}`] = serie.series.up['_blank'] || 0;\n        blankRecord[`down ${serieIndex + 1}`] =\n          -serie.series.down['_blank'] || 0;\n        blankRecord[`total ${serieIndex + 1}`] =\n          serie.series.total['_blank'] || 0;\n      });\n\n      return [...areaBucketsRecord, blankRecord];\n    } else {\n      return [];\n    }\n  };\n\n  resubscribe() {\n    if (this.subscription) this.subscription.unsubscribe();\n    this.subscription = combineLatest(\n      this.props.ideaIdsComparisons.map(\n        (ideaIds) =>\n          votesByDomicileStream({\n            queryParameters: {\n              ideas: ideaIds,\n              normalization: this.props.normalization,\n            },\n          }).observable\n      )\n    ).subscribe((series) => {\n      this.setState({ series: this.convertToGraphFormat(series) });\n    });\n  }\n\n  render() {\n    const { series } = this.state;\n    const { ideaIdsComparisons, theme } = this.props;\n    if (isEmpty(series)) return null;\n\n    return (\n      <Container className={this.props['className']}>\n        <ResponsiveContainer width=\"100%\" aspect={2}>\n          <BarChart\n            data={series}\n            stackOffset=\"sign\"\n            margin={{ right: 20, top: 10 }}\n          >\n            <XAxis dataKey=\"label\" />\n            <YAxis />\n            <Tooltip />\n            <ReferenceLine y={0} stroke=\"#000\" />\n            {ideaIdsComparisons.length > 1 &&\n              ideaIdsComparisons.map((_, index) => (\n                <Bar\n                  key={`up ${index + 1}`}\n                  dataKey={`up ${index + 1}`}\n                  fill={theme.comparisonColors[index]}\n                  stackId={`votes ${index}`}\n                  maxBarSize={20}\n                />\n              ))}\n            {ideaIdsComparisons.length > 1 &&\n              ideaIdsComparisons.map((_, index) => (\n                <Bar\n                  key={`down ${index + 1}`}\n                  dataKey={`down ${index + 1}`}\n                  fill={theme.comparisonColors[index]}\n                  stackId={`votes ${index}`}\n                  maxBarSize={20}\n                />\n              ))}\n            {ideaIdsComparisons.length === 1 && (\n              <Bar\n                key=\"up 1\"\n                dataKey=\"up 1\"\n                fill={theme.upvotes}\n                stackId=\"votes 1\"\n                maxBarSize={20}\n              />\n            )}\n            {ideaIdsComparisons.length === 1 && (\n              <Bar\n                key=\"down 1\"\n                dataKey=\"down 1\"\n                fill={theme.downvotes}\n                stackId=\"votes 1\"\n                maxBarSize={20}\n              />\n            )}\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n    );\n  }\n}\n\nconst DomicileChartWithHOCs = withTheme(\n  localize<Props>(injectIntl<Props & InjectedLocalized>(DomicileChart))\n);\n\nexport default (inputProps: InputProps) => (\n  <GetAreas>\n    {(areas) =>\n      areas ? <DomicileChartWithHOCs {...inputProps} areas={areas} /> : null\n    }\n  </GetAreas>\n);\n","import React, { PureComponent } from 'react';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport T from 'components/T';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../../messages';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { round } from 'lodash-es';\nimport { D3Node } from './';\n\nconst borderColor = '#003348';\n\ninterface InputProps {\n  node: D3Node;\n  projectId: string;\n  selectionIndex: number | null;\n  hovered: boolean;\n  onClick: (node: D3Node, event: MouseEvent) => void;\n  onMouseEnter: (node: D3Node, event: MouseEvent) => void;\n  onMouseLeave: (node: D3Node, event: MouseEvent) => void;\n}\n\ninterface DataProps {\n  project: GetProjectChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {}\n\nclass ProjectCircleLabel extends PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  render() {\n    const { node, hovered, project, intl } = this.props;\n\n    if (isNilOrError(project)) return null;\n\n    return (\n      <T value={project.attributes.title_multiloc}>\n        {(localizedTitle) => {\n          const width = localizedTitle.length * 7 + 50;\n          const height = 60;\n          const xPos = -width / 2;\n          const yPos = -round(node.r + height + 2);\n          const borderRadius = 5;\n\n          return (\n            <svg\n              x={xPos + node.x}\n              y={yPos + node.y}\n              width={width}\n              height={height}\n              style={{ display: `${hovered ? 'block' : 'none'}` }}\n            >\n              <rect\n                x=\"0\"\n                y=\"0\"\n                width={width}\n                height={height}\n                rx={borderRadius}\n                ry={borderRadius}\n                stroke={borderColor}\n                strokeWidth=\"2\"\n                fill=\"#fff\"\n              />\n              <text fill={borderColor} fontSize=\"16\">\n                <tspan\n                  x={width / 2}\n                  y={height / 2 - 10}\n                  fontWeight=\"bold\"\n                  textAnchor=\"middle\"\n                  alignmentBaseline=\"central\"\n                >\n                  {intl.formatMessage(messages.project)}\n                </tspan>\n                <tspan\n                  x={width / 2}\n                  y={height / 2 + 10}\n                  fontWeight=\"normal\"\n                  textAnchor=\"middle\"\n                  alignmentBaseline=\"central\"\n                >\n                  {localizedTitle}\n                </tspan>\n              </text>\n            </svg>\n          );\n        }}\n      </T>\n    );\n  }\n}\n\nconst ProjectLabelWithIntl = injectIntl(ProjectCircleLabel);\n\nexport default (inputProps: InputProps) => (\n  <GetProject projectId={inputProps.projectId}>\n    {(project) => <ProjectLabelWithIntl {...inputProps} project={project} />}\n  </GetProject>\n);\n","import React from 'react';\nimport {\n  get,\n  isString,\n  isEqual,\n  omit,\n  cloneDeep,\n  omitBy,\n  isNil,\n  isArray,\n  unionBy,\n} from 'lodash-es';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport {\n  map,\n  distinctUntilChanged,\n  mergeScan,\n  switchMap,\n} from 'rxjs/operators';\nimport {\n  ideasStream,\n  IIdeaData,\n  IdeaPublicationStatus,\n  ideasMiniStream,\n} from 'services/ideas';\nimport { PublicationStatus as ProjectPublicationStatus } from 'services/projects';\nimport {\n  getPageNumberFromUrl,\n  getSortAttribute,\n  getSortDirection,\n  SortDirection,\n} from 'utils/paginationUtils';\n\nexport type SortAttribute =\n  | 'new'\n  | 'trending'\n  | 'popular'\n  | 'author_name'\n  | 'upvotes_count'\n  | 'downvotes_count'\n  | 'baskets_count'\n  | 'status';\nexport type Sort =\n  | 'random'\n  | 'new'\n  | '-new'\n  | 'trending'\n  | '-trending'\n  | 'popular'\n  | '-popular'\n  | 'author_name'\n  | '-author_name'\n  | 'upvotes_count'\n  | '-upvotes_count'\n  | 'downvotes_count'\n  | '-downvotes_count'\n  | 'baskets_count'\n  | '-baskets_count'\n  | 'status'\n  | '-status';\ntype PublicationStatus = IdeaPublicationStatus;\n\nexport interface InputProps {\n  type: 'load-more' | 'paginated';\n  pageNumber?: number;\n  pageSize?: number;\n  projectIds?: string[] | 'all';\n  phaseId?: string;\n  authorId?: string;\n  sort?: Sort;\n  search?: string;\n  topics?: string[];\n  areas?: string[];\n  ideaStatusId?: string;\n  publicationStatus?: PublicationStatus;\n  projectPublicationStatus?: ProjectPublicationStatus;\n  boundingBox?: number[];\n  assignee?: string;\n  feedbackNeeded?: boolean;\n  // prop mini Gets stripped down ideas containing only title, should never be cached,\n  // and is not tested in all scenarios, but improves performance drastically.\n  mini?: boolean;\n}\n\nexport interface IQueryParameters {\n  'page[number]': number;\n  'page[size]': number;\n  projects: string[] | undefined | null;\n  phase: string | undefined | null;\n  author: string | undefined | null;\n  sort: Sort;\n  search: string | undefined | null;\n  topics: string[] | undefined | null;\n  areas: string[] | undefined | null;\n  idea_status: string | undefined | null;\n  publication_status: PublicationStatus | undefined | null;\n  project_publication_status: ProjectPublicationStatus | undefined | null;\n  bounding_box: number[] | undefined | null;\n  assignee: string | undefined | null;\n  feedback_needed: boolean | undefined | null;\n}\n\ninterface IAccumulator {\n  ideas: IIdeaData[] | null;\n  queryParameters: IQueryParameters;\n  hasMore: boolean;\n}\n\ntype children = (renderProps: GetIdeasChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: (obj: GetIdeasChildProps) => JSX.Element | null;\n}\n\nexport type GetIdeasChildProps = State & {\n  onLoadMore: () => void;\n  onChangePage: (pageNumber: number) => void;\n  onChangeProjects: (projectIds: string[]) => void;\n  onChangePhase: (phaseId: string) => void;\n  onChangeSearchTerm: (search: string) => void;\n  onChangeSorting: (sort: Sort) => void;\n  onChangeTopics: (topics: string[]) => void;\n  onChangeAreas: (areas: string[]) => void;\n  onChangeStatus: (ideaStatus: string | null) => void;\n  onChangePublicationStatus: (publicationStatus: PublicationStatus) => void;\n  onChangeProjectPublicationStatus: (\n    ProjectPublicationStatus: ProjectPublicationStatus\n  ) => void;\n  onChangeAssignee: (assignee: string | undefined) => void;\n  onChangeFeedbackFilter: (feedbackNeeded: boolean) => void;\n  onIdeaFiltering: (partialQueryParameters: Partial<IQueryParameters>) => void;\n  onResetParams: (paramsToOmit?: (keyof IQueryParameters)[]) => void;\n  type: 'ideas';\n};\n\ninterface State {\n  queryParameters: IQueryParameters;\n  list: IIdeaData[] | undefined | null;\n  hasMore: boolean;\n  querying: boolean;\n  loadingMore: boolean;\n  sortAttribute: SortAttribute;\n  sortDirection: SortDirection;\n  currentPage: number;\n  lastPage: number;\n}\n\nexport default class GetIdeas extends React.Component<Props, State> {\n  defaultQueryParameters: IQueryParameters;\n  queryParameters$: BehaviorSubject<IQueryParameters>;\n  subscriptions: Subscription[];\n\n  static defaultProps = {\n    pageNumber: 1,\n    pageSize: 12,\n    sort: 'random',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.defaultQueryParameters = {\n      'page[number]': props.pageNumber as number,\n      'page[size]': props.pageSize as number,\n      sort: props.sort as Sort,\n      projects: undefined,\n      phase: undefined,\n      author: undefined,\n      search: undefined,\n      topics: undefined,\n      areas: undefined,\n      idea_status: undefined,\n      publication_status: undefined,\n      project_publication_status: undefined,\n      bounding_box: undefined,\n      assignee: undefined,\n      feedback_needed: undefined,\n    };\n    const queryParameters = this.getQueryParameters(\n      this.defaultQueryParameters,\n      props\n    );\n    this.state = {\n      // defaults\n      queryParameters,\n      list: undefined,\n      hasMore: false,\n      querying: true,\n      loadingMore: false,\n      sortAttribute: getSortAttribute<Sort, SortAttribute>(props.sort as Sort),\n      sortDirection: getSortDirection<Sort>(props.sort as Sort),\n      currentPage: 1,\n      lastPage: 1,\n    };\n    this.queryParameters$ = new BehaviorSubject(queryParameters);\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    const queryParameters = this.getQueryParameters(\n      this.state.queryParameters,\n      this.props\n    );\n    const startAccumulatorValue: IAccumulator = {\n      queryParameters,\n      ideas: null,\n      hasMore: false,\n    };\n    const queryParameters$ = this.queryParameters$.pipe(\n      distinctUntilChanged((prev, next) => isEqual(prev, next))\n    );\n\n    if (!this.props.type || this.props.type === 'load-more') {\n      this.subscriptions = [\n        queryParameters$\n          .pipe(\n            mergeScan<IQueryParameters, IAccumulator>(\n              (acc, newQueryParameters) => {\n                const oldQueryParamsWithoutPageNumber = omit(\n                  cloneDeep(acc.queryParameters),\n                  'page[number]'\n                );\n                const newQueryParamsWithoutPageNumber = omit(\n                  cloneDeep(newQueryParameters),\n                  'page[number]'\n                );\n                const oldPageNumber = acc.queryParameters['page[number]'];\n                const newPageNumber = newQueryParameters['page[number]'];\n                const isLoadingMore =\n                  isEqual(\n                    oldQueryParamsWithoutPageNumber,\n                    newQueryParamsWithoutPageNumber\n                  ) && oldPageNumber !== newPageNumber;\n                const pageNumber = isLoadingMore\n                  ? newQueryParameters['page[number]']\n                  : 1;\n                const queryParameters: IQueryParameters = {\n                  ...newQueryParameters,\n                  'page[number]': pageNumber,\n                };\n\n                this.setState({\n                  querying: !isLoadingMore,\n                  loadingMore: isLoadingMore,\n                });\n\n                const stream = this.props.mini ? ideasMiniStream : ideasStream;\n\n                return stream({ queryParameters }).observable.pipe(\n                  map((ideas) => {\n                    const selfLink = get(ideas, 'links.self');\n                    const lastLink = get(ideas, 'links.last');\n                    const hasMore =\n                      isString(selfLink) &&\n                      isString(lastLink) &&\n                      selfLink !== lastLink;\n\n                    return {\n                      queryParameters,\n                      hasMore,\n                      ideas: !isLoadingMore\n                        ? ideas.data\n                        : unionBy(acc.ideas || [], ideas.data, 'id'),\n                    };\n                  })\n                );\n              },\n              startAccumulatorValue\n            )\n          )\n          .subscribe(({ ideas, queryParameters, hasMore }) => {\n            this.setState({\n              queryParameters,\n              hasMore,\n              list: ideas,\n              querying: false,\n              loadingMore: false,\n            });\n          }),\n      ];\n    } else {\n      this.subscriptions = [\n        queryParameters$\n          .pipe(\n            switchMap((queryParameters) => {\n              const oldPageNumber = this.state.queryParameters['page[number]'];\n              const newPageNumber = queryParameters['page[number]'];\n              queryParameters['page[number]'] =\n                newPageNumber !== oldPageNumber ? newPageNumber : 1;\n\n              const stream = this.props.mini ? ideasMiniStream : ideasStream;\n\n              return stream({\n                queryParameters,\n              }).observable.pipe(map((ideas) => ({ queryParameters, ideas })));\n            })\n          )\n          .subscribe(({ ideas, queryParameters }) => {\n            this.setState({\n              queryParameters,\n              list: ideas ? ideas.data : null,\n              querying: false,\n              loadingMore: false,\n              sortAttribute: getSortAttribute<Sort, SortAttribute>(\n                queryParameters.sort\n              ),\n              sortDirection: getSortDirection<Sort>(queryParameters.sort),\n              currentPage: getPageNumberFromUrl(ideas.links.self) || 1,\n              lastPage: getPageNumberFromUrl(ideas.links.last) || 1,\n            });\n          }),\n      ];\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, _prevState: State) {\n    const { children: _prevChildren, ...prevPropsWithoutChildren } = prevProps;\n    const { children: _nextChildren, ...nextPropsWithoutChildren } = this.props;\n\n    if (!isEqual(prevPropsWithoutChildren, nextPropsWithoutChildren)) {\n      const queryParameters = this.getQueryParameters(\n        this.state.queryParameters,\n        this.props\n      );\n      this.queryParameters$.next(queryParameters);\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  propsToQueryParamsShape = () => ({\n    projects: this.props.projectIds,\n    'page[number]': this.props.pageNumber as number,\n    'page[size]': this.props.pageSize as number,\n    phase: this.props.phaseId,\n    author: this.props.authorId,\n    sort: this.props.sort as Sort,\n    topics: this.props.topics,\n    areas: this.props.areas,\n    idea_status: this.props.ideaStatusId,\n    publication_status: this.props.publicationStatus,\n    project_publication_status: this.props.projectPublicationStatus,\n    bounding_box: this.props.boundingBox,\n    assignee: this.props.assignee,\n    feedback_needed: this.props.feedbackNeeded,\n    search: undefined,\n  });\n\n  getQueryParametersFromProps = () => {\n    const queryParamsShaped = this.propsToQueryParamsShape();\n    Object.keys(queryParamsShaped)\n      .filter((key) => queryParamsShaped[key] === null)\n      .forEach((key) => (queryParamsShaped[key] = undefined));\n    return queryParamsShaped as IQueryParameters; // legal because last line changes null values to undefined\n  };\n\n  getQueryParameters = (queryParameters: IQueryParameters, props: Props) => {\n    let projects: string[] | undefined | null = undefined;\n\n    if (isNil(props.projectIds)) {\n      projects = queryParameters.projects;\n    } else if (isArray(props.projectIds)) {\n      projects = props.projectIds;\n    }\n\n    const inputPropsQueryParameters: IQueryParameters = {\n      projects,\n      'page[number]': props.pageNumber as number,\n      'page[size]': props.pageSize as number,\n      phase: props.phaseId,\n      author: props.authorId,\n      sort: props.sort as Sort,\n      search: props.search,\n      topics: props.topics,\n      areas: props.areas,\n      idea_status: props.ideaStatusId,\n      publication_status: props.publicationStatus,\n      project_publication_status: props.projectPublicationStatus,\n      bounding_box: props.boundingBox,\n      assignee: props.assignee,\n      feedback_needed: props.feedbackNeeded,\n    };\n\n    // Omit all queryParameters that are nil.\n    // Why do this? Because we assume that an input prop that's nil is an input prop that should be ignored,\n    // and not overwrite a none-nil value that's part of this.state.queryParameters.\n    return {\n      ...queryParameters,\n      ...omitBy(inputPropsQueryParameters, isNil),\n      // Make an exception for 'projects', because when it's undefined we don't want to ignore it but instead pass it along\n      // to let the request know we don't want to apply a projects filter but load the ideas for all projects\n      projects,\n    };\n  };\n\n  loadMore = () => {\n    if (!this.state.loadingMore) {\n      this.queryParameters$.next({\n        ...this.state.queryParameters,\n        'page[number]': this.state.queryParameters['page[number]'] + 1,\n      });\n    }\n  };\n\n  handleChangePage = (pageNumber: number) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      'page[number]': pageNumber,\n    });\n  };\n\n  handlePhaseOnChange = (phaseId: string) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      phase: phaseId,\n      'page[number]': 1,\n    });\n  };\n\n  handleSearchOnChange = (search: string) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      search: search ? search : undefined,\n      'page[number]': 1,\n    });\n  };\n\n  handleSortOnChange = (sort: Sort) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      sort,\n      'page[number]': 1,\n    });\n  };\n\n  handleProjectsOnChange = (projects: string[]) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      projects,\n      'page[number]': 1,\n    });\n  };\n\n  handleTopicsOnChange = (topics: string[]) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      topics,\n      'page[number]': 1,\n    });\n  };\n\n  handleAreasOnchange = (areas: string[]) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      areas,\n      'page[number]': 1,\n    });\n  };\n\n  handleStatusOnChange = (ideaStatus: string | null) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      idea_status: ideaStatus || undefined,\n      'page[number]': 1,\n    });\n  };\n\n  handlePublicationStatusOnChange = (publicationStatus: PublicationStatus) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      publication_status: publicationStatus,\n      'page[number]': 1,\n    });\n  };\n\n  handleProjectPublicationStatusOnChange = (\n    projectPublicationStatus: ProjectPublicationStatus\n  ) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      project_publication_status: projectPublicationStatus,\n      'page[number]': 1,\n    });\n  };\n\n  handleAssigneeOnChange = (assignee: string | undefined) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      assignee,\n      'page[number]': 1,\n    });\n  };\n\n  handleFeedbackFilterOnChange = (feedbackNeeded: boolean) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      feedback_needed: feedbackNeeded || undefined,\n      'page[number]': 1,\n    });\n  };\n\n  handleIdeaFiltering = (ideaFilters: Partial<IQueryParameters>) => {\n    this.queryParameters$.next({\n      ...this.state.queryParameters,\n      ...ideaFilters,\n      'page[number]': 1,\n    });\n  };\n\n  handleResetParamsToProps = (paramsToOmit?: (keyof IQueryParameters)[]) => {\n    const defaultQueryParameters = this.getQueryParametersFromProps();\n\n    if (paramsToOmit && paramsToOmit.length > 0) {\n      this.queryParameters$.next({\n        ...this.state.queryParameters,\n        ...omit(defaultQueryParameters, paramsToOmit),\n      });\n    } else {\n      this.queryParameters$.next(defaultQueryParameters);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return (children as children)({\n      ...this.state,\n      onLoadMore: this.loadMore,\n      onChangePage: this.handleChangePage,\n      onChangeProjects: this.handleProjectsOnChange,\n      onChangePhase: this.handlePhaseOnChange,\n      onChangeSearchTerm: this.handleSearchOnChange,\n      onChangeSorting: this.handleSortOnChange,\n      onChangeTopics: this.handleTopicsOnChange,\n      onChangeAreas: this.handleAreasOnchange,\n      onChangeStatus: this.handleStatusOnChange,\n      onChangePublicationStatus: this.handlePublicationStatusOnChange,\n      onChangeProjectPublicationStatus: this\n        .handleProjectPublicationStatusOnChange,\n      onChangeAssignee: this.handleAssigneeOnChange,\n      onChangeFeedbackFilter: this.handleFeedbackFilterOnChange,\n      onIdeaFiltering: this.handleIdeaFiltering,\n      onResetParams: this.handleResetParamsToProps,\n      type: 'ideas',\n    });\n  }\n}\n","import { Component } from 'react';\nimport { isString } from 'lodash-es';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, switchMap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { IClusteringData, clusteringByIdStream } from '../services/clusterings';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  id: string;\n}\n\ntype children = (renderProps: GetClusteringChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  clustering: IClusteringData | undefined | null | Error;\n}\n\nexport type GetClusteringChildProps =\n  | IClusteringData\n  | undefined\n  | null\n  | Error;\n\nexport default class GetClustering extends Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      clustering: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          filter(({ id }) => isString(id)),\n          switchMap(({ id }) => clusteringByIdStream(id).observable)\n        )\n        .subscribe((clustering) =>\n          this.setState({\n            clustering: !isNilOrError(clustering)\n              ? clustering.data\n              : clustering,\n          })\n        ),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    this.inputProps$.next({ id });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { clustering } = this.state;\n    return (children as children)(clustering);\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { isEqual, isEmpty } from 'lodash-es';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ReferenceLine,\n  ResponsiveContainer,\n} from 'recharts';\nimport {\n  votesByGenderStream,\n  IVotesByGender,\n} from 'modules/commercial/user_custom_fields/services/stats';\n\nimport styled, { withTheme } from 'styled-components';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../../messages';\n\ntype Props = {\n  ideaIdsComparisons: string[][];\n  normalization: 'absolute' | 'relative';\n  theme: any;\n};\n\ntype State = {\n  series: any[];\n};\n\nconst Container = styled.div``;\n\nclass GenderChart extends PureComponent<Props & InjectedIntlProps, State> {\n  subscription: Subscription;\n\n  constructor(props: Props) {\n    super(props as any);\n    this.state = {\n      series: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resubscribe();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isEqual(this.props.ideaIdsComparisons, prevProps.ideaIdsComparisons) ||\n      !isEqual(this.props.normalization, prevProps.normalization)\n    ) {\n      this.resubscribe();\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  convertToGraphFormat = (series: IVotesByGender[]) => {\n    return ['male', 'female', 'unspecified', '_blank'].map((gender) => {\n      const record = {\n        gender,\n        label: this.props.intl.formatMessage(messages[gender]),\n      };\n      series.forEach((serie, index) => {\n        record[`up ${index + 1}`] = serie.series.up[gender] || 0;\n        record[`down ${index + 1}`] = -serie.series.down[gender] || 0;\n        record[`sum ${index + 1}`] =\n          serie.series.up[gender] - serie.series.down[gender] || 0;\n      });\n      return record;\n    });\n  };\n\n  resubscribe() {\n    if (this.subscription) this.subscription.unsubscribe();\n    this.subscription = combineLatest(\n      this.props.ideaIdsComparisons.map(\n        (ideaIds) =>\n          votesByGenderStream({\n            queryParameters: {\n              ideas: ideaIds,\n              normalization: this.props.normalization,\n            },\n          }).observable\n      )\n    ).subscribe((series) => {\n      this.setState({ series: this.convertToGraphFormat(series) });\n    });\n  }\n\n  render() {\n    const { series } = this.state;\n    const { ideaIdsComparisons, theme } = this.props;\n\n    if (isEmpty(series)) return null;\n\n    return (\n      <Container className={this.props['className']}>\n        <ResponsiveContainer width=\"100%\" aspect={400 / 250}>\n          <BarChart\n            data={series}\n            stackOffset=\"sign\"\n            margin={{ right: 20, top: 10 }}\n          >\n            <XAxis dataKey=\"label\" />\n            <YAxis />\n            <Tooltip />\n            <ReferenceLine y={0} stroke=\"#000\" />\n            {ideaIdsComparisons.length > 1 &&\n              ideaIdsComparisons.map((_, index) => (\n                <Bar\n                  key={`up ${index + 1}`}\n                  dataKey={`up ${index + 1}`}\n                  fill={theme.comparisonColors[index]}\n                  stackId={`votes ${index}`}\n                  maxBarSize={20}\n                />\n              ))}\n            {ideaIdsComparisons.length > 1 &&\n              ideaIdsComparisons.map((_, index) => (\n                <Bar\n                  key={`down ${index + 1}`}\n                  dataKey={`down ${index + 1}`}\n                  fill={theme.comparisonColors[index]}\n                  stackId={`votes ${index}`}\n                  maxBarSize={20}\n                />\n              ))}\n            {ideaIdsComparisons.length === 1 && (\n              <Bar\n                key=\"up 1\"\n                dataKey=\"up 1\"\n                fill={theme.upvotes}\n                stackId=\"votes 1\"\n                maxBarSize={20}\n              />\n            )}\n            {ideaIdsComparisons.length === 1 && (\n              <Bar\n                key=\"down 1\"\n                dataKey=\"down 1\"\n                fill={theme.downvotes}\n                stackId=\"votes 1\"\n                maxBarSize={20}\n              />\n            )}\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n    );\n  }\n}\n\nexport default withTheme(injectIntl(GenderChart));\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  goBack: {\n    id: 'app.components.GoBackButton.group.edit.goBack',\n    defaultMessage: 'Go back',\n  },\n});\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { Node } from '../../../../services/clusterings';\nimport GetIdea from 'resources/GetIdea';\nimport T from 'components/T';\nimport { isNilOrError } from 'utils/helperUtils';\nimport GetProject from 'resources/GetProject';\nimport GetTopic from 'resources/GetTopic';\n\nconst Container = styled.div`\n  width: 280px;\n  margin: 0 0 10px 20px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ColorIndicator: any = styled.div`\n  flex: 0 0 1.2rem;\n  height: 1.2rem;\n  margin: 0.2rem 1rem 0.2rem 0;\n  background-color: ${(props) =>\n    (props as any).theme.comparisonColors[(props as any).index]};\n`;\n\nconst TitleContainer = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst Title = styled.h3`\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst LegendTitle = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\ntype Props = {\n  selectedNodes: Node[][];\n};\n\ninterface State {}\n\nclass ComparisonLegend extends PureComponent<Props, State> {\n  selectionTitle = (nodes: Node[]) => {\n    const node = nodes[0];\n    if (!node) return null;\n\n    switch (node.type) {\n      case 'idea':\n        return (\n          <GetIdea ideaId={node.id}>\n            {(idea) =>\n              isNilOrError(idea) ? null : (\n                <T value={idea && idea.attributes.title_multiloc} />\n              )\n            }\n          </GetIdea>\n        );\n      case 'project':\n        return (\n          <GetProject projectId={node.id}>\n            {(project) =>\n              isNilOrError(project) ? null : (\n                <T value={project && project.attributes.title_multiloc} />\n              )\n            }\n          </GetProject>\n        );\n      case 'topic':\n        return (\n          <GetTopic id={node.id}>\n            {(topic) =>\n              isNilOrError(topic) ? null : (\n                <T value={topic && topic.attributes.title_multiloc} />\n              )\n            }\n          </GetTopic>\n        );\n      case 'custom':\n        return (\n          <span>\n            {node.title ||\n              (node.keywords && node.keywords.map((k) => k.name).join(' '))}\n          </span>\n        );\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { selectedNodes } = this.props;\n\n    return (\n      <Container>\n        {selectedNodes.length === 1 && (\n          <Title>{this.selectionTitle(selectedNodes[0])}</Title>\n        )}\n\n        {selectedNodes.length > 1 &&\n          selectedNodes.map((nodes, index) => (\n            <Row key={index}>\n              <ColorIndicator index={index} />\n              <TitleContainer>\n                <LegendTitle>{this.selectionTitle(nodes)}</LegendTitle>\n              </TitleContainer>\n            </Row>\n          ))}\n      </Container>\n    );\n  }\n}\n\nexport default ComparisonLegend;\n","export default {\n  clickCluster: {\n    name: 'Cluster circle clicked',\n  },\n  ctrlClickCluster: {\n    name: 'Cluster circle CTRL-clicked',\n  },\n  shiftClickCluster: {\n    name: 'Cluster circle SHIFT-clicked',\n  },\n  clickIdea: {\n    name: 'Idea circle clicked',\n  },\n  ctrlClickIdea: {\n    name: 'Idea circle CTRL-clicked',\n  },\n  shiftClickIdea: {\n    name: 'Idea circle SHIFT-clicked',\n  },\n  switchNormalization: {\n    name: 'Normalization switched',\n  },\n  changeTab: {\n    name: 'Clustering tab switched',\n  },\n};\n","import React, { PureComponent } from 'react';\nimport moment from 'moment';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { isEqual, forOwn, get, isEmpty, each } from 'lodash-es';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ReferenceLine,\n  ResponsiveContainer,\n} from 'recharts';\nimport {\n  votesByBirthyearStream,\n  IVotesByBirthyear,\n} from 'modules/commercial/user_custom_fields/services/stats';\n\nimport styled, { withTheme } from 'styled-components';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../../../messages';\n\ntype Props = {\n  ideaIdsComparisons: string[][];\n  normalization: 'absolute' | 'relative';\n  theme: any;\n};\n\ntype State = {\n  series: any[];\n};\n\nconst Container = styled.div``;\n\nclass AgeChart extends PureComponent<Props & InjectedIntlProps, State> {\n  subscription: Subscription;\n\n  constructor(props: Props) {\n    super(props as any);\n    this.state = {\n      series: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resubscribe();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isEqual(this.props.ideaIdsComparisons, prevProps.ideaIdsComparisons) ||\n      !isEqual(this.props.normalization, prevProps.normalization)\n    ) {\n      this.resubscribe();\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  convertToGraphFormat = (series: IVotesByBirthyear[]) => {\n    const currentYear = moment().year();\n\n    const ageBucketRecords = [\n      [0, 20],\n      [20, 30],\n      [30, 40],\n      [40, 50],\n      [50, 60],\n      [60, 100],\n    ].map(([minAge, maxAge]) => {\n      const record = {\n        label: `${minAge}-${maxAge}`,\n      };\n\n      each(series, (serie, serieIndex) => {\n        ['up', 'down', 'total'].forEach((mode) => {\n          forOwn(serie.series[mode], (voteCount, birthYear) => {\n            const age = currentYear - parseInt(birthYear, 10);\n            if (age >= minAge && age < maxAge) {\n              if (!record[`${mode} ${serieIndex + 1}`]) {\n                record[`${mode} ${serieIndex + 1}`] = 0;\n              }\n              record[`${mode} ${serieIndex + 1}`] +=\n                (mode === 'down' ? -1 : 1) * voteCount;\n            }\n          });\n        });\n      });\n      return record;\n    });\n\n    const blankRecord = {\n      label: this.props.intl.formatMessage(messages['_blank']),\n    };\n    each(series, (serie, serieIndex) => {\n      ['up', 'down', 'total'].forEach((mode) => {\n        blankRecord[`${mode} ${serieIndex + 1}`] =\n          (mode === 'down' ? -1 : 1) * get(serie.series, `${mode}._blank`);\n      });\n    });\n\n    return [...ageBucketRecords, blankRecord];\n  };\n\n  resubscribe() {\n    if (this.subscription) this.subscription.unsubscribe();\n    this.subscription = combineLatest(\n      this.props.ideaIdsComparisons.map(\n        (ideaIds) =>\n          votesByBirthyearStream({\n            queryParameters: {\n              ideas: ideaIds,\n              normalization: this.props.normalization,\n            },\n          }).observable\n      )\n    ).subscribe((series) => {\n      this.setState({ series: this.convertToGraphFormat(series) });\n    });\n  }\n\n  render() {\n    const { series } = this.state;\n    const { ideaIdsComparisons, theme } = this.props;\n    if (isEmpty(series)) return null;\n\n    return (\n      <Container className={this.props['className']}>\n        <ResponsiveContainer width=\"100%\" aspect={400 / 250}>\n          <BarChart\n            data={series}\n            stackOffset=\"sign\"\n            margin={{ right: 20, top: 10 }}\n          >\n            <XAxis dataKey=\"label\" />\n            <YAxis />\n            <Tooltip />\n            <ReferenceLine y={0} stroke=\"#000\" />\n            {ideaIdsComparisons.length > 1 &&\n              ideaIdsComparisons.map((_, index) => (\n                <Bar\n                  key={`up ${index + 1}`}\n                  dataKey={`up ${index + 1}`}\n                  fill={theme.comparisonColors[index]}\n                  stackId={`votes ${index}`}\n                  maxBarSize={20}\n                />\n              ))}\n            {ideaIdsComparisons.length > 1 &&\n              ideaIdsComparisons.map((_, index) => (\n                <Bar\n                  key={`down ${index + 1}`}\n                  dataKey={`down ${index + 1}`}\n                  fill={theme.comparisonColors[index]}\n                  stackId={`votes ${index}`}\n                  maxBarSize={20}\n                />\n              ))}\n            {ideaIdsComparisons.length === 1 && (\n              <Bar\n                key=\"up 1\"\n                dataKey=\"up 1\"\n                fill={theme.upvotes}\n                stackId=\"votes 1\"\n                maxBarSize={20}\n              />\n            )}\n            {ideaIdsComparisons.length === 1 && (\n              <Bar\n                key=\"down 1\"\n                dataKey=\"down 1\"\n                fill={theme.downvotes}\n                stackId=\"votes 1\"\n                maxBarSize={20}\n              />\n            )}\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n    );\n  }\n}\n\nexport default withTheme(injectIntl(AgeChart));\n","import React, { PureComponent, FormEvent } from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/UI/Button';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.div`\n  display: inline-block;\n`;\n\ntype Props = {\n  onClick: (arg: FormEvent) => void;\n  className?: string;\n};\n\ninterface State {}\n\nexport default class GoBackButton extends PureComponent<Props, State> {\n  render() {\n    const { onClick, className } = this.props;\n\n    return (\n      <Container className={className || ''}>\n        <Button\n          onClick={onClick}\n          buttonStyle=\"text\"\n          icon=\"arrow-back\"\n          size=\"2\"\n          padding=\"0px\"\n          text={<FormattedMessage {...messages.goBack} />}\n        />\n      </Container>\n    );\n  }\n}\n"],"sourceRoot":""}