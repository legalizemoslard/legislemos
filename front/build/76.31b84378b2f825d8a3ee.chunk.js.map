{"version":3,"sources":["webpack:///./app/containers/UsersShowPage/UserNavbar.tsx","webpack:///./app/components/PostShowComponents/Comments/CommentHeader.tsx","webpack:///./app/resources/GetUserStats.tsx","webpack:///./app/containers/ProjectsShowPage/styles.ts","webpack:///./app/containers/UsersShowPage/UserComments.tsx","webpack:///./app/containers/UsersShowPage/UsersShowPageMeta.tsx","webpack:///./app/containers/UsersShowPage/UserHeader.tsx","webpack:///./app/containers/UsersShowPage/index.tsx","webpack:///./app/components/PostShowComponents/Comments/AdminBadge.tsx","webpack:///./app/resources/GetPost.tsx","webpack:///./app/resources/GetUser.tsx","webpack:///./app/containers/UsersShowPage/messages.ts","webpack:///./app/components/Author/messages.ts","webpack:///./app/containers/UsersShowPage/PostCommentGroup.tsx","webpack:///./app/services/initiatives.ts","webpack:///./app/services/stats.ts","webpack:///./app/resources/GetCommentsForUser.tsx","webpack:///./app/components/IdeaCards/index.tsx","webpack:///./app/components/Author/index.tsx"],"names":["UserNavbarWrapper","styled","div","theme","menuHeight","media","smallerThanMaxTablet","Border","UserNavbarButton","button","colorText","fontSizes","base","rgba","colorMain","smallerThanMinTablet","TabIcon","Icon","UserNavbar","memo","props","currentTab","selectTab","ideasCount","commentsCount","removeFocus","useCallback","event","preventDefault","role","onMouseDown","onClick","className","name","ariaHidden","isNilOrError","FormattedMessage","messages","postsWithCount","values","commentsWithCount","Data","adopt","userId","render","resource","inputProps","dataProps","Container","isRtl","Left","Right","StyledAuthor","Author","CommentHeader","this","projectId","authorId","commentType","commentCreatedAt","moderator","hasAuthorId","isLinkToProfile","size","showModeration","createdAt","avatarBadgeBgColor","horizontalLayout","color","colors","label","fontSize","fontWeight","underline","PureComponent","GetUserStats","state","count","userId$","BehaviorSubject","resourceType$","subscription","combineLatest","pipe","distinctUntilChanged","switchMap","resourceType","ideasCountForUser","observable","commentsCountForUser","subscribe","response","setState","prevProps","next","unsubscribe","children","React","ProjectPageSectionTitle","h2","xxl","Footer","MessageContainer","medium","LoadMoreButton","Button","UserComments","comments","authUser","commentsList","undefined","loadingComments","length","id","noCommentsForUser","noCommentsForYou","commentGroups","groupBy","comment","relationships","post","data","ScreenReaderOnly","tagName","invisibleTitleUserComments","Object","keys","map","postId","commentGroup","postType","type","key","hasMore","loadMore","processing","loadingMore","icon","iconAriaHidden","textColor","textHoverColor","darken","bgColor","bgHoverColor","height","loadMoreComments","tryAgain","UserCommentsWithHocs","withTheme","UsersShowPageMetaWithHoc","injectIntl","intl","tenantLocales","tenant","locale","user","formatMessage","location","window","firstName","attributes","first_name","lastName","last_name","organizationNameMultiLoc","settings","core","organization_name","tenantName","getLocalized","usersShowPageIndexTitle","metaTitle","usersShowPageDescription","userShowPageMetaDescription","Helmet","unread_notifications","content","property","href","dataprops","UserAvatar","UserInfo","FullName","h1","xl","JoinedAt","Bio","EditProfileButton","UserHeader","windowSize","hideBio","smallerThanSmallTablet","viewportWidths","smallTablet","memberSinceMoment","created_at","format","hasDescription","forOwn","bio_multiloc","value","_key","isEmpty","memberSince","date","supportHtml","linkTo","buttonStyle","background","editProfile","userSlug","slug","NotFoundContainer","main","large","footerHeight","mobileMenuHeight","mobileTopBarHeight","StyledContentContainer","ContentContainer","phone","UserIdeas","UsersShowPage","params","useState","setCurrentTab","savedScrollIndex","setSavedScrollIndex","previousPathName","useContext","PreviousPathnameContext","isError","user404NotFound","text","goBackToPreviousPage","toTab","oldScroll","pageYOffset","scrollTo","maxWidth","maxPageWidth","invisibleTitleMessage","invisibleTitlePostsList","withRouter","span","clRedError","xs","borderRadius","lighten","official","GetPost","resetOnChange","inputProps$","subscriptions","prev","tap","isString","ideaByIdStream","initiativeByIdStream","ideaBySlugStream","initiativeBySlugStream","of","forEach","Component","GetUser","userByIdStream","userBySlugStream","defineMessages","defaultMessage","seePost","seeInitiative","a11y_postCommentPostedIn","a11y_initiativePostedIn","a11y_upvotesCount","a11y_postedBy","defaultCardStyle","PostLink","Link","PostLinkLeft","StyledIcon","PostLinkRight","VotesContainer","VoteIcon","VoteCount","CommentContainer","separation","nothingHappens","PostCommentGroup","eventEmitter","emit","title_multiloc","get","to","onIdeaLinkClick","commentId","canModerateProject","editing","onCommentSaved","onCancelEditing","upvotes_count","upvotesCount","initiativeSlug","streams","apiEndpoint","API_PATH","streamParams","cacheStream","initiativeId","object","add","initiative","update","fetchAllWith","Promise","all","first","toPromise","delete","ideasByStatusXlsxEndpoint","ideasByTimeXlsxEndpoint","ideasByTimeCumulativeXlsxEndpoint","ideasByTopicXlsxEndpoint","ideasByProjectXlsxEndpoint","userXlsxEndpoint","usersByTimeXlsxEndpoint","usersByTimeCumulativeXlsxEndpoint","activeUsersByTimeXlsxEndpoint","activeUsersByTimeCumulativeXlsxEndpoint","commentsByTimeCumulativeXlsxEndpoint","commentsByTopicXlsxEndpoint","commentsByProjectXlsxEndpoint","votesByTimeXlsxEndpoint","votesByTopicXlsxEndpoint","votesByProjectXlsxEndpoint","GetCommentsForUser","incr","pageNumber","pageNumber$","initialState","querying","commentsForUserStream","queryParameters","newComments","selfLink","lastLink","WithFiltersSidebar","lazy","WithoutFiltersSidebar","Suspense","fallback","showFiltersSidebar","smallPhone","AuthorContainer","StyledAvatar","Avatar","AuthorMeta","AuthorNameContainer","TimeAgo","small","showAvatar","author","authorCanModerate","canModerate","FormattedRelative"],"mappings":"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","file":"76.31b84378b2f825d8a3ee.chunk.js","sourcesContent":["import React, { memo, useCallback, MouseEvent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// resources\nimport GetUserStats, { GetUserStatsChildProps } from 'resources/GetUserStats';\n\n// styles\nimport { fontSizes, media } from 'utils/styleUtils';\nimport styled from 'styled-components';\nimport { rgba } from 'polished';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport { UserTab } from './';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst UserNavbarWrapper = styled.div`\n  width: 100%;\n  background-color: white;\n  position: sticky;\n  top: ${({ theme }) => theme.menuHeight}px;\n  left: 0;\n  z-index: 10;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.03);\n  border-top: 1px solid rgba(0, 0, 0, 0.03);\n  display: flex;\n  justify-content: center;\n  height: 54px;\n\n  ${media.smallerThanMaxTablet`\n    top: 0px;\n  `}\n`;\n\nconst Border = styled.div`\n  height: 3px;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  background: transparent;\n`;\n\nconst UserNavbarButton = styled.button`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  padding: 0 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 100ms ease;\n  white-space: nowrap;\n  height: 100%;\n  position: relative;\n  margin: 0px;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: ${({ theme }) => theme.colorText};\n\n    ${Border} {\n      background: ${({ theme }) => rgba(theme.colorMain, 0.3)};\n    }\n  }\n\n  &.active {\n    ${Border} {\n      background: ${({ theme }) => theme.colorMain};\n    }\n\n    &:before {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n      z-index: -1;\n      background-color: ${({ theme }) => rgba(theme.colorMain, 0.05)};\n      pointer-events: none;\n    }\n  }\n\n  ${media.smallerThanMinTablet`\n    flex: 1;\n  `}\n`;\n\nconst TabIcon = styled(Icon)`\n  color: ${({ theme }) => theme.colorText};\n  height: 22px;\n  margin-right: 10px;\n`;\n\ninterface InputProps {\n  currentTab: UserTab;\n  selectTab: (tab: UserTab) => () => void;\n  userId: string;\n}\n\ninterface DataProps {\n  ideasCount: GetUserStatsChildProps;\n  commentsCount: GetUserStatsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst UserNavbar = memo<Props>((props) => {\n  const { currentTab, selectTab, ideasCount, commentsCount } = props;\n\n  const removeFocus = useCallback((event: MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n  }, []);\n\n  return (\n    <UserNavbarWrapper role=\"tablist\">\n      <UserNavbarButton\n        onMouseDown={removeFocus}\n        onClick={selectTab('ideas')}\n        className={currentTab === 'ideas' ? 'active' : ''}\n        role=\"tab\"\n        aria-selected={currentTab === 'ideas'}\n      >\n        <Border aria-hidden />\n        <TabIcon name=\"idea\" ariaHidden />\n        {!isNilOrError(ideasCount) && (\n          <FormattedMessage\n            {...messages.postsWithCount}\n            values={{ ideasCount }}\n          />\n        )}\n      </UserNavbarButton>\n      <UserNavbarButton\n        onMouseDown={removeFocus}\n        onClick={selectTab('comments')}\n        className={`e2e-comment-section-nav ${\n          currentTab === 'comments' ? 'active' : ''\n        }`}\n        role=\"tab\"\n        aria-selected={currentTab === 'comments'}\n      >\n        <Border aria-hidden />\n        <TabIcon name=\"comments\" ariaHidden />\n        {!isNilOrError(commentsCount) && (\n          <FormattedMessage\n            {...messages.commentsWithCount}\n            values={{ commentsCount }}\n          />\n        )}\n      </UserNavbarButton>\n    </UserNavbarWrapper>\n  );\n});\n\nconst Data = adopt<DataProps, InputProps>({\n  ideasCount: ({ userId, render }) => (\n    <GetUserStats userId={userId} resource=\"ideas\">\n      {render}\n    </GetUserStats>\n  ),\n  commentsCount: ({ userId, render }) => (\n    <GetUserStats userId={userId} resource=\"comments\">\n      {render}\n    </GetUserStats>\n  ),\n});\n\nconst WrappedUserNavbar = (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <UserNavbar {...inputProps} {...dataProps} />}\n  </Data>\n);\n\nexport default WrappedUserNavbar;\n","import React, { PureComponent } from 'react';\n\n// components\nimport Author from 'components/Author';\nimport AdminBadge from './AdminBadge';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors, fontSizes, isRtl } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 2px;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst Left = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `}\n`;\n\nconst StyledAuthor = styled(Author)`\n  margin-left: -4px;\n`;\n\ninterface InputProps {\n  className?: string;\n  projectId?: string | null;\n  authorId: string | null;\n  commentId: string;\n  commentType: 'parent' | 'child';\n  commentCreatedAt: string;\n  moderator: boolean;\n}\n\ninterface Props extends InputProps {}\n\ninterface State {}\n\nexport default class CommentHeader extends PureComponent<Props, State> {\n  render() {\n    const {\n      projectId,\n      authorId,\n      commentType,\n      commentCreatedAt,\n      moderator,\n      className,\n    } = this.props;\n    const hasAuthorId = !!authorId;\n\n    return (\n      <Container className={className || ''}>\n        <Left>\n          <StyledAuthor\n            authorId={authorId}\n            isLinkToProfile={hasAuthorId}\n            size={30}\n            projectId={projectId}\n            showModeration={moderator}\n            createdAt={commentCreatedAt}\n            avatarBadgeBgColor={commentType === 'child' ? '#fbfbfb' : '#fff'}\n            horizontalLayout={true}\n            color={colors.label}\n            fontSize={fontSizes.base}\n            fontWeight={400}\n            underline={true}\n          />\n        </Left>\n        <Right>{moderator && <AdminBadge />}</Right>\n      </Container>\n    );\n  }\n}\n","// Libraries\nimport React from 'react';\nimport { Subscription, BehaviorSubject, combineLatest } from 'rxjs';\nimport { ideasCountForUser, commentsCountForUser } from 'services/stats';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\n\ninterface InputProps {}\n\ntype children = (renderProps: GetUserStatsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n  userId: string;\n  resource: 'comments' | 'ideas';\n}\n\ninterface State {\n  count: number | undefined | null | Error;\n}\n\nexport type GetUserStatsChildProps = number | undefined | null | Error;\n\nexport default class GetUserStats extends React.PureComponent<Props, State> {\n  private subscription: Subscription;\n  private userId$: BehaviorSubject<string>;\n  private resourceType$: BehaviorSubject<'comments' | 'ideas'>;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: null,\n    };\n  }\n\n  componentDidMount() {\n    const { resource, userId } = this.props;\n\n    this.userId$ = new BehaviorSubject(userId);\n    this.resourceType$ = new BehaviorSubject(resource);\n\n    this.subscription = combineLatest(\n      this.resourceType$.pipe(distinctUntilChanged()),\n      this.userId$.pipe(distinctUntilChanged())\n    )\n      .pipe(\n        switchMap(([resourceType, userId]) => {\n          if (resourceType === 'ideas') {\n            return ideasCountForUser(userId).observable;\n          }\n\n          return commentsCountForUser(userId).observable;\n        })\n      )\n      .subscribe((response) => {\n        this.setState({\n          count: !isNilOrError(response) ? response.count : response,\n        });\n      });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { resource, userId } = this.props;\n\n    if (prevProps.resource !== resource) {\n      this.resourceType$.next(resource);\n    }\n    if (prevProps.userId !== userId) {\n      this.userId$.next(resource);\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  render() {\n    const { children } = this.props;\n    const { count } = this.state;\n    return (children as children)(count);\n  }\n}\n","import styled from 'styled-components';\nimport { fontSizes, isRtl } from 'utils/styleUtils';\n\nexport const maxPageWidth = 1166;\n\nexport const ProjectPageSectionTitle = styled.h2`\n  color: ${(props: any) => props.theme.colorText};\n  font-size: ${fontSizes.xxl}px;\n  line-height: normal;\n  font-weight: 500;\n  text-align: left;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  margin: 0;\n  margin-bottom: 25px;\n  padding: 0;\n\n  ${isRtl`\n    text-align: right;\n  `}\n`;\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\nimport { groupBy } from 'lodash-es';\n\n// components\nimport PostCommentGroup from './PostCommentGroup';\nimport Button from 'components/UI/Button';\n\n// resources\nimport GetCommentsForUser, {\n  GetCommentsForUserChildProps,\n} from 'resources/GetCommentsForUser';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// style\nimport styled, { withTheme } from 'styled-components';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { darken, rgba } from 'polished';\nimport { media, colors, fontSizes } from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n\n  max-width: 760px;\n`;\n\nconst Footer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n\n  ${media.smallerThanMinTablet`\n    flex-direction: column;\n    align-items: stretch;\n    margin-top: 0px;\n  `}\n`;\n\nconst MessageContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${colors.label};\n  font-size: ${fontSizes.medium}px;\n  font-weight: 400;\n`;\n\nconst LoadMoreButton = styled(Button)``;\n\ninterface InputProps {\n  userId: string;\n}\n\ninterface DataProps {\n  comments: GetCommentsForUserChildProps;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface Props extends InputProps, DataProps {\n  theme: any;\n}\n\nexport const UserComments = memo<Props>(\n  ({ comments, userId, theme, authUser }) => {\n    if (!isNilOrError(comments)) {\n      const { commentsList } = comments;\n\n      if (commentsList === undefined) {\n        return (\n          <MessageContainer>\n            <FormattedMessage {...messages.loadingComments} />\n          </MessageContainer>\n        );\n      }\n\n      if (\n        commentsList === null ||\n        (!isNilOrError(commentsList) && commentsList.length === 0)\n      ) {\n        if (!isNilOrError(authUser) && userId === authUser.id) {\n          return (\n            <MessageContainer>\n              <FormattedMessage {...messages.noCommentsForYou} />\n            </MessageContainer>\n          );\n        }\n\n        return (\n          <MessageContainer>\n            <FormattedMessage {...messages.noCommentsForUser} />\n          </MessageContainer>\n        );\n      }\n\n      if (!isNilOrError(commentsList) && commentsList.length > 0) {\n        const commentGroups = groupBy(\n          commentsList,\n          (comment) => comment.relationships.post.data.id\n        );\n\n        return (\n          <Container className=\"e2e-profile-comments\">\n            <ScreenReaderOnly>\n              <FormattedMessage\n                tagName=\"h2\"\n                {...messages.invisibleTitleUserComments}\n              />\n            </ScreenReaderOnly>\n            <>\n              {Object.keys(commentGroups).map((postId) => {\n                const commentGroup = commentGroups[postId];\n                const postType = commentGroup[0].relationships.post.data\n                  .type as 'idea' | 'initiative';\n\n                return (\n                  <PostCommentGroup\n                    key={postId}\n                    postId={postId}\n                    postType={postType}\n                    comments={commentGroup}\n                    userId={userId}\n                  />\n                );\n              })}\n            </>\n\n            {comments.hasMore && (\n              <Footer>\n                <LoadMoreButton\n                  onClick={comments.loadMore}\n                  processing={comments.loadingMore}\n                  icon=\"showMore\"\n                  iconAriaHidden\n                  textColor={theme.colorText}\n                  textHoverColor={darken(0.1, theme.colorText)}\n                  bgColor={rgba(theme.colorText, 0.08)}\n                  bgHoverColor={rgba(theme.colorText, 0.12)}\n                  height=\"50px\"\n                >\n                  <FormattedMessage {...messages.loadMoreComments} />\n                </LoadMoreButton>\n              </Footer>\n            )}\n          </Container>\n        );\n      }\n    }\n\n    return (\n      <MessageContainer>\n        <FormattedMessage {...messages.tryAgain} />\n      </MessageContainer>\n    );\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  comments: ({ userId, render }) => (\n    <GetCommentsForUser userId={userId}>{render}</GetCommentsForUser>\n  ),\n  authUser: <GetAuthUser />,\n});\n\nconst UserCommentsWithHocs = withTheme(UserComments);\n\nconst WrappedUserComments = (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <UserCommentsWithHocs {...inputProps} {...dataProps} />}\n  </Data>\n);\n\nexport default WrappedUserComments;\n","// libraries\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { adopt } from 'react-adopt';\n\n// i18n\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetAppConfigurationLocales, {\n  GetAppConfigurationLocalesChildProps,\n} from 'resources/GetAppConfigurationLocales';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\n\n// services\nimport { IUserData } from 'services/users';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\nimport { getLocalized } from 'utils/i18n';\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\ninterface InputProps {\n  user: IUserData;\n}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  tenantLocales: GetAppConfigurationLocalesChildProps;\n  tenant: GetAppConfigurationChildProps;\n  locale: GetLocaleChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst UsersShowPageMeta: React.SFC<Props & InjectedIntlProps> = ({\n  intl,\n  authUser,\n  tenantLocales,\n  tenant,\n  locale,\n  user,\n}) => {\n  if (\n    !isNilOrError(tenantLocales) &&\n    !isNilOrError(locale) &&\n    !isNilOrError(tenant)\n  ) {\n    const { formatMessage } = intl;\n    const { location } = window;\n    const firstName = user.attributes.first_name;\n    const lastName = user.attributes.last_name;\n    const organizationNameMultiLoc =\n      tenant.attributes.settings.core.organization_name;\n    const tenantName = getLocalized(\n      organizationNameMultiLoc,\n      locale,\n      tenantLocales\n    );\n\n    const usersShowPageIndexTitle = formatMessage(messages.metaTitle, {\n      firstName,\n      lastName,\n    });\n    const usersShowPageDescription = formatMessage(\n      messages.userShowPageMetaDescription,\n      {\n        firstName,\n        lastName,\n        tenantName,\n      }\n    );\n\n    return (\n      <Helmet>\n        <title>\n          {`\n            ${\n              authUser && authUser.attributes.unread_notifications\n                ? `(${authUser.attributes.unread_notifications}) `\n                : ''\n            }\n            ${usersShowPageIndexTitle}`}\n        </title>\n        {getCanonicalLink()}\n        {getAlternateLinks(tenantLocales)}\n        <meta name=\"title\" content={usersShowPageIndexTitle} />\n        <meta name=\"description\" content={usersShowPageDescription} />\n        <meta property=\"og:title\" content={usersShowPageIndexTitle} />\n        <meta property=\"og:description\" content={usersShowPageDescription} />\n        <meta property=\"og:url\" content={location.href} />\n      </Helmet>\n    );\n  }\n\n  return null;\n};\n\nconst UsersShowPageMetaWithHoc = injectIntl<Props>(UsersShowPageMeta);\n\nconst Data = adopt<DataProps, InputProps>({\n  tenantLocales: <GetAppConfigurationLocales />,\n  tenant: <GetAppConfiguration />,\n  authUser: <GetAuthUser />,\n  locale: <GetLocale />,\n});\n\nconst WrappedUsersShowPageMeta = (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataprops) => <UsersShowPageMetaWithHoc {...inputProps} {...dataprops} />}\n  </Data>\n);\n\nexport default WrappedUsersShowPageMeta;\n","import React, { memo } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isEmpty, forOwn } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport moment from 'moment';\n\n// components\nimport Avatar from 'components/Avatar';\nimport QuillEditedContent from 'components/UI/QuillEditedContent';\nimport Button from 'components/UI/Button';\n\n// resources\nimport GetWindowSize, {\n  GetWindowSizeChildProps,\n} from 'resources/GetWindowSize';\nimport GetUser, { GetUserChildProps } from 'resources/GetUser';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport T from 'components/T';\nimport messages from './messages';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes, media, viewportWidths } from 'utils/styleUtils';\nimport useFeatureFlag from 'hooks/useFeatureFlag';\n\nconst Container = styled.div`\n  background-color: white;\n  width: 100%;\n  padding-top: 30px;\n  padding-bottom: 70px;\n\n  ${media.smallerThanMaxTablet`\n    padding: 20px 20px 35px;\n  `}\n`;\n\nconst UserAvatar = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin-top: 0px;\n  font-size: ${fontSizes.base}px;\n`;\n\nconst FullName = styled.h1`\n  width: 100%;\n  font-size: ${fontSizes.xl}px;\n  font-weight: 600;\n  text-align: center;\n  color: ${({ theme }) => theme.colorText};\n  padding: 0px;\n  margin: 0px;\n  margin-bottom: 5px;\n`;\n\nconst JoinedAt = styled.div`\n  width: 100%;\n  font-weight: 300;\n  text-align: center;\n  color: ${({ theme }) => theme.colorText};\n  margin-bottom: 20px;\n`;\n\nconst Bio = styled.div`\n  line-height: 1.25;\n  max-width: 600px;\n  text-align: center;\n  font-weight: 400;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n`;\n\nconst EditProfileButton = styled(Button)``;\n\ninterface InputProps {\n  userSlug: string | null;\n}\n\ninterface DataProps {\n  windowSize: GetWindowSizeChildProps;\n  user: GetUserChildProps;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nexport const UserHeader = memo<Props>((props) => {\n  const { user, authUser, windowSize } = props;\n\n  const hideBio = useFeatureFlag('disable_user_bios');\n\n  const smallerThanSmallTablet = windowSize\n    ? windowSize <= viewportWidths.smallTablet\n    : false;\n\n  if (!isNilOrError(user)) {\n    const memberSinceMoment = moment(user.attributes.created_at).format('LL');\n    let hasDescription = false;\n\n    forOwn(user.attributes.bio_multiloc, (value, _key) => {\n      if (!isEmpty(value) && value !== '<p></p>' && value !== '<p><br></p>') {\n        hasDescription = true;\n      }\n    });\n\n    return (\n      <Container>\n        <UserAvatar>\n          <Avatar userId={user.id} size={smallerThanSmallTablet ? 120 : 150} />\n        </UserAvatar>\n\n        <UserInfo>\n          <FullName id=\"e2e-usersshowpage-fullname\">\n            {user.attributes.first_name} {user.attributes.last_name}\n          </FullName>\n          <JoinedAt>\n            <FormattedMessage\n              {...messages.memberSince}\n              values={{ date: memberSinceMoment }}\n            />\n          </JoinedAt>\n          {!hideBio &&\n            !isEmpty(user.attributes.bio_multiloc) &&\n            hasDescription && (\n              <Bio>\n                <QuillEditedContent>\n                  {user.attributes.bio_multiloc && (\n                    <T\n                      value={user.attributes.bio_multiloc}\n                      supportHtml={true}\n                    />\n                  )}\n                </QuillEditedContent>\n              </Bio>\n            )}\n          {!isNilOrError(authUser) && authUser.id === user.id && (\n            <EditProfileButton\n              linkTo=\"/profile/edit\"\n              buttonStyle=\"text\"\n              icon=\"pencil\"\n              iconAriaHidden\n              className=\"e2e-edit-profile\"\n              bgHoverColor={colors.background}\n            >\n              <FormattedMessage {...messages.editProfile} />\n            </EditProfileButton>\n          )}\n        </UserInfo>\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nconst Data = adopt<DataProps, InputProps>({\n  windowSize: <GetWindowSize />,\n  authUser: <GetAuthUser />,\n  user: ({ userSlug, render }) => <GetUser slug={userSlug}>{render}</GetUser>,\n});\n\nconst WrappedUserHeader = (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <UserHeader {...inputProps} {...dataProps} />}\n  </Data>\n);\n\nexport default WrappedUserHeader;\n","import React, { useState, useContext, memo } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { PreviousPathnameContext } from 'context';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isError } from 'lodash-es';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// components\nimport IdeaCards from 'components/IdeaCards';\nimport ContentContainer from 'components/ContentContainer';\nimport UsersShowPageMeta from './UsersShowPageMeta';\nimport Button from 'components/UI/Button';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// hooks\nimport useUser from 'hooks/useUser';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors, fontSizes } from 'utils/styleUtils';\nimport UserHeader from './UserHeader';\nimport UserNavbar from './UserNavbar';\nimport UserComments from './UserComments';\nimport { maxPageWidth } from 'containers/ProjectsShowPage/styles';\n\nconst NotFoundContainer = styled.main`\n  min-height: calc(100vh - ${(props) => props.theme.menuHeight}px - 1px - 4rem);\n  flex: 1 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 4rem;\n  font-size: ${fontSizes.large}px;\n  color: ${colors.label};\n`;\n\nconst Container = styled.main`\n  min-height: calc(\n    100vh - ${(props) => props.theme.menuHeight + props.theme.footerHeight}px\n  );\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  background: ${colors.background};\n\n  ${media.smallerThanMaxTablet`\n    min-height: calc(100vh - ${(props) => props.theme.mobileMenuHeight}px - ${(\n    props\n  ) => props.theme.mobileTopBarHeight}px);\n  `}\n`;\n\nconst StyledContentContainer = styled(ContentContainer)`\n  flex: 1 1 auto;\n  padding-top: 70px;\n  padding-bottom: 100px;\n  background: ${colors.background};\n  align-items: center;\n\n  ${media.phone`\n    padding-top: 50px;\n  `}\n`;\n\nconst UserIdeas = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\ninterface Props {\n  className?: string;\n}\n\nexport type UserTab = 'ideas' | 'comments';\n\nexport const UsersShowPage = memo<Props & WithRouterProps & InjectedIntlProps>(\n  ({ className, params, intl: { formatMessage } }) => {\n    const [currentTab, setCurrentTab] = useState<UserTab>('ideas');\n    const [savedScrollIndex, setSavedScrollIndex] = useState<number>(0);\n\n    const previousPathName = useContext(PreviousPathnameContext);\n\n    const user = useUser({ slug: params.slug });\n\n    const changeTab = (toTab: UserTab) => () => {\n      const oldScroll = savedScrollIndex;\n      setCurrentTab(toTab);\n      setSavedScrollIndex(window.pageYOffset);\n      window.scrollTo(0, oldScroll);\n    };\n\n    if (isError(user)) {\n      return (\n        <NotFoundContainer className={className || ''}>\n          <Helmet>\n            <meta name=\"prerender-status-code\" content=\"404\" />\n          </Helmet>\n          <p>{formatMessage(messages.user404NotFound)}</p>\n          <Button\n            linkTo={previousPathName || '/'}\n            text={formatMessage(messages.goBackToPreviousPage)}\n            icon=\"arrow-back\"\n          />\n        </NotFoundContainer>\n      );\n    } else if (!isNilOrError(user)) {\n      return (\n        <>\n          <UsersShowPageMeta user={user} />\n          <Container id=\"e2e-usersshowpage\" className={className}>\n            <UserHeader userSlug={user.attributes.slug} />\n\n            <UserNavbar\n              currentTab={currentTab}\n              selectTab={changeTab}\n              userId={user.id}\n            />\n\n            <StyledContentContainer maxWidth={maxPageWidth}>\n              {currentTab === 'ideas' && (\n                <UserIdeas>\n                  <IdeaCards\n                    type=\"load-more\"\n                    authorId={user.id}\n                    invisibleTitleMessage={messages.invisibleTitlePostsList}\n                  />\n                </UserIdeas>\n              )}\n\n              {currentTab === 'comments' && <UserComments userId={user.id} />}\n            </StyledContentContainer>\n          </Container>\n        </>\n      );\n    }\n    return null;\n  }\n);\n\nexport default withRouter(injectIntl(UsersShowPage));\n","import React from 'react';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { lighten } from 'polished';\n\nconst Container = styled.span`\n  color: ${colors.clRedError};\n  font-size: ${fontSizes.xs}px;\n  line-height: 16px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  text-transform: uppercase;\n  text-align: center;\n  font-weight: 600;\n  background: ${lighten(0.52, colors.clRedError)};\n  border: none;\n  padding: 4px 8px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n`;\n\ninterface Props {\n  className?: string;\n}\n\nexport default (props: Props) => (\n  <Container className={props.className}>\n    <FormattedMessage {...messages.official} />\n  </Container>\n);\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { Subscription, BehaviorSubject, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { IIdeaData, ideaByIdStream, ideaBySlugStream } from 'services/ideas';\nimport {\n  IInitiativeData,\n  initiativeByIdStream,\n  initiativeBySlugStream,\n} from 'services/initiatives';\nimport { GetIdeaChildProps } from 'resources/GetIdea';\nimport { GetInitiativeChildProps } from 'resources/GetInitiative';\n\nexport type PostType = 'idea' | 'initiative';\ninterface InputProps {\n  id?: string | null;\n  slug?: string | null;\n  type: PostType;\n  resetOnChange?: boolean;\n}\n\ntype children = (renderProps: GetPostChildProps) => JSX.Element | null;\n\nexport type GetPostChildProps = GetIdeaChildProps | GetInitiativeChildProps;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  post: IIdeaData | IInitiativeData | undefined | null | Error;\n}\n\nexport default class GetPost extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      post: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id, slug, resetOnChange, type } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id, slug, type });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ post: undefined })),\n          switchMap(({ id, slug, type }) => {\n            if (isString(id) && type === 'idea') {\n              return ideaByIdStream(id).observable;\n            }\n\n            if (isString(id) && type === 'initiative') {\n              return initiativeByIdStream(id).observable;\n            }\n\n            if (isString(slug) && type === 'idea') {\n              return ideaBySlugStream(slug).observable;\n            }\n\n            if (isString(slug) && type === 'initiative') {\n              return initiativeBySlugStream(slug).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((post) => {\n          this.setState({ post: !isNilOrError(post) ? post.data : post });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id, slug, type } = this.props;\n    this.inputProps$.next({ id, slug, type });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { post } = this.state;\n    return (children as children)(post);\n  }\n}\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { Subscription, BehaviorSubject, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { IUserData, userBySlugStream, userByIdStream } from 'services/users';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  id?: string | null;\n  slug?: string | null;\n  resetOnChange?: boolean;\n}\n\ntype children = (renderProps: GetUserChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  user: IUserData | undefined | null | Error;\n}\n\nexport type GetUserChildProps = IUserData | undefined | null | Error;\n\nexport default class GetUser extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      user: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { id, slug, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ id, slug });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ user: undefined })),\n          switchMap(({ id, slug }) => {\n            if (isString(id)) {\n              return userByIdStream(id).observable;\n            } else if (isString(slug)) {\n              return userBySlugStream(slug).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((user) => {\n          this.setState({ user: !isNilOrError(user) ? user.data : user });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { id, slug } = this.props;\n    this.inputProps$.next({ id, slug });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { user } = this.state;\n    return (children as children)(user);\n  }\n}\n","/*\n * UsersShowPage Messages\n *\n * This contains all the text for the UsersShowPage component.\n */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  editProfile: {\n    id: 'app.containers.UsersShowPage.editProfile',\n    defaultMessage: 'Edit my profile',\n  },\n  invisibleTitleUserComments: {\n    id: 'app.containers.UsersShowPage.invisibleTitleUserComments',\n    defaultMessage: 'All the comments posted by this user',\n  },\n  invisibleTitlePostsList: {\n    id: 'app.containers.UsersShowPage.invisibleTitlePostsList',\n    defaultMessage: 'All posts submitted by this participant',\n  },\n  postsWithCount: {\n    id: 'app.containers.UsersShowPage.postsWithCount',\n    defaultMessage: 'Posts ({ideasCount})',\n  },\n  commentsWithCount: {\n    id: 'app.containers.UsersShowPage.commentsWithCount',\n    defaultMessage: 'Comments ({commentsCount})',\n  },\n  loadingComments: {\n    id: 'app.containers.UsersShowPage.loadingComments',\n    defaultMessage: 'Loading user comments...',\n  },\n  tryAgain: {\n    id: 'app.containers.UsersShowPage.tryAgain',\n    defaultMessage: 'An error has occured, please try again later.',\n  },\n  noCommentsForYou: {\n    id: 'app.containers.UsersShowPage.noCommentsForYou',\n    defaultMessage: 'You have not posted any comment yet.',\n  },\n  noCommentsForUser: {\n    id: 'app.containers.UsersShowPage.noCommentsForUser',\n    defaultMessage: 'This user has not posted any comment yet.',\n  },\n  seePost: {\n    id: 'app.containers.UsersShowPage.seePost',\n    defaultMessage: 'See post',\n  },\n  seeInitiative: {\n    id: 'app.containers.UsersShowPage.seeInitiative',\n    defaultMessage: 'See initiative',\n  },\n  user404NotFound: {\n    id: 'app.containers.UsersShowPage.user404NotFound',\n    defaultMessage:\n      \"We couldn't find this user's profile. If it was here before, it may have been deleted.\",\n  },\n  goBackToPreviousPage: {\n    id: 'app.containers.UsersShowPage.goBackToPreviousPage',\n    defaultMessage: 'Go back to the previous page',\n  },\n  loadMoreComments: {\n    id: 'app.containers.UsersShowPage.loadMoreComments',\n    defaultMessage: 'Load more comments',\n  },\n  memberSince: {\n    id: 'app.containers.UsersShowPage.memberSince',\n    defaultMessage: 'Member since {date}',\n  },\n  metaTitle: {\n    id: 'app.containers.UsersShowPage.metaTitle',\n    defaultMessage: 'Profile page of {firstName} {lastName} | CitizenLab',\n  },\n  userShowPageMetaDescription: {\n    id: 'app.containers.UsersShowPage.userShowPageMetaDescription',\n    defaultMessage:\n      'This is the profile page of {firstName} {lastName} on the online participation platform of {orgName}. Here is an overview of all of their posts.',\n  },\n  a11y_postCommentPostedIn: {\n    id: 'app.containers.UsersShowPage.a11y_postCommentPostedIn',\n    defaultMessage: 'Post in which this comment was posted: ',\n  },\n  a11y_initiativePostedIn: {\n    id: 'app.containers.UsersShowPage.a11y_initiativePostedIn',\n    defaultMessage: 'Initiative in which this comment was posted: ',\n  },\n  a11y_upvotesCount: {\n    id: 'app.containers.UsersShowPage.a11y_upvotesCount',\n    defaultMessage:\n      '{upvotesCount, plural, =0 {no upvotes} one {1 upvote} other {# upvotes}}',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  a11y_postedBy: {\n    id: 'app.components.Author.a11y_postedBy',\n    defaultMessage: 'Posted by: ',\n  },\n});\n","import React, { PureComponent, FormEvent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\nimport { get } from 'lodash-es';\n\n// resources & typings\nimport GetPost, { GetPostChildProps } from 'resources/GetPost';\nimport GetUser, { GetUserChildProps } from 'resources/GetUser';\n\n// permissions\nimport { canModerateProject } from 'services/permissions/rules/projectPermissions';\n\n// typings\nimport { ICommentData } from 'services/comments';\nimport { IOpenPostPageModalEvent } from 'containers/App';\n\n// utils\nimport eventEmitter from 'utils/eventEmitter';\n\n// style\nimport styled from 'styled-components';\nimport { colors, media, fontSizes, defaultCardStyle } from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { darken } from 'polished';\n\n// Components\nimport { Icon } from 'cl2-component-library';\nimport Link from 'utils/cl-router/Link';\nimport CommentHeader from 'components/PostShowComponents/Comments/CommentHeader';\nimport CommentBody from 'components/PostShowComponents/Comments/CommentBody';\n\n// intl\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport T from 'components/T';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 20px 40px 40px;\n  ${defaultCardStyle};\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  ${media.smallerThanMinTablet`\n    padding: 17px 30px 30px;\n  `}\n`;\n\nconst PostLink = styled(Link)`\n  background: ${colors.background};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 12px;\n  border-radius: ${({ theme }) => theme.borderRadius};\n\n  &:hover,\n  &:focus {\n    background: ${darken(0.02, colors.background)};\n  }\n`;\n\nconst PostLinkLeft = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  color: ${({ theme }) => theme.colorText};\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  margin-right: 10px;\n  min-width: 0px;\n\n  .text {\n    font-size: ${fontSizes.base}px;\n    font-weight: 500;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n`;\n\nconst StyledIcon = styled(Icon)`\n  fill: ${colors.label};\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n\nconst PostLinkRight = styled.div`\n  color: ${colors.label};\n  text-decoration: underline;\n  white-space: nowrap;\n`;\n\nconst VotesContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst VoteIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  flex: 0 0 16px;\n  fill: ${colors.label};\n  margin-right: 5px;\n  margin-top: -2px;\n`;\n\nconst VoteCount = styled.div`\n  color: ${colors.label};\n`;\n\nconst CommentContainer = styled.div`\n  padding-top: 30px;\n\n  &:not(:last-child) {\n    padding-bottom: 30px;\n    border-bottom: 1px solid ${colors.separation};\n  }\n`;\n\ninterface InputProps {\n  postId: string;\n  postType: 'idea' | 'initiative';\n  comments: ICommentData[];\n  userId: string;\n}\n\ninterface DataProps {\n  post: GetPostChildProps;\n  user: GetUserChildProps;\n}\n\nconst nothingHappens = () => {};\n\ninterface Props extends InputProps, DataProps {}\n\nexport class PostCommentGroup extends PureComponent<Props> {\n  onIdeaLinkClick = (event: FormEvent<any>) => {\n    event.preventDefault();\n\n    const { post, postType } = this.props;\n\n    if (!isNilOrError(post)) {\n      eventEmitter.emit<IOpenPostPageModalEvent>('cardClick', {\n        id: post.id,\n        slug: post.attributes.slug,\n        type: postType,\n      });\n    }\n  };\n\n  render() {\n    const { postType, post, comments, userId, user } = this.props;\n\n    if (!isNilOrError(post) && !isNilOrError(user)) {\n      const { slug, title_multiloc } = post.attributes;\n      const projectId: string | null = get(\n        post,\n        'relationships.project.data.id',\n        null\n      );\n\n      return (\n        <Container>\n          <ScreenReaderOnly>\n            {postType === 'idea' ? (\n              <FormattedMessage {...messages.a11y_postCommentPostedIn} />\n            ) : (\n              <FormattedMessage {...messages.a11y_initiativePostedIn} />\n            )}\n          </ScreenReaderOnly>\n          <PostLink to={`/${postType}s/${slug}`} onClick={this.onIdeaLinkClick}>\n            <PostLinkLeft>\n              <StyledIcon\n                ariaHidden\n                name={postType === 'idea' ? 'idea' : 'initiatives'}\n              />\n              <T value={title_multiloc} className=\"text\" />\n            </PostLinkLeft>\n            <PostLinkRight>\n              {postType === 'idea' ? (\n                <FormattedMessage {...messages.seePost} />\n              ) : (\n                <FormattedMessage {...messages.seeInitiative} />\n              )}\n            </PostLinkRight>\n          </PostLink>\n\n          {comments.map((comment) => {\n            return (\n              <CommentContainer key={comment.id}>\n                <CommentHeader\n                  projectId={projectId}\n                  authorId={userId}\n                  commentId={comment.id}\n                  commentType=\"parent\"\n                  commentCreatedAt={comment.attributes.created_at}\n                  moderator={canModerateProject(projectId, { data: user })}\n                />\n                <CommentBody\n                  commentId={comment.id}\n                  commentType=\"parent\"\n                  editing={false}\n                  onCommentSaved={nothingHappens}\n                  onCancelEditing={nothingHappens}\n                />\n                <VotesContainer>\n                  <VoteIcon ariaHidden name=\"upvote\" />\n                  <VoteCount aria-hidden>\n                    {comment.attributes.upvotes_count}\n                  </VoteCount>\n                  <ScreenReaderOnly>\n                    <FormattedMessage\n                      {...messages.a11y_upvotesCount}\n                      values={{\n                        upvotesCount: comment.attributes.upvotes_count,\n                      }}\n                    />\n                  </ScreenReaderOnly>\n                </VotesContainer>\n              </CommentContainer>\n            );\n          })}\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  post: ({ postId, postType, render }) => (\n    <GetPost id={postId} type={postType}>\n      {render}\n    </GetPost>\n  ),\n  user: ({ userId, render }) => <GetUser id={userId}>{render}</GetUser>,\n});\n\nconst WrappedPostComments = (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <PostCommentGroup {...inputProps} {...dataProps} />}\n  </Data>\n);\n\nexport default WrappedPostComments;\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { IRelationship, Multiloc, ImageSizes, ILinks } from 'typings';\nimport { first } from 'rxjs/operators';\nimport { get } from 'lodash-es';\n\nexport type InitiativePublicationStatus =\n  | 'draft'\n  | 'published'\n  | 'archived'\n  | 'spam';\n\nexport type IInitiativeAction =\n  | 'posting_initiative'\n  | 'commenting_initiative'\n  | 'voting_initiative'\n  | 'comment_voting_initiative';\n\nexport interface IInitiativeData {\n  id: string;\n  type: 'initiatives';\n  attributes: {\n    title_multiloc: Multiloc;\n    body_multiloc: Multiloc;\n    author_name: string;\n    slug: string;\n    publication_status: InitiativePublicationStatus;\n    upvotes_count: number;\n    comments_count: number;\n    location_point_geojson: GeoJSON.Point;\n    location_description: string;\n    budget: number | null;\n    created_at: string;\n    updated_at: string;\n    published_at: string;\n    header_bg: ImageSizes;\n    expires_at: string;\n  };\n  relationships: {\n    topics: {\n      data: IRelationship[];\n    };\n    initiative_images: {\n      data: IRelationship[];\n    };\n    author: {\n      data: IRelationship | null;\n    };\n    assignee: {\n      data: IRelationship | null;\n    };\n    initiative_status?: {\n      data: IRelationship | null;\n    };\n    user_vote?: {\n      data: IRelationship | null;\n    };\n  };\n}\n\nexport interface IInitiative {\n  data: IInitiativeData;\n}\n\nexport interface IInitiatives {\n  data: IInitiativeData[];\n  links: ILinks;\n}\n\nexport interface IInitiativeAdd {\n  author_id?: string | null;\n  assignee_id?: string | null;\n  initiative_status_id?: string | null;\n  publication_status?: InitiativePublicationStatus;\n  title_multiloc?: Multiloc;\n  body_multiloc?: Multiloc;\n  topic_ids?: string[] | null;\n  area_ids?: string[] | null;\n  phase_ids?: string[] | null;\n  location_point_geojson?: GeoJSON.Point | null;\n  location_description?: string | null;\n}\nexport interface IInitiativesCount {\n  count: number;\n}\n\nexport interface IInitiativesFilterCounts {\n  initiative_status_id: {\n    [key: string]: number;\n  };\n  area_id: {\n    [key: string]: number;\n  };\n  topic_id: {\n    [key: string]: number;\n  };\n  total: number;\n}\n\nexport interface IGeotaggedInitiativeData {\n  id: string;\n  type: string;\n  attributes: {\n    title_multiloc: Multiloc;\n    location_point_geojson: GeoJSON.Point;\n    location_description: string;\n  };\n}\n\nexport interface IInitiativeLinks {\n  self: string;\n  first: string;\n  prev: string;\n  next: string;\n  last: string;\n}\n\nexport interface InitiativeActivity {\n  id: string;\n  type: 'activity';\n  attributes: {\n    action: string;\n    acted_at: string;\n    change: string[] | { [key: string]: string }[] | null;\n  };\n  relationships: {\n    user: { data: IRelationship };\n  };\n}\n\nexport type InitiativeDisabledReason =\n  | 'not_permitted'\n  | 'not_verified'\n  | 'not_signed_in';\n\nexport function initiativeByIdStream(initiativeId: string) {\n  return streams.get<IInitiative>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}`,\n  });\n}\n\nexport function initiativeBySlugStream(initiativeSlug: string) {\n  return streams.get<IInitiative>({\n    apiEndpoint: `${API_PATH}/initiatives/by_slug/${initiativeSlug}`,\n  });\n}\n\nexport function initiativesStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IInitiatives>({\n    apiEndpoint: `${API_PATH}/initiatives`,\n    ...streamParams,\n  });\n}\n\nexport function initiativesFilterCountsStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInitiativesFilterCounts>({\n    apiEndpoint: `${API_PATH}/initiatives/filter_counts`,\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n\nexport function initiativesMarkersStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<{\n    data: IGeotaggedInitiativeData[];\n    links: IInitiativeLinks;\n  }>({\n    apiEndpoint: `${API_PATH}/initiatives/as_markers`,\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n\nexport async function addInitiative(object: IInitiativeAdd) {\n  const response = await streams.add<IInitiative>(`${API_PATH}/initiatives`, {\n    initiative: object,\n  });\n  return response;\n}\n\nexport async function updateInitiative(\n  initiativeId: string,\n  object: Partial<IInitiativeAdd>\n) {\n  const response = await streams.update<IInitiative>(\n    `${API_PATH}/initiatives/${initiativeId}`,\n    initiativeId,\n    { initiative: object }\n  );\n  streams.fetchAllWith({\n    apiEndpoint: [\n      `${API_PATH}/stats/initiatives_count`,\n      `${API_PATH}/initiatives`,\n      `${API_PATH}/initiatives/${initiativeId}/activities`,\n    ],\n  });\n  return response;\n}\n\nexport async function deleteInitiative(initiativeId: string) {\n  const [initiative, response] = await Promise.all([\n    initiativeByIdStream(initiativeId).observable.pipe(first()).toPromise(),\n    streams.delete(`${API_PATH}/initiatives/${initiativeId}`, initiativeId),\n  ]);\n\n  const authorId = get(initiative, 'relationships.author.data.id', false);\n\n  streams.fetchAllWith({\n    apiEndpoint: authorId\n      ? [`${API_PATH}/users/${authorId}/initiatives_count`]\n      : [],\n  });\n\n  return response;\n}\n\nexport interface IInitiativeAllowedTransitions {\n  [key: string]: {\n    feedback_needed: boolean;\n  };\n}\n\nexport function initiativeAllowedTransitionsStream(initiativeId: string) {\n  return streams.get<IInitiativeAllowedTransitions>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}/allowed_transitions`,\n  });\n}\n\nexport interface IInitiativesFilterCounts {\n  initiative_status_id: {\n    [key: string]: number;\n  };\n  area_id: {\n    [key: string]: number;\n  };\n  topic_id: {\n    [key: string]: number;\n  };\n  total: number;\n}\n\nexport function initiativeActivities(initiativeId: string) {\n  return streams.get<{ data: InitiativeActivity[] }>({\n    apiEndpoint: `${API_PATH}/initiatives/${initiativeId}/activities`,\n  });\n}\n\nexport type IInitiativeActionDescriptors = {\n  [key in IInitiativeAction]: {\n    enabled: boolean;\n    disabled_reason: InitiativeDisabledReason | null;\n  };\n};\n\nexport function getInitiativeActionDescriptors() {\n  return streams.get<IInitiativeActionDescriptors>({\n    apiEndpoint: `${API_PATH}/action_descriptors/initiatives`,\n  });\n}\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { Multiloc } from 'typings';\n\nconst apiEndpoint = `${API_PATH}/stats`;\n\nexport type IResourceByTime =\n  | IIdeasByTime\n  | IUsersByTime\n  | ICommentsByTime\n  | IVotesByTime;\n\n// Ideas\nexport interface IIdeasByTime {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n}\nexport interface IIdeasByStatus {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n  idea_status: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n      color: string;\n      ordering: number;\n    };\n  };\n}\n\nexport interface IIdeasByTopic {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n  topics: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IIdeasByProject {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n  projects: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IIdeasCount {\n  count: number;\n}\n\nexport interface ICount {\n  count: number;\n}\n\nexport function ideasByStatusStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasByStatus>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_status`,\n    ...streamParams,\n  });\n}\nexport const ideasByStatusXlsxEndpoint = `${apiEndpoint}/ideas_by_status_as_xlsx`;\n\nexport const ideasByTimeXlsxEndpoint = `${apiEndpoint}/ideas_by_time_as_xlsx`;\n\nexport function ideasByTimeStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasByTime>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const ideasByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/ideas_by_time_cumulative_as_xlsx`;\n\nexport function ideasByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IIdeasByTime>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport const ideasByTopicXlsxEndpoint = `${apiEndpoint}/ideas_by_topic_as_xlsx`;\n\nexport function ideasByTopicStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasByTopic>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_topic`,\n    ...streamParams,\n  });\n}\n\nexport const ideasByProjectXlsxEndpoint = `${apiEndpoint}/ideas_by_project_as_xlsx`;\n\nexport function ideasByProjectStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IIdeasByProject>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_project`,\n    ...streamParams,\n  });\n}\n\nexport function ideasCount(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasCount>({\n    apiEndpoint: `${apiEndpoint}/ideas_count`,\n    ...streamParams,\n  });\n}\n\nexport function ideasCountForUser(userId: string) {\n  return streams.get<ICount>({\n    apiEndpoint: `${API_PATH}/users/${userId}/ideas_count`,\n  });\n}\n\n// Users\n\nexport interface IUsersCount {\n  count: number;\n}\n\nexport interface IUsersByTime {\n  series: {\n    users: {\n      [key: string]: number;\n    };\n  };\n}\nexport interface IUserEngagementScores {\n  data: IUserEngagementScore[];\n}\n\nexport interface IUserEngagementScore {\n  id: string;\n  type: string;\n  attributes: {\n    sum_score: number;\n  };\n  relationships: {\n    user: {\n      data: {\n        id: string;\n        type: 'user';\n      };\n    };\n  };\n}\n\nexport const userXlsxEndpoint = `${apiEndpoint}/users_count_as_xlsx`;\n\nexport function usersCount(streamParams: IStreamParams | null = null) {\n  return streams.get<IUsersCount>({\n    apiEndpoint: `${apiEndpoint}/users_count`,\n    ...streamParams,\n  });\n}\n\nexport const usersByTimeXlsxEndpoint = `${apiEndpoint}/users_by_time_as_xlsx`;\n\nexport function usersByTimeStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/users_by_time`,\n    ...streamParams,\n  });\n}\n\nexport function commentsByTimeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByTime>({\n    apiEndpoint: `${apiEndpoint}/comments_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const usersByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/users_by_time_cumulative_as_xlsx`;\n\nexport function usersByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/users_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport const activeUsersByTimeXlsxEndpoint = `${apiEndpoint}/active_users_by_time_as_xlsx`;\n\nexport function activeUsersByTimeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/active_users_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const activeUsersByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/active_users_by_time_cumulative_as_xlsx`;\n\nexport function activeUsersByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/active_users_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport function userEngagementScoresStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUserEngagementScores>({\n    apiEndpoint: `${apiEndpoint}/users_engagement_scores`,\n    ...streamParams,\n  });\n}\n\n// Comments\nexport interface ICommentsByTime {\n  series: {\n    comments: {\n      [key: string]: number;\n    };\n  };\n}\n\nexport interface ICommentsByTopic {\n  series: {\n    comments: {\n      [key: string]: number;\n    };\n  };\n  topics: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface ICommentsByProject {\n  series: {\n    comments: {\n      [key: string]: number;\n    };\n  };\n  projects: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport const commentsByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/comments_by_time_cumulative_as_xlsx`;\n\nexport function commentsByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByTime>({\n    apiEndpoint: `${apiEndpoint}/comments_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport const commentsByTopicXlsxEndpoint = `${apiEndpoint}/comments_by_topic_as_xlsx`;\n\nexport function commentsByTopicStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByTopic>({\n    apiEndpoint: `${apiEndpoint}/comments_by_topic`,\n    ...streamParams,\n  });\n}\n\nexport const commentsByProjectXlsxEndpoint = `${apiEndpoint}/comments_by_project_as_xlsx`;\n\nexport function commentsByProjectStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByProject>({\n    apiEndpoint: `${apiEndpoint}/comments_by_project`,\n    ...streamParams,\n  });\n}\n\nexport function commentsCountForUser(userId: string) {\n  return streams.get<ICount>({\n    apiEndpoint: `${API_PATH}/users/${userId}/comments_count`,\n  });\n}\n\n// Votes\nexport interface IVotesByTime {\n  series: {\n    up: { [key: string]: number };\n    down: { [key: string]: number };\n    total: { [key: string]: number };\n  };\n}\n\nexport interface IVotesByTopic {\n  series: {\n    votes: {\n      [key: string]: number;\n    };\n  };\n  topics: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IVotesByProject {\n  series: {\n    total: {\n      [key: string]: number;\n    };\n  };\n  projects: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IVotesByTimeCumulative {\n  series: {\n    up: { [key: string]: number };\n    down: { [key: string]: number };\n    total: { [key: string]: number };\n  };\n}\n\nexport function votesByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IVotesByTimeCumulative>({\n    apiEndpoint: `${apiEndpoint}/votes_by_time_cumulative`,\n    ...streamParams,\n  });\n}\nexport const votesByTimeXlsxEndpoint = `${apiEndpoint}/votes_by_time_as_xlsx`;\n\nexport function votesByTimeStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IVotesByTime>({\n    apiEndpoint: `${apiEndpoint}/votes_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const votesByTopicXlsxEndpoint = `${apiEndpoint}/votes_by_topic_as_xlsx`;\n\nexport function votesByTopicStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IVotesByTopic>({\n    apiEndpoint: `${apiEndpoint}/votes_by_topic`,\n    ...streamParams,\n  });\n}\n\nexport const votesByProjectXlsxEndpoint = `${apiEndpoint}/votes_by_project_as_xlsx`;\n\nexport function votesByProjectStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IVotesByProject>({\n    apiEndpoint: `${apiEndpoint}/votes_by_project`,\n    ...streamParams,\n  });\n}\n\nexport interface IInitiativesCount {\n  count: number;\n}\n\nexport function initiativesCount(streamParams: IStreamParams | null = null) {\n  return streams.get<IInitiativesCount>({\n    apiEndpoint: `${apiEndpoint}/initiatives_count`,\n    ...streamParams,\n  });\n}\n\n// -----\n","import React from 'react';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport {\n  ICommentData,\n  commentsForUserStream,\n  IComments,\n} from 'services/comments';\nimport { get, isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  userId: string;\n}\n\ntype children = (\n  renderProps: GetCommentsForUserChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  commentsList: ICommentData[] | undefined | null | Error;\n  hasMore: boolean;\n  querying: boolean;\n  loadingMore: boolean;\n  pageNumber: number;\n}\n\nexport interface GetCommentsForUserChildProps extends State {\n  loadMore: () => void;\n}\n\nexport default class GetCommentsForUser extends React.Component<Props, State> {\n  private subscriptions: Subscription[];\n  private initialState: State;\n  private pageNumber$: BehaviorSubject<number>;\n\n  constructor(props: Props) {\n    super(props);\n    this.initialState = {\n      commentsList: undefined,\n      hasMore: false,\n      querying: true,\n      loadingMore: false,\n      pageNumber: 1,\n    };\n    this.state = this.initialState;\n    this.pageNumber$ = new BehaviorSubject(1);\n  }\n\n  componentDidMount() {\n    this.subscriptions = [\n      this.pageNumber$\n        .pipe(\n          // when page number changes\n          distinctUntilChanged(),\n          // return the observable stream for these params\n          switchMap((pageNumber) => {\n            return commentsForUserStream(this.props.userId, {\n              queryParameters: {\n                'page[number]': pageNumber,\n                'page[size]': 5,\n              },\n            }).observable;\n          }),\n          // when this stream receives a different value\n          distinctUntilChanged()\n        )\n        .subscribe((newComments: IComments) => {\n          // if we received null or error, we just pass that in in any case\n          if (isNilOrError(newComments)) {\n            this.setState({\n              hasMore: false,\n              commentsList: newComments,\n              loadingMore: false,\n              querying: false,\n            });\n          } else {\n            const { loadingMore, commentsList } = this.state;\n            // is this the last page?\n            const selfLink = get(newComments, 'links.self');\n            const lastLink = get(newComments, 'links.last');\n            const hasMore =\n              isString(selfLink) && isString(lastLink) && selfLink !== lastLink;\n\n            // if we had not set loading more, we should'nt aggregate the content,\n            // it's either first load for this id or a refetch\n            this.setState(({ pageNumber }) => ({\n              hasMore,\n              commentsList: !loadingMore\n                ? newComments.data\n                : [\n                    ...(!isNilOrError(commentsList) ? commentsList : []),\n                    ...newComments.data,\n                  ],\n              loadingMore: false,\n              querying: false,\n              pageNumber: loadingMore ? pageNumber + 1 : pageNumber,\n            }));\n          }\n        }),\n    ];\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.setState(this.initialState);\n      this.pageNumber$.next(1);\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  loadMore = () => {\n    if (this.state.hasMore) {\n      const incr = this.state.pageNumber + 1;\n      this.pageNumber$.next(incr);\n      this.setState({ loadingMore: true });\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return (children as children)({ loadMore: this.loadMore, ...this.state });\n  }\n}\n","import React, { lazy, Suspense, memo } from 'react';\n\n// components\nconst WithFiltersSidebar = lazy(() => import('./WithFiltersSidebar'));\nconst WithoutFiltersSidebar = lazy(() => import('./WithoutFiltersSidebar'));\n\n// styling\nimport styled from 'styled-components';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// typings\nimport {\n  ParticipationMethod,\n  IdeaDefaultSortMethod,\n} from 'services/participationContexts';\nimport { InputProps as GetIdeasInputProps } from 'resources/GetIdeas';\nimport { MessageDescriptor, IParticipationContextType } from 'typings';\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\ninterface Props extends GetIdeasInputProps {\n  showViewToggle?: boolean | undefined;\n  defaultView?: 'card' | 'map' | null | undefined;\n  defaultSortingMethod?: IdeaDefaultSortMethod;\n  participationMethod?: ParticipationMethod | null;\n  participationContextId?: string | null;\n  participationContextType?: IParticipationContextType | null;\n  allowProjectsFilter?: boolean;\n  showFiltersSidebar?: boolean;\n  className?: string;\n  invisibleTitleMessage?: MessageDescriptor;\n}\n\nconst IdeaCards = memo<Props>(\n  ({ className, invisibleTitleMessage, ...props }) => {\n    return (\n      <Container className={className || ''}>\n        {invisibleTitleMessage && (\n          <ScreenReaderOnly>\n            <FormattedMessage tagName=\"h2\" {...invisibleTitleMessage} />\n          </ScreenReaderOnly>\n        )}\n        <Suspense fallback={null}>\n          {props.showFiltersSidebar ? (\n            <WithFiltersSidebar {...props} />\n          ) : (\n            <WithoutFiltersSidebar {...props} />\n          )}\n        </Suspense>\n      </Container>\n    );\n  }\n);\n\nexport default IdeaCards;\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport Avatar from 'components/Avatar';\nimport UserName from 'components/UI/UserName';\n\n// services\nimport { canModerateProject } from 'services/permissions/rules/projectPermissions';\n\n// hooks\nimport useUser from 'hooks/useUser';\n\n// i18n\nimport { FormattedRelative } from 'react-intl';\n\n// style\nimport styled from 'styled-components';\nimport { media, colors, fontSizes, isRtl } from 'utils/styleUtils';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  ${isRtl`\n    justify-content: flex-end;\n  `}\n\n  ${media.smallPhone`\n    flex-direction: column;\n  `}\n`;\n\nconst AuthorContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin-right: 6px;\n  margin-bottom: 1px;\n\n  ${isRtl`\n    margin-right: 0;\n    margin-left: 6px;\n  `}\n`;\n\nconst AuthorMeta = styled.div`\n  &.horizontalLayout {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n\n    ${isRtl`\n        flex-direction: row-reverse;\n    `}\n  }\n`;\n\nconst AuthorNameContainer = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  line-height: 16px;\n  text-decoration: none;\n\n  &.horizontalLayout {\n    margin-right: 10px;\n\n    ${isRtl`\n        margin-right: 0;\n        margin-left: 10px;\n    `}\n  }\n`;\n\nconst TimeAgo = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  line-height: 16px;\n  margin-top: 3px;\n\n  &.horizontalLayout {\n    margin-top: 2px;\n  }\n`;\n\nexport interface Props {\n  authorId: string | null;\n  createdAt?: string;\n  size: number;\n  isLinkToProfile?: boolean;\n  projectId?: string | null;\n  showAvatar?: boolean;\n  avatarBadgeBgColor?: string;\n  showModeration?: boolean; // will show red styling on admins and moderators of projectId\n  fontWeight?: number;\n  fontSize?: number;\n  className?: string;\n  horizontalLayout?: boolean;\n  underline?: boolean;\n  color?: string;\n}\n\nconst Author = memo(\n  ({\n    authorId,\n    createdAt,\n    size,\n    isLinkToProfile,\n    projectId,\n    showAvatar = true,\n    showModeration,\n    className,\n    avatarBadgeBgColor,\n    fontWeight,\n    fontSize,\n    horizontalLayout,\n    color,\n    underline,\n  }: Props) => {\n    const author = useUser({ userId: authorId });\n    const authorCanModerate =\n      !isNilOrError(author) &&\n      showModeration &&\n      canModerateProject(projectId, { data: author });\n\n    return (\n      <Container className={className}>\n        <AuthorContainer>\n          {showAvatar && (\n            <StyledAvatar\n              userId={authorId}\n              size={size}\n              isLinkToProfile={isLinkToProfile}\n              moderator={authorCanModerate}\n              bgColor={avatarBadgeBgColor}\n            />\n          )}\n\n          <AuthorMeta className={horizontalLayout ? 'horizontalLayout' : ''}>\n            <AuthorNameContainer\n              className={horizontalLayout ? 'horizontalLayout' : ''}\n            >\n              <ScreenReaderOnly>\n                <FormattedMessage {...messages.a11y_postedBy} />:\n              </ScreenReaderOnly>\n              <UserName\n                userId={authorId}\n                isLinkToProfile={isLinkToProfile}\n                canModerate={authorCanModerate}\n                fontWeight={fontWeight}\n                fontSize={fontSize}\n                color={color}\n                underline={underline}\n              />\n            </AuthorNameContainer>\n\n            {createdAt && (\n              <TimeAgo className={horizontalLayout ? 'horizontalLayout' : ''}>\n                <FormattedRelative value={createdAt} />\n              </TimeAgo>\n            )}\n          </AuthorMeta>\n        </AuthorContainer>\n      </Container>\n    );\n  }\n);\n\nexport default Author;\n"],"sourceRoot":""}