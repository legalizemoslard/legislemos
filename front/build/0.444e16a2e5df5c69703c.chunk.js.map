{"version":3,"sources":["webpack:///./app/i18n/index.ts"],"names":["addLocaleData","enLocaleData","enTranslationMessages","require","formatTranslationMessages","locale","messages","defaultFormattedMessages","DEFAULT_LOCALE","Object","keys","reduce","formattedMessages","key","message","assign"],"mappings":"sOAAA,gBACA,YACA,gBAGA,IAAAA,eAAcC,WAEd,IAAMC,EAAwBC,EAAQ,Q,4BAEG,SAA5BC,EACXC,EACAC,GAEA,IAAMC,EACJF,IAAWG,iBACPJ,EAA0BI,iBAAgBN,GAC1C,GACN,OAAOO,OAAOC,KAAKJ,GAAUK,QAAO,SAACC,EAAmBC,GACtD,IAAIC,EAAUR,EAASO,GAIvB,OAHKC,GAAWT,IAAWG,mBACzBM,EAAUP,EAAyBM,IAE9BJ,OAAOM,OAAOH,GAAd,gBAAoCC,EAAMC,MAChD,M","file":"0.444e16a2e5df5c69703c.chunk.js","sourcesContent":["import { DEFAULT_LOCALE } from 'containers/App/constants';\nimport { addLocaleData } from 'react-intl';\nimport enLocaleData from 'react-intl/locale-data/en';\nimport { Locale } from 'typings';\n\naddLocaleData(enLocaleData);\n\nconst enTranslationMessages = require('translations/en.json');\n\nexport const formatTranslationMessages = (\n  locale: Locale,\n  messages: { translateId: string }\n) => {\n  const defaultFormattedMessages =\n    locale !== DEFAULT_LOCALE\n      ? formatTranslationMessages(DEFAULT_LOCALE, enTranslationMessages)\n      : {};\n  return Object.keys(messages).reduce((formattedMessages, key) => {\n    let message = messages[key];\n    if (!message && locale !== DEFAULT_LOCALE) {\n      message = defaultFormattedMessages[key];\n    }\n    return Object.assign(formattedMessages, { [key]: message });\n  }, {});\n};\n"],"sourceRoot":""}