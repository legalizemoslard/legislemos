{"version":3,"sources":["webpack:///./app/containers/Admin/projects/edit/events/messages.js","webpack:///./app/containers/Admin/projects/edit/events/index.tsx"],"names":["defineMessages","addEventButton","id","defaultMessage","titleColumnHeader","deleteButtonLabel","editButtonLabel","deleteConfirmationModal","editEventTitle","newEventTitle","titleLabel","locationLabel","dateStartLabel","datesEndLabel","descriptionLabel","saveButtonLabel","saveSuccessLabel","saveErrorMessage","saveSuccessMessage","fileUploadLabel","fileUploadLabelTooltip","titleEvents","subtitleEvents","ListWrapper","styled","div","AddButton","Button","StyledList","List","withRouter","injectIntl","intl","projectId","params","events","projectIds","pageSize","SectionTitle","FormattedMessage","messages","SectionDescription","className","buttonStyle","icon","linkTo","isNilOrError","length","HeadRow","map","event","eventId","startAt","attributes","start_at","format","endAt","end_at","Row","key","value","title_multiloc","location_multiloc","onClick","preventDefault","window","confirm","formatMessage","deleteEvent"],"mappings":"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","file":"59.049b92629ba49193ffb7.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  addEventButton: {\n    id: 'app.containers.AdminPage.ProjectEvents.addEventButton',\n    defaultMessage: 'Add an event',\n  },\n  titleColumnHeader: {\n    id: 'app.containers.AdminPage.ProjectEvents.titleColumnHeader',\n    defaultMessage: 'Title & dates',\n  },\n  deleteButtonLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.deleteButtonLabel',\n    defaultMessage: 'Delete',\n  },\n  editButtonLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.editButtonLabel',\n    defaultMessage: 'Edit',\n  },\n  deleteConfirmationModal: {\n    id: 'app.containers.AdminPage.ProjectEvents.deleteConfirmationModal',\n    defaultMessage:\n      'Are you sure you want to delete this event? There is no way to undo this!',\n  },\n  editEventTitle: {\n    id: 'app.containers.AdminPage.ProjectEvents.editEventTitle',\n    defaultMessage: 'Edit Event',\n  },\n  newEventTitle: {\n    id: 'app.containers.AdminPage.ProjectEvents.newEventTitle',\n    defaultMessage: 'New Event',\n  },\n  titleLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.titleLabel',\n    defaultMessage: 'Title',\n  },\n  locationLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.locationLabel',\n    defaultMessage: 'Location',\n  },\n  dateStartLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.dateStartLabel',\n    defaultMessage: 'Starting date & time',\n  },\n  datesEndLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.datesEndLabel',\n    defaultMessage: 'End date & time',\n  },\n  descriptionLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.descriptionLabel',\n    defaultMessage: 'Description',\n  },\n  saveButtonLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.saveButtonLabel',\n    defaultMessage: 'Save',\n  },\n  saveSuccessLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.saveSuccessLabel',\n    defaultMessage: 'Success!',\n  },\n  saveErrorMessage: {\n    id: 'app.containers.AdminPage.ProjectEvents.saveErrorMessage',\n    defaultMessage: 'We could not save your changes, please try again.',\n  },\n  saveSuccessMessage: {\n    id: 'app.containers.AdminPage.ProjectEvents.saveSuccessMessage',\n    defaultMessage: 'Your changes have been saved.',\n  },\n  fileUploadLabel: {\n    id: 'app.containers.AdminPage.ProjectEvents.fileUploadLabel',\n    defaultMessage: 'Add files to this event',\n  },\n  fileUploadLabelTooltip: {\n    id: 'app.containers.AdminPage.ProjectEvents.fileUploadLabelTooltip',\n    defaultMessage:\n      'Files should not be larger than 50Mb. Added files will be shown on the event card directly.',\n  },\n  titleEvents: {\n    id: 'app.containers.AdminPage.ProjectEvents.titleEvents',\n    defaultMessage: 'Manage events',\n  },\n  subtitleEvents: {\n    id: 'app.containers.AdminPage.ProjectEvents.subtitleEvents',\n    defaultMessage:\n      'Add offline events or meetings that are linked to your project here. Upcoming and past events are always shown immediately under your project.',\n  },\n});\n","// libraries\nimport React from 'react';\nimport styled from 'styled-components';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\nimport { isNilOrError } from 'utils/helperUtils';\nimport moment from 'moment';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// services\nimport { deleteEvent } from 'services/events';\n\n// hooks\nimport useEvents from 'hooks/useEvents';\n\n// components\nimport T from 'components/T';\nimport Button from 'components/UI/Button';\nimport { List, Row, HeadRow } from 'components/admin/ResourceList';\nimport { SectionTitle, SectionDescription } from 'components/admin/Section';\n\nconst ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AddButton = styled(Button)`\n  align-self: flex-start;\n`;\n\nconst StyledList = styled(List)`\n  margin-top: 30px;\n`;\n\nconst AdminProjectEventsIndex = ({\n  intl,\n  params,\n}: WithRouterProps & InjectedIntlProps) => {\n  const { projectId } = params;\n  const { events } = useEvents({\n    projectIds: [projectId],\n    pageSize: 1000,\n  });\n\n  const createDeleteClickHandler = (eventId: string) => (\n    event: React.FormEvent<any>\n  ) => {\n    event.preventDefault();\n\n    if (window.confirm(intl.formatMessage(messages.deleteConfirmationModal))) {\n      deleteEvent(eventId);\n    }\n  };\n\n  return (\n    <>\n      <SectionTitle>\n        <FormattedMessage {...messages.titleEvents} />\n      </SectionTitle>\n      <SectionDescription>\n        <FormattedMessage {...messages.subtitleEvents} />\n      </SectionDescription>\n      <ListWrapper className=\"e2e-projects-events\">\n        <AddButton\n          buttonStyle=\"cl-blue\"\n          icon=\"plus-circle\"\n          linkTo={`/admin/projects/${projectId}/events/new`}\n        >\n          <FormattedMessage {...messages.addEventButton} />\n        </AddButton>\n\n        {!isNilOrError(events) && events.length > 0 && (\n          <StyledList>\n            <HeadRow>\n              <div className=\"expand\">\n                <FormattedMessage {...messages.titleColumnHeader} />\n              </div>\n            </HeadRow>\n            {events.map((event) => {\n              const startAt = moment(event.attributes.start_at).format('LLL');\n              const endAt = moment(event.attributes.end_at).format('LLL');\n\n              return (\n                <Row key={event.id}>\n                  <div className=\"expand\">\n                    <h1>\n                      <T value={event.attributes.title_multiloc} />\n                    </h1>\n                    <p>\n                      <T value={event.attributes.location_multiloc} />\n                    </p>\n                    <p>\n                      {startAt} â†’ {endAt}\n                    </p>\n                  </div>\n                  <Button\n                    buttonStyle=\"text\"\n                    icon=\"delete\"\n                    onClick={createDeleteClickHandler(event.id)}\n                  >\n                    <FormattedMessage {...messages.deleteButtonLabel} />\n                  </Button>\n                  <Button\n                    buttonStyle=\"secondary\"\n                    icon=\"edit\"\n                    linkTo={`/admin/projects/${projectId}/events/${event.id}`}\n                  >\n                    <FormattedMessage {...messages.editButtonLabel} />\n                  </Button>\n                </Row>\n              );\n            })}\n          </StyledList>\n        )}\n      </ListWrapper>\n    </>\n  );\n};\n\nexport default withRouter(injectIntl(AdminProjectEventsIndex));\n"],"sourceRoot":""}