{"version":3,"sources":["webpack:///./app/containers/Admin/users/index.tsx","webpack:///./app/components/HelmetIntl/index.tsx","webpack:///./app/services/globalState.ts","webpack:///./app/containers/Admin/users/GroupsListPanel.tsx","webpack:///./app/containers/Admin/users/events.ts","webpack:///./app/resources/GetUserCount.tsx","webpack:///./app/services/stats.ts"],"names":["Wrapper","styled","div","props","theme","menuHeight","media","smallerThan1280px","LeftPanel","GroupsListPanel","ChildWrapper","UsersPage","setState","groupCreationModal","groupType","values","setErrors","setSubmitting","setStatus","addGroup","then","closeGroupCreationModal","catch","errorResponse","isCLErrorJSON","apiErrors","json","errors","state","messages","modalHeaderStep1","id","type","globalState","init","enabled","this","set","location","title","helmetTitle","description","helmetDescription","className","onCreateGroup","openGroupCreationModal","children","header","renderModalHeader","opened","close","onOpenStep2","openStep2","Formik","initialValues","title_multiloc","membership_type","validate","NormalGroupForm","render","renderNormalGroupForm","onSubmit","handleSubmitForm","isVerificationEnabled","PureComponent","UsersPageWithHocs","withRouter","name","HelmetIntl","formatMessage","intl","Helmet","meta","content","React","injectIntl","stream","observer","observable","Observable","pipe","startWith","scan","oldState","stateInput","propertyName","updatedStateProperties","filter","isObject","isEmpty","publishReplay","refCount","subscribe","initialState","map","filteredState","distinctUntilChanged","newFilteredState","newState","setTimeout","get","next","has","first","toPromise","Container","colors","background","Separator","hr","separation","MenuTitle","borderRadius","ButtonWrapper","AddGroupButton","Button","GroupsList","MenuLink","Link","adminTextColor","fontSizes","base","rgba","clGreen","GroupName","MembersCount","span","highlightedGroups","Set","event","preventDefault","trackCreateGroup","subs","push","eventEmitter","observeEvent","events","membershipAdd","groupsIds","eventValue","removeHighlights","forEach","sub","unsubscribe","usercount","groupsList","groups","to","activeClassName","onlyActiveOnIndex","allUsers","isNilOrError","tagName","groupsTitle","hiddenText","createGroupButton","icon","iconTitle","iconSize","iconColor","onClick","handleCreateGroup","padding","buttonStyle","bgColor","bgHoverColor","group","key","attributes","value","memberships_count","Data","adopt","GroupsListPanelWithHoc","injectTracks","tracks","createGroup","inputProps","dataProps","UsersEvents","GetUserCount","count","subscription","usersCount","response","streamParams","streams","apiEndpoint","userId","API_PATH","ideasByStatusXlsxEndpoint","ideasByTimeXlsxEndpoint","ideasByTimeCumulativeXlsxEndpoint","ideasByTopicXlsxEndpoint","ideasByProjectXlsxEndpoint","userXlsxEndpoint","usersByTimeXlsxEndpoint","usersByTimeCumulativeXlsxEndpoint","activeUsersByTimeXlsxEndpoint","activeUsersByTimeCumulativeXlsxEndpoint","commentsByTimeCumulativeXlsxEndpoint","commentsByTopicXlsxEndpoint","commentsByProjectXlsxEndpoint","votesByTimeXlsxEndpoint","votesByTopicXlsxEndpoint","votesByProjectXlsxEndpoint"],"mappings":"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","file":"106.6754ae08b9ae5a8d8f89.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { Formik, FormikActions } from 'formik';\n\n// Resources\nimport GetFeatureFlag, {\n  GetFeatureFlagChildProps,\n} from 'resources/GetFeatureFlag';\n\n// components\nimport HelmetIntl from 'components/HelmetIntl';\nimport Modal from 'components/UI/Modal';\nimport GroupsListPanel from './GroupsListPanel';\nimport GroupCreationStep1 from './GroupCreationStep1';\nimport NormalGroupForm, { NormalFormValues } from './NormalGroupForm';\n\n// Global state\nimport {\n  globalState,\n  IAdminNoPadding,\n  IGlobalStateService,\n} from 'services/globalState';\n\n// Styling\nimport styled from 'styled-components';\nimport { media } from 'utils/styleUtils';\n\nconst Wrapper = styled.div`\n  height: calc(100vh - ${(props) => props.theme.menuHeight}px);\n  display: flex;\n  background: #fff;\n  position: fixed;\n  right: 0;\n  top: ${(props) => props.theme.menuHeight}px;\n  left: 210px;\n  bottom: 0;\n  ${media.smallerThan1280px`\n    left: 80px;\n  `}\n`;\n\nconst LeftPanel = styled(GroupsListPanel)`\n  width: 300px;\n  flex: 0 0 300px;\n\n  ${media.smallerThan1280px`\n    width: 260px;\n    flex: 0 0 260px;\n  `}\n`;\n\nconst ChildWrapper = styled.div`\n  flex: 1;\n  padding: 50px;\n  background: white;\n  overflow-x: auto;\n  overflow-y: auto;\n`;\n\n// i18n\nimport FormattedMessage from 'utils/cl-intl/FormattedMessage';\nimport messages from './messages';\n\n// Services\nimport { IGroupData, addGroup, MembershipType } from 'services/groups';\n\n// Typings\nimport { CLErrorsJSON } from 'typings';\nimport { isCLErrorJSON } from 'utils/errorUtils';\nimport Outlet from 'components/Outlet';\n\nexport interface Props {\n  isVerificationEnabled: GetFeatureFlagChildProps;\n}\n\nexport type GroupCreationModal = false | 'step1' | MembershipType;\n\nexport interface State {\n  groupCreationModal: GroupCreationModal;\n}\n\nclass UsersPage extends PureComponent<Props & WithRouterProps, State> {\n  globalState: IGlobalStateService<IAdminNoPadding>;\n\n  constructor(props) {\n    super(props);\n    this.globalState = globalState.init('AdminNoPadding', { enabled: true });\n    this.state = {\n      groupCreationModal: false,\n    };\n  }\n\n  componentDidMount() {\n    this.globalState.set({ enabled: true });\n  }\n\n  componentWillUnmount() {\n    this.globalState.set({ enabled: false });\n  }\n\n  openGroupCreationModal = () => {\n    this.setState({ groupCreationModal: 'step1' });\n  };\n\n  closeGroupCreationModal = () => {\n    this.setState({ groupCreationModal: false });\n  };\n\n  openStep2 = (groupType: IGroupData['attributes']['membership_type']) => {\n    this.setState({ groupCreationModal: groupType });\n  };\n\n  handleSubmitForm = (\n    values: NormalFormValues,\n    { setErrors, setSubmitting, setStatus }: FormikActions<NormalFormValues>\n  ) => {\n    addGroup({ ...values })\n      .then(() => {\n        this.closeGroupCreationModal();\n      })\n      .catch((errorResponse) => {\n        if (isCLErrorJSON(errorResponse)) {\n          const apiErrors = (errorResponse as CLErrorsJSON).json.errors;\n          setErrors(apiErrors);\n        } else {\n          setStatus('error');\n        }\n        setSubmitting(false);\n      });\n  };\n\n  renderNormalGroupForm = (props) => <NormalGroupForm {...props} />;\n\n  renderModalHeader = () => {\n    const { groupCreationModal } = this.state;\n    if (groupCreationModal === 'step1') {\n      return <FormattedMessage {...messages.modalHeaderStep1} />;\n    }\n    if (groupCreationModal === 'manual') {\n      return <FormattedMessage {...messages.modalHeaderStep1} />;\n    }\n    return (\n      <Outlet\n        id=\"app.containers.Admin.users.header\"\n        type={groupCreationModal}\n      />\n    );\n  };\n\n  render() {\n    if (!this.props.location) return null;\n\n    const { groupCreationModal } = this.state;\n\n    return (\n      <>\n        <HelmetIntl\n          title={messages.helmetTitle}\n          description={messages.helmetDescription}\n        />\n\n        <Wrapper>\n          <LeftPanel\n            className=\"e2e-left-panel\"\n            onCreateGroup={this.openGroupCreationModal}\n          />\n          <ChildWrapper>{this.props.children}</ChildWrapper>\n        </Wrapper>\n\n        <Modal\n          header={this.renderModalHeader()}\n          opened={groupCreationModal !== false}\n          close={this.closeGroupCreationModal}\n        >\n          <>\n            {groupCreationModal === 'step1' && (\n              <GroupCreationStep1 onOpenStep2={this.openStep2} />\n            )}\n\n            {groupCreationModal === 'manual' && (\n              <Formik\n                initialValues={{\n                  title_multiloc: {},\n                  membership_type: 'manual',\n                }}\n                validate={NormalGroupForm.validate}\n                render={this.renderNormalGroupForm}\n                onSubmit={this.handleSubmitForm}\n              />\n            )}\n\n            <Outlet\n              id=\"app.containers.Admin.users.form\"\n              type={groupCreationModal}\n              onSubmit={this.handleSubmitForm}\n              isVerificationEnabled={this.props.isVerificationEnabled}\n            />\n          </>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst UsersPageWithHocs = withRouter<Props>(UsersPage);\n\nexport default (props) => (\n  <GetFeatureFlag name=\"verification\">\n    {(isVerificationEnabled) => (\n      <UsersPageWithHocs\n        {...props}\n        isVerificationEnabled={isVerificationEnabled}\n      />\n    )}\n  </GetFeatureFlag>\n);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl } from 'utils/cl-intl';\n\ntype Props = {\n  title: ReactIntl.FormattedMessage.MessageDescriptor;\n  description: ReactIntl.FormattedMessage.MessageDescriptor;\n};\n\ninterface State {}\n\nexport class HelmetIntl extends React.PureComponent<\n  Props & InjectedIntlProps,\n  State\n> {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const { title, description } = this.props;\n\n    return (\n      <>\n        <Helmet\n          title={formatMessage(title)}\n          meta={[{ name: 'description', content: formatMessage(description) }]}\n        />\n      </>\n    );\n  }\n}\n\nexport default injectIntl<Props>(HelmetIntl);\n","import { Observer, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  startWith,\n  scan,\n  refCount,\n  publishReplay,\n  first,\n} from 'rxjs/operators';\nimport { isObject, isEmpty, has } from 'lodash-es';\n\n// utils\nimport shallowCompare from 'utils/shallowCompare';\n\n// typings\nimport { UploadFile } from 'typings';\n\nexport interface IIdeasPageGlobalState {\n  title: string | null;\n  description: string | null;\n  selectedTopics: string[];\n  budget: number | null;\n  proposedBudget: number | null;\n  position: string;\n  position_coordinates: GeoJSON.Point | null;\n  submitError: boolean;\n  titleProfanityError: boolean;\n  descriptionProfanityError: boolean;\n  fileOrImageError: boolean;\n  processing: boolean;\n  ideaId: string | null;\n  ideaSlug: string | null;\n  imageFile: UploadFile[];\n  imageId: string | null;\n  ideaFiles: UploadFile[];\n  authorId: string | null;\n}\n\nexport interface IAdminFullWidth {\n  enabled: boolean;\n}\n\nexport interface IAdminNoPadding {\n  enabled: boolean;\n}\n\ntype valueof<T> = T[keyof T];\n\ntype State = {\n  IdeasNewPage?: IIdeasPageGlobalState;\n  IdeasEditPage?: IIdeasPageGlobalState;\n  AdminFullWidth?: IAdminFullWidth;\n  AdminNoPadding?: IAdminNoPadding;\n};\n\ninterface IStateInput {\n  propertyName: keyof State;\n  updatedStateProperties: valueof<State>;\n}\n\ninterface IStream<T> {\n  observer: Observer<T>;\n  observable: Observable<T>;\n}\n\nexport interface IGlobalStateService<T> {\n  observable: Observable<T>;\n  set: (newState: Partial<T>) => void;\n  get: () => Promise<T>;\n}\n\nclass GlobalState {\n  private stream: IStream<any>;\n\n  constructor() {\n    this.stream = {\n      observer: null as any,\n      observable: null as any,\n    };\n\n    this.stream.observable = new Observable<State>((observer) => {\n      this.stream.observer = observer;\n    }).pipe(\n      startWith({}),\n      scan((oldState: State, stateInput: IStateInput) => {\n        const { propertyName, updatedStateProperties } = stateInput;\n\n        const newState = {\n          ...oldState,\n          [propertyName]: {\n            ...oldState[propertyName],\n            ...updatedStateProperties,\n          },\n        };\n\n        return newState;\n      }),\n      filter((state) => isObject(state) && !isEmpty(state)),\n      publishReplay(1),\n      refCount()\n    );\n\n    // keep stream hot\n    this.stream.observable.subscribe();\n  }\n\n  init<T>(propertyName: keyof State, initialState?: T) {\n    const observable: Observable<T> = this.stream.observable.pipe(\n      map((state) => state[propertyName]),\n      filter(\n        (filteredState) => isObject(filteredState) && !isEmpty(filteredState)\n      ),\n      distinctUntilChanged((filteredState, newFilteredState) =>\n        shallowCompare(filteredState, newFilteredState)\n      )\n    );\n\n    const set = (newState: Partial<T>) => this.set(propertyName, newState);\n\n    const get = () => this.get<T>(propertyName);\n\n    if (initialState && isObject(initialState) && !isEmpty(initialState)) {\n      if (!this.stream.observer) {\n        setTimeout(() => set(initialState), 0);\n      } else {\n        set(initialState);\n      }\n    }\n\n    return {\n      observable,\n      set,\n      get,\n    } as IGlobalStateService<T>;\n  }\n\n  set<T>(propertyName: keyof State, updatedStateProperties: Partial<T>) {\n    this.stream.observer.next({\n      propertyName,\n      updatedStateProperties,\n    });\n  }\n\n  get<T>(propertyName: keyof State) {\n    return this.stream.observable\n      .pipe(\n        map((state) => (has(state, propertyName) ? state[propertyName] : null)),\n        first()\n      )\n      .toPromise() as Promise<T>;\n  }\n}\n\nexport const globalState = new GlobalState();\n","// Libraries\nimport React from 'react';\nimport { adopt } from 'react-adopt';\nimport Link from 'utils/cl-router/Link';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { Subscription } from 'rxjs';\n\n// Resources\nimport GetGroups, { GetGroupsChildProps } from 'resources/GetGroups';\nimport GetUserCount, { GetUserCountChildProps } from 'resources/GetUserCount';\nimport { IGroupData } from 'services/groups';\n\n// Events\nimport eventEmitter from 'utils/eventEmitter';\nimport events, { MembershipAdd } from './events';\n\n// Components\nimport Button from 'components/UI/Button';\nimport T from 'components/T';\n\n// i18n\nimport FormattedMessage from 'utils/cl-intl/FormattedMessage';\nimport messages from './messages';\n\n// tracking\nimport { injectTracks } from 'utils/analytics';\nimport tracks from './tracks';\n\n// Styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { rgba } from 'polished';\nimport Outlet from 'components/Outlet';\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 55px 20px;\n  padding-bottom: 10px;\n  background: ${colors.background};\n`;\n\nconst Separator = styled.hr`\n  background: ${colors.separation};\n  border: none;\n  height: 1px;\n  margin: 1rem 0 3rem 0;\n`;\n\nconst MenuTitle = styled.div`\n  align-items: center;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding-left: 10px;\n  margin-bottom: 20px;\n\n  h2 {\n    margin: 0;\n    padding: 0;\n    font-weight: 600;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  flex: 0 0 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 0px;\n`;\n\nconst AddGroupButton = styled(Button)``;\n\nconst GroupsList = styled.div`\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst MenuLink = styled(Link)`\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px;\n  padding-right: 0px;\n  margin-bottom: 6px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  transition: all 80ms ease-out;\n\n  &.highlight {\n    animation-name: highlight;\n    animation-duration: 0.7s;\n  }\n\n  &.active {\n    background: ${rgba(colors.adminTextColor, 0.08)};\n  }\n\n  &:hover,\n  &:focus {\n    color: ${colors.adminTextColor};\n    background: ${rgba(colors.adminTextColor, 0.15)};\n  }\n\n  @keyframes highlight {\n    from {\n      background-color: ${rgba(colors.clGreen, 0)};\n    }\n\n    30% {\n      background-color: ${rgba(colors.clGreen, 0.5)};\n    }\n\n    to {\n      background-color: ${rgba(colors.clGreen, 0)};\n    }\n  }\n`;\n\nconst GroupName = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  span {\n    flex: 1;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst MembersCount = styled.span`\n  flex: 0 0 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 12px;\n`;\n\n// Typings\nexport interface InputProps {\n  className?: string;\n  onCreateGroup: () => void;\n}\n\ninterface DataProps {\n  groups: GetGroupsChildProps;\n  usercount: GetUserCountChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nexport interface State {\n  highlightedGroups: Set<IGroupData['id']>;\n}\n\ninterface Tracks {\n  trackCreateGroup: () => void;\n}\n\nexport class GroupsListPanel extends React.PureComponent<\n  Props & Tracks,\n  State\n> {\n  subs: Subscription[] = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlightedGroups: new Set([]),\n    };\n  }\n\n  componentDidMount() {\n    this.subs.push(\n      eventEmitter\n        .observeEvent<MembershipAdd>(events.membershipAdd)\n        .subscribe(({ eventValue: { groupsIds } }) => {\n          this.setState({ highlightedGroups: new Set(groupsIds) });\n          setTimeout(this.removeHighlights, 3000);\n        })\n    );\n  }\n\n  componentWillUnmount() {\n    this.subs.forEach((sub) => sub.unsubscribe());\n  }\n\n  removeHighlights = () => {\n    this.setState({ highlightedGroups: new Set([]) });\n  };\n\n  handleCreateGroup = (event) => {\n    event.preventDefault();\n    this.props.trackCreateGroup();\n    this.props.onCreateGroup();\n  };\n\n  render() {\n    const {\n      usercount,\n      groups: { groupsList },\n    } = this.props;\n    const { highlightedGroups } = this.state;\n\n    return (\n      <Container className={this.props.className}>\n        <MenuLink to=\"/admin/users\" activeClassName=\"active\" onlyActiveOnIndex>\n          <GroupName>\n            <FormattedMessage {...messages.allUsers} />\n          </GroupName>\n          {!isNilOrError(usercount) && <MembersCount>{usercount}</MembersCount>}\n        </MenuLink>\n        <Separator />\n        <MenuTitle>\n          <FormattedMessage tagName=\"h2\" {...messages.groupsTitle} />\n          <ButtonWrapper>\n            <AddGroupButton\n              className=\"e2e-create-group-button\"\n              hiddenText={<FormattedMessage {...messages.createGroupButton} />}\n              icon=\"plus\"\n              iconTitle={<FormattedMessage {...messages.createGroupButton} />}\n              iconSize=\"11px\"\n              iconColor={colors.adminTextColor}\n              onClick={this.handleCreateGroup}\n              padding=\"8px\"\n              borderRadius=\"50%\"\n              buttonStyle=\"secondary\"\n              bgColor={rgba(colors.adminTextColor, 0.08)}\n              bgHoverColor={rgba(colors.adminTextColor, 0.15)}\n            />\n          </ButtonWrapper>\n        </MenuTitle>\n        <GroupsList className=\"e2e-groups-list\">\n          {!isNilOrError(groupsList) &&\n            groupsList.map((group) => (\n              <MenuLink\n                key={group.id}\n                to={`/admin/users/${group.id}`}\n                activeClassName=\"active\"\n                className={highlightedGroups.has(group.id) ? 'highlight' : ''}\n              >\n                <Outlet\n                  id=\"app.containers.Admin.users.GroupsListPanel.listitem.icon\"\n                  type={group.attributes.membership_type}\n                />\n                <GroupName>\n                  <T value={group.attributes.title_multiloc} />\n                </GroupName>\n                <MembersCount className=\"e2e-group-user-count\">\n                  {group.attributes.memberships_count}\n                </MembersCount>\n              </MenuLink>\n            ))}\n        </GroupsList>\n      </Container>\n    );\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  groups: <GetGroups />,\n  usercount: <GetUserCount />,\n});\n\nconst GroupsListPanelWithHoc = injectTracks<Props>({\n  trackCreateGroup: tracks.createGroup,\n})(GroupsListPanel);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <GroupsListPanelWithHoc {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import { IGroupData } from 'services/groups';\n\nenum UsersEvents {\n  membershipAdd = 'UserAddedToGroup',\n  membershipAddFailed = 'UserAddedToGroupFailed',\n  userDeletionFailed = 'UserDeleteFailed',\n  membershipDeleteFailed = 'UserDeletedFromGroupFailed',\n  userRoleChangeFailed = 'UserRoleChangedFailed',\n}\n\nexport interface MembershipAdd {\n  groupsIds: IGroupData['id'][];\n}\n\nexport default UsersEvents;\n","// Libraries\nimport React from 'react';\nimport { Subscription } from 'rxjs';\nimport { usersCount } from 'services/stats';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {}\n\ntype children = (renderProps: GetUserCountChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  count: number | undefined | null | Error;\n}\n\nexport type GetUserCountChildProps = number | undefined | null | Error;\n\nexport default class GetUserCount extends React.PureComponent<Props, State> {\n  private subscription: Subscription;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: null,\n    };\n  }\n\n  componentDidMount() {\n    this.subscription = usersCount().observable.subscribe((response) => {\n      this.setState({\n        count: !isNilOrError(response) ? response.count : response,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  render() {\n    const { children } = this.props;\n    const { count } = this.state;\n    return (children as children)(count);\n  }\n}\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { Multiloc } from 'typings';\n\nconst apiEndpoint = `${API_PATH}/stats`;\n\nexport type IResourceByTime =\n  | IIdeasByTime\n  | IUsersByTime\n  | ICommentsByTime\n  | IVotesByTime;\n\n// Ideas\nexport interface IIdeasByTime {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n}\nexport interface IIdeasByStatus {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n  idea_status: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n      color: string;\n      ordering: number;\n    };\n  };\n}\n\nexport interface IIdeasByTopic {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n  topics: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IIdeasByProject {\n  series: {\n    ideas: {\n      [key: string]: number;\n    };\n  };\n  projects: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IIdeasCount {\n  count: number;\n}\n\nexport interface ICount {\n  count: number;\n}\n\nexport function ideasByStatusStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasByStatus>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_status`,\n    ...streamParams,\n  });\n}\nexport const ideasByStatusXlsxEndpoint = `${apiEndpoint}/ideas_by_status_as_xlsx`;\n\nexport const ideasByTimeXlsxEndpoint = `${apiEndpoint}/ideas_by_time_as_xlsx`;\n\nexport function ideasByTimeStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasByTime>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const ideasByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/ideas_by_time_cumulative_as_xlsx`;\n\nexport function ideasByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IIdeasByTime>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport const ideasByTopicXlsxEndpoint = `${apiEndpoint}/ideas_by_topic_as_xlsx`;\n\nexport function ideasByTopicStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasByTopic>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_topic`,\n    ...streamParams,\n  });\n}\n\nexport const ideasByProjectXlsxEndpoint = `${apiEndpoint}/ideas_by_project_as_xlsx`;\n\nexport function ideasByProjectStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IIdeasByProject>({\n    apiEndpoint: `${apiEndpoint}/ideas_by_project`,\n    ...streamParams,\n  });\n}\n\nexport function ideasCount(streamParams: IStreamParams | null = null) {\n  return streams.get<IIdeasCount>({\n    apiEndpoint: `${apiEndpoint}/ideas_count`,\n    ...streamParams,\n  });\n}\n\nexport function ideasCountForUser(userId: string) {\n  return streams.get<ICount>({\n    apiEndpoint: `${API_PATH}/users/${userId}/ideas_count`,\n  });\n}\n\n// Users\n\nexport interface IUsersCount {\n  count: number;\n}\n\nexport interface IUsersByTime {\n  series: {\n    users: {\n      [key: string]: number;\n    };\n  };\n}\nexport interface IUserEngagementScores {\n  data: IUserEngagementScore[];\n}\n\nexport interface IUserEngagementScore {\n  id: string;\n  type: string;\n  attributes: {\n    sum_score: number;\n  };\n  relationships: {\n    user: {\n      data: {\n        id: string;\n        type: 'user';\n      };\n    };\n  };\n}\n\nexport const userXlsxEndpoint = `${apiEndpoint}/users_count_as_xlsx`;\n\nexport function usersCount(streamParams: IStreamParams | null = null) {\n  return streams.get<IUsersCount>({\n    apiEndpoint: `${apiEndpoint}/users_count`,\n    ...streamParams,\n  });\n}\n\nexport const usersByTimeXlsxEndpoint = `${apiEndpoint}/users_by_time_as_xlsx`;\n\nexport function usersByTimeStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/users_by_time`,\n    ...streamParams,\n  });\n}\n\nexport function commentsByTimeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByTime>({\n    apiEndpoint: `${apiEndpoint}/comments_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const usersByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/users_by_time_cumulative_as_xlsx`;\n\nexport function usersByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/users_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport const activeUsersByTimeXlsxEndpoint = `${apiEndpoint}/active_users_by_time_as_xlsx`;\n\nexport function activeUsersByTimeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/active_users_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const activeUsersByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/active_users_by_time_cumulative_as_xlsx`;\n\nexport function activeUsersByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUsersByTime>({\n    apiEndpoint: `${apiEndpoint}/active_users_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport function userEngagementScoresStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IUserEngagementScores>({\n    apiEndpoint: `${apiEndpoint}/users_engagement_scores`,\n    ...streamParams,\n  });\n}\n\n// Comments\nexport interface ICommentsByTime {\n  series: {\n    comments: {\n      [key: string]: number;\n    };\n  };\n}\n\nexport interface ICommentsByTopic {\n  series: {\n    comments: {\n      [key: string]: number;\n    };\n  };\n  topics: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface ICommentsByProject {\n  series: {\n    comments: {\n      [key: string]: number;\n    };\n  };\n  projects: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport const commentsByTimeCumulativeXlsxEndpoint = `${apiEndpoint}/comments_by_time_cumulative_as_xlsx`;\n\nexport function commentsByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByTime>({\n    apiEndpoint: `${apiEndpoint}/comments_by_time_cumulative`,\n    ...streamParams,\n  });\n}\n\nexport const commentsByTopicXlsxEndpoint = `${apiEndpoint}/comments_by_topic_as_xlsx`;\n\nexport function commentsByTopicStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByTopic>({\n    apiEndpoint: `${apiEndpoint}/comments_by_topic`,\n    ...streamParams,\n  });\n}\n\nexport const commentsByProjectXlsxEndpoint = `${apiEndpoint}/comments_by_project_as_xlsx`;\n\nexport function commentsByProjectStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICommentsByProject>({\n    apiEndpoint: `${apiEndpoint}/comments_by_project`,\n    ...streamParams,\n  });\n}\n\nexport function commentsCountForUser(userId: string) {\n  return streams.get<ICount>({\n    apiEndpoint: `${API_PATH}/users/${userId}/comments_count`,\n  });\n}\n\n// Votes\nexport interface IVotesByTime {\n  series: {\n    up: { [key: string]: number };\n    down: { [key: string]: number };\n    total: { [key: string]: number };\n  };\n}\n\nexport interface IVotesByTopic {\n  series: {\n    votes: {\n      [key: string]: number;\n    };\n  };\n  topics: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IVotesByProject {\n  series: {\n    total: {\n      [key: string]: number;\n    };\n  };\n  projects: {\n    [key: string]: {\n      title_multiloc: Multiloc;\n    };\n  };\n}\n\nexport interface IVotesByTimeCumulative {\n  series: {\n    up: { [key: string]: number };\n    down: { [key: string]: number };\n    total: { [key: string]: number };\n  };\n}\n\nexport function votesByTimeCumulativeStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IVotesByTimeCumulative>({\n    apiEndpoint: `${apiEndpoint}/votes_by_time_cumulative`,\n    ...streamParams,\n  });\n}\nexport const votesByTimeXlsxEndpoint = `${apiEndpoint}/votes_by_time_as_xlsx`;\n\nexport function votesByTimeStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IVotesByTime>({\n    apiEndpoint: `${apiEndpoint}/votes_by_time`,\n    ...streamParams,\n  });\n}\n\nexport const votesByTopicXlsxEndpoint = `${apiEndpoint}/votes_by_topic_as_xlsx`;\n\nexport function votesByTopicStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IVotesByTopic>({\n    apiEndpoint: `${apiEndpoint}/votes_by_topic`,\n    ...streamParams,\n  });\n}\n\nexport const votesByProjectXlsxEndpoint = `${apiEndpoint}/votes_by_project_as_xlsx`;\n\nexport function votesByProjectStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IVotesByProject>({\n    apiEndpoint: `${apiEndpoint}/votes_by_project`,\n    ...streamParams,\n  });\n}\n\nexport interface IInitiativesCount {\n  count: number;\n}\n\nexport function initiativesCount(streamParams: IStreamParams | null = null) {\n  return streams.get<IInitiativesCount>({\n    apiEndpoint: `${apiEndpoint}/initiatives_count`,\n    ...streamParams,\n  });\n}\n\n// -----\n"],"sourceRoot":""}