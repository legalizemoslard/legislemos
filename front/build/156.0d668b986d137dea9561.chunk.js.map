{"version":3,"sources":["webpack:///./app/containers/Admin/favicon/index.tsx","webpack:///./app/containers/Admin/favicon/messages.js"],"names":["MainDropzone","ImagesDropzone","Preview","Favicon","props","newImage","setState","attributesDiff","favicon","base64","event","preventDefault","tenant","isNilOrError","loading","saved","updateAppConfiguration","state","isCLErrorJSON","errors","json","faviconError","prevProps","this","attributes","large","url","convertUrlToUploadFile","then","res","onSubmit","save","Section","SectionField","key","Label","messages","faviconExplaination","acceptedFileTypes","images","imagePreviewRatio","maxImagePreviewWidth","objectFit","onAdd","handleUploadOnAdd","onRemove","handleUploadOnRemove","label","errorMessage","status","diff","buttonSave","buttonSuccess","saveSuccess","messageError","saveErrorMessage","messageSuccess","saveSuccessMessage","PureComponent","defineMessages","id","defaultMessage"],"mappings":"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","file":"156.0d668b986d137dea9561.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\n// components\nimport { Label } from 'cl2-component-library';\nimport ImagesDropzone from 'components/UI/ImagesDropzone';\nimport { Section, SectionField } from 'components/admin/Section';\nimport SubmitWrapper from 'components/admin/SubmitWrapper';\n\n// utils\nimport { convertUrlToUploadFile } from 'utils/fileTools';\nimport getSubmitState from 'utils/getSubmitState';\n\n// services\nimport {\n  updateAppConfiguration,\n  IUpdatedAppConfigurationProperties,\n} from 'services/appConfiguration';\n\n// resources\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\n\n// intl\nimport messages from './messages';\nimport FormattedMessage from 'utils/cl-intl/FormattedMessage';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// styling\nimport styled from 'styled-components';\n\n// typings\nimport { CLError, UploadFile } from 'typings';\nimport { isCLErrorJSON } from 'utils/errorUtils';\n\nconst MainDropzone = styled(ImagesDropzone)`\n  margin-top: 20px;\n`;\n\nconst Preview = styled(ImagesDropzone)`\n  margin-top: 20px;\n\n  .remove-button {\n    display: none;\n  }\n\n  * {\n    border-radius: 0;\n  }\n`;\n\ninterface IAttributesDiff {\n  favicon?: string;\n}\n\ninterface Props {\n  tenant: GetAppConfigurationChildProps;\n}\n\ntype State = {\n  attributesDiff: IAttributesDiff;\n  errors: { [fieldName: string]: CLError[] };\n  favicon: UploadFile[] | null;\n  faviconError: string | null;\n  saved: boolean;\n  loading: boolean;\n};\n\nclass Favicon extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributesDiff: {},\n      errors: {},\n      favicon: null,\n      faviconError: null,\n      saved: false,\n      loading: false,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tenant } = this.props;\n\n    if (prevProps.tenant !== tenant && !isNilOrError(tenant)) {\n      if (tenant.attributes.favicon && tenant.attributes.favicon.large) {\n        const url = tenant.attributes.favicon.large;\n        convertUrlToUploadFile(url, null, null).then((res) => {\n          if (res) {\n            this.setState({ favicon: [res] });\n          }\n        });\n      }\n    }\n  }\n\n  handleUploadOnAdd = (newImage: UploadFile[]) => {\n    this.setState({\n      attributesDiff: {\n        favicon: newImage[0].base64,\n      },\n      favicon: [newImage[0]],\n    });\n  };\n\n  handleUploadOnRemove = () => {\n    this.setState({ attributesDiff: {}, favicon: null });\n  };\n\n  save = async (event) => {\n    event.preventDefault();\n    const { tenant } = this.props;\n\n    if (!isNilOrError(tenant)) {\n      this.setState({ loading: true, saved: false });\n\n      try {\n        await updateAppConfiguration(\n          this.state.attributesDiff as IUpdatedAppConfigurationProperties\n        );\n        this.setState({ loading: false, saved: true, attributesDiff: {} });\n      } catch (error) {\n        if (isCLErrorJSON(error)) {\n          this.setState({ loading: false, errors: error.json.errors });\n        } else {\n          this.setState({ loading: false, errors: error });\n        }\n      }\n    }\n  };\n\n  render() {\n    const { errors, saved } = this.state;\n    const { tenant } = this.props;\n\n    if (!isNilOrError(tenant)) {\n      const { attributesDiff, faviconError, favicon } = this.state;\n\n      return (\n        <form onSubmit={this.save}>\n          <Section>\n            <SectionField key={'favicon'}>\n              <Label>Favicon</Label>\n              <FormattedMessage {...messages.faviconExplaination} />\n              <MainDropzone\n                acceptedFileTypes=\"image/png\"\n                images={favicon}\n                imagePreviewRatio={1}\n                maxImagePreviewWidth=\"152px\"\n                objectFit=\"contain\"\n                onAdd={this.handleUploadOnAdd}\n                onRemove={this.handleUploadOnRemove}\n                label=\"Drop file here\"\n                errorMessage={faviconError}\n              />\n              <Preview\n                acceptedFileTypes=\"image/png\"\n                images={favicon}\n                imagePreviewRatio={1}\n                maxImagePreviewWidth=\"32px\"\n                objectFit=\"contain\"\n                onAdd={this.handleUploadOnAdd}\n                onRemove={this.handleUploadOnRemove}\n                label=\" \"\n                errorMessage={faviconError}\n              />\n              <Preview\n                acceptedFileTypes=\"image/png\"\n                images={favicon}\n                imagePreviewRatio={1}\n                maxImagePreviewWidth=\"16px\"\n                objectFit=\"contain\"\n                onAdd={this.handleUploadOnAdd}\n                onRemove={this.handleUploadOnRemove}\n                label=\" \"\n                errorMessage={faviconError}\n              />\n            </SectionField>\n          </Section>\n\n          <SubmitWrapper\n            loading={this.state.loading}\n            status={getSubmitState({ errors, saved, diff: attributesDiff })}\n            messages={{\n              buttonSave: messages.save,\n              buttonSuccess: messages.saveSuccess,\n              messageError: messages.saveErrorMessage,\n              messageSuccess: messages.saveSuccessMessage,\n            }}\n          />\n        </form>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default () => (\n  <GetAppConfiguration>\n    {(tenant) => <Favicon tenant={tenant} />}\n  </GetAppConfiguration>\n);\n","/*\n * AdminPage.SettingsPage Messages\n *\n * This contains all the text for the AdminPage.SettingsPage component.\n */\n\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  favicon: {\n    id: 'app.containers.AdminPage.FaviconPage.favicon',\n    defaultMessage: 'Favicon',\n  },\n  save: {\n    id: 'app.containers.AdminPage.FaviconPage.save',\n    defaultMessage: 'Save',\n  },\n  saveSuccess: {\n    id: 'app.containers.AdminPage.FaviconPage.saveSuccess',\n    defaultMessage: 'Success!',\n  },\n  saveErrorMessage: {\n    id: 'app.containers.AdminPage.FaviconPage.saveErrorMessage',\n    defaultMessage: 'Something went wrong, please try again later.',\n  },\n  saveSuccessMessage: {\n    id: 'app.containers.AdminPage.FaviconPage.saveSuccessMessage',\n    defaultMessage: 'Your changes have been saved.',\n  },\n  faviconExplaination: {\n    id: 'app.containers.AdminPage.FaviconPage.faviconExplaination',\n    defaultMessage:\n      \"It has to be a simple enough image to be seen in very little. It should be a square PNG. It can use transparency. If it doesn't, prefer a white background. This should be set once and changed as little as possible.\",\n  },\n});\n"],"sourceRoot":""}