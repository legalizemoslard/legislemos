{"version":3,"sources":["webpack:///./app/components/admin/PostManager/components/LazyPostPreview/messages.ts","webpack:///./app/resources/GetInitiativesPermissions.tsx","webpack:///./app/utils/currency/FormattedBudget.tsx","webpack:///./app/resources/GetResourceFiles.tsx","webpack:///./app/resources/GetIdeaImages.tsx","webpack:///./app/services/ideaImages.ts","webpack:///./app/containers/IdeasShow/IdeaProposedBudget.tsx","webpack:///./app/components/UI/CollapsibleBox/index.tsx","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Idea/VotePreview.tsx","webpack:///./app/containers/IdeasShow/messages.ts","webpack:///./app/components/PostShowComponents/DropdownMap/index.tsx","webpack:///./app/containers/IdeasShow/PostedBy.tsx","webpack:///./app/hooks/useInitiativesPermissions.ts","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Idea/FeedbackSettings.tsx","webpack:///./app/components/admin/PostManager/components/LazyPostPreview/Idea/IdeaContent.tsx","webpack:///./app/resources/GetIdeaVotesCount.tsx","webpack:///./app/services/ideaVotes.ts","webpack:///./app/resources/GetPermission.tsx","webpack:///./app/resources/GetComments.tsx"],"names":["defineMessages","edit","id","defaultMessage","delete","deleteInputConfirmation","deleteInputInTimelineConfirmation","deleteInitiativeConfirmation","voteCounts","currentStatus","assignee","picks","pbItemCountTooltip","cancelEdit","noOne","save","submitError","postedIn","xDaysLeft","proposedBudgetTitle","bodyTitle","children","action","StyledIcon","Icon","injectIntl","value","intl","formatMessage","formatNumber","appConfiguration","isNilOrError","currency","data","attributes","settings","core","name","messages","oneCredit","multipleCredits","numberOfTokens","FormattedNumber","style","minimumFractionDigits","maximumFractionDigits","GetResourceFiles","props","state","files","undefined","this","resourceId","resourceType","resetOnChange","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","tap","setState","filter","isString","switchMap","streamFn","projectFilesStream","phaseFilesStream","eventFilesStream","pageFilesStream","ideaFilesStream","initiativeFilesStream","observable","subscribe","forEach","subscription","unsubscribe","React","Component","GetIdeaImages","ideaImages","ideaId","ideaImagesStream","of","imageId","apiEndpoint","API_PATH","streams","get","streamParams","base64","ordering","bodyData","image","add","ideaImage","ideaByIdStream","fetch","Container","styled","div","theme","colorText","fontSizes","large","media","smallerThanMinTablet","base","memo","className","proposedBudget","colors","separation","borderRadius","Title","TitleIcon","label","ContentLabel","ContentToggleButton","button","darken","ArrowIcon","Wrapper","contentBackgroundColor","largePhone","useState","showContent","setShowContent","handleContentToggle","useCallback","titleIconName","title","e2eId","onClick","classNames","in","timeout","mountOnEnter","unmountOnExit","exit","Suspense","fallback","Label","Block","VotesContainer","UpvotesContainer","DownvotesContainer","VoteIcon","UpvoteIcon","clGreen","DownvoteIcon","clRed","VotesCount","UpvotesCount","DownvotesCount","VotePreview","votesCount","FormattedMessage","up","down","inputProps","sharingModalTitle","optionSharingModalTitle","projectSharingModalTitle","questionSharingModalTitle","issueSharingModalTitle","contributionSharingModalTitle","sharingModalSubtitle","deletedUser","moreOptions","reportAsSpam","editPost","deletePost","goBack","send","skipSharing","reportAsSpamModalTitle","byUserOnDate","createdTimeAgo","or","ideaTwitterMessage","optionTwitterMessage","issueTwitterMessage","projectTwitterMessage","questionTwitterMessage","contributionTwitterMessage","ideaWhatsAppMessage","optionWhatsAppMessage","contributionWhatsAppMessage","projectWhatsAppMessage","questionWhatsAppMessage","issueWhatsAppMessage","ideaEmailSharingSubject","ideaEmailSharingBody","optionEmailSharingSubject","optionEmailSharingBody","contributionEmailSharingSubject","contributionEmailSharingBody","questionEmailSharingSubject","questionEmailSharingBody","issueEmailSharingSubject","issueEmailSharingBody","projectEmailSharingSubject","projectEmailSharingBody","share","commentCTA","Map","lazy","address","position","projectId","StyledAvatar","Avatar","authorId","userName","userId","isLinkToProfile","fontWeight","idea","ideaPublishedAtDate","published_at","date","FormattedDate","year","month","day","size","values","actionPermission","setActionPermission","useEffect","combineLatest","getInitiativeActionDescriptors","currentAppConfigurationStream","authUserStream","actionDescriptors","tenant","authUser","actionDescriptor","enabled","show","disabledReason","disabled_reason","StyledLabel","FeedbackSettings","memoize","statuses","localize","map","status","title_multiloc","relationships","idea_status","ideaStatus","find","color","JSON","stringify","statusesId","prospectAssignees","usersList","assigneeOptions","first_name","last_name","push","statusOption","adminAtWorkId","tenantId","updateIdea","idea_status_id","trackEventByName","tracks","ideaStatusChange","location","adminAtWork","assigneeOption","assigneeId","assignee_id","changeIdeaAssignment","statusOptions","getStatusOptions","ideaStatusOption","getIdeaStatusOption","getAssigneeOptions","ideaAssigneeOption","htmlFor","Select","options","onChange","onStatusChange","onAssigneeChange","PureComponent","Data","adopt","render","canModerateProject","FeedbackSettingsWithHOCs","dataProps","StyledTitle","StyledPostedBy","PostedBy","Row","Left","BelongsToProject","p","ProjectLink","Link","IdeaImage","img","StyledBody","Body","BodySectionTitle","h2","medium","StyledMap","DropdownMap","StyledOfficialFeedback","OfficialFeedback","StyledComments","Comments","Right","adminTextColor","BudgetBox","background","Picks","IdeaContent","processType","closePreview","deleteConfirmationMessage","continuous","timeline","window","confirm","deleteIdea","project","ideaFiles","locale","handleClickEdit","ideaTitle","ideaImageLarge","length","ideaGeoPosition","location_point_geojson","ideaAddress","getAddressOrFallbackDMS","location_description","author","proposed_budget","process_type","Top","icon","buttonStyle","handleClickDelete","Content","projectLink","to","slug","postId","postType","src","alt","body","body_multiloc","permissionToPost","budget","picksNumber","baskets_count","IconTooltip","content","postOfficialFeedbackPermission","item","IdeaContentWithHOCs","GetIdeaVotesCount","ideaVotesCount","votesStream","ideaVotes","vote","mode","voteId","object","refetchAllActiveIdeas","response","ideaEndpointRegexp","RegExp","uuidRegExp","fetchAllWith","regexApiEndpoint","onlyFetchActiveStreams","_ideaId","GetPermission","permission","context","hasPermission","GetComments","pageNumber","pageSize","sort","hasMore","loadMore$","sort$","commentsList","loadingInital","loadingMore","postId$","postType$","initialQueryParameters","mergeScan","commentsForIdeaStream","commentsForInitiativeStream","queryParameters","comments","selfLink","lastLink","unionBy","onLoadMore","loadMore","onChangeSort","changeSort"],"mappings":"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","file":"77.d5c4b85166840b8f74c9.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  edit: {\n    id: 'app.components.admin.PostManager.PostPreview.edit',\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: 'app.components.admin.PostManager.PostPreview.delete',\n    defaultMessage: 'Delete',\n  },\n  deleteInputConfirmation: {\n    id: 'app.components.admin.PostManager.PostPreview.deleteInputConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? This action cannot be undone.',\n  },\n  deleteInputInTimelineConfirmation: {\n    id:\n      'app.components.admin.PostManager.PostPreview.deleteInputInTimelineConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? The input will be deleted from all project phases and cannot be recovered.',\n  },\n  deleteInitiativeConfirmation: {\n    id:\n      'app.components.admin.PostManager.PostPreview.deleteInitiativeConfirmation',\n    defaultMessage: 'Are you sure you want to delete this initiative?',\n  },\n  voteCounts: {\n    id: 'app.components.admin.PostManager.PostPreview.voteCounts',\n    defaultMessage: 'Vote counts:',\n  },\n  currentStatus: {\n    id: 'app.components.admin.PostManager.PostPreview.currentStatus',\n    defaultMessage: 'Current status',\n  },\n  assignee: {\n    id: 'app.components.admin.PostManager.PostPreview.assignee',\n    defaultMessage: 'Assignee',\n  },\n  picks: {\n    id: 'app.components.admin.PostManager.PostPreview.picks',\n    defaultMessage: 'Picks: {picksNumber}',\n  },\n  pbItemCountTooltip: {\n    id: 'app.components.admin.PostManager.PostPreview.pbItemCountTooltip',\n    defaultMessage:\n      \"The number of times this has been included in other participants' participatory budgets\",\n  },\n  cancelEdit: {\n    id: 'app.components.admin.PostManager.PostPreview.cancelEdit',\n    defaultMessage: 'Cancel edit',\n  },\n  noOne: {\n    id: 'app.components.admin.PostManager.PostPreview.noOne',\n    defaultMessage: 'Unassigned',\n  },\n  save: {\n    id: 'app.components.admin.PostManager.PostPreview.save',\n    defaultMessage: 'Save',\n  },\n  submitError: {\n    id: 'app.components.admin.PostManager.PostPreview.submitError',\n    defaultMessage: 'Error',\n  },\n  postedIn: {\n    id: 'app.containers.IdeasShow.postedIn',\n    defaultMessage: 'Posted in {projectLink}',\n  },\n  xDaysLeft: {\n    id: 'app.containers.IdeasShow.xDaysLeft',\n    defaultMessage:\n      '{x, plural, =0 {Less than a day} one {One day} other {# days}} left',\n  },\n  proposedBudgetTitle: {\n    id: 'app.containers.IdeasShow.proposedBudgetTitle',\n    defaultMessage: 'Proposed budget',\n  },\n  bodyTitle: {\n    id: 'app.containers.IdeasShow.bodyTitle',\n    defaultMessage: 'Description',\n  },\n});\n","import { IInitiativeAction } from 'services/initiatives';\nimport { ActionPermission } from 'services/actionTakingRules';\nimport useInitiativesPermissions, {\n  IInitiativeDisabledReason,\n} from 'hooks/useInitiativesPermissions';\n\ninterface InputProps {}\n\ntype children = (\n  renderProps: GetInitiativesPermissionsChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n  action: IInitiativeAction;\n}\n\nexport type GetInitiativesPermissionsChildProps =\n  | ActionPermission<IInitiativeDisabledReason>\n  | undefined;\n\nexport default ({ children, action }: Props) => {\n  const initiativesPermissions = useInitiativesPermissions(action);\n  return (children as children)(initiativesPermissions);\n};\n","import React from 'react';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport { isNilOrError } from 'utils/helperUtils';\nimport styled from 'styled-components';\nimport { Icon } from 'cl2-component-library';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps, FormattedNumber } from 'react-intl';\nimport messages from './messages';\n\nconst StyledIcon = styled(Icon)`\n  width: 19px;\n  margin-top: 3px;\n  margin-right: 7px;\n  display: inline-block;\n  overflow: hidden;\n`;\n\ninterface Props {\n  value: number;\n}\n\nconst FormattedBudget = ({\n  value,\n  intl: { formatMessage, formatNumber },\n}: Props & InjectedIntlProps) => {\n  const appConfiguration = useAppConfiguration();\n\n  if (!isNilOrError(appConfiguration)) {\n    const currency = appConfiguration.data.attributes.settings.core.currency;\n\n    // custom implementations for custom currencies\n    // see appConfiguration.ts for all currencies\n    if (currency === 'TOK') {\n      return (\n        <>\n          <StyledIcon name=\"tokens\" />\n          {formatNumber(value)}\n        </>\n      );\n    } else if (currency === 'CRE') {\n      return (\n        <>\n          {formatMessage(\n            value === 1 ? messages.oneCredit : messages.multipleCredits,\n            {\n              numberOfTokens: formatNumber(value),\n            }\n          )}\n        </>\n      );\n    } else {\n      return (\n        <FormattedNumber\n          value={value}\n          style=\"currency\"\n          currency={currency}\n          minimumFractionDigits={0}\n          maximumFractionDigits={0}\n        />\n      );\n    }\n  }\n\n  return null;\n};\n\nexport default injectIntl(FormattedBudget);\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { Subscription, BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport {\n  projectFilesStream,\n  IProjectFileData,\n  IProjectFiles,\n} from 'services/projectFiles';\nimport {\n  phaseFilesStream,\n  IPhaseFileData,\n  IPhaseFiles,\n} from 'services/phaseFiles';\nimport {\n  eventFilesStream,\n  IEventFileData,\n  IEventFiles,\n} from 'services/eventFiles';\nimport { pageFilesStream, IPageFileData, IPageFiles } from 'services/pageFiles';\nimport { ideaFilesStream, IIdeaFileData, IIdeaFiles } from 'services/ideaFiles';\nimport {\n  initiativeFilesStream,\n  IInitiativeFileData,\n  IInitiativeFiles,\n} from 'services/initiativeFiles';\n\nimport { isNilOrError } from 'utils/helperUtils';\n\nexport type ResourceType =\n  | 'project'\n  | 'phase'\n  | 'event'\n  | 'page'\n  | 'idea'\n  | 'initiative';\n\nexport type IResourceFileData =\n  | IProjectFileData\n  | IPhaseFileData\n  | IEventFileData\n  | IPageFileData\n  | IIdeaFileData\n  | IInitiativeFileData;\n\nexport type IResourceFiles =\n  | IProjectFiles\n  | IPhaseFiles\n  | IEventFiles\n  | IPageFiles\n  | IIdeaFiles\n  | IInitiativeFiles;\n\ninterface InputProps {\n  resetOnChange?: boolean;\n  resourceType: ResourceType;\n  resourceId: string | null;\n}\n\ntype Children = (renderProps: GetResourceFilesChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: Children;\n}\n\ninterface State {\n  files: IResourceFileData[] | undefined | null | Error;\n}\n\nexport type GetResourceFilesChildProps = State['files'];\n\nexport default class GetResourceFiles extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  public static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      files: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ resourceId, resourceType });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ files: undefined })),\n          filter(({ resourceId }) => isString(resourceId)),\n          switchMap(\n            ({\n              resourceId,\n              resourceType,\n            }: {\n              resourceId: string;\n              resourceType: InputProps['resourceType'];\n            }) => {\n              let streamFn;\n              if (resourceType === 'project') {\n                streamFn = projectFilesStream;\n              }\n              if (resourceType === 'phase') {\n                streamFn = phaseFilesStream;\n              }\n              if (resourceType === 'event') {\n                streamFn = eventFilesStream;\n              }\n              if (resourceType === 'page') {\n                streamFn = pageFilesStream;\n              }\n              if (resourceType === 'idea') {\n                streamFn = ideaFilesStream;\n              }\n              if (resourceType === 'initiative') {\n                streamFn = initiativeFilesStream;\n              }\n\n              return streamFn(resourceId)\n                .observable as Observable<IResourceFiles | null>;\n            }\n          )\n        )\n        .subscribe((files) => {\n          this.setState({ files: !isNilOrError(files) ? files.data : files });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n    this.inputProps$.next({ resourceId, resourceType, resetOnChange });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { files } = this.state;\n    return (children as Children)(files);\n  }\n}\n","import React from 'react';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { IIdeaImageData, ideaImagesStream } from 'services/ideaImages';\nimport { isString } from 'lodash-es';\n\ninterface InputProps {\n  ideaId: string | null;\n}\n\ntype children = (renderProps: GetIdeaImagesChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  ideaImages: IIdeaImageData[] | undefined | null;\n}\n\nexport type GetIdeaImagesChildProps = IIdeaImageData[] | undefined | null;\n\nexport default class GetIdeaImages extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ideaImages: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { ideaId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ ideaId });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          switchMap(({ ideaId }) => {\n            if (isString(ideaId)) {\n              return ideaImagesStream(ideaId).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((ideaImages) => {\n          this.setState({ ideaImages: ideaImages ? ideaImages.data : null });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { ideaId } = this.props;\n    this.inputProps$.next({ ideaId });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { ideaImages } = this.state;\n    return (children as children)(ideaImages);\n  }\n}\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { ideaByIdStream } from 'services/ideas';\nimport { ImageSizes } from 'typings';\n\nexport interface IIdeaImageData {\n  id: string;\n  type: string;\n  attributes: {\n    versions: ImageSizes;\n    ordering: number;\n    created_at: string;\n    updated_at: string;\n  };\n}\n\nexport interface IIdeaImage {\n  data: IIdeaImageData;\n}\n\nexport interface IIdeaImages {\n  data: IIdeaImageData[];\n}\n\nexport function ideaImageStream(ideaId: string, imageId: string) {\n  const apiEndpoint = `${API_PATH}/ideas/${ideaId}/images/${imageId}`;\n  return streams.get<IIdeaImage>({ apiEndpoint });\n}\n\nexport function ideaImagesStream(\n  ideaId: string,\n  streamParams: IStreamParams | null = null\n) {\n  const apiEndpoint = `${API_PATH}/ideas/${ideaId}/images`;\n  return streams.get<IIdeaImages>({ apiEndpoint, ...streamParams });\n}\n\nexport function deleteIdeaImage(ideaId: string, imageId: string) {\n  return streams.delete(\n    `${API_PATH}/ideas/${ideaId}/images/${imageId}`,\n    imageId\n  );\n}\n\nexport async function addIdeaImage(\n  ideaId: string,\n  base64: string,\n  ordering: number | null = null\n) {\n  const apiEndpoint = `${API_PATH}/ideas/${ideaId}/images`;\n  const bodyData = {\n    image: {\n      ordering,\n      image: base64,\n    },\n  };\n\n  const ideaImage = await streams.add<IIdeaImage>(apiEndpoint, bodyData);\n  await ideaByIdStream(ideaId).fetch();\n  return ideaImage;\n}\n","import React, { memo } from 'react';\nimport FormattedBudget from 'utils/currency/FormattedBudget';\n\n// styling\nimport styled from 'styled-components';\nimport { media } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  color: ${(props) => props.theme.colorText};\n  font-size: ${(props) => props.theme.fontSizes.large}px;\n  line-height: 29px; // same line-height as Body's content\n  font-weight: 300;\n\n  ${media.smallerThanMinTablet`\n    font-size: ${(props) => props.theme.fontSizes.base}px;\n  `}\n`;\n\ninterface Props {\n  className?: string;\n  proposedBudget: number;\n}\n\nconst IdeaProposedBudget = memo<Props>(({ className, proposedBudget }) => {\n  return (\n    <Container className={className}>\n      <FormattedBudget value={proposedBudget} />\n    </Container>\n  );\n});\n\nexport default IdeaProposedBudget;\n","import React, { memo, useCallback, useState, Suspense } from 'react';\n\n// components\nimport { Icon, IconNames } from 'cl2-component-library';\n\n// animations\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes, media } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\nconst timeout = 300;\n\nconst Container = styled.div`\n  background: #fff;\n  border: 1px solid ${colors.separation};\n  border-radius: ${(props: any) => props.theme.borderRadius};\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TitleIcon = styled(Icon)`\n  flex: 0 0 16px;\n  width: 16px;\n  height: 23px;\n  fill: ${colors.label};\n  margin-right: 13px;\n\n  ${media.smallerThanMinTablet`\n    flex: 0 0 14px;\n    width: 14px;\n    height: 20px;\n  `}\n`;\n\nconst ContentLabel = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  margin-right: 6px;\n  text-align: left;\n  transition: all 100ms ease-out;\n`;\n\nconst ContentToggleButton = styled.button`\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  padding-left: 18px;\n  padding-right: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  line-height: 24px;\n  font-weight: 600;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  &:hover {\n    ${ContentLabel} {\n      color: ${darken(0.2, colors.label)};\n    }\n  }\n`;\n\nconst ArrowIcon = styled(Icon)`\n  flex: 0 0 13px;\n  width: 13px;\n  height: 13px;\n  fill: ${colors.label};\n  transform: rotate(90deg);\n  transition: all 0.2s linear;\n\n  &.open {\n    transform: rotate(0deg);\n  }\n`;\n\nconst Wrapper = styled.div<{ contentBackgroundColor?: string }>`\n  position: relative;\n  overflow: hidden;\n  z-index: 2;\n  padding: 20px;\n  background-color: ${(props) => props.contentBackgroundColor || '#fff'};\n  margin-top: 1px;\n\n  ${media.largePhone`\n    padding: 30px 20px;\n  `}\n\n  &.content-enter {\n    height: 0;\n    opacity: 0;\n\n    &.content-enter-active {\n      height: 100%;\n      opacity: 1;\n      transition: all ${timeout}ms ease-out;\n    }\n  }\n\n  &.content-exit {\n    height: 100%;\n    opacity: 1;\n\n    &.content-exit-active {\n      height: 0;\n      opacity: 0;\n      transition: all ${timeout}ms ease-out;\n    }\n  }\n`;\n\nexport interface Props {\n  className?: string;\n  titleIconName?: IconNames;\n  title: string | JSX.Element;\n  contentBackgroundColor?: string;\n  e2eId?: string;\n  /* children should be lazy-loaded. Search code for examples */\n  children: React.ReactNode;\n}\n\nconst CollapsibleBox = memo<Props>((props) => {\n  const [showContent, setShowContent] = useState<boolean>(false);\n\n  const handleContentToggle = useCallback(() => {\n    setShowContent(!showContent);\n  }, [showContent]);\n\n  const {\n    className,\n    titleIconName,\n    title,\n    children,\n    contentBackgroundColor,\n    e2eId,\n  } = props;\n\n  return (\n    <Container className={className}>\n      <ContentToggleButton\n        id={e2eId || ''}\n        aria-expanded={showContent}\n        onClick={handleContentToggle}\n      >\n        <Title>\n          {titleIconName && <TitleIcon name={titleIconName} />}\n          <ContentLabel>{title}</ContentLabel>\n        </Title>\n        <ArrowIcon name=\"dropdown\" className={showContent ? 'open' : ''} />\n      </ContentToggleButton>\n      <CSSTransition\n        classNames=\"content\"\n        in={showContent}\n        timeout={timeout}\n        mountOnEnter={true}\n        unmountOnExit={true}\n        exit={true}\n      >\n        <Wrapper contentBackgroundColor={contentBackgroundColor}>\n          <Suspense fallback={null}>{children}</Suspense>\n        </Wrapper>\n      </CSSTransition>\n    </Container>\n  );\n});\n\nexport default CollapsibleBox;\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport { Icon } from 'cl2-component-library';\n\n// resources\nimport GetIdeaVotesCount, {\n  GetIdeaVotesCountChildProps,\n} from 'resources/GetIdeaVotesCount';\n\n// i18n\nimport messages from '../messages';\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Label = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  margin-right: 20px;\n`;\n\nconst Block = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst VotesContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst UpvotesContainer = styled(VotesContainer)`\n  margin-right: 30px;\n`;\n\nconst DownvotesContainer = styled(VotesContainer)``;\n\nconst VoteIcon = styled(Icon)`\n  width: 20px;\n  height: 18px;\n  margin-right: 5px;\n`;\n\nconst UpvoteIcon = styled(VoteIcon)`\n  fill: ${colors.clGreen};\n  margin-top: -2px;\n`;\n\nconst DownvoteIcon = styled(VoteIcon)`\n  fill: ${colors.clRed};\n  margin-top: 6px;\n`;\n\nconst VotesCount = styled.div`\n  font-size: ${fontSizes.large};\n  font-weight: 600;\n`;\n\nconst UpvotesCount = styled(VotesCount)`\n  color: ${colors.clGreen};\n`;\n\nconst DownvotesCount = styled(VotesCount)`\n  color: ${colors.clRed};\n`;\n\ninterface DataProps {\n  votesCount: GetIdeaVotesCountChildProps;\n}\n\ninterface InputProps {\n  ideaId: string;\n  className?: string;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst VotePreview = memo<Props>(({ votesCount, className }) => {\n  if (!isNilOrError(votesCount)) {\n    return (\n      <Container className={className}>\n        <Label>\n          <FormattedMessage {...messages.voteCounts} />\n        </Label>\n        <Block>\n          <UpvotesContainer>\n            <UpvoteIcon name=\"upvote\" />\n            <UpvotesCount>{votesCount.up}</UpvotesCount>\n          </UpvotesContainer>\n          <DownvotesContainer>\n            <DownvoteIcon name=\"downvote\" />\n            <DownvotesCount>{votesCount.down}</DownvotesCount>\n          </DownvotesContainer>\n        </Block>\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default (inputProps: InputProps) => (\n  <GetIdeaVotesCount ideaId={inputProps.ideaId}>\n    {(votesCount) => <VotePreview {...inputProps} votesCount={votesCount} />}\n  </GetIdeaVotesCount>\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  sharingModalTitle: {\n    id: 'app.containers.IdeasShow.sharingModalTitle',\n    defaultMessage: 'Thanks for submitting your idea!',\n  },\n  optionSharingModalTitle: {\n    id: 'app.containers.IdeasShow.optionSharingModalTitle',\n    defaultMessage: 'Your option has been successfully posted!',\n  },\n  projectSharingModalTitle: {\n    id: 'app.containers.IdeasShow.projectSharingModalTitle',\n    defaultMessage: 'Thanks for submitting your project!',\n  },\n  questionSharingModalTitle: {\n    id: 'app.containers.IdeasShow.questionSharingModalTitle',\n    defaultMessage: 'Your question has been successfully posted!',\n  },\n  issueSharingModalTitle: {\n    id: 'app.containers.IdeasShow.issueSharingModalTitle',\n    defaultMessage: 'Thanks for submitting your issue!',\n  },\n  contributionSharingModalTitle: {\n    id: 'app.containers.IdeasShow.contributionSharingModalTitle',\n    defaultMessage: 'Thanks for submitting your contribution!',\n  },\n\n  sharingModalSubtitle: {\n    id: 'app.containers.IdeasShow.sharingModalSubtitle',\n    defaultMessage: 'Reach more people and make your voice heard.',\n  },\n  deletedUser: {\n    id: 'app.containers.IdeasShow.deletedUser',\n    defaultMessage: 'deleted user',\n  },\n  currentStatus: {\n    id: 'app.containers.IdeasShow.currentStatus',\n    defaultMessage: 'Current status',\n  },\n  moreOptions: {\n    id: 'app.components.IdeasShow.moreOptions',\n    defaultMessage: 'More options',\n  },\n  reportAsSpam: {\n    id: 'app.components.IdeasShow.reportAsSpam',\n    defaultMessage: 'Report as spam',\n  },\n  editPost: {\n    id: 'app.components.IdeasShow.editPost',\n    defaultMessage: 'Edit',\n  },\n  deletePost: {\n    id: 'app.components.IdeasShow.deletePost',\n    defaultMessage: 'Delete',\n  },\n  deleteInputConfirmation: {\n    id: 'app.components.IdeasShow.deleteInputConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? This action cannot be undone.',\n  },\n  deleteInputInTimelineConfirmation: {\n    id: 'app.components.IdeasShow.deleteInputInTimelineConfirmation',\n    defaultMessage:\n      'Are you sure you want to delete this input? The input will be deleted from all project phases and cannot be recovered.',\n  },\n  goBack: {\n    id: 'app.components.IdeasShow.goBack',\n    defaultMessage: 'Go back',\n  },\n  send: {\n    id: 'app.components.IdeasShow.send',\n    defaultMessage: 'Send',\n  },\n  skipSharing: {\n    id: 'app.components.IdeasShow.skipSharing',\n    defaultMessage: \"Skip it, I'll do it later\",\n  },\n  reportAsSpamModalTitle: {\n    id: 'app.containers.IdeasShow.reportAsSpamModalTitle',\n    defaultMessage: 'Why do you want to report this as spam?',\n  },\n  byUserOnDate: {\n    id: 'app.components.IdeasShow.byUserOnDate',\n    defaultMessage: 'By {userName} on {date}',\n  },\n  createdTimeAgo: {\n    id: 'app.components.IdeasShow.createdTimeAgo',\n    defaultMessage: 'Created {timeAgo}',\n  },\n  or: {\n    id: 'app.components.IdeasShow.or',\n    defaultMessage: 'or',\n  },\n  proposedBudgetTitle: {\n    id: 'app.components.IdeasShow.proposedBudgetTitle',\n    defaultMessage: 'Proposed budget',\n  },\n  bodyTitle: {\n    id: 'app.components.IdeasShow.bodyTitle',\n    defaultMessage: 'Description',\n  },\n  ideaTwitterMessage: {\n    id: 'app.containers.IdeasShow.ideaTwitterMessage',\n    defaultMessage: 'Support this idea: {postTitle}',\n  },\n  optionTwitterMessage: {\n    id: 'app.containers.IdeasShow.optionTwitterMessage',\n    defaultMessage: 'Support this option: {postTitle}',\n  },\n  issueTwitterMessage: {\n    id: 'app.containers.IdeasShow.issueTwitterMessage',\n    defaultMessage: 'Support this issue: {postTitle}',\n  },\n  projectTwitterMessage: {\n    id: 'app.containers.IdeasShow.projectTwitterMessage',\n    defaultMessage: 'Support this project: {postTitle}',\n  },\n  questionTwitterMessage: {\n    id: 'app.containers.IdeasShow.questionTwitterMessage',\n    defaultMessage: 'Join the discussion: {postTitle}',\n  },\n  contributionTwitterMessage: {\n    id: 'app.containers.IdeasShow.contributionTwitterMessage',\n    defaultMessage: 'Support this contribution: {postTitle}',\n  },\n  ideaWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.ideaWhatsAppMessage',\n    defaultMessage: 'Support this idea: {postTitle}',\n  },\n  optionWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.optionWhatsAppMessage',\n    defaultMessage: 'Support this option: {postTitle}',\n  },\n  contributionWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.contributionWhatsAppMessage',\n    defaultMessage: 'Support this contribution: {postTitle}',\n  },\n  projectWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.projectWhatsAppMessage',\n    defaultMessage: 'Support this project: {postTitle}',\n  },\n  questionWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.questionWhatsAppMessage',\n    defaultMessage: 'Join the discussion: {postTitle}',\n  },\n  issueWhatsAppMessage: {\n    id: 'app.containers.IdeasShow.ideasWhatsAppMessage',\n    defaultMessage: 'Support this issue: {postTitle}',\n  },\n  ideaEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.ideaEmailSharingSubject',\n    defaultMessage: 'Support this idea: {ideaTitle}',\n  },\n  ideaEmailSharingBody: {\n    id: 'app.containers.IdeasShow.ideaEmailSharingBody',\n    defaultMessage: \"Support this idea '{ideaTitle}' at {ideaUrl}!\",\n  },\n  optionEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.optionEmailSharingSubject',\n    defaultMessage: 'Support this option: {ideaTitle}',\n  },\n  optionEmailSharingBody: {\n    id: 'app.containers.IdeasShow.optionEmailSharingBody',\n    defaultMessage: \"Support this option '{ideaTitle}' at {ideaUrl}!\",\n  },\n  contributionEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.contributionEmailSharingSubject',\n    defaultMessage: 'Support this contribution: {ideaTitle}',\n  },\n  contributionEmailSharingBody: {\n    id: 'app.containers.IdeasShow.contributionEmailSharingBody',\n    defaultMessage: \"Support this contribution '{ideaTitle}' at {ideaUrl}!\",\n  },\n  questionEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.questionEmailSharingSubject',\n    defaultMessage: 'Join the discussion: {ideaTitle}',\n  },\n  questionEmailSharingBody: {\n    id: 'app.containers.IdeasShow.questionEmailSharingBody',\n    defaultMessage:\n      \"Join the discussion about this question '{ideaTitle}' at {ideaUrl}!\",\n  },\n  issueEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.issueEmailSharingSubject',\n    defaultMessage: 'Support this issue: {ideaTitle}',\n  },\n  issueEmailSharingBody: {\n    id: 'app.containers.IdeasShow.issueEmailSharingBody',\n    defaultMessage: \"Support this issue '{ideaTitle}' at {ideaUrl}!\",\n  },\n  projectEmailSharingSubject: {\n    id: 'app.containers.IdeasShow.projectEmailSharingSubject',\n    defaultMessage: 'Support this project: {ideaTitle}',\n  },\n  projectEmailSharingBody: {\n    id: 'app.containers.IdeasShow.projectEmailSharingBody',\n    defaultMessage: \"Support this project '{ideaTitle}' at {ideaUrl}!\",\n  },\n  share: {\n    id: 'app.containers.IdeasShow.share',\n    defaultMessage: 'Share',\n  },\n  commentCTA: {\n    id: 'app.containers.IdeasShow.commentCTA',\n    defaultMessage: 'Add a comment',\n  },\n});\n","import React, { memo } from 'react';\n\n// components\nimport CollapsibleBox from 'components/UI/CollapsibleBox';\nconst Map = React.lazy(() => import('./Map'));\n\nexport interface Props {\n  address: string;\n  position: GeoJSON.Point;\n  className?: string;\n  projectId?: string | null;\n}\n\nconst DropdownMap = memo<Props>(\n  ({ address, position, className, projectId }) => {\n    return (\n      <CollapsibleBox\n        e2eId=\"e2e-map-toggle\"\n        className={className}\n        titleIconName=\"position\"\n        title={address}\n      >\n        <Map position={position} projectId={projectId} />\n      </CollapsibleBox>\n    );\n  }\n);\n\nexport default DropdownMap;\n","import React, { memo } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// components\nimport UserName from 'components/UI/UserName';\nimport Avatar from 'components/Avatar';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { FormattedDate } from 'react-intl';\n\n// styling\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\n// hooks\nimport useIdea from 'hooks/useIdea';\n\nconst Container = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  font-weight: 300;\n  line-height: normal;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin-right: 5px;\n`;\n\ninterface Props {\n  authorId: string | null;\n  ideaId: string;\n  className?: string;\n}\n\nconst IdeaPostedBy = memo<Props>(({ authorId, ideaId, className }) => {\n  const userName = (\n    <UserName userId={authorId} isLinkToProfile fontWeight={500} />\n  );\n  const idea = useIdea({ ideaId });\n\n  if (!isNilOrError(idea)) {\n    const ideaPublishedAtDate = idea.attributes.published_at;\n    const date = (\n      <FormattedDate\n        value={ideaPublishedAtDate}\n        year=\"numeric\"\n        month=\"long\"\n        day=\"numeric\"\n      />\n    );\n\n    return (\n      <Container className={`e2e-idea-author ${className || ''}`}>\n        <StyledAvatar\n          userId={authorId}\n          size={30}\n          isLinkToProfile={!!authorId}\n        />\n        <FormattedMessage\n          {...messages.byUserOnDate}\n          values={{ userName, date }}\n        />\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default IdeaPostedBy;\n","import { useState, useEffect } from 'react';\nimport {\n  getInitiativeActionDescriptors,\n  IInitiativeAction,\n} from 'services/initiatives';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { ActionPermission } from 'services/actionTakingRules';\nimport { currentAppConfigurationStream } from 'services/appConfiguration';\nimport { authUserStream } from 'services/auth';\nimport { combineLatest } from 'rxjs';\n\nexport type IInitiativeDisabledReason = 'notPermitted';\n\nexport type IPreliminaryAction =\n  | 'sign_in_up'\n  | 'verify'\n  | 'sign_in_up_and_verify';\n\nexport default function useInitiativesPermissions(action: IInitiativeAction) {\n  const [actionPermission, setActionPermission] = useState<\n    ActionPermission<IInitiativeDisabledReason> | null | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const subscription = combineLatest(\n      getInitiativeActionDescriptors().observable,\n      currentAppConfigurationStream().observable,\n      authUserStream().observable\n    ).subscribe(([actionDescriptors, tenant, authUser]) => {\n      if (!isNilOrError(tenant) && !isNilOrError(actionDescriptors)) {\n        const actionDescriptor = actionDescriptors[action];\n\n        if (actionDescriptor.enabled) {\n          setActionPermission({\n            show: true,\n            enabled: true,\n            disabledReason: null,\n            action: null,\n          });\n        } else {\n          switch (actionDescriptor.disabled_reason) {\n            case 'not_verified':\n              if (isNilOrError(authUser)) {\n                setActionPermission({\n                  show: true,\n                  enabled: 'maybe',\n                  disabledReason: null,\n                  action: 'sign_in_up_and_verify',\n                });\n              } else {\n                setActionPermission({\n                  show: true,\n                  enabled: 'maybe',\n                  disabledReason: null,\n                  action: 'verify',\n                });\n              }\n              break;\n            case 'not_signed_in':\n              setActionPermission({\n                show: true,\n                enabled: 'maybe',\n                disabledReason: null,\n                action: 'sign_in_up',\n              });\n              break;\n            default:\n              setActionPermission({\n                show: true,\n                enabled: false,\n                disabledReason: 'notPermitted',\n                action: null,\n              });\n          }\n        }\n      }\n    });\n\n    return () => subscription.unsubscribe();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return actionPermission as ActionPermission<IInitiativeDisabledReason>;\n}\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { get, memoize } from 'lodash-es';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\n\n// typings\nimport { IOption } from 'typings';\n\n// styles\nimport styled from 'styled-components';\n\n// components\nimport { Select, Label } from 'cl2-component-library';\n\n// services\nimport { updateIdea } from 'services/ideas';\n\n// resources\nimport GetUsers, { GetUsersChildProps } from 'resources/GetUsers';\nimport GetIdeaStatuses, {\n  GetIdeaStatusesChildProps,\n} from 'resources/GetIdeaStatuses';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from '../../../tracks';\n\nconst StyledLabel = styled(Label)`\n  margin-top: 20px;\n`;\n\nconst Container = styled.div``;\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  tenant: GetAppConfigurationChildProps;\n  statuses: GetIdeaStatusesChildProps;\n  idea: GetIdeaChildProps;\n  prospectAssignees: GetUsersChildProps;\n}\n\ninterface InputProps {\n  ideaId: string;\n  className?: string;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface PropsWithHoCs extends Props, InjectedLocalized, InjectedIntlProps {}\n\nclass FeedbackSettings extends PureComponent<PropsWithHoCs> {\n  getStatusOptions = memoize((statuses) => {\n    const { localize } = this.props;\n    if (!isNilOrError(statuses)) {\n      return statuses.map((status) => ({\n        value: status.id,\n        label: localize(status.attributes.title_multiloc),\n      }));\n    }\n\n    return [];\n  });\n\n  getIdeaStatusOption = memoize(\n    (idea: GetIdeaChildProps, statuses) => {\n      const { localize } = this.props;\n      if (\n        !isNilOrError(idea) &&\n        idea.relationships.idea_status &&\n        idea.relationships.idea_status.data &&\n        !isNilOrError(statuses)\n      ) {\n        const ideaStatus = statuses.find(\n          (status) =>\n            status.id === get(idea, 'relationships.idea_status.data.id')\n        );\n        if (ideaStatus) {\n          return {\n            value: ideaStatus.id,\n            label: localize(ideaStatus.attributes.title_multiloc),\n            color: ideaStatus.attributes.color,\n          };\n        }\n\n        return null;\n      }\n\n      return null;\n    },\n    (idea: GetIdeaChildProps, statuses) =>\n      JSON.stringify({\n        ideaId: isNilOrError(idea)\n          ? undefined\n          : get(idea, 'relationships.idea_status.data.id'),\n        statusesId: isNilOrError(statuses)\n          ? undefined\n          : statuses.map((status) => status.id),\n      })\n  );\n\n  getAssigneeOptions = memoize((prospectAssignees) => {\n    const {\n      intl: { formatMessage },\n    } = this.props;\n    if (!isNilOrError(prospectAssignees.usersList)) {\n      const assigneeOptions = prospectAssignees.usersList.map((assignee) => ({\n        value: assignee.id,\n        label: `${assignee.attributes.first_name} ${assignee.attributes.last_name}`,\n      }));\n      assigneeOptions.push({\n        value: 'unassigned',\n        label: formatMessage(messages.noOne),\n      });\n      return assigneeOptions;\n    }\n\n    return [];\n  });\n\n  onStatusChange = (statusOption: IOption) => {\n    const { tenant, ideaId, authUser } = this.props;\n    const adminAtWorkId = authUser ? authUser.id : null;\n    const tenantId = !isNilOrError(tenant) && tenant.id;\n\n    updateIdea(this.props.ideaId, {\n      idea_status_id: statusOption.value,\n    });\n\n    trackEventByName(tracks.ideaStatusChange, {\n      tenant: tenantId,\n      location: 'Idea preview/popup',\n      idea: ideaId,\n      adminAtWork: adminAtWorkId,\n    });\n  };\n\n  onAssigneeChange = (assigneeOption: IOption | null) => {\n    const { tenant, ideaId, authUser } = this.props;\n    const assigneeId = assigneeOption ? assigneeOption.value : null;\n    const adminAtWorkId = authUser ? authUser.id : null;\n    const tenantId = !isNilOrError(tenant) && tenant.id;\n\n    updateIdea(ideaId, {\n      assignee_id: assigneeId,\n    });\n\n    trackEventByName(tracks.changeIdeaAssignment, {\n      tenant: tenantId,\n      location: 'Idea preview',\n      idea: ideaId,\n      assignee: assigneeId,\n      adminAtWork: adminAtWorkId,\n    });\n  };\n\n  render() {\n    const { idea, className, statuses, prospectAssignees } = this.props;\n\n    const statusOptions = this.getStatusOptions(statuses);\n    const ideaStatusOption = this.getIdeaStatusOption(idea, statuses);\n    const assigneeOptions = this.getAssigneeOptions(prospectAssignees);\n    const ideaAssigneeOption = get(\n      idea,\n      'relationships.assignee.data.id',\n      'unassigned'\n    );\n\n    if (!isNilOrError(idea)) {\n      return (\n        <Container className={`${className} e2e-idea-settings`}>\n          <StyledLabel\n            value={<FormattedMessage {...messages.currentStatus} />}\n            htmlFor=\"idea-preview-select-status\"\n          />\n          <Select\n            id=\"idea-preview-select-status\"\n            options={statusOptions}\n            onChange={this.onStatusChange}\n            value={ideaStatusOption}\n          />\n          <StyledLabel\n            value={<FormattedMessage {...messages.assignee} />}\n            htmlFor=\"idea-preview-select-assignee\"\n          />\n          <Select\n            id=\"idea-preview-select-assignee\"\n            options={assigneeOptions}\n            onChange={this.onAssigneeChange}\n            value={ideaAssigneeOption}\n          />\n        </Container>\n      );\n    }\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  tenant: <GetAppConfiguration />,\n  authUser: <GetAuthUser />,\n  idea: ({ ideaId, render }) => <GetIdea ideaId={ideaId}>{render}</GetIdea>,\n  statuses: <GetIdeaStatuses />,\n  prospectAssignees: ({ idea, render }) => (\n    <GetUsers canModerateProject={get(idea, 'relationships.project.data.id')}>\n      {render}\n    </GetUsers>\n  ),\n});\n\nconst FeedbackSettingsWithHOCs = injectIntl(injectLocalize(FeedbackSettings));\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <FeedbackSettingsWithHOCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React, { PureComponent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\nimport { get } from 'lodash-es';\n\n// components\nimport Title from 'components/PostShowComponents/Title';\nimport PostedBy from 'containers/IdeasShow/PostedBy';\nimport Body from 'components/PostShowComponents/Body';\nimport IdeaProposedBudget from 'containers/IdeasShow/IdeaProposedBudget';\nimport DropdownMap from 'components/PostShowComponents/DropdownMap';\nimport OfficialFeedback from 'components/PostShowComponents/OfficialFeedback';\nimport Comments from 'components/PostShowComponents/Comments';\nimport FileAttachments from 'components/UI/FileAttachments';\nimport FeedbackSettings from './FeedbackSettings';\nimport VotePreview from './VotePreview';\nimport { IconTooltip } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\nimport Link from 'utils/cl-router/Link';\nimport T from 'components/T';\nimport { Top, Content, Container } from '../PostPreview';\n\n// services\nimport { deleteIdea } from 'services/ideas';\nimport { ProcessType } from 'services/projects';\n\n// resources\nimport GetResourceFiles, {\n  GetResourceFilesChildProps,\n} from 'resources/GetResourceFiles';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport GetIdeaImages, {\n  GetIdeaImagesChildProps,\n} from 'resources/GetIdeaImages';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetPermission, {\n  GetPermissionChildProps,\n} from 'resources/GetPermission';\n\n// utils\nimport { getAddressOrFallbackDMS } from 'utils/map';\n\n// i18n\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\nimport FormattedBudget from 'utils/currency/FormattedBudget';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\nconst StyledTitle = styled(Title)`\n  margin-bottom: 20px;\n`;\n\nconst StyledPostedBy = styled(PostedBy)`\n  margin-bottom: 20px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Left = styled.div`\n  flex: 5;\n  margin-right: 50px;\n  height: 100%;\n`;\n\nconst BelongsToProject = styled.p`\n  width: 100%;\n  color: ${colors.label};\n  font-weight: 300;\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  margin-bottom: 10px;\n`;\n\nconst ProjectLink = styled(Link)`\n  color: inherit;\n  font-weight: 400;\n  font-size: inherit;\n  line-height: inherit;\n  text-decoration: underline;\n  transition: all 100ms ease-out;\n  margin-left: 4px;\n\n  &:hover {\n    color: ${darken(0.2, colors.label)};\n    text-decoration: underline;\n  }\n`;\n\nconst IdeaImage = styled.img`\n  width: 100%;\n  margin: 0 0 2rem;\n  padding: 0;\n  border-radius: 8px;\n  border: 1px solid ${colors.separation};\n`;\n\nconst StyledBody = styled(Body)`\n  margin-bottom: 20px;\n`;\n\nconst BodySectionTitle = styled.h2`\n  font-size: ${(props) => props.theme.fontSizes.medium}px;\n  font-weight: 400;\n  line-height: 28px;\n`;\n\nconst StyledMap = styled(DropdownMap)`\n  margin-bottom: 40px;\n`;\n\nconst StyledOfficialFeedback = styled(OfficialFeedback)`\n  margin-top: 70px;\n`;\n\nconst StyledComments = styled(Comments)`\n  margin-top: 30px;\n`;\n\nconst Right = styled.div`\n  flex: 2;\n  position: sticky;\n  top: 80px;\n  align-self: flex-start;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  line-height: 19px;\n`;\n\nconst BudgetBox = styled.div`\n  margin-top: 25px;\n  width: 100%;\n  height: 95px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 5px;\n  position: relative;\n  border-radius: 5px;\n  background: ${colors.background};\n  border: solid 1px ${colors.adminTextColor};\n  font-size: ${fontSizes.large}px;\n  font-weight: 500;\n`;\n\nconst Picks = styled.div`\n  margin-top: 15px;\n  display: flex;\n  font-size: ${fontSizes.base}px;\n  align-items: center;\n`;\n\ninterface State {}\n\nexport interface InputProps {\n  ideaId: string | null;\n  closePreview: () => void;\n  handleClickEdit: () => void;\n}\n\ninterface DataProps {\n  idea: GetIdeaChildProps;\n  ideaImages: GetIdeaImagesChildProps;\n  ideaFiles: GetResourceFilesChildProps;\n  locale: GetLocaleChildProps;\n  project: GetProjectChildProps;\n  postOfficialFeedbackPermission: GetPermissionChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nexport class IdeaContent extends PureComponent<\n  Props & InjectedLocalized & InjectedIntlProps,\n  State\n> {\n  handleClickDelete = (processType: ProcessType) => () => {\n    const {\n      idea,\n      closePreview,\n      intl: { formatMessage },\n    } = this.props;\n    const deleteConfirmationMessage = {\n      continuous: messages.deleteInputConfirmation,\n      timeline: messages.deleteInputInTimelineConfirmation,\n    }[processType];\n\n    if (!isNilOrError(idea)) {\n      if (window.confirm(formatMessage(deleteConfirmationMessage))) {\n        deleteIdea(idea.id);\n        closePreview();\n      }\n    }\n  };\n\n  render() {\n    const {\n      idea,\n      project,\n      localize,\n      ideaImages,\n      ideaFiles,\n      locale,\n      handleClickEdit,\n    } = this.props;\n\n    if (\n      !isNilOrError(idea) &&\n      !isNilOrError(locale) &&\n      !isNilOrError(project)\n    ) {\n      const ideaId = idea.id;\n      const ideaTitle = localize(idea.attributes.title_multiloc);\n      const ideaImageLarge =\n        !isNilOrError(ideaImages) && ideaImages.length > 0\n          ? get(ideaImages[0], 'attributes.versions.large', null)\n          : null;\n      const ideaGeoPosition = idea.attributes.location_point_geojson || null;\n      const ideaAddress = getAddressOrFallbackDMS(\n        idea.attributes.location_description,\n        idea.attributes.location_point_geojson\n      );\n      // AuthorId can be null if user has been deleted\n      const authorId = idea.relationships.author.data?.id || null;\n      const proposedBudget = idea.attributes.proposed_budget;\n      const processType = project.attributes.process_type;\n\n      return (\n        <Container>\n          <Top>\n            <Button icon=\"edit\" buttonStyle=\"text\" onClick={handleClickEdit}>\n              <FormattedMessage {...messages.edit} />\n            </Button>\n            <Button\n              icon=\"delete\"\n              buttonStyle=\"text\"\n              onClick={this.handleClickDelete(processType)}\n            >\n              <FormattedMessage {...messages.delete} />\n            </Button>\n          </Top>\n          <Content>\n            {!isNilOrError(project) && (\n              <BelongsToProject>\n                <FormattedMessage\n                  {...messages.postedIn}\n                  values={{\n                    projectLink: (\n                      <ProjectLink\n                        className=\"e2e-project-link\"\n                        to={`/projects/${project.attributes.slug}`}\n                      >\n                        <T value={project.attributes.title_multiloc} />\n                      </ProjectLink>\n                    ),\n                  }}\n                />\n              </BelongsToProject>\n            )}\n\n            <StyledTitle postId={ideaId} postType=\"idea\" title={ideaTitle} />\n            <StyledPostedBy ideaId={ideaId} authorId={authorId} />\n            <Row>\n              <Left>\n                {ideaImageLarge && (\n                  <IdeaImage\n                    src={ideaImageLarge}\n                    alt=\"\"\n                    className=\"e2e-ideaImage\"\n                  />\n                )}\n\n                {proposedBudget && (\n                  <>\n                    <BodySectionTitle>\n                      <FormattedMessage {...messages.proposedBudgetTitle} />\n                    </BodySectionTitle>\n                    <IdeaProposedBudget proposedBudget={proposedBudget} />\n                    <BodySectionTitle>\n                      <FormattedMessage {...messages.bodyTitle} />\n                    </BodySectionTitle>\n                  </>\n                )}\n\n                <StyledBody\n                  postId={ideaId}\n                  postType=\"idea\"\n                  body={localize(idea.attributes.body_multiloc)}\n                  locale={locale}\n                />\n\n                {!isNilOrError(project) && ideaGeoPosition && ideaAddress && (\n                  <StyledMap\n                    address={ideaAddress}\n                    position={ideaGeoPosition}\n                    projectId={project.id}\n                  />\n                )}\n\n                {ideaFiles && !isNilOrError(ideaFiles) && (\n                  <FileAttachments files={ideaFiles} />\n                )}\n\n                <StyledOfficialFeedback\n                  postId={ideaId}\n                  postType=\"idea\"\n                  permissionToPost\n                />\n\n                <StyledComments postId={ideaId} postType=\"idea\" />\n              </Left>\n              <Right>\n                <VotePreview ideaId={ideaId} />\n\n                {idea.attributes.budget && (\n                  <>\n                    <BudgetBox>\n                      <FormattedBudget value={idea.attributes.budget} />\n                      <Picks>\n                        <FormattedMessage\n                          {...messages.picks}\n                          values={{\n                            picksNumber: idea.attributes.baskets_count,\n                          }}\n                        />\n                        &nbsp;\n                        <IconTooltip\n                          content={\n                            <FormattedMessage\n                              {...messages.pbItemCountTooltip}\n                            />\n                          }\n                        />\n                      </Picks>\n                    </BudgetBox>\n                  </>\n                )}\n\n                <FeedbackSettings ideaId={ideaId} />\n              </Right>\n            </Row>\n          </Content>\n        </Container>\n      );\n    }\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  locale: <GetLocale />,\n  idea: ({ ideaId, render }) => <GetIdea ideaId={ideaId}>{render}</GetIdea>,\n  project: ({ idea, render }) => (\n    <GetProject projectId={get(idea, 'relationships.project.data.id')}>\n      {render}\n    </GetProject>\n  ),\n  ideaFiles: ({ ideaId, render }) => (\n    <GetResourceFiles resourceId={ideaId} resourceType=\"idea\">\n      {render}\n    </GetResourceFiles>\n  ),\n  ideaImages: ({ ideaId, render }) => (\n    <GetIdeaImages ideaId={ideaId}>{render}</GetIdeaImages>\n  ),\n  postOfficialFeedbackPermission: ({ project, render }) => (\n    <GetPermission\n      item={!isNilOrError(project) ? project : null}\n      action=\"moderate\"\n    >\n      {render}\n    </GetPermission>\n  ),\n});\n\nconst IdeaContentWithHOCs = injectIntl(injectLocalize(IdeaContent));\n\nconst WrappedIdeaContent = (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <IdeaContentWithHOCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n\nexport default WrappedIdeaContent;\n","import React from 'react';\nimport { Subscription } from 'rxjs';\nimport { votesStream } from 'services/ideaVotes';\n\ninterface InputProps {}\n\ntype children = (\n  renderProps: GetIdeaVotesCountChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  ideaId: string;\n  children?: children;\n}\n\ntype votesCount = {\n  up: number;\n  down: number;\n};\n\ninterface State {\n  ideaVotesCount: votesCount | undefined | null;\n}\n\nexport type GetIdeaVotesCountChildProps = votesCount | undefined | null;\n\nexport default class GetIdeaVotesCount extends React.Component<Props, State> {\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ideaVotesCount: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.subscriptions = [\n      votesStream(this.props.ideaId).observable.subscribe((ideaVotes) => {\n        this.setState({\n          ideaVotesCount: ideaVotes\n            ? {\n                up: ideaVotes.data.filter(\n                  (vote) => vote.attributes.mode === 'up'\n                ).length,\n                down: ideaVotes.data.filter(\n                  (vote) => vote.attributes.mode === 'down'\n                ).length,\n              }\n            : null,\n        });\n      }),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { ideaVotesCount } = this.state;\n    return (children as children)(ideaVotesCount);\n  }\n}\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { uuidRegExp } from 'utils/helperUtils';\n\nexport interface IIdeaVoteData {\n  id: string;\n  type: 'vote';\n  attributes: {\n    mode: 'up' | 'down';\n  };\n  relationships: {\n    votable: {\n      data: {\n        id: string;\n        type: 'votable';\n      };\n    };\n    user: {\n      data: {\n        id: string;\n        type: 'user';\n      };\n    };\n  };\n}\n\ninterface ILinks {\n  self: string;\n  first: string;\n  prev: string;\n  next: string;\n  last: string;\n}\n\nexport interface IIdeaVotes {\n  data: IIdeaVoteData[];\n  links: ILinks;\n}\n\nexport interface IIdeaVote {\n  data: IIdeaVoteData;\n}\n\nexport interface INewVoteProperties {\n  user_id?: string;\n  mode: 'up' | 'down';\n}\n\nexport function voteStream(\n  voteId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IIdeaVote>({\n    apiEndpoint: `${API_PATH}/votes/${voteId}`,\n    ...streamParams,\n  });\n}\n\nexport function votesStream(\n  ideaId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IIdeaVotes>({\n    apiEndpoint: `${API_PATH}/ideas/${ideaId}/votes`,\n    ...streamParams,\n  });\n}\n\nexport async function addVote(\n  ideaId: string,\n  object: INewVoteProperties,\n  refetchAllActiveIdeas = false\n) {\n  const response = await streams.add<IIdeaVote>(\n    `${API_PATH}/ideas/${ideaId}/votes`,\n    { vote: object }\n  );\n\n  if (refetchAllActiveIdeas) {\n    const ideaEndpointRegexp = new RegExp(`/ideas/${uuidRegExp}$`);\n    streams.fetchAllWith({\n      regexApiEndpoint: [ideaEndpointRegexp],\n      onlyFetchActiveStreams: true,\n    });\n  }\n\n  return response;\n}\n\nexport async function deleteVote(\n  _ideaId,\n  voteId: string,\n  refetchAllActiveIdeas = false\n) {\n  const response = await streams.delete(`${API_PATH}/votes/${voteId}`, voteId);\n\n  if (refetchAllActiveIdeas) {\n    const ideaEndpointRegexp = new RegExp(`/ideas/${uuidRegExp}$`);\n    streams.fetchAllWith({\n      regexApiEndpoint: [ideaEndpointRegexp],\n      onlyFetchActiveStreams: true,\n    });\n  }\n\n  return response;\n}\n","import React from 'react';\nimport { BehaviorSubject, Subscription, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { TPermissionItem, hasPermission } from 'services/permissions';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  item: TPermissionItem | null;\n  action: string;\n  context?: any;\n}\n\ntype children = (renderProps: GetPermissionChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  permission: boolean | undefined;\n}\n\nexport type GetPermissionChildProps = boolean | undefined;\n\nexport default class GetPermission extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      permission: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { item, action, context } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ item, action, context });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          switchMap(({ item, action, context }) => {\n            if (!isNilOrError(item)) {\n              return hasPermission({ item, action, context });\n            }\n\n            return of(false);\n          })\n        )\n        .subscribe((permission) => this.setState({ permission })),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { item, action, context } = this.props;\n    this.inputProps$.next({ item, action, context });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { permission } = this.state;\n    return (children as children)(permission);\n  }\n}\n","import React from 'react';\nimport { BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  mergeScan,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport {\n  ICommentData,\n  commentsForIdeaStream,\n  commentsForInitiativeStream,\n  CommentsSort,\n} from 'services/comments';\nimport { unionBy, isString, get } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\n\ntype children = (renderProps: GetCommentsChildProps) => JSX.Element | null;\n\ninterface Props {\n  postId: string;\n  children?: children;\n  postType: 'idea' | 'initiative';\n}\n\ninterface State {\n  commentsList: ICommentData[] | undefined | null | Error;\n  loadingInital: boolean;\n  loadingMore: boolean;\n  hasMore: boolean;\n}\n\ninterface IQueryParameters {\n  pageNumber: number;\n  pageSize: number;\n  sort: CommentsSort;\n}\n\nexport interface GetCommentsChildProps extends State {\n  onLoadMore: () => void;\n  onChangeSort: (sort: CommentsSort) => void;\n}\n\nexport default class GetComments extends React.Component<Props, State> {\n  private postId$: BehaviorSubject<string>;\n  private postType$: BehaviorSubject<string>;\n  private sort$: BehaviorSubject<CommentsSort>;\n  private loadMore$: BehaviorSubject<null>;\n  private subscription: Subscription;\n  private initialQueryParameters: IQueryParameters = {\n    pageNumber: 0,\n    pageSize: 15,\n    sort: '-new',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      commentsList: undefined,\n      loadingInital: false,\n      loadingMore: false,\n      hasMore: true,\n    };\n  }\n\n  componentDidMount() {\n    this.postId$ = new BehaviorSubject(this.props.postId);\n    this.postType$ = new BehaviorSubject(this.props.postType);\n    this.sort$ = new BehaviorSubject(this.initialQueryParameters.sort);\n    this.loadMore$ = new BehaviorSubject(null);\n\n    this.subscription = combineLatest(\n      this.postId$.pipe(distinctUntilChanged()),\n      this.postType$.pipe(distinctUntilChanged()),\n      this.sort$.pipe(distinctUntilChanged())\n    )\n      .pipe(\n        switchMap(([postId, postType, sort]) => {\n          let commentsList:\n            | ICommentData[]\n            | undefined\n            | null\n            | Error = undefined;\n          let pageNumber = this.initialQueryParameters.pageNumber;\n          const pageSize = this.initialQueryParameters.pageSize;\n          let hasMore = true;\n\n          return this.loadMore$.pipe(\n            tap(() =>\n              this.setState({\n                loadingInital: pageNumber === 0,\n                loadingMore: pageNumber > 0,\n              })\n            ),\n            mergeScan(() => {\n              pageNumber = pageNumber + 1;\n\n              const commentsStream =\n                postType === 'idea'\n                  ? commentsForIdeaStream\n                  : commentsForInitiativeStream;\n\n              return commentsStream(postId, {\n                queryParameters: {\n                  sort,\n                  'page[number]': pageNumber,\n                  'page[size]': pageSize,\n                },\n              }).observable.pipe(\n                map((comments) => {\n                  const selfLink = get(comments, 'links.self');\n                  const lastLink = get(comments, 'links.last');\n                  hasMore =\n                    isString(selfLink) &&\n                    isString(lastLink) &&\n                    selfLink !== lastLink;\n                  commentsList = !isNilOrError(commentsList)\n                    ? unionBy(commentsList, comments.data, 'id')\n                    : comments.data;\n                  return null;\n                })\n              );\n            }, null),\n            map(() => ({ pageNumber, commentsList, hasMore }))\n          );\n        })\n      )\n      .subscribe(({ commentsList, hasMore }) => {\n        this.setState({\n          commentsList,\n          hasMore,\n          loadingInital: false,\n          loadingMore: false,\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    this.postId$.next(this.props.postId);\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  loadMore = () => {\n    if (this.state.hasMore) {\n      this.loadMore$.next(null);\n    }\n  };\n\n  changeSort = (sort: CommentsSort) => {\n    this.sort$.next(sort);\n  };\n\n  render() {\n    const { children } = this.props;\n    return (children as children)({\n      ...this.state,\n      onLoadMore: this.loadMore,\n      onChangeSort: this.changeSort,\n    });\n  }\n}\n"],"sourceRoot":""}