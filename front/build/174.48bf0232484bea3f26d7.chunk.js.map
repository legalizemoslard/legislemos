{"version":3,"sources":["webpack:///./app/containers/Admin/emails/custom/New/index.tsx"],"names":["New","values","setErrors","setSubmitting","setStatus","createCampaign","campaign_name","then","response","clHistory","push","data","id","catch","errorResponse","isCLErrorJSON","apiErrors","json","errors","authUser","props","sender","reply_to","isNilOrError","attributes","email","subject_multiloc","body_multiloc","group_ids","mode","onClick","this","goBack","PageTitle","FormattedMessage","messages","addCampaignTitle","Formik","initialValues","onSubmit","handleSubmit","render","renderFn","validate","validateCampaignForm","React","Component","user"],"mappings":"ybAAA,eACA,YACA,eACA,YAEA,eACA,eAKA,YAEA,YACA,eACA,eACA,Y,mlDAMMA,E,oPACW,SACbC,EADa,GAGV,IADDC,EACC,EADDA,UAAWC,EACV,EADUA,cAAeC,EACzB,EADyBA,WAE5B,IAAAC,gBAAA,GACEC,cAAe,UACZL,IAEFM,MAAK,SAACC,GACLC,UAAUC,KAAV,+BAAuCF,EAASG,KAAKC,QAEtDC,OAAM,SAACC,GACN,IAAI,IAAAC,eAAcD,GAAgB,CAChC,IAAME,EAAYF,EAAcG,KAAKC,OACrChB,EAAUc,GAEZZ,EAAU,SACVD,GAAc,U,+CAIJ,WACd,IAAQgB,EAAa,EAAKC,MAAlBD,SACR,MAAO,CACLE,OAAQ,SACRC,WAAY,IAAAC,cAAaJ,IAAaA,EAASK,WAAWC,OAAU,GACpEC,iBAAkB,GAClBC,cAAe,GACfC,UAAW,Q,0CAIJ,SAACR,GAAD,OAAW,gBAAC,WAAD,gBAAkBA,EAAlB,CAAyBS,KAAK,a,wCAE3C,WACPpB,UAAUC,KAAK,2B,6CAGjB,WACE,OACE,2BACE,gBAAC,UAAD,CAAcoB,QAASC,KAAKC,SAC5B,gBAAC,EAAAC,UAAD,KACE,gBAAC,EAAAC,iBAAqBC,UAASC,mBAEjC,gBAAC,EAAAC,OAAD,CACEC,cAAeP,KAAKO,gBACpBC,SAAUR,KAAKS,aACfC,OAAQV,KAAKW,SACbC,SAAUC,8B,GAlDFC,EAAMC,W,UAyDT,kBACb,gBAAC,UAAD,MACG,SAACC,GAAD,OAAW,IAAAxB,cAAawB,GAAQ,KAAO,gBAAC/C,EAAD,CAAKmB,SAAU4B","file":"174.48bf0232484bea3f26d7.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createCampaign } from 'services/campaigns';\nimport clHistory from 'utils/cl-router/history';\nimport { isNilOrError } from 'utils/helperUtils';\n\nimport GoBackButton from 'components/UI/GoBackButton';\nimport CampaignForm, {\n  FormValues,\n  validateCampaignForm,\n  PageTitle,\n} from '../CampaignForm';\nimport { Formik } from 'formik';\n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from '../../messages';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport { isCLErrorJSON } from 'utils/errorUtils';\n\ntype Props = {\n  authUser: GetAuthUserChildProps;\n};\n\nclass New extends React.Component<Props> {\n  handleSubmit = (\n    values: FormValues,\n    { setErrors, setSubmitting, setStatus }\n  ) => {\n    createCampaign({\n      campaign_name: 'manual',\n      ...values,\n    })\n      .then((response) => {\n        clHistory.push(`/admin/emails/custom/${response.data.id}`);\n      })\n      .catch((errorResponse) => {\n        if (isCLErrorJSON(errorResponse)) {\n          const apiErrors = errorResponse.json.errors;\n          setErrors(apiErrors);\n        }\n        setStatus('error');\n        setSubmitting(false);\n      });\n  };\n\n  initialValues = (): FormValues => {\n    const { authUser } = this.props;\n    return {\n      sender: 'author',\n      reply_to: (!isNilOrError(authUser) && authUser.attributes.email) || '',\n      subject_multiloc: {},\n      body_multiloc: {},\n      group_ids: [],\n    };\n  };\n\n  renderFn = (props) => <CampaignForm {...props} mode=\"new\" />;\n\n  goBack = () => {\n    clHistory.push('/admin/emails/custom');\n  };\n\n  render() {\n    return (\n      <div>\n        <GoBackButton onClick={this.goBack} />\n        <PageTitle>\n          <FormattedMessage {...messages.addCampaignTitle} />\n        </PageTitle>\n        <Formik\n          initialValues={this.initialValues()}\n          onSubmit={this.handleSubmit}\n          render={this.renderFn}\n          validate={validateCampaignForm}\n        />\n      </div>\n    );\n  }\n}\n\nexport default () => (\n  <GetAuthUser>\n    {(user) => (isNilOrError(user) ? null : <New authUser={user} />)}\n  </GetAuthUser>\n);\n"],"sourceRoot":""}