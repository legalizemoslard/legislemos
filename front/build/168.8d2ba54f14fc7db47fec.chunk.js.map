{"version":3,"sources":["webpack:///./app/modules/commercial/custom_idea_statuses/admin/containers/index.tsx","webpack:///./app/modules/commercial/custom_idea_statuses/admin/containers/messages.ts"],"names":["Buttons","styled","div","DummyButton","Button","DeleteButton","ColorLabel","span","props","color","FlexTextCell","TextCell","StyledIconTooltip","IconTooltip","ideaStatuses","isDeletable","ideaStatus","defaultStatus","isRequired","attributes","ideas_count","useMemo","isNilOrError","find","status","code","sortableStatuses","filter","Section","SectionTitle","FormattedMessage","messages","titleIdeaStatuses","SectionDescription","subtitleInputStatuses","values","linkToManageTab","to","manage","ButtonWrapper","buttonStyle","icon","linkTo","addIdeaStatus","Row","className","content","lockedStatusTooltip","iconSize","placement","value","title_multiloc","theme","disabled","defaultStatusDeleteButtonTooltip","trigger","deleteButtonLabel","id","editButtonLabel","SortableList","items","onReorder","ordering","updateIdeaStatus","itemsList","handleDragRow","handleDropRow","map","index","SortableRow","key","lastItem","length","moveRow","dropRow","inputStatusDeleteButtonTooltip","manageTab","onClick","_event","deleteIdeaStatus","iconHoverColor","colors","clRedError","textHoverColor","defineMessages","defaultMessage","editIdeaStatus"],"mappings":"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","file":"168.8d2ba54f14fc7db47fec.chunk.js","sourcesContent":["// libraries\nimport React, { useMemo } from 'react';\nimport Link from 'utils/cl-router/Link';\nimport styled from 'styled-components';\nimport Tippy from '@tippyjs/react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { colors } from 'utils/styleUtils';\n\n// i18n\nimport T from 'components/T';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// hooks\nimport useIdeaStatuses from 'hooks/useIdeaStatuses';\n\n// streams\nimport {\n  updateIdeaStatus,\n  deleteIdeaStatus,\n  IIdeaStatusData,\n} from 'services/ideaStatuses';\n\n// components\nimport { ButtonWrapper } from 'components/admin/PageWrapper';\nimport { IconTooltip } from 'cl2-component-library';\nimport {\n  Section,\n  SectionTitle,\n  SectionDescription,\n} from 'components/admin/Section';\nimport {\n  Row,\n  SortableList,\n  SortableRow,\n  TextCell,\n} from 'components/admin/ResourceList';\nimport Button from 'components/UI/Button';\n\nconst Buttons = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst DummyButton = styled(Button)`\n  margin-right: 10px;\n`;\n\nconst DeleteButton = styled(Button)`\n  margin-right: 10px;\n`;\n\nconst ColorLabel = styled.span`\n  width: 24px;\n  height: 24px;\n  background-color: ${(props) => props.color};\n  margin-right: 16px;\n  border-radius: 3px;\n  display: inline-block;\n`;\n\nconst FlexTextCell = styled(TextCell)`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconTooltip = styled(IconTooltip)`\n  margin-right: 20px;\n  padding: 0 16px;\n`;\n\nconst IdeaStatuses = () => {\n  const ideaStatuses = useIdeaStatuses();\n\n  const handleReorder = (id: string, ordering: number) => () => {\n    updateIdeaStatus(id, { ordering });\n  };\n\n  const isRequired = (ideaStatus: IIdeaStatusData) => {\n    return ideaStatus === defaultStatus;\n  };\n\n  const handleDelete = (id) => (_event: React.FormEvent<any>) => {\n    deleteIdeaStatus(id);\n  };\n\n  const isDeletable = (ideaStatus: IIdeaStatusData) => {\n    return (\n      !isRequired(ideaStatus) &&\n      (!ideaStatus.attributes.ideas_count ||\n        ideaStatus.attributes.ideas_count === 0)\n    );\n  };\n\n  const defaultStatus = useMemo(() => {\n    if (!isNilOrError(ideaStatuses)) {\n      return ideaStatuses.find(\n        (status) => status.attributes.code === 'proposed'\n      );\n    }\n\n    return null;\n  }, [ideaStatuses]);\n\n  const sortableStatuses = useMemo(() => {\n    if (!isNilOrError(ideaStatuses) && defaultStatus) {\n      return ideaStatuses.filter(\n        (status) => status.attributes !== defaultStatus.attributes\n      );\n    }\n\n    return [];\n  }, [defaultStatus, ideaStatuses]);\n\n  if (!isNilOrError(ideaStatuses) && defaultStatus) {\n    return (\n      <Section>\n        <SectionTitle>\n          <FormattedMessage {...messages.titleIdeaStatuses} />\n        </SectionTitle>\n        <SectionDescription>\n          <FormattedMessage\n            {...messages.subtitleInputStatuses}\n            values={{\n              linkToManageTab: (\n                <Link to=\"/admin/ideas\">\n                  <FormattedMessage {...messages.manage} />\n                </Link>\n              ),\n            }}\n          />\n        </SectionDescription>\n        <ButtonWrapper>\n          <Button\n            buttonStyle=\"cl-blue\"\n            icon=\"plus-circle\"\n            linkTo=\"/admin/ideas/statuses/new\"\n          >\n            <FormattedMessage {...messages.addIdeaStatus} />\n          </Button>\n        </ButtonWrapper>\n\n        <Row>\n          <FlexTextCell className=\"expand\">\n            <StyledIconTooltip\n              content={<FormattedMessage {...messages.lockedStatusTooltip} />}\n              iconSize=\"16px\"\n              placement=\"top\"\n              icon=\"lock\"\n            />\n            <ColorLabel color={defaultStatus.attributes.color} />\n            <T value={defaultStatus.attributes.title_multiloc} />\n          </FlexTextCell>\n          <Buttons>\n            <Tippy\n              placement=\"top\"\n              theme=\"light\"\n              disabled={false}\n              content={\n                <FormattedMessage\n                  {...messages.defaultStatusDeleteButtonTooltip}\n                />\n              }\n              trigger=\"mouseenter\"\n            >\n              <div>\n                <DummyButton buttonStyle=\"text\" disabled={true} icon=\"delete\">\n                  <FormattedMessage {...messages.deleteButtonLabel} />\n                </DummyButton>\n              </div>\n            </Tippy>\n\n            <Button\n              linkTo={`/admin/ideas/statuses/${defaultStatus.id}`}\n              buttonStyle=\"secondary\"\n              icon=\"edit\"\n            >\n              <FormattedMessage {...messages.editButtonLabel} />\n            </Button>\n          </Buttons>\n        </Row>\n\n        <SortableList items={sortableStatuses} onReorder={handleReorder}>\n          {({ itemsList, handleDragRow, handleDropRow }) => (\n            <>\n              {itemsList.map((ideaStatus: IIdeaStatusData, index: number) => (\n                <SortableRow\n                  key={ideaStatus.id}\n                  id={ideaStatus.id}\n                  index={index}\n                  lastItem={index === itemsList.length - 1}\n                  moveRow={handleDragRow}\n                  dropRow={handleDropRow}\n                >\n                  <FlexTextCell className=\"expand\">\n                    <ColorLabel color={ideaStatus.attributes.color} />\n                    <T value={ideaStatus.attributes.title_multiloc} />\n                  </FlexTextCell>\n                  <Buttons>\n                    <Tippy\n                      placement=\"top\"\n                      theme=\"light\"\n                      disabled={isDeletable(ideaStatus)}\n                      content={\n                        <FormattedMessage\n                          {...messages.inputStatusDeleteButtonTooltip}\n                          values={{\n                            manageTab: (\n                              <b>\n                                <FormattedMessage {...messages.manage} />\n                              </b>\n                            ),\n                          }}\n                        />\n                      }\n                      trigger=\"mouseenter\"\n                    >\n                      <div>\n                        <DeleteButton\n                          onClick={handleDelete(ideaStatus.id)}\n                          buttonStyle=\"text\"\n                          disabled={!isDeletable(ideaStatus)}\n                          icon=\"delete\"\n                          iconHoverColor={colors.clRedError}\n                          textHoverColor={colors.clRedError}\n                        >\n                          <FormattedMessage {...messages.deleteButtonLabel} />\n                        </DeleteButton>\n                      </div>\n                    </Tippy>\n                    <Button\n                      linkTo={`/admin/ideas/statuses/${ideaStatus.id}`}\n                      buttonStyle=\"secondary\"\n                      icon=\"edit\"\n                    >\n                      <FormattedMessage {...messages.editButtonLabel} />\n                    </Button>\n                  </Buttons>\n                </SortableRow>\n              ))}\n            </>\n          )}\n        </SortableList>\n      </Section>\n    );\n  }\n\n  return null;\n};\n\nexport default IdeaStatuses;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  deleteButtonLabel: {\n    id: 'app.containers.admin.ideaStatuses.all.deleteButtonLabel',\n    defaultMessage: 'Delete',\n  },\n  editButtonLabel: {\n    id: 'app.containers.admin.ideaStatuses.all.editButtonLabel',\n    defaultMessage: 'Edit',\n  },\n  addIdeaStatus: {\n    id: 'app.containers.admin.ideaStatuses.all.addIdeaStatus',\n    defaultMessage: 'Add status',\n  },\n  editIdeaStatus: {\n    id: 'app.containers.admin.ideaStatuses.all.editIdeaStatus',\n    defaultMessage: 'Edit status',\n  },\n  titleIdeaStatuses: {\n    id: 'app.containers.admin.ideaStatuses.all.titleIdeaStatuses',\n    defaultMessage: 'Statuses',\n  },\n  subtitleInputStatuses: {\n    id: 'app.containers.admin.ideaStatuses.all.subtitleInputStatuses',\n    defaultMessage:\n      \"Here you can add, edit and delete the statuses that can be assigned to inputs. The status is publicly visible and helps participants know what's happening with their input. You can add a status to inputs in the {linkToManageTab} tab.\",\n  },\n  manage: {\n    id: 'app.containers.admin.ideaStatuses.all.manage',\n    defaultMessage: 'Manage',\n  },\n  inputStatusDeleteButtonTooltip: {\n    id: 'app.containers.admin.ideaStatuses.all.inputStatusDeleteButtonTooltip',\n    defaultMessage:\n      'Statuses currently assigned to an input cannot be deleted. You can remove/change the status from existing inputs in the {manageTab} tab.',\n  },\n  defaultStatusDeleteButtonTooltip: {\n    id:\n      'app.containers.admin.ideaStatuses.all.defaultStatusDeleteButtonTooltip',\n    defaultMessage: 'The default status can not be deleted.',\n  },\n  lockedStatusTooltip: {\n    id: 'app.containers.admin.ideaStatuses.all.lockedStatusTooltip',\n    defaultMessage: 'This status cannot be deleted or moved.',\n  },\n});\n"],"sourceRoot":""}