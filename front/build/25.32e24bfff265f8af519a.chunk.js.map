{"version":3,"sources":["webpack:///./app/components/UI/QuillEditor/FormikQuillMultiloc.tsx","webpack:///./app/containers/Admin/emails/messages.ts","webpack:///./app/containers/Admin/emails/custom/CampaignForm/index.tsx","webpack:///./app/components/UI/FormikMultipleSelect/index.tsx","webpack:///./app/components/UI/GoBackButton/messages.ts","webpack:///./app/services/campaigns.ts","webpack:///./app/components/UI/FormikInput/index.tsx","webpack:///./app/components/UI/FormikSelect/index.tsx","webpack:///./app/components/UI/GoBackButton/index.tsx"],"names":["FormikQuillMultiloc","newValue","props","form","setFieldValue","field","name","setStatus","setFieldTouched","this","valueMultiloc","value","onChange","handleOnChange","onBlur","handleOnBlur","PureComponent","defineMessages","titleEmails","id","defaultMessage","subtitleEmails","helmetTitle","helmetDescription","campaignDeletionConfirmation","addCampaignButton","deleteButtonLabel","statsButton","editButtonLabel","manageButtonLabel","fieldSender","fieldSenderTooltip","fieldReplyTo","fieldReplyToTooltip","fieldTo","fieldToTooltip","fieldSubject","fieldSubjectTooltip","fieldBody","addCampaignTitle","editCampaignTitle","draft","sent","sendNowButton","sendTestEmailButton","sendTestEmailTooltip","previewSentConfirmation","formSaveButton","formErrorButton","formSuccessButton","formSuccessMessage","formErrorMessage","formUnexpectedErrorMessage","previewTitle","recipientsTitle","deliveryStatus_sent","deliveryStatus_failed","deliveryStatus_accepted","deliveryStatus_delivered","deliveryStatus_opened","deliveryStatus_clicked","deliveryStatus_clickedTooltip","tabCustom","tabAutomated","campaignFrom","campaignTo","noAccess","deleteCampaignButton","noCampaignsHeader","noCampaignsDescription","automatedEmailCampaignsInfo","allUsers","groups","nameVariablesInfo","changeRecipientsButton","send","confirmSendHeader","toAllUsers","senderRecipients","StyledSection","Section","StyledSectionField","SectionField","StyledSectionTitle","SectionTitle","fontSizes","xl","PageTitle","styled","h1","values","errors","every","subject_multiloc","isEmpty","error","CampaignForm","user","tenant","localize","label","isNilOrError","attributes","first_name","last_name","settings","core","organization_name","groupsList","map","group","title_multiloc","intl","formatMessage","messages","labelTooltipText","noVideos","noAlign","isSubmitting","isValid","touched","status","Form","FormattedMessage","Label","IconTooltip","content","FastField","component","FormikSelect","options","senderOptions","clearable","sender","fieldName","apiErrors","Field","FormikMultipleSelect","groupsOptions","placeholder","group_ids","FormikInput","type","reply_to","className","FormikInputMultilocWithLocaleSwitcher","maxCharCount","render","renderFormikQuillMultiloc","body_multiloc","buttonSave","buttonError","buttonSuccess","messageSuccess","messageError","Object","keys","length","React","Component","Data","adopt","CampaignFormWithHOCs","injectIntl","inputProps","dataProps","newOption","o","goBack","streamParams","streams","get","apiEndpoint","campaignData","add","campaign","campaignId","update","delete","deliveries_count","API_PATH","stream","fetchAllWith","_locale","Input","Select","Container","div","GoBackButton","onClick","buttonStyle","icon","size","padding","text"],"mappings":"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","file":"25.32e24bfff265f8af519a.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { FieldProps } from 'formik';\n\n// components\nimport QuillMultilocWithLocaleSwitcher, {\n  Props,\n} from 'components/UI/QuillEditor/QuillMultilocWithLocaleSwitcher';\n\n// typings\nimport { Multiloc } from 'typings';\n\nexport default class FormikQuillMultiloc extends PureComponent<\n  FieldProps & Props\n> {\n  handleOnChange = (newValue: Multiloc) => {\n    this.props.form.setFieldValue(this.props.field.name, newValue);\n    this.props.form.setStatus('enabled');\n  };\n\n  handleOnBlur = () => {\n    this.props.form.setFieldTouched(this.props.field.name);\n  };\n\n  render() {\n    const { field } = this.props;\n\n    return (\n      <QuillMultilocWithLocaleSwitcher\n        {...this.props}\n        valueMultiloc={field.value}\n        onChange={this.handleOnChange}\n        onBlur={this.handleOnBlur}\n      />\n    );\n  }\n}\n","/*\n * Admin.emails Messages\n *\n * This contains all the text for the admins email.\n */\n\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  titleEmails: {\n    id: 'app.containers.Admin.emails.titleEmails',\n    defaultMessage: 'Email Campaigns',\n  },\n  subtitleEmails: {\n    id: 'app.containers.Admin.emails.subtitleEmails',\n    defaultMessage:\n      'Compose your own emails to be sent out to all users or to particular groups. And control what automated emails your users receive.',\n  },\n  helmetTitle: {\n    id: 'app.containers.Admin.emails.helmetTitle',\n    defaultMessage: 'Email Campaigns',\n  },\n  helmetDescription: {\n    id: 'app.containers.Admin.emails.helmetDescription',\n    defaultMessage:\n      'Send out manual emails to certain citizen group and active automated campaigns',\n  },\n  campaignDeletionConfirmation: {\n    id: 'app.containers.Admin.emails.campaignDeletionConfirmation',\n    defaultMessage: 'Are you sure?',\n  },\n  addCampaignButton: {\n    id: 'app.containers.Admin.emails.addCampaignButton',\n    defaultMessage: 'Create campaign',\n  },\n  deleteButtonLabel: {\n    id: 'app.containers.Admin.emails.deleteButtonLabel',\n    defaultMessage: 'Delete',\n  },\n  statsButton: {\n    id: 'app.containers.Admin.emails.statsButton',\n    defaultMessage: 'Statistics',\n  },\n  editButtonLabel: {\n    id: 'app.containers.Admin.emails.editButtonLabel',\n    defaultMessage: 'Edit',\n  },\n  manageButtonLabel: {\n    id: 'app.containers.Admin.emails.manageButtonLabel',\n    defaultMessage: 'Manage & Edit & Preview & Delete',\n  },\n  fieldSender: {\n    id: 'app.containers.Admin.emails.fieldSender',\n    defaultMessage: 'From',\n  },\n  fieldSenderTooltip: {\n    id: 'app.containers.Admin.emails.fieldSenderTooltip',\n    defaultMessage: 'Choose whom users will see as the sender of the email.',\n  },\n  fieldReplyTo: {\n    id: 'app.containers.Admin.emails.fieldReplyTo',\n    defaultMessage: 'Replies should go to',\n  },\n  fieldReplyToTooltip: {\n    id: 'app.containers.Admin.emails.fieldReplyToTooltip',\n    defaultMessage:\n      'Choose what email address should receive direct replies from users on your email.',\n  },\n  fieldTo: {\n    id: 'app.containers.Admin.emails.fieldTo',\n    defaultMessage: 'To',\n  },\n  fieldToTooltip: {\n    id: 'app.containers.Admin.emails.fieldToTooltip',\n    defaultMessage: 'Choose the group(s) of users who will receive your email.',\n  },\n  fieldSubject: {\n    id: 'app.containers.Admin.emails.fieldSubject',\n    defaultMessage: 'Email Subject',\n  },\n  fieldSubjectTooltip: {\n    id: 'app.containers.Admin.emails.fieldSubjectTooltip',\n    defaultMessage:\n      'This will be shown in the subject line of the email and in the user’s inbox overview. Make it clear and engaging.',\n  },\n  fieldBody: {\n    id: 'app.containers.Admin.emails.fieldBody',\n    defaultMessage: 'Email Message',\n  },\n  addCampaignTitle: {\n    id: 'app.containers.Admin.emails.addCampaignTitle',\n    defaultMessage: 'New campaign',\n  },\n  editCampaignTitle: {\n    id: 'app.containers.Admin.emails.editCampaignTitle',\n    defaultMessage: 'Edit campaign',\n  },\n  draft: {\n    id: 'app.containers.Admin.emails.draft',\n    defaultMessage: 'Draft',\n  },\n  sent: {\n    id: 'app.containers.Admin.emails.sent',\n    defaultMessage: 'Sent',\n  },\n  sendNowButton: {\n    id: 'app.containers.Admin.emails.sendNowButton',\n    defaultMessage: 'Send now',\n  },\n  sendTestEmailButton: {\n    id: 'app.containers.Admin.emails.sendTestEmailButton',\n    defaultMessage: 'Send a preview',\n  },\n  sendTestEmailTooltip: {\n    id: 'app.containers.Admin.emails.sendTestEmailTooltip',\n    defaultMessage:\n      'Send this draft email to the email address with which you are logged in, to check how it looks like in ‘real life’.',\n  },\n  previewSentConfirmation: {\n    id: 'app.containers.Admin.emails.previewSentConfirmation',\n    defaultMessage: 'A preview email has been sent to your email address',\n  },\n  formSaveButton: {\n    id: 'app.containers.Admin.emails.formSaveButton',\n    defaultMessage: 'Continue',\n  },\n  formErrorButton: {\n    id: 'app.containers.Admin.emails.formErrorButton',\n    defaultMessage: 'Continue',\n  },\n  formSuccessButton: {\n    id: 'app.containers.Admin.emails.formSuccessButton',\n    defaultMessage: 'Continue',\n  },\n  formSuccessMessage: {\n    id: 'app.containers.Admin.emails.formSuccessMessage',\n    defaultMessage: 'formSuccessMessage',\n  },\n  formErrorMessage: {\n    id: 'app.containers.Admin.emails.formErrorMessage',\n    defaultMessage: 'Please correct the errors above to continue',\n  },\n  formUnexpectedErrorMessage: {\n    id: 'app.containers.Admin.emails.formUnexpectedErrorMessage',\n    defaultMessage: 'Something went wrong, please try again later',\n  },\n  previewTitle: {\n    id: 'app.containers.Admin.emails.previewTitle',\n    defaultMessage: 'Preview',\n  },\n  recipientsTitle: {\n    id: 'app.containers.Admin.emails.recipientsTitle',\n    defaultMessage: 'Recipients',\n  },\n  deliveryStatus_sent: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_sent',\n    defaultMessage: 'Sent',\n  },\n  deliveryStatus_failed: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_failed',\n    defaultMessage: 'Failed',\n  },\n  deliveryStatus_accepted: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_accepted',\n    defaultMessage: 'Accepted',\n  },\n  deliveryStatus_delivered: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_delivered',\n    defaultMessage: 'Delivered',\n  },\n  deliveryStatus_opened: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_opened',\n    defaultMessage: 'Opened',\n  },\n  deliveryStatus_clicked: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_clicked',\n    defaultMessage: 'Clicked',\n  },\n  deliveryStatus_clickedTooltip: {\n    id: 'app.containers.Admin.Campaigns.deliveryStatus_clickedTooltip',\n    defaultMessage:\n      'When you added one or more links to your email, the number of users who clicked a link will be shown here.',\n  },\n  tabCustom: {\n    id: 'app.containers.Admin.Campaigns.tabCustom',\n    defaultMessage: 'Custom',\n  },\n  tabAutomated: {\n    id: 'app.containers.Admin.Campaigns.tabAutomated',\n    defaultMessage: 'Automated',\n  },\n  campaignFrom: {\n    id: 'app.containers.Admin.Campaigns.campaignFrom',\n    defaultMessage: 'From:',\n  },\n  campaignTo: {\n    id: 'app.containers.Admin.Campaigns.campaignTo',\n    defaultMessage: 'To:',\n  },\n  noAccess: {\n    id: 'app.containers.Admin.Campaigns.noAccess',\n    defaultMessage:\n      \"We're sorry, but it seems like you don't have access to the emails section\",\n  },\n  deleteCampaignButton: {\n    id: 'app.containers.Admin.emails.deleteCampaignButton',\n    defaultMessage: 'Delete Campaign',\n  },\n  noCampaignsHeader: {\n    id: 'app.containers.Admin.emails.noCampaignsHeader',\n    defaultMessage: 'No custom email campaigns yet',\n  },\n  noCampaignsDescription: {\n    id: 'app.containers.Admin.emails.noCampaignsDescription',\n    defaultMessage:\n      'Custom email campaigns are emails created from scratch. Their content and recipients can be chosen and you can follow up on their results through statistics.',\n  },\n  automatedEmailCampaignsInfo: {\n    id: 'app.containers.Admin.emails.automatedEmailCampaignsInfo',\n    defaultMessage:\n      'Automated email campaigns are sent out by default and are triggered by a user’s actions. Some of them can be turned off. Others are an inherent part of user interactions with the platform and therefore can’t be turned off.',\n  },\n  allUsers: {\n    id: 'app.containers.Admin.emails.allUsers',\n    defaultMessage: 'All users',\n  },\n  groups: {\n    id: 'app.containers.Admin.emails.groups',\n    defaultMessage: 'Groups',\n  },\n  nameVariablesInfo: {\n    id: 'app.containers.Admin.emails.nameVariablesInfo',\n    defaultMessage:\n      'You can speak directly to citizens using the variables \\\\{\\\\{first_name\\\\}\\\\} \\\\{\\\\{last_name\\\\}\\\\}. E.g. \"Dear \\\\{\\\\{first_name\\\\}\\\\} \\\\{\\\\{last_name\\\\}\\\\}, ...\"',\n  },\n  changeRecipientsButton: {\n    id: 'app.containers.Admin.emails.changeRecipientsButton',\n    defaultMessage: 'Change recipients',\n  },\n  send: {\n    id: 'app.containers.Admin.emails.send',\n    defaultMessage: 'Send',\n  },\n  confirmSendHeader: {\n    id: 'app.containers.Admin.emails.confirmSendHeader',\n    defaultMessage: 'Email to all users?',\n  },\n  toAllUsers: {\n    id: 'app.containers.Admin.emails.toAllUsers',\n    defaultMessage: 'Do you want to send this email to all users?',\n  },\n  senderRecipients: {\n    id: 'app.containers.Admin.emails.senderRecipients',\n    defaultMessage: 'Sender and recipients',\n  },\n});\n","import * as React from 'react';\nimport { isEmpty, values as getValues, every } from 'lodash-es';\nimport { adopt } from 'react-adopt';\nimport { Multiloc } from 'typings';\nimport styled from 'styled-components';\n\n// i18n\nimport { InjectedIntlProps } from 'react-intl';\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport messages from '../../messages';\n\n// utils\nimport localize, { InjectedLocalized } from 'utils/localize';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { fontSizes } from 'utils/styleUtils';\n\n// components\nimport { IconTooltip, Label } from 'cl2-component-library';\nimport FormikMultipleSelect from 'components/UI/FormikMultipleSelect';\nimport FormikInput from 'components/UI/FormikInput';\nimport FormikQuillMultiloc from 'components/UI/QuillEditor/FormikQuillMultiloc';\nimport { Section, SectionField, SectionTitle } from 'components/admin/Section';\nimport {\n  Form,\n  Field,\n  FastField,\n  InjectedFormikProps,\n  FormikErrors,\n} from 'formik';\nimport FormikSubmitWrapper from 'components/admin/FormikSubmitWrapper';\nimport FormikInputMultilocWithLocaleSwitcher from 'components/UI/FormikInputMultilocWithLocaleSwitcher';\nimport FormikSelect from 'components/UI/FormikSelect';\nimport Error from 'components/UI/Error';\n\n// resources\nimport GetGroups, { GetGroupsChildProps } from 'resources/GetGroups';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\n\nconst StyledSection = styled(Section)`\n  margin-bottom: 2.5rem;\n`;\n\nconst StyledSectionField = styled(SectionField)`\n  margin-bottom: 10px;\n`;\n\nconst StyledSectionTitle = styled(SectionTitle)`\n  margin-bottom: 1rem;\n  font-size: ${fontSizes.xl}px;\n`;\n\nexport const PageTitle = styled.h1`\n  width: 100%;\n  font-size: 2rem;\n  font-weight: 600;\n  margin: 2rem 0 1rem;\n`;\n\nexport interface FormValues {\n  sender: 'author' | 'organization';\n  reply_to: string;\n  subject_multiloc: Multiloc;\n  body_multiloc: Multiloc;\n  group_ids?: string[];\n}\n\ninterface InputProps {\n  mode: 'new' | 'edit';\n}\n\ninterface DataProps {\n  user: GetAuthUserChildProps;\n  tenant: GetAppConfigurationChildProps;\n}\n\ninterface Props\n  extends InputProps,\n    DataProps,\n    InjectedLocalized,\n    InjectedIntlProps {}\n\nexport const validateCampaignForm = (\n  values: FormValues\n): FormikErrors<FormValues> => {\n  const errors: FormikErrors<FormValues> = {};\n\n  if (every(getValues(values.subject_multiloc), isEmpty)) {\n    errors.subject_multiloc = [{ error: 'blank' }] as any;\n  }\n\n  return errors;\n};\n\nclass CampaignForm extends React.Component<\n  InjectedFormikProps<Props, FormValues>\n> {\n  senderOptions = () => {\n    const { user, tenant, localize } = this.props;\n    return [\n      {\n        value: 'author',\n        label:\n          !isNilOrError(user) &&\n          `${user.attributes.first_name} ${user.attributes.last_name}`,\n      },\n      {\n        value: 'organization',\n        label:\n          !isNilOrError(tenant) &&\n          localize(tenant.attributes.settings.core.organization_name),\n      },\n    ];\n  };\n\n  groupsOptions = (groups: GetGroupsChildProps) => {\n    const groupList =\n      !isNilOrError(groups) && !isNilOrError(groups.groupsList)\n        ? groups.groupsList.map((group) => ({\n            label: this.props.localize(group.attributes.title_multiloc),\n            value: group.id,\n          }))\n        : [];\n\n    return groupList;\n  };\n\n  renderFormikQuillMultiloc = (props) => {\n    return (\n      <FormikQuillMultiloc\n        label={this.props.intl.formatMessage(messages.fieldBody)}\n        labelTooltipText={this.props.intl.formatMessage(\n          messages.nameVariablesInfo\n        )}\n        noVideos\n        noAlign\n        {...props}\n      />\n    );\n  };\n\n  render() {\n    const { isSubmitting, errors, isValid, touched, status } = this.props;\n    return (\n      <Form>\n        <StyledSection>\n          <StyledSectionTitle>\n            <FormattedMessage {...messages.senderRecipients} />\n          </StyledSectionTitle>\n          <StyledSectionField>\n            <Label>\n              <FormattedMessage {...messages.fieldSender} />\n              <IconTooltip\n                content={<FormattedMessage {...messages.fieldSenderTooltip} />}\n              />\n            </Label>\n            <FastField\n              name=\"sender\"\n              component={FormikSelect}\n              options={this.senderOptions()}\n              clearable={false}\n            />\n            {touched.sender && (\n              <Error fieldName=\"sender\" apiErrors={errors.sender as any} />\n            )}\n          </StyledSectionField>\n\n          <StyledSectionField>\n            <Label>\n              <FormattedMessage {...messages.fieldTo} />\n              <IconTooltip\n                content={<FormattedMessage {...messages.fieldToTooltip} />}\n              />\n            </Label>\n            <GetGroups>\n              {(groups) =>\n                isNilOrError(groups) ? null : (\n                  <Field\n                    name=\"group_ids\"\n                    component={FormikMultipleSelect}\n                    options={this.groupsOptions(groups)}\n                    placeholder={<FormattedMessage {...messages.allUsers} />}\n                  />\n                )\n              }\n            </GetGroups>\n            {touched.group_ids && (\n              <Error\n                fieldName=\"group_ids\"\n                apiErrors={errors.group_ids as any}\n              />\n            )}\n          </StyledSectionField>\n\n          <StyledSectionField>\n            <Label>\n              <FormattedMessage {...messages.fieldReplyTo} />\n              <IconTooltip\n                content={<FormattedMessage {...messages.fieldReplyToTooltip} />}\n              />\n            </Label>\n            <FastField name=\"reply_to\" component={FormikInput} type=\"email\" />\n            {touched.reply_to && (\n              <Error fieldName=\"reply_to\" apiErrors={errors.reply_to as any} />\n            )}\n          </StyledSectionField>\n        </StyledSection>\n\n        <StyledSection>\n          <StyledSectionTitle>\n            <FormattedMessage {...messages.fieldSubject} />\n          </StyledSectionTitle>\n          <SectionField className=\"e2e-campaign_subject_multiloc\">\n            <FastField\n              name=\"subject_multiloc\"\n              component={FormikInputMultilocWithLocaleSwitcher}\n              label={<FormattedMessage {...messages.fieldSubject} />}\n              labelTooltipText={\n                <FormattedMessage {...messages.fieldSubjectTooltip} />\n              }\n              maxCharCount={80}\n            />\n            {touched.subject_multiloc && (\n              <Error\n                fieldName=\"subject_multiloc\"\n                apiErrors={errors.subject_multiloc as any}\n              />\n            )}\n          </SectionField>\n\n          <StyledSectionTitle>\n            <FormattedMessage {...messages.fieldBody} />\n          </StyledSectionTitle>\n          <SectionField className=\"e2e-campaign_body_multiloc\">\n            <FastField\n              name=\"body_multiloc\"\n              render={this.renderFormikQuillMultiloc}\n            />\n            {touched.body_multiloc && (\n              <Error\n                fieldName=\"body_multiloc\"\n                apiErrors={errors.body_multiloc as any}\n              />\n            )}\n          </SectionField>\n        </StyledSection>\n\n        <FormikSubmitWrapper\n          {...{ isValid, isSubmitting, status, touched, errors }}\n          messages={{\n            buttonSave: messages.formSaveButton,\n            buttonError: messages.formErrorButton,\n            buttonSuccess: messages.formSuccessButton,\n            messageSuccess: messages.formSuccessMessage,\n            messageError:\n              Object.keys(errors).length > 0\n                ? messages.formErrorMessage\n                : messages.formUnexpectedErrorMessage,\n          }}\n        />\n      </Form>\n    );\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  user: ({ render }) => <GetAuthUser>{render}</GetAuthUser>,\n  tenant: ({ render }) => <GetAppConfiguration>{render}</GetAppConfiguration>,\n});\n\nconst CampaignFormWithHOCs = injectIntl(localize<InputProps>(CampaignForm));\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <CampaignFormWithHOCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React from 'react';\nimport MultipleSelect, {\n  Props as VanillaInputProps,\n} from 'components/UI/MultipleSelect';\nimport { FieldProps } from 'formik';\nimport { IOption } from 'typings';\n\ninterface State {}\n\nclass FormikMultipleSelect extends React.Component<\n  FieldProps & VanillaInputProps,\n  State\n> {\n  handleOnChange = (newOption: IOption[]) => {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      newOption.map((o) => o.value)\n    );\n  };\n\n  render() {\n    const { value } = this.props.field;\n    return (\n      <MultipleSelect\n        {...this.props}\n        value={value}\n        onChange={this.handleOnChange}\n      />\n    );\n  }\n}\n\nexport default FormikMultipleSelect;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  goBack: {\n    id: 'app.components.GoBackButton.group.edit.goBack',\n    defaultMessage: 'Go back',\n  },\n});\n","import { IRelationship, Multiloc, ILinks } from 'typings';\nimport { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\n\nconst apiEndpoint = `${API_PATH}/campaigns`;\n\nexport interface ICampaignsData {\n  data: ICampaignData[];\n  links: ILinks;\n}\n\nexport interface ICampaignData {\n  id: string;\n  type: string;\n  attributes: {\n    campaign_name: string;\n    admin_campaign_description_multiloc: Multiloc;\n    enabled?: boolean;\n    subject_multiloc: Multiloc;\n    body_multiloc: Multiloc;\n    sender: 'author' | 'organization';\n    reply_to: 'author' | 'organization';\n    created_at: string;\n    updated_at: string;\n    deliveries_count: number;\n    schedule: any;\n    schedule_multiloc: Multiloc;\n  };\n  relationships: {\n    author: {\n      data: IRelationship;\n    };\n    groups: {\n      data: IRelationship[];\n    };\n  };\n}\n\nexport interface CampaignUpdate {\n  campaign_name?: string;\n  subject_multiloc?: Multiloc;\n  body_multiloc?: Multiloc;\n  sender?: string;\n  reply_to?: string;\n  group_ids?: string[];\n  enabled?: boolean;\n}\n\nexport interface CampaignCreation {\n  campaign_name: string;\n  subject_multiloc: Multiloc;\n  body_multiloc: Multiloc;\n  sender: string;\n  reply_to?: string;\n  group_ids?: string[];\n}\n\nexport interface ICampaign {\n  data: ICampaignData;\n}\n\nexport interface IDeliveriesData {\n  data: IDeliveryData[];\n  links: ILinks;\n}\nexport interface IDeliveryData {\n  id: string;\n  type: string;\n  attributes: {\n    delivery_status:\n      | 'sent'\n      | 'bounced'\n      | 'failed'\n      | 'accepted'\n      | 'delivered'\n      | 'opened'\n      | 'clicked';\n    sent_at: string;\n    created_at: string;\n    updated_at: string;\n  };\n  relationships: {\n    user: {\n      data: IRelationship;\n    };\n  };\n}\n\nexport interface IRecipient {\n  data: IDeliveryData[];\n}\n\nexport interface ICampaignStats {\n  sent: number;\n  bounced: number;\n  failed: number;\n  accepted: number;\n  delivered: number;\n  opened: number;\n  clicked: number;\n  all: number;\n}\n\nexport function listCampaigns(streamParams: IStreamParams | null = null) {\n  return streams.get<ICampaignsData>({\n    apiEndpoint: `${apiEndpoint}`,\n    ...streamParams,\n  });\n}\n\nexport function createCampaign(campaignData: CampaignCreation) {\n  return streams.add<ICampaign>(`${apiEndpoint}`, { campaign: campaignData });\n}\n\nexport function updateCampaign(\n  campaignId: string,\n  campaignData: CampaignUpdate\n) {\n  return streams.update<ICampaign>(`${apiEndpoint}/${campaignId}`, campaignId, {\n    campaign: campaignData,\n  });\n}\n\nexport async function sendCampaign(campaignId: string) {\n  const stream = await streams.add<ICampaign>(\n    `${apiEndpoint}/${campaignId}/send`,\n    {}\n  );\n  await streams.fetchAllWith({\n    apiEndpoint: [`${apiEndpoint}/${campaignId}`, `${API_PATH}/campaigns`],\n  });\n  return stream;\n}\n\nexport function sendCampaignPreview(campaignId: string) {\n  return streams.add<ICampaign>(\n    `${apiEndpoint}/${campaignId}/send_preview`,\n    {}\n  );\n}\n\nexport function deleteCampaign(campaignId: string) {\n  return streams.delete(`${apiEndpoint}/${campaignId}`, campaignId);\n}\n\nexport function campaignByIdStream(\n  campaignId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICampaign>({\n    apiEndpoint: `${apiEndpoint}/${campaignId}`,\n    ...streamParams,\n  });\n}\n\nexport function listCampaignDeliveries(\n  campaignId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IDeliveriesData>({\n    apiEndpoint: `${apiEndpoint}/${campaignId}/deliveries`,\n    ...streamParams,\n  });\n}\n\nexport function getCampaignStats(\n  campaignId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<ICampaignStats>({\n    apiEndpoint: `${apiEndpoint}/${campaignId}/stats`,\n    ...streamParams,\n  });\n}\n\nexport function isDraft(campaign: ICampaignData) {\n  return campaign.attributes.deliveries_count === 0;\n}\n","import React, { PureComponent } from 'react';\nimport { Input, InputProps } from 'cl2-component-library';\nimport { FieldProps } from 'formik';\nimport { Locale } from 'typings';\n\nclass FormikInput extends PureComponent<FieldProps & InputProps> {\n  handleOnChange = (newValue: string, _locale: Locale | undefined) => {\n    this.props.form.setFieldValue(this.props.field.name, newValue);\n  };\n\n  render() {\n    const { name, value } = this.props.field;\n    return (\n      <Input\n        {...this.props}\n        name={name}\n        value={value}\n        onChange={this.handleOnChange}\n      />\n    );\n  }\n}\n\nexport default FormikInput;\n","import React from 'react';\nimport { Select, SelectProps } from 'cl2-component-library';\nimport { FieldProps } from 'formik';\nimport { IOption } from 'typings';\n\ninterface State {}\n\nclass FormikInput extends React.Component<FieldProps & SelectProps, State> {\n  handleOnChange = (newOption: IOption) => {\n    this.props.form.setFieldValue(this.props.field.name, newOption.value);\n  };\n\n  render() {\n    const { value } = this.props.field;\n    return (\n      <Select {...this.props} value={value} onChange={this.handleOnChange} />\n    );\n  }\n}\n\nexport default FormikInput;\n","import React, { PureComponent, FormEvent } from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/UI/Button';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.div`\n  display: inline-block;\n`;\n\ntype Props = {\n  onClick: (arg: FormEvent) => void;\n  className?: string;\n};\n\ninterface State {}\n\nexport default class GoBackButton extends PureComponent<Props, State> {\n  render() {\n    const { onClick, className } = this.props;\n\n    return (\n      <Container className={className || ''}>\n        <Button\n          onClick={onClick}\n          buttonStyle=\"text\"\n          icon=\"arrow-back\"\n          size=\"2\"\n          padding=\"0px\"\n          text={<FormattedMessage {...messages.goBack} />}\n        />\n      </Container>\n    );\n  }\n}\n"],"sourceRoot":""}