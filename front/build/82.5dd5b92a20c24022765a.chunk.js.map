{"version":3,"sources":["webpack:///./app/modules/commercial/moderation/admin/containers/SelectProject.tsx","webpack:///./app/modules/commercial/moderation/admin/containers/tracks.ts","webpack:///./app/modules/commercial/moderation/admin/containers/messages.ts","webpack:///./app/modules/commercial/moderation/admin/containers/ModerationContentCell.tsx","webpack:///./app/components/Pagination/index.tsx","webpack:///./app/modules/commercial/moderation/hooks/useModerations.ts","webpack:///./app/modules/commercial/moderation/hooks/useModerationsCount.ts","webpack:///./app/modules/commercial/moderation/services/moderations.ts","webpack:///./app/modules/commercial/moderation/admin/containers/index.tsx","webpack:///./app/modules/commercial/moderation/admin/containers/ModerationRow.tsx","webpack:///./app/modules/commercial/moderation/admin/containers/SelectType.tsx","webpack:///./app/components/UI/Table/index.tsx"],"names":["SelectProject","memo","onChange","projects","selectedProjectIds","localize","handleOnChange","useCallback","newProjectIds","isNilOrError","projectsList","length","values","map","project","text","attributes","title_multiloc","value","id","title","FormattedMessage","messages","name","selected","multipleSelectionAllowed","Data","adopt","publicationStatuses","filterCanModerate","inputProps","dataProps","tabClicked","markedAsViewedButtonClicked","markedAsNotViewedButtonClicked","goToLinkClicked","belongsToLinkClicked","pageNumberClicked","typeFilterUsed","projectFilterUsed","searchUsed","defineMessages","pageTitle","defaultMessage","type","belongsTo","post","initiative","comment","content","date","rowsPerPage","show","status","all","read","unread","noViewedItems","noUnviewedItems","readMore","collapse","markSeen","markNotSeen","goToPost","goToProposal","goToComment","moderationsTooltip","settings","profanityBlockerSetting","profanityBlockerSettingDescription","successfulUpdateSettings","settingsSavingError","removeFlagsError","markFlagsError","Container","styled","div","Content","ContentTitle","fontSizes","base","ContentBody","StyledLocaleSwitcher","LocaleSwitcher","ReadMoreButton","button","colors","clIconAccent","darken","contentTitle","contentBody","className","contentBodyLocales","Object","keys","useState","selectedLocale","setSelectedLocale","expanded","setExpanded","handleOnSelectedLocaleChange","newSelectedLocale","removeFocus","event","preventDefault","handleOnReadMore","onSelectedLocaleChange","locales","dangerouslySetInnerHTML","__html","truncate","separator","onMouseDown","onClick","ContainerInner","ChevronIcon","Icon","adminTextColor","NavigateButton","props","theme","borderRadius","Next","Back","Pages","Item","useColorsTheme","colorText","lightGreyishBlue","colorMain","rgba","item","loadPage","page","totalPages","currentPage","l","last","left","right","range","rangeWithDots","i","push","forEach","this","pageItems","calculateMenuItems","goTo","disabled","key","handleItemClick","toString","PureComponent","pageNumber","setPageNumber","pageSize","setPageSize","moderationStatus","setModerationStatus","undefined","list","setList","lastPage","setLastPage","moderatableTypes","setModeratableTypes","projectIds","setProjectIds","searchTerm","setSearchTerm","isFlagged","setIsFlagged","onPageNumberChange","newPageNumber","onPageSizeChange","newPageSize","onModerationStatusChange","newModerationStatus","onModeratableTypesChange","newModeratableTypes","onProjectIdsChange","onSearchTermChange","onIsFlaggedChange","useEffect","subscription","moderationsStream","queryParameters","moderation_status","moderatable_types","project_ids","search","is_flagged","observable","subscribe","response","data","getPageNumberFromUrl","links","self","unsubscribe","count","setCount","moderationsCountStream","streamParams","streams","get","apiEndpoint","API_PATH","cacheStream","moderationId","moderatableType","updateObject","moderation","update","fetchAllWith","PageTitleWrapper","StyledPageTitle","PageTitle","xxxl","StyledIconTooltip","IconTooltip","ActionBar","ActionBarTop","ActionBarBottom","Buttons","MarkAsButton","Button","StyledTabs","Tabs","StyledTable","Table","StyledCheckbox","Checkbox","Footer","StyledPagination","Pagination","Spacer","RowsPerPage","RowsPerPageLabel","PageSizeSelect","Select","Empty","EmptyIcon","EmptyMessage","medium","StyledSearchInput","SearchInput","Moderation","intl","pageSizes","label","selectedModerations","setSelectedModerations","processing","setProcessing","selectedTypes","setSelectedTypes","setSelectedProjectIds","selectedPageNumber","setSelectedPageNumber","selectedPageSize","setSelectedPageSize","selectedTab","setSelectedTab","actionBarErrorMessage","setActionBarErrorMessage","formatMessage","tabs","setTabs","moderations","moderationsWithActiveFlagCount","isModerationSelected","selectedModeration","includes","handleRowOnSelectChange","newSelectedModeration","prevSelectedModerations","filter","removeFlags","selectedActiveInappropriateContentFlagIds","mod","relationships","inappropriate_content_flag","promises","flagId","removeInappropriateContentFlag","Promise","markAs","updatedModerationStatus","updateModerationStatus","moderatable_type","trackEventByName","tracks","selectedItemsCount","handleData","insertConfiguration","iconSize","placement","onData","activeFlagsCount","items","selectedValue","tabName","newSelectedTypes","icon","buttonStyle","selectedActiveFlagsCount","onRemoveFlags","isWarningsTabSelected","Error","checked","indeterminate","_event","moderationItem","onSelect","inappropriateContentFlagId","options","option","find","injectIntl","tr","bgColor","flagged","clRedErrorBackground","BelongsToItem","BelongsToType","span","GoToLinkWrapper","GoToLink","Link","GoToIcon","StyledModerationContentCell","ModerationContentCell","ideasPath","initiativesPath","ModerationRow","inappropriateContentFlag","hasActiveInappropriateContentFlag","reason_code","content_title_multiloc","content_body_multiloc","belongsToTypes","belongs_to","viewLink","slug","idea","content_slug","getViewLink","handleBelongsToLinkOnClick","url","currentTarget","href","belongsToType","dataset","belongstotype","win","window","open","focus","created_at","format","Idea","Comment","Initiative","index","belongsToTypeMessage","belongsToTitleMultiloc","belongsToHref","to","table","small","clBlue","children","cellSpacing","cellPadding"],"mappings":"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","file":"82.5dd5b92a20c24022765a.chunk.js","sourcesContent":["import React, { memo, useCallback } from 'react';\nimport { adopt } from 'react-adopt';\nimport FilterSelector from 'components/FilterSelector';\nimport useLocalize from 'hooks/useLocalize';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// resources\nimport GetProjects, { GetProjectsChildProps } from 'resources/GetProjects';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  onChange: (projectIds: string[]) => void;\n  selectedProjectIds: string[];\n}\ninterface DataProps {\n  projects: GetProjectsChildProps;\n}\n\ninterface Props extends DataProps, InputProps {}\n\nconst SelectProject = memo(\n  ({ onChange, projects, selectedProjectIds }: Props) => {\n    const localize = useLocalize();\n    const handleOnChange = useCallback((newProjectIds: string[]) => {\n      onChange(newProjectIds);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (\n      !isNilOrError(projects) &&\n      projects.projectsList &&\n      projects.projectsList.length > 0\n    ) {\n      const projectList = projects.projectsList;\n      const values = projectList.map((project) => {\n        return {\n          text: localize(project.attributes.title_multiloc),\n          value: project.id,\n        };\n      });\n\n      return (\n        <FilterSelector\n          title={<FormattedMessage {...messages.project} />}\n          name=\"project\"\n          selected={selectedProjectIds}\n          values={values}\n          onChange={handleOnChange}\n          multipleSelectionAllowed={true}\n        />\n      );\n    }\n\n    return null;\n  }\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  projects: (\n    <GetProjects\n      publicationStatuses={['published', 'archived', 'draft']}\n      filterCanModerate={true}\n    />\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <SelectProject {...inputProps} {...dataProps} />}\n  </Data>\n);\n\n// TODO: useProjects hook\n","export default {\n  tabClicked: 'Tab clicked',\n  markedAsViewedButtonClicked: \"'Marked as seen' button clicked\",\n  markedAsNotViewedButtonClicked: \"'Marked as not seen' button clicked\",\n  goToLinkClicked: \"'Go to' link clicked\",\n  belongsToLinkClicked: \"'Belongs to' link clicked\",\n  pageNumberClicked: 'Page number clicked',\n  typeFilterUsed: 'Filtered on moderation type',\n  projectFilterUsed: 'Filtered on project',\n  searchUsed: 'Used search',\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  pageTitle: {\n    id: 'app.containers.Admin.Moderation.pageTitle',\n    defaultMessage: 'Moderation',\n  },\n  type: {\n    id: 'app.containers.Admin.Moderation.type',\n    defaultMessage: 'Type',\n  },\n  belongsTo: {\n    id: 'app.containers.Admin.Moderation.belongsTo',\n    defaultMessage: 'Belongs to',\n  },\n  project: {\n    id: 'app.containers.Admin.Moderation.project',\n    defaultMessage: 'Project',\n  },\n  post: {\n    id: 'app.containers.Admin.Moderation.post',\n    defaultMessage: 'Post',\n  },\n  initiative: {\n    id: 'app.containers.Admin.Moderation.initiative',\n    defaultMessage: 'Initiative',\n  },\n  comment: {\n    id: 'app.containers.Admin.Moderation.comment',\n    defaultMessage: 'Comment',\n  },\n  content: {\n    id: 'app.containers.Admin.Moderation.content',\n    defaultMessage: 'Content',\n  },\n  date: {\n    id: 'app.containers.Admin.Moderation.date',\n    defaultMessage: 'Date',\n  },\n  rowsPerPage: {\n    id: 'app.containers.Admin.Moderation.rowsPerPage',\n    defaultMessage: 'Rows per page',\n  },\n  show: {\n    id: 'app.containers.Admin.Moderation.show',\n    defaultMessage: 'Show',\n  },\n  status: {\n    id: 'app.containers.Admin.Moderation.status',\n    defaultMessage: 'Status',\n  },\n  all: {\n    id: 'app.containers.Admin.Moderation.all',\n    defaultMessage: 'All',\n  },\n  read: {\n    id: 'app.containers.Admin.Moderation.read',\n    defaultMessage: 'Viewed',\n  },\n  unread: {\n    id: 'app.containers.Admin.Moderation.unread',\n    defaultMessage: 'Not viewed',\n  },\n  noViewedItems: {\n    id: 'app.containers.Admin.Moderation.noViewedItems',\n    defaultMessage: 'There are no viewed items',\n  },\n  noUnviewedItems: {\n    id: 'app.containers.Admin.Moderation.noUnviewedItems',\n    defaultMessage: 'There are no unviewed items',\n  },\n  readMore: {\n    id: 'app.containers.Admin.Moderation.readMore',\n    defaultMessage: '...see more',\n  },\n  collapse: {\n    id: 'app.containers.Admin.Moderation.collapse',\n    defaultMessage: 'see less',\n  },\n  markSeen: {\n    id: 'app.containers.Admin.Moderation.markSeen',\n    defaultMessage:\n      'Mark {selectedItemsCount, plural, one {# item} other {# items}} as seen',\n  },\n  markNotSeen: {\n    id: 'app.containers.Admin.Moderation.markNotSeen',\n    defaultMessage:\n      'Mark {selectedItemsCount, plural, one {# item} other {# items}} as not seen',\n  },\n  goToPost: {\n    id: 'app.containers.Admin.Moderation.goToPost',\n    defaultMessage: 'Open this post in a new tab',\n  },\n  goToProposal: {\n    id: 'app.containers.Admin.Moderation.goToProposal',\n    defaultMessage: 'Open this proposal in a new tab',\n  },\n  goToComment: {\n    id: 'app.containers.Admin.Moderation.goToComment',\n    defaultMessage: 'Open this comment in a new tab',\n  },\n  moderationsTooltip: {\n    id: 'app.containers.Admin.Moderation.moderationsTooltip',\n    defaultMessage:\n      \"This page allows you to quickly check all new input that has been added to your platform, including posts and comments. You can mark posts as being 'seen' so that others know which inputs still need to be processed.\",\n  },\n  settings: {\n    id: 'app.containers.Admin.Moderation.settings',\n    defaultMessage: 'Settings',\n  },\n  profanityBlockerSetting: {\n    id: 'app.containers.Admin.Moderation.profanityBlockerSetting',\n    defaultMessage: 'Profanity blocker',\n  },\n  profanityBlockerSettingDescription: {\n    id: 'app.containers.Admin.Moderation.profanityBlockerSettingDescription',\n    defaultMessage:\n      'Block posts containing the most commonly reported offensive words.',\n  },\n  successfulUpdateSettings: {\n    id: 'app.containers.Admin.Moderation.successfulUpdateSettings',\n    defaultMessage: 'Settings updated successfully.',\n  },\n  settingsSavingError: {\n    id: 'app.containers.Admin.Moderation.settingsSavingError',\n    defaultMessage: \"Couldn't save. Try changing the setting again.\",\n  },\n  removeFlagsError: {\n    id: 'app.containers.Admin.Moderation.removeFlagsError',\n    defaultMessage: \"Couldn't remove warning(s). Try again.\",\n  },\n  markFlagsError: {\n    id: 'app.containers.Admin.Moderation.markFlagsError',\n    defaultMessage: \"Couldn't mark item(s). Try again.\",\n  },\n});\n","import React, { memo, useState, useCallback, MouseEvent } from 'react';\nimport { truncate } from 'lodash-es';\n\n// components\nimport { LocaleSwitcher } from 'cl2-component-library';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\n// typings\nimport { Multiloc, Locale } from 'typings';\n\nconst Container = styled.div`\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n`;\n\nconst Content = styled.div``;\n\nconst ContentTitle = styled.div`\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin-bottom: 12px;\n`;\n\nconst ContentBody = styled.div``;\n\nconst StyledLocaleSwitcher = styled(LocaleSwitcher)`\n  display: flex;\n  justify-content: flex-start;\n  margin-bottom: 10px;\n`;\n\nconst ReadMoreButton = styled.button`\n  color: ${colors.clIconAccent};\n  font-weight: 500;\n  margin: 0;\n  margin-top: 12px;\n  padding: 0;\n  cursor: pointer;\n\n  &:hover {\n    color: ${darken(0.2, colors.clIconAccent)};\n  }\n`;\n\ninterface Props {\n  contentTitle: Multiloc | null;\n  contentBody: Multiloc;\n  className?: string;\n}\n\nconst ModerationContentCell = memo<Props>(\n  ({ contentTitle, contentBody, className }) => {\n    const contentBodyLocales = Object.keys(contentBody) as Locale[];\n\n    const [selectedLocale, setSelectedLocale] = useState(contentBodyLocales[0]);\n    const [expanded, setExpanded] = useState(false);\n\n    const handleOnSelectedLocaleChange = useCallback(\n      (newSelectedLocale: Locale) => {\n        setSelectedLocale(newSelectedLocale);\n      },\n      []\n    );\n\n    const removeFocus = useCallback((event: MouseEvent) => {\n      event.preventDefault();\n    }, []);\n\n    const handleOnReadMore = useCallback(\n      (event: MouseEvent) => {\n        event.preventDefault();\n        setExpanded(!expanded);\n      },\n      [expanded]\n    );\n\n    return (\n      <Container className={className}>\n        {contentBodyLocales.length > 1 && (\n          <StyledLocaleSwitcher\n            onSelectedLocaleChange={handleOnSelectedLocaleChange}\n            locales={contentBodyLocales}\n            selectedLocale={selectedLocale}\n          />\n        )}\n        <Content>\n          {contentTitle && contentTitle[selectedLocale] && (\n            <ContentTitle>{contentTitle[selectedLocale]}</ContentTitle>\n          )}\n\n          <ContentBody\n            dangerouslySetInnerHTML={{\n              __html: expanded\n                ? (contentBody[selectedLocale] as string)\n                : truncate(contentBody[selectedLocale], {\n                    length: 300,\n                    separator: ' ',\n                  }),\n            }}\n          />\n\n          {(contentBody[selectedLocale] as string).length > 300 && (\n            <ReadMoreButton\n              onMouseDown={removeFocus}\n              onClick={handleOnReadMore}\n            >\n              {!expanded ? (\n                <>\n                  <FormattedMessage {...messages.readMore} />\n                  ...\n                </>\n              ) : (\n                <FormattedMessage {...messages.collapse} />\n              )}\n            </ReadMoreButton>\n          )}\n        </Content>\n      </Container>\n    );\n  }\n);\n\nexport default ModerationContentCell;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'cl2-component-library';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { rgba } from 'polished';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ContainerInner = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ChevronIcon = styled(Icon)`\n  height: 12px;\n  fill: ${colors.adminTextColor};\n`;\n\nconst NavigateButton = styled.button`\n  width: 38px;\n  height: 38px;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  &.disabled {\n    color: #bbb;\n    cursor: not-allowed;\n\n    ${ChevronIcon} {\n      fill: #bbb;\n    }\n  }\n\n  &:not(.disabled) {\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      ${ChevronIcon} {\n        fill: ${colors.clIconAccent};\n      }\n    }\n  }\n`;\n\nconst Next = styled(NavigateButton)``;\n\nconst Back = styled(NavigateButton)`\n  ${ChevronIcon} {\n    transform: rotate(180deg);\n  }\n`;\n\nconst Pages = styled.div`\n  margin-left: 14px;\n  margin-right: 14px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.button<{ useColorsTheme?: boolean }>`\n  min-width: 38px;\n  height: 38px;\n  color: ${({ useColorsTheme, theme }) =>\n    useColorsTheme ? theme.colorText : colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin-left: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  transition: all 80ms ease-out;\n\n  &:first-child {\n    margin-left: 0px;\n  }\n\n  &:not(.disabled) {\n    border-radius: ${(props: any) => props.theme.borderRadius};\n    background: ${colors.lightGreyishBlue};\n    cursor: pointer;\n\n    &.active {\n      color: #fff;\n      background: ${({ useColorsTheme, theme }) =>\n        useColorsTheme ? theme.colorMain : colors.adminTextColor};\n    }\n\n    &:not(.active) {\n      &:hover,\n      &:focus {\n        background: ${({ useColorsTheme, theme }) =>\n          rgba(useColorsTheme ? theme.colorMain : colors.adminTextColor, 0.2)};\n      }\n    }\n  }\n`;\n\nexport interface Props {\n  currentPage: number;\n  totalPages: number;\n  loadPage: (page: number) => void;\n  className?: string;\n  useColorsTheme?: boolean;\n}\n\nclass Pagination extends PureComponent<Props> {\n  calculateMenuItems(currentPage: number, totalPages: number) {\n    const current = currentPage;\n    const last = totalPages;\n    const delta = 2;\n    const left = current - delta;\n    const right = current + delta + 1;\n    const range: number[] = [];\n    const rangeWithDots: number[] = [];\n    let l: number;\n\n    for (let i = 1; i <= last; i += 1) {\n      if (i === 1 || i === last || (i >= left && i < right)) {\n        range.push(i);\n      }\n    }\n\n    range.forEach((i) => {\n      if (l) {\n        if (i - l === 2) {\n          rangeWithDots.push(l + 1);\n        } else if (i - l !== 1) {\n          rangeWithDots.push(-i);\n        }\n      }\n\n      rangeWithDots.push(i);\n\n      l = i;\n    });\n\n    return rangeWithDots;\n  }\n\n  handleItemClick = (item: number) => () => {\n    this.props.loadPage(item);\n  };\n\n  goTo = (page: number) => () => {\n    if (page > 0 && page <= this.props.totalPages) {\n      this.props.loadPage(page);\n    }\n  };\n\n  removeFocus = (event: React.MouseEvent) => {\n    event.preventDefault();\n  };\n\n  render() {\n    const { currentPage, totalPages, className, useColorsTheme } = this.props;\n    const pageItems = this.calculateMenuItems(currentPage, totalPages);\n\n    if (totalPages > 1) {\n      return (\n        <Container className={className} data-testid=\"pagination\">\n          <ContainerInner>\n            <Back\n              onMouseDown={this.removeFocus}\n              onClick={this.goTo(currentPage - 1)}\n              disabled={currentPage === 1}\n              className={currentPage === 1 ? 'disabled' : ''}\n            >\n              <ChevronIcon name=\"chevron-right\" />\n            </Back>\n\n            <Pages>\n              {pageItems.map((item) => (\n                <Item\n                  key={item}\n                  className={`${item === currentPage ? 'active' : ''} ${\n                    item < 0 ? 'disabled' : ''\n                  }`}\n                  onMouseDown={this.removeFocus}\n                  onClick={this.handleItemClick(item)}\n                  disabled={item < 0}\n                  useColorsTheme={useColorsTheme}\n                >\n                  <span>{item < 0 ? '...' : item.toString()}</span>\n                </Item>\n              ))}\n            </Pages>\n\n            <Next\n              onMouseDown={this.removeFocus}\n              onClick={this.goTo(currentPage + 1)}\n              disabled={currentPage === totalPages}\n              className={currentPage === totalPages ? 'disabled' : ''}\n            >\n              <ChevronIcon name=\"chevron-right\" />\n            </Next>\n          </ContainerInner>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Pagination;\n","import { useState, useEffect, useCallback } from 'react';\nimport {\n  moderationsStream,\n  IModerationData,\n  TModerationStatus,\n  TModeratableType,\n} from '../services/moderations';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { getPageNumberFromUrl } from 'utils/paginationUtils';\n\ninterface InputProps {\n  pageNumber?: number;\n  pageSize?: number;\n  moderationStatus?: TModerationStatus;\n  moderatableTypes?: TModeratableType[];\n  projectIds?: string[];\n  searchTerm?: string;\n  isFlagged?: boolean;\n}\n\nexport default function useModerations(props: InputProps) {\n  const [pageNumber, setPageNumber] = useState(props.pageNumber || 1);\n  const [pageSize, setPageSize] = useState(props.pageSize || 12);\n  const [\n    moderationStatus,\n    setModerationStatus,\n  ] = useState<TModerationStatus | null>(props.moderationStatus || null);\n  const [list, setList] = useState<\n    IModerationData[] | undefined | null | Error\n  >(undefined);\n  const [lastPage, setLastPage] = useState(1);\n  const [moderatableTypes, setModeratableTypes] = useState(\n    props.moderatableTypes || []\n  );\n  const [projectIds, setProjectIds] = useState(props.projectIds || []);\n  const [searchTerm, setSearchTerm] = useState(props.searchTerm || '');\n  const [isFlagged, setIsFlagged] = useState(props.isFlagged || false);\n\n  const onPageNumberChange = useCallback((newPageNumber: number) => {\n    setPageNumber(newPageNumber);\n  }, []);\n\n  const onPageSizeChange = useCallback((newPageSize: number) => {\n    setPageSize(newPageSize);\n    setPageNumber(1);\n  }, []);\n\n  const onModerationStatusChange = useCallback(\n    (newModerationStatus: TModerationStatus | null) => {\n      setModerationStatus(newModerationStatus);\n    },\n    []\n  );\n\n  const onModeratableTypesChange = useCallback(\n    (newModeratableTypes: TModeratableType[]) => {\n      setModeratableTypes([...newModeratableTypes]);\n    },\n    []\n  );\n\n  const onProjectIdsChange = useCallback((projectIds: string[]) => {\n    setProjectIds([...projectIds]);\n  }, []);\n\n  const onSearchTermChange = useCallback((searchTerm: string) => {\n    setSearchTerm(searchTerm);\n  }, []);\n\n  const onIsFlaggedChange = useCallback((isFlagged: boolean) => {\n    setIsFlagged(isFlagged);\n  }, []);\n\n  useEffect(() => {\n    const subscription = moderationsStream({\n      queryParameters: {\n        'page[number]': pageNumber,\n        'page[size]': pageSize,\n        moderation_status: moderationStatus,\n        moderatable_types: moderatableTypes,\n        project_ids: projectIds,\n        search: searchTerm,\n        is_flagged: isFlagged,\n      },\n    }).observable.subscribe((response) => {\n      const list = !isNilOrError(response) ? response.data : response;\n      const pageNumber = getPageNumberFromUrl(response?.links?.self) || 1;\n      const lastPage = getPageNumberFromUrl(response?.links?.last) || 1;\n      setList(list);\n      setPageNumber(pageNumber);\n      setLastPage(lastPage);\n    });\n\n    return () => subscription.unsubscribe();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    pageNumber,\n    pageSize,\n    moderationStatus,\n    moderatableTypes,\n    projectIds,\n    searchTerm,\n  ]);\n\n  return {\n    list,\n    lastPage,\n    pageSize,\n    pageNumber,\n    moderationStatus,\n    onPageNumberChange,\n    onPageSizeChange,\n    onModerationStatusChange,\n    onModeratableTypesChange,\n    onProjectIdsChange,\n    onSearchTermChange,\n    onIsFlaggedChange,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport {\n  IModerationsCount,\n  moderationsCountStream,\n} from '../services/moderations';\n\ninterface InputProps {\n  isFlagged?: boolean;\n}\n\n// This resource hook can have the same query parameters as useModerations\n// Only added the part useful for me now.\nexport default function useModerationsCount(props: InputProps) {\n  const [count, setCount] = useState<\n    IModerationsCount | undefined | null | Error\n  >(undefined);\n  const [isFlagged, _setIsFlagged] = useState(props.isFlagged || false);\n\n  useEffect(() => {\n    const subscription = moderationsCountStream({\n      queryParameters: {\n        is_flagged: isFlagged,\n      },\n    }).observable.subscribe((response) => {\n      setCount(response);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [isFlagged]);\n\n  return count;\n}\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { Multiloc, ILinks, IRelationship } from 'typings';\n\nexport type TModerationStatus = 'read' | 'unread';\nexport type TModeratableType = 'Idea' | 'Initiative' | 'Comment';\n// add case for initiative\nexport type TBelongsTo = keyof IModerationData['attributes']['belongs_to'];\n\nexport interface IModerationData {\n  id: '1d10b3f1-6a03-4c52-a0b2-4f60929df3ec';\n  type: 'moderation';\n  attributes: {\n    moderatable_type: TModeratableType;\n    content_title_multiloc: Multiloc | null;\n    content_body_multiloc: Multiloc;\n    content_slug: string | null;\n    created_at: string;\n    moderation_status?: TModerationStatus;\n    belongs_to: {\n      project?: {\n        id: string;\n        slug: string;\n        title_multiloc: Multiloc;\n      };\n      idea?: {\n        id: string;\n        slug: string;\n        title_multiloc: Multiloc;\n      };\n      initiative?: {\n        id: string;\n        slug: string;\n        title_multiloc: Multiloc;\n      };\n    };\n  };\n  relationships: {\n    inappropriate_content_flag?: {\n      data: IRelationship;\n    };\n  };\n}\n\nexport interface IModeration {\n  data: IModerationData;\n}\n\nexport interface IModerations {\n  data: IModerationData[];\n  links: ILinks;\n}\n\nexport function moderationsStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IModerations>({\n    apiEndpoint: `${API_PATH}/moderations`,\n    ...streamParams,\n    cacheStream: false,\n  });\n}\n\nexport async function updateModerationStatus(\n  moderationId: string,\n  moderatableType: TModeratableType,\n  moderationStatus: TModerationStatus\n) {\n  const apiEndpoint = `${API_PATH}/moderations/${moderatableType}/${moderationId}`;\n  const updateObject = {\n    moderation: {\n      moderation_status: moderationStatus,\n    },\n  };\n  const response = await streams.update<IModeration>(\n    apiEndpoint,\n    moderationId,\n    updateObject\n  );\n  await streams.fetchAllWith({ apiEndpoint: [`${API_PATH}/moderations`] });\n  return response;\n}\n\nexport interface IModerationsCount {\n  count: number;\n}\n\nexport function moderationsCountStream(\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IModerationsCount>({\n    apiEndpoint: `${API_PATH}/moderations/moderations_count`,\n    ...streamParams,\n  });\n}\n","import React, { memo, useState, useEffect, useCallback } from 'react';\n\nimport { isNilOrError } from 'utils/helperUtils';\nimport { insertConfiguration } from 'utils/moduleUtils';\n\n// components\nimport Table from 'components/UI/Table';\nimport ModerationRow from './ModerationRow';\nimport Pagination from 'components/Pagination';\nimport Checkbox from 'components/UI/Checkbox';\nimport { Icon, IconTooltip, Select, Error } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\nimport Tabs, { ITabItem } from 'components/UI/Tabs';\nimport { PageTitle } from 'components/admin/Section';\nimport SelectType from './SelectType';\nimport SelectProject from './SelectProject';\nimport SearchInput from 'components/UI/SearchInput';\nimport Outlet from 'components/Outlet';\n\n// hooks\nimport useModerations from '../../hooks/useModerations';\nimport useModerationsCount from '../../hooks/useModerationsCount';\n\n// services\nimport {\n  updateModerationStatus,\n  IModerationData,\n  TModeratableType,\n} from '../../services/moderations';\nimport { removeInappropriateContentFlag } from 'modules/commercial/flag_inappropriate_content/services/inappropriateContentFlags';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// typings\nimport { IOption, InsertConfigurationOptions } from 'typings';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-bottom: 80px;\n`;\n\nconst PageTitleWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: 40px;\n`;\n\nconst StyledPageTitle = styled(PageTitle)`\n  line-height: ${fontSizes.xxxl}px;\n  margin-bottom: 0px;\n`;\n\nconst StyledIconTooltip = styled(IconTooltip)`\n  margin-left: 8px;\n  margin-bottom: 3px;\n`;\n\nconst ActionBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 55px;\n`;\n\nconst ActionBarTop = styled.div`\n  min-height: 50px;\n  display: flex;\n  align-items: center;\n`;\n\nconst ActionBarBottom = styled.div``;\n\nconst Buttons = styled.div`\n  display: flex;\n`;\n\nconst MarkAsButton = styled(Button)`\n  margin-right: 20px;\n`;\n\nconst StyledTabs = styled(Tabs)`\n  margin-right: 20px;\n`;\n\nconst StyledTable = styled(Table)`\n  th,\n  td {\n    text-align: left;\n    vertical-align: top;\n    padding-left: 0px;\n    padding-right: 20px;\n\n    &.checkbox {\n      width: 70px;\n      padding-left: 8px;\n    }\n\n    &.content {\n      width: 50%;\n      padding-right: 25px;\n    }\n  }\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin-top: -3px;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 30px;\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-left: -12px;\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n`;\n\nconst RowsPerPage = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst RowsPerPageLabel = styled.div`\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin-right: 10px;\n`;\n\nconst PageSizeSelect = styled(Select)`\n  select {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst Empty = styled.div`\n  height: 50vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst EmptyIcon = styled(Icon)`\n  height: 60px;\n  fill: #bfe7eb;\n  margin-bottom: 18px;\n`;\n\nconst EmptyMessage = styled.div`\n  max-width: 350px;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.medium}px;\n  line-height: normal;\n  font-weight: 500;\n  text-align: center;\n`;\n\nconst StyledSearchInput = styled(SearchInput)`\n  margin-left: auto;\n  width: 320px;\n`;\n\ninterface Props {\n  className?: string;\n}\n\nexport interface ITabNamesMap {\n  read: 'read';\n  unread: 'unread';\n}\n\nexport type TActivityTabName = ITabNamesMap[keyof ITabNamesMap];\n\nconst Moderation = memo<Props & InjectedIntlProps>(({ className, intl }) => {\n  const pageSizes = [\n    {\n      value: 10,\n      label: '10',\n    },\n    {\n      value: 25,\n      label: '25',\n    },\n    {\n      value: 50,\n      label: '50',\n    },\n    {\n      value: 100,\n      label: '100',\n    },\n  ];\n\n  const [selectedModerations, setSelectedModerations] = useState<\n    IModerationData[]\n  >([]);\n  const [processing, setProcessing] = useState(false);\n  const [selectedTypes, setSelectedTypes] = useState<TModeratableType[]>([]);\n  const [selectedProjectIds, setSelectedProjectIds] = useState<string[]>([]);\n  const [selectedPageNumber, setSelectedPageNumber] = useState<number>(1);\n  const [selectedPageSize, setSelectedPageSize] = useState<number>(\n    pageSizes[1].value\n  );\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [selectedTab, setSelectedTab] = useState<TActivityTabName>('unread');\n  const [actionBarErrorMessage, setActionBarErrorMessage] = useState<\n    string | null\n  >(null);\n  const [tabs, setTabs] = useState<ITabItem[]>([\n    {\n      name: 'unread',\n      label: intl.formatMessage(messages.unread),\n    },\n    {\n      name: 'read',\n      label: intl.formatMessage(messages.read),\n    },\n  ]);\n\n  const {\n    list: moderations,\n    pageSize,\n    pageNumber,\n    moderationStatus,\n    lastPage,\n    onModerationStatusChange,\n    onPageNumberChange,\n    onPageSizeChange,\n    onModeratableTypesChange,\n    onProjectIdsChange,\n    onSearchTermChange,\n    onIsFlaggedChange,\n  } = useModerations({\n    pageSize: selectedPageSize,\n    moderationStatus: 'unread',\n  });\n  const moderationsWithActiveFlagCount = useModerationsCount({\n    isFlagged: true,\n  });\n\n  const handleOnSelectAll = (_event: React.ChangeEvent) => {\n    if (!processing && !isNilOrError(moderations)) {\n      setSelectedModerations(\n        selectedModerations.length < moderations.length ? moderations : []\n      );\n    }\n  };\n\n  const handleOnTabChange = (tabName: TActivityTabName) => {\n    setSelectedTab(tabName);\n    trackEventByName(tracks.tabClicked, {\n      tabName,\n    });\n  };\n\n  useEffect(() => {\n    if (selectedTab === 'read' || selectedTab === 'unread') {\n      onIsFlaggedChange(false);\n      onModerationStatusChange(selectedTab);\n    }\n\n    // OS: how to?\n    if (selectedTab === 'warnings') {\n      onIsFlaggedChange(true);\n      onModerationStatusChange(null);\n    }\n  }, [selectedTab, onIsFlaggedChange, onModerationStatusChange]);\n\n  const handleOnPageNumberChange = (pageNumber: number) => {\n    trackEventByName(tracks.pageNumberClicked);\n    setSelectedPageNumber(pageNumber);\n  };\n\n  useEffect(() => {\n    onPageNumberChange(selectedPageNumber);\n  }, [selectedPageNumber, onPageNumberChange]);\n\n  const handleOnPageSizeChange = (option: IOption) => {\n    setSelectedPageSize(option.value);\n  };\n\n  useEffect(() => {\n    onPageSizeChange(selectedPageSize);\n  }, [selectedPageSize, onPageSizeChange]);\n\n  const handleOnModeratableTypesChange = (\n    newSelectedTypes: TModeratableType[]\n  ) => {\n    setSelectedTypes(newSelectedTypes);\n    trackEventByName(tracks.typeFilterUsed);\n  };\n\n  useEffect(() => {\n    onModeratableTypesChange(selectedTypes);\n  }, [selectedTypes, onModeratableTypesChange]);\n\n  const handleOnProjectIdsChange = (newProjectIds: string[]) => {\n    setSelectedProjectIds(newProjectIds);\n    trackEventByName(tracks.projectFilterUsed);\n  };\n\n  useEffect(() => {\n    onProjectIdsChange(selectedProjectIds);\n  }, [selectedProjectIds, onProjectIdsChange]);\n\n  const handleSearchTermChange = (searchTerm: string) => {\n    setSearchTerm(searchTerm);\n    trackEventByName(tracks.searchUsed, {\n      searchTerm,\n    });\n  };\n\n  useEffect(() => {\n    onSearchTermChange(searchTerm);\n  }, [searchTerm, onSearchTermChange]);\n\n  const isModerationSelected = (\n    selectedModeration: IModerationData,\n    selectedModerations: IModerationData[]\n  ) =>\n    selectedModerations\n      .map((moderation) => moderation.id)\n      .includes(selectedModeration.id);\n\n  const handleRowOnSelectChange = (newSelectedModeration: IModerationData) => {\n    if (!processing) {\n      setSelectedModerations((prevSelectedModerations) => {\n        if (\n          isModerationSelected(newSelectedModeration, prevSelectedModerations)\n        ) {\n          return prevSelectedModerations.filter(\n            (moderation) => moderation.id !== newSelectedModeration.id\n          );\n        }\n\n        return [...prevSelectedModerations, newSelectedModeration];\n      });\n    }\n  };\n\n  // OS: how to?\n  const removeFlags = async () => {\n    if (!processing) {\n      const selectedActiveInappropriateContentFlagIds = selectedModerations.map(\n        // we can be sure the flag is here. With the is_flagged param in the request\n        // only moderations with active flags will be returned\n        (mod) => mod.relationships.inappropriate_content_flag?.data.id as string\n      );\n\n      const promises = selectedActiveInappropriateContentFlagIds.map(\n        (flagId) => {\n          return removeInappropriateContentFlag(flagId);\n        }\n      );\n\n      try {\n        setActionBarErrorMessage(null);\n        setProcessing(true);\n\n        await Promise.all(promises);\n\n        setProcessing(false);\n        setSelectedModerations([]);\n      } catch {\n        setActionBarErrorMessage(intl.formatMessage(messages.removeFlagsError));\n        setProcessing(false);\n      }\n    }\n  };\n\n  const markAs = async (event: React.FormEvent) => {\n    if (selectedModerations.length > 0 && moderationStatus && !processing) {\n      event.preventDefault();\n      const updatedModerationStatus =\n        moderationStatus === 'read' ? 'unread' : 'read';\n      const promises = selectedModerations.map((moderation) =>\n        updateModerationStatus(\n          moderation.id,\n          moderation.attributes.moderatable_type,\n          updatedModerationStatus\n        )\n      );\n\n      try {\n        setActionBarErrorMessage(null);\n        setProcessing(true);\n\n        await Promise.all(promises);\n\n        setProcessing(false);\n        setSelectedModerations([]);\n\n        trackEventByName(\n          moderationStatus === 'read'\n            ? tracks.markedAsNotViewedButtonClicked\n            : tracks.markedAsNotViewedButtonClicked,\n          { selectedItemsCount: selectedModerations.length }\n        );\n      } catch {\n        setActionBarErrorMessage(intl.formatMessage(messages.markFlagsError));\n        setProcessing(false);\n      }\n    }\n  };\n\n  const handleData = useCallback(\n    (data: InsertConfigurationOptions<ITabItem>) =>\n      setTabs((tabs) => insertConfiguration(data)(tabs)),\n    []\n  );\n\n  useEffect(() => {\n    if (!processing) {\n      setSelectedModerations([]);\n    }\n  }, [pageNumber, moderationStatus, pageSize, processing]);\n\n  if (!isNilOrError(moderations)) {\n    return (\n      <Container className={className}>\n        <PageTitleWrapper>\n          <StyledPageTitle>\n            <FormattedMessage {...messages.pageTitle} />\n          </StyledPageTitle>\n          <StyledIconTooltip\n            content={<FormattedMessage {...messages.moderationsTooltip} />}\n            iconSize=\"20px\"\n            placement=\"right\"\n          />\n        </PageTitleWrapper>\n\n        <ActionBar>\n          <ActionBarTop>\n            {selectedModerations.length === 0 ? (\n              <>\n                <Outlet\n                  id=\"app.modules.commercial.moderation.admin.containers.tabs\"\n                  onData={handleData}\n                  activeFlagsCount={\n                    !isNilOrError(moderationsWithActiveFlagCount)\n                      ? moderationsWithActiveFlagCount.count\n                      : 0\n                  }\n                />\n                <StyledTabs\n                  items={tabs}\n                  selectedValue={selectedTab}\n                  onClick={handleOnTabChange}\n                />\n                <SelectType\n                  selectedTypes={selectedTypes}\n                  onChange={handleOnModeratableTypesChange}\n                />\n                <SelectProject\n                  selectedProjectIds={selectedProjectIds}\n                  onChange={handleOnProjectIdsChange}\n                />\n              </>\n            ) : (\n              <Buttons>\n                {selectedModerations.length > 0 &&\n                  (selectedTab === 'read' || selectedTab === 'unread') && (\n                    <MarkAsButton\n                      icon={\n                        moderationStatus === 'unread'\n                          ? 'eyeOpened-unfilled'\n                          : 'eyeClosed-unfilled'\n                      }\n                      buttonStyle=\"cl-blue\"\n                      processing={processing}\n                      onClick={markAs}\n                    >\n                      {intl.formatMessage(\n                        {\n                          unread: messages.markSeen,\n                          read: messages.markNotSeen,\n                        }[selectedTab],\n                        {\n                          selectedItemsCount: selectedModerations.length,\n                        }\n                      )}\n                    </MarkAsButton>\n                  )}\n\n                <Outlet\n                  id=\"app.modules.commercial.moderation.admin.containers.actionbar.buttons\"\n                  selectedActiveFlagsCount={selectedModerations.length}\n                  processing={processing}\n                  onRemoveFlags={removeFlags}\n                  isWarningsTabSelected={selectedTab === 'warnings'}\n                />\n              </Buttons>\n            )}\n            <StyledSearchInput onChange={handleSearchTermChange} />\n          </ActionBarTop>\n          <ActionBarBottom>\n            <Error text={actionBarErrorMessage} />\n          </ActionBarBottom>\n        </ActionBar>\n\n        <StyledTable>\n          <thead>\n            <tr>\n              <th className=\"checkbox\">\n                <StyledCheckbox\n                  checked={\n                    moderations.length > 0 &&\n                    selectedModerations.length === moderations.length\n                  }\n                  indeterminate={\n                    selectedModerations.length > 0 &&\n                    selectedModerations.length < moderations.length\n                  }\n                  disabled={moderations.length === 0}\n                  onChange={handleOnSelectAll}\n                />\n              </th>\n              <th className=\"date\">\n                <FormattedMessage {...messages.date} />\n              </th>\n              <th className=\"type\">\n                <FormattedMessage {...messages.type} />\n              </th>\n              <th className=\"belongsTo\">\n                <FormattedMessage {...messages.belongsTo} />\n              </th>\n              <th className=\"content\">\n                <FormattedMessage {...messages.content} />\n              </th>\n              <th className=\"goto\">&nbsp;</th>\n            </tr>\n          </thead>\n          {moderations.length > 0 && (\n            <tbody>\n              {moderations.map((moderationItem) => (\n                <ModerationRow\n                  key={moderationItem.id}\n                  moderation={moderationItem}\n                  selected={isModerationSelected(\n                    moderationItem,\n                    selectedModerations\n                  )}\n                  onSelect={handleRowOnSelectChange}\n                  inappropriateContentFlagId={\n                    moderationItem.relationships.inappropriate_content_flag\n                      ?.data.id\n                  }\n                />\n              ))}\n            </tbody>\n          )}\n        </StyledTable>\n\n        {moderations.length > 0 && (\n          <Footer>\n            <StyledPagination\n              currentPage={pageNumber}\n              totalPages={lastPage}\n              loadPage={handleOnPageNumberChange}\n            />\n\n            <Spacer />\n\n            <RowsPerPage>\n              <RowsPerPageLabel>\n                <FormattedMessage {...messages.rowsPerPage} />:\n              </RowsPerPageLabel>\n              <PageSizeSelect\n                options={pageSizes}\n                onChange={handleOnPageSizeChange}\n                value={pageSizes.find((item) => item.value === pageSize)}\n              />\n            </RowsPerPage>\n          </Footer>\n        )}\n\n        {moderations.length === 0 && (\n          <Empty>\n            <EmptyIcon name=\"inbox\" />\n            <EmptyMessage>\n              {\n                {\n                  read: <FormattedMessage {...messages.noViewedItems} />,\n                  unread: <FormattedMessage {...messages.noUnviewedItems} />,\n                }[selectedTab]\n              }\n              <Outlet\n                id=\"app.modules.commercial.moderation.admin.components.EmptyMessage\"\n                isWarningsTabSelected={selectedTab === 'warnings'}\n              />\n            </EmptyMessage>\n          </Empty>\n        )}\n      </Container>\n    );\n  }\n\n  return null;\n});\n\nexport default injectIntl(Moderation);\n","import React, { memo } from 'react';\nimport moment from 'moment';\n\n// components\nimport ModerationContentCell from './ModerationContentCell';\nimport Checkbox from 'components/UI/Checkbox';\nimport Outlet from 'components/Outlet';\nimport { Icon } from 'cl2-component-library';\nimport Tippy from '@tippyjs/react';\nimport Link from 'utils/cl-router/Link';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\nimport useLocalize from 'hooks/useLocalize';\n\n// analytics\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// styling\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\nimport { rgba } from 'polished';\n\n// typings\nimport {\n  IModerationData,\n  TBelongsTo,\n  TModeratableType,\n} from '../../services/moderations';\n\n// hooks\nimport useInappropriateContentFlag from 'modules/commercial/flag_inappropriate_content/hooks/useInappropriateContentFlag';\nimport { isNilOrError } from 'utils/helperUtils';\n\nconst Container = styled.tr<{ bgColor: string; flagged: boolean }>`\n  background: ${({ bgColor, flagged }) =>\n    flagged ? colors.clRedErrorBackground : bgColor};\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin-top: -4px;\n`;\n\nconst BelongsToItem = styled.div`\n  width: 100%;\n  margin-bottom: 8px;\n\n  &.last {\n    margin-bottom: 0px;\n  }\n`;\n\nconst BelongsToType = styled.span`\n  margin-right: 6px;\n`;\n\nconst GoToLinkWrapper = styled.div`\n  width: 18px;\n  height: 18px;\n`;\n\nconst GoToLink = styled(Link)`\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  border: none;\n  cursor: pointer;\n`;\n\nconst GoToIcon = styled(Icon)`\n  width: 100%;\n  height: 100%;\n  fill: ${colors.label};\n\n  &:hover {\n    fill: ${colors.adminTextColor};\n  }\n`;\n\nconst StyledModerationContentCell = styled(ModerationContentCell)`\n  margin-bottom: 20px;\n`;\n\ninterface Props {\n  moderation: IModerationData;\n  selected: boolean;\n  onSelect: (selectedModeration: IModerationData) => void;\n  className?: string;\n  inappropriateContentFlagId?: string;\n}\n\nconst ideasPath = '/ideas';\nconst initiativesPath = '/initiatives';\nconst projectsPath = '/projects';\n\nconst ModerationRow = memo<Props & InjectedIntlProps>(\n  ({\n    moderation,\n    selected,\n    onSelect,\n    className,\n    intl: { formatMessage },\n    inappropriateContentFlagId,\n  }) => {\n    const localize = useLocalize();\n    const inappropriateContentFlag = inappropriateContentFlagId\n      ? // eslint-disable-next-line react-hooks/rules-of-hooks\n        useInappropriateContentFlag(inappropriateContentFlagId)\n      : null;\n    const hasActiveInappropriateContentFlag = !isNilOrError(\n      inappropriateContentFlag\n    )\n      ? inappropriateContentFlag.attributes.reason_code !== null\n      : false;\n    const contentTitle = moderation.attributes.content_title_multiloc;\n    const contentBody = moderation.attributes.content_body_multiloc;\n    const moderatableType = moderation.attributes.moderatable_type;\n    const belongsToTypes = Object.keys(moderation.attributes.belongs_to);\n    const bgColor = selected\n      ? rgba(colors.adminTextColor, 0.1)\n      : moderation.attributes.moderation_status === 'read'\n      ? '#f6f6f6'\n      : '#fff';\n    const viewLink = getViewLink(moderatableType);\n\n    const handleOnChecked = (_event: React.ChangeEvent) => {\n      onSelect(moderation);\n    };\n\n    const handleGoToLinkOnClick = (\n      event: React.MouseEvent<HTMLAnchorElement>\n    ) => {\n      event.preventDefault();\n      const url = event.currentTarget.href;\n      const type = event.currentTarget.dataset.type;\n      trackEventByName(tracks.goToLinkClicked, { type });\n      const win = window.open(url, '_blank');\n      win && win.focus();\n    };\n\n    const handleBelongsToLinkOnClick = (\n      event: React.MouseEvent<HTMLAnchorElement>\n    ) => {\n      event.preventDefault();\n      const url = event.currentTarget.href;\n      const belongsToType = event.currentTarget.dataset.belongstotype;\n      trackEventByName(tracks.belongsToLinkClicked, { belongsToType });\n      const win = window.open(url, '_blank');\n      win && win.focus();\n    };\n\n    function getViewLink(moderatableType: TModeratableType) {\n      if (moderatableType === 'Comment') {\n        if (\n          belongsToTypes.includes('initiative') &&\n          moderation.attributes.belongs_to.initiative?.slug\n        ) {\n          return `${initiativesPath}/${moderation.attributes.belongs_to.initiative.slug}`;\n        }\n\n        if (\n          belongsToTypes.includes('idea') &&\n          moderation.attributes.belongs_to.idea?.slug\n        ) {\n          return `${ideasPath}/${moderation.attributes.belongs_to.idea.slug}`;\n        }\n      }\n\n      if (moderatableType === 'Idea') {\n        return `${ideasPath}/${moderation.attributes.content_slug}`;\n      }\n\n      if (moderatableType === 'Initiative') {\n        return `${initiativesPath}/${moderation.attributes.content_slug}`;\n      }\n\n      return null;\n    }\n\n    return (\n      <Container\n        className={`${className}`}\n        flagged={hasActiveInappropriateContentFlag}\n        bgColor={bgColor}\n      >\n        <td className=\"checkbox\">\n          <StyledCheckbox checked={selected} onChange={handleOnChecked} />\n        </td>\n        <td className=\"date\">\n          {moment(moderation.attributes.created_at).format('L')}{' '}\n          {moment(moderation.attributes.created_at).format('LT')}\n        </td>\n        <td className=\"type\">\n          {formatMessage(\n            {\n              Idea: messages.post,\n              Comment: messages.comment,\n              Initiative: messages.initiative,\n            }[moderatableType]\n          )}\n        </td>\n        <td className=\"belongsTo\">\n          {belongsToTypes.length > 0 ? (\n            belongsToTypes.map((belongsToType: TBelongsTo, index) => {\n              const belongsToTypeMessage = {\n                idea: messages.post,\n                project: messages.project,\n                initiative: messages.initiative,\n              }[belongsToType];\n              const belongsToTitleMultiloc =\n                moderation.attributes.belongs_to[belongsToType]?.title_multiloc;\n              const belongsToHref = {\n                idea: `${ideasPath}/${moderation.attributes.belongs_to.idea?.slug}`,\n                initiative: `${initiativesPath}/${moderation.attributes.belongs_to.initiative?.slug}`,\n                project: `${projectsPath}/${moderation.attributes.belongs_to.project?.slug}`,\n              }[belongsToType];\n\n              if (belongsToTitleMultiloc) {\n                return (\n                  <BelongsToItem\n                    key={`${moderation.id}-${belongsToType}`}\n                    className={\n                      index + 1 === belongsToTypes.length ? 'last' : ''\n                    }\n                  >\n                    <BelongsToType>\n                      <FormattedMessage {...belongsToTypeMessage} />:\n                    </BelongsToType>\n                    <a\n                      href={belongsToHref}\n                      onClick={handleBelongsToLinkOnClick}\n                      data-belongstotype={belongsToType}\n                    >\n                      {localize(belongsToTitleMultiloc)}\n                    </a>\n                  </BelongsToItem>\n                );\n              }\n\n              return null;\n            })\n          ) : (\n            <>-</>\n          )}\n        </td>\n        <td className=\"content\">\n          <StyledModerationContentCell\n            contentTitle={contentTitle}\n            contentBody={contentBody}\n          />\n          <Outlet\n            id=\"app.modules.commercial.moderation.admin.containers.ModerationRow.content\"\n            inappropriateContentFlagId={inappropriateContentFlagId}\n          />\n        </td>\n        {viewLink && (\n          <td>\n            <Tippy\n              placement=\"bottom-end\"\n              content={\n                <FormattedMessage\n                  {...{\n                    Idea: messages.goToPost,\n                    Initiative: messages.goToProposal,\n                    Comment: messages.goToComment,\n                  }[moderatableType]}\n                />\n              }\n            >\n              <GoToLinkWrapper>\n                <GoToLink\n                  to={viewLink}\n                  onClick={handleGoToLinkOnClick}\n                  data-type={moderatableType}\n                >\n                  <GoToIcon name=\"goTo\" />\n                </GoToLink>\n              </GoToLinkWrapper>\n            </Tippy>\n          </td>\n        )}\n      </Container>\n    );\n  }\n);\n\nexport default injectIntl(ModerationRow);\n","import React, { memo, useCallback } from 'react';\nimport FilterSelector from 'components/FilterSelector';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// services\nimport { TModeratableType } from '../../services/moderations';\n\ninterface Props {\n  onChange: (newModeratableType: TModeratableType[]) => void;\n  selectedTypes: TModeratableType[];\n}\n\nconst SelectType = memo(({ onChange, selectedTypes }: Props) => {\n  const handleOnChange = useCallback((newSelectedTypes: TModeratableType[]) => {\n    onChange(newSelectedTypes);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <FilterSelector\n      title={<FormattedMessage {...messages.type} />}\n      name=\"type\"\n      selected={selectedTypes}\n      values={[\n        {\n          text: <FormattedMessage {...messages.comment} />,\n          value: 'Comment',\n        },\n        {\n          text: <FormattedMessage {...messages.post} />,\n          value: 'Idea',\n        },\n        {\n          text: <FormattedMessage {...messages.initiative} />,\n          value: 'Initiative',\n        },\n      ]}\n      onChange={handleOnChange}\n      multipleSelectionAllowed={true}\n    />\n  );\n});\n\nexport default SelectType;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\nconst StyledTable = styled.table`\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-spacing: 0;\n  border-collapse: collapse;\n  table-layout: auto;\n\n  th,\n  td {\n    padding: 0;\n    margin: 0;\n  }\n\n  thead {\n    tr {\n      th {\n        fill: ${colors.text};\n        color: ${colors.adminTextColor};\n        font-size: ${fontSizes.small}px;\n        font-weight: 600;\n        text-align: left;\n        text-transform: uppercase;\n        line-height: normal;\n        padding-top: 0px;\n        padding-bottom: 15px;\n        border-bottom: solid 1px #ddd;\n\n        div {\n          display: flex;\n          align-items: center;\n        }\n      }\n    }\n  }\n\n  tbody {\n    tr {\n      border-radius: ${(props: any) => props.theme.borderRadius};\n      border-bottom: solid 1px #ccc;\n\n      td {\n        color: ${colors.adminTextColor};\n        font-size: ${fontSizes.small}px;\n        font-weight: 400;\n        line-height: normal;\n        text-align: left;\n        padding-top: 15px;\n        padding-bottom: 15px;\n\n        &.center {\n          justify-content: center;\n        }\n\n        a {\n          color: ${colors.clBlue};\n          text-decoration: underline;\n\n          &:hover {\n            color: ${darken(0.2, colors.clBlue)};\n            text-decoration: underline;\n          }\n        }\n      }\n    }\n  }\n\n  tfoot {\n    display: flex;\n\n    tr {\n      display: flex;\n\n      td {\n        display: flex;\n      }\n    }\n  }\n`;\n\ninterface Props {\n  className?: string;\n}\n\ninterface State {}\n\nexport default class Table extends PureComponent<Props, State> {\n  render() {\n    const { children, className } = this.props;\n\n    return (\n      <StyledTable cellSpacing=\"0\" cellPadding=\"0\" className={className}>\n        {children}\n      </StyledTable>\n    );\n  }\n}\n"],"sourceRoot":""}