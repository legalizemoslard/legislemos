{"version":3,"sources":["webpack:///./app/hooks/useProjectImages.ts","webpack:///./app/components/ProjectCard/tracks.ts","webpack:///./app/components/ProjectCard/messages.ts","webpack:///./app/components/ProjectCard/index.tsx","webpack:///./app/services/actionTakingRules.ts","webpack:///./app/hooks/usePhase.ts"],"names":["projectId","useState","undefined","projectImages","setProjectImages","useEffect","observable","of","projectImagesStream","subscription","subscribe","response","project","isNilOrError","data","unsubscribe","clickOnProjectCard","clickOnProjectCardCTA","clickOnProjectTitle","clickOnAvatarBubbles","defineMessages","xIdeas","id","defaultMessage","xOptions","xContributions","xProjects","xIssues","xQuestions","xComments","archived","finished","remaining","allocateYourBudget","learnMore","takeTheSurvey","takeThePoll","submitYourIdea","addYourOption","submitYourProject","joinDiscussion","submitAnIssue","contributeYourInput","vote","comment","viewTheIdeas","viewTheOptions","viewTheProjects","viewTheQuestions","viewTheIssues","viewTheContributions","a11y_projectTitle","a11y_projectDescription","Container","Link","defaultCardStyle","isRtl","media","smallerThanMinTablet","smallerThanMaxTablet","defaultCardHoverStyle","ProjectImageContainer","styled","div","ProjectImagePlaceholder","colors","placeholderBg","ProjectImagePlaceholderIcon","Icon","ProjectImage","Image","ProjectContent","ContentHeader","biggerThanMinTablet","ContentHeaderHeight","smallPhone","ContentHeaderLeft","ContentHeaderRight","Countdown","TimeRemaining","theme","colorText","fontSizes","small","ProgressBar","props","borderRadius","ProgressBarOverlay","clRed","progress","ProjectLabel","darken","colorSecondary","rgba","ContentBody","ProjectTitle","h3","xl","ProjectDescription","label","base","ContentFooter","ContentFooterSection","ContentFooterLeft","ContentFooterRight","ContentHeaderLabel","span","ProjectMetaItems","MetaItem","MetaItemIcon","colorMain","CommentIcon","MetaItemText","ProjectCard","memo","size","layout","hideDescriptionPreview","className","formatMessage","intl","authUser","currentPhaseId","relationships","current_phase","phase","phases","useTheme","visible","setVisible","postingPermission","getIdeaPostingRules","participationMethod","attributes","participation_method","canPost","enabled","canVote","voting_enabled","get","canComment","commenting_enabled","imageUrl","length","versions","medium","projectUrl","getProjectUrl","isFinished","timeline_active","isArchived","publication_status","ideasCount","ideas_count","commentsCount","comments_count","hasAvatars","avatars","showIdeasCount","process_type","showCommentsCount","showFooter","avatarIds","map","avatar","startAt","endAt","timeRemaining","moment","duration","endOf","diff","humanize","countdown","ctaMessage","processType","inputTerm","getInputTerm","FormattedMessage","messages","totalDays","asDays","pastDays","isNumber","round","values","onChange","event","unobserve","isIntersecting","getInputTermMessage","idea","option","question","issue","contribution","contentHeader","onClick","trackEventByName","tracks","extra","handleCTAOnClick","screenReaderContent","ScreenReaderOnly","value","title_multiloc","description_preview_multiloc","bowser","mobile","tablet","filter","item","join","to","handleProjectCardOnClick","name","src","alt","cover","handleProjectTitleOnClick","description","isEmpty","limit","userCountBgColor","userCount","participants_count","ariaHidden","signedIn","action_descriptor","posting_idea","disabled_reason","future_enabled","isAdmin","isProjectModerator","show","disabledReason","action","posting_enabled","pastPresentOrFuture","start_at","end_at","backendReason","futureEnabled","ideaPostingDisabledReason","pollTakingDisabledReason","phaseContext","taking_poll","surveyTakingDisabledReason","inCurrentPhase","taking_survey","phaseId","setPhase","phaseStream"],"mappings":"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","file":"18.71b560eff8e4c9acefe9.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { Observable, of } from 'rxjs';\nimport {\n  IProjectImages,\n  IProjectImageData,\n  projectImagesStream,\n} from 'services/projectImages';\n\ninterface Props {\n  projectId: string | null;\n}\n\nexport default function useProjectImages({ projectId }: Props) {\n  const [projectImages, setProjectImages] = useState<\n    IProjectImageData[] | undefined | null | Error\n  >(undefined);\n\n  useEffect(() => {\n    setProjectImages(undefined);\n\n    let observable: Observable<IProjectImages | null> = of(null);\n\n    if (projectId) {\n      observable = projectImagesStream(projectId).observable;\n    }\n\n    const subscription = observable.subscribe((response) => {\n      const project = !isNilOrError(response) ? response.data : response;\n      setProjectImages(project);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [projectId]);\n\n  return projectImages;\n}\n","export default {\n  clickOnProjectCard: 'Click on project card',\n  clickOnProjectCardCTA: 'Click on project card CTA',\n  clickOnProjectTitle: 'Click on the project card title',\n  clickOnAvatarBubbles: 'Click on the project card avatar bubbles',\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  xIdeas: {\n    id: 'app.components.ProjectCard.xIdeas',\n    defaultMessage:\n      '{ideasCount, plural, no {# ideas} one {# idea} other {# ideas}}',\n  },\n  xOptions: {\n    id: 'app.components.ProjectCard.xOptions',\n    defaultMessage:\n      '{ideasCount, plural, no {# options} one {# option} other {# options}}',\n  },\n  xContributions: {\n    id: 'app.components.ProjectCard.xContributions',\n    defaultMessage:\n      '{ideasCount, plural, no {# contributions} one {# contribution} other {# contributions}}',\n  },\n  xProjects: {\n    id: 'app.components.ProjectCard.xProjects',\n    defaultMessage:\n      '{ideasCount, plural, no {# projects} one {# project} other {# projects}}',\n  },\n  xIssues: {\n    id: 'app.components.ProjectCard.xIssues',\n    defaultMessage:\n      '{ideasCount, plural, no {# issues} one {# issue} other {# issues}}',\n  },\n  xQuestions: {\n    id: 'app.components.ProjectCard.xQuestions',\n    defaultMessage:\n      '{ideasCount, plural, no {# questions} one {# question} other {# questions}}',\n  },\n  xComments: {\n    id: 'app.components.ProjectCard.xComments',\n    defaultMessage:\n      '{commentsCount, plural, no {# comments} one {# comments} other {# comments}}',\n  },\n  archived: {\n    id: 'app.components.ProjectCard.archived',\n    defaultMessage: 'Archived',\n  },\n  finished: {\n    id: 'app.components.ProjectCard.finished',\n    defaultMessage: 'Finished',\n  },\n  remaining: {\n    id: 'app.components.ProjectCard.remaining',\n    defaultMessage: '{timeRemaining} remaining',\n  },\n  allocateYourBudget: {\n    id: 'app.components.ProjectCard.allocateYourBudget',\n    defaultMessage: 'Allocate your budget',\n  },\n  learnMore: {\n    id: 'app.components.ProjectCard.learnMore',\n    defaultMessage: 'Learn more',\n  },\n  takeTheSurvey: {\n    id: 'app.components.ProjectCard.takeTheSurvey',\n    defaultMessage: 'Take the survey',\n  },\n  takeThePoll: {\n    id: 'app.components.ProjectCard.takeThePoll',\n    defaultMessage: 'Take the poll',\n  },\n  submitYourIdea: {\n    id: 'app.components.ProjectCard.submitYourIdea',\n    defaultMessage: 'Submit your idea',\n  },\n  addYourOption: {\n    id: 'app.components.ProjectCard.addYourOption',\n    defaultMessage: 'Add your option',\n  },\n  submitYourProject: {\n    id: 'app.components.ProjectCard.submitYourProject',\n    defaultMessage: 'Submit your project',\n  },\n  joinDiscussion: {\n    id: 'app.components.ProjectCard.joinDiscussion',\n    defaultMessage: 'Join the discussion',\n  },\n  submitAnIssue: {\n    id: 'app.components.ProjectCard.submitAnIssue',\n    defaultMessage: 'Submit an issue',\n  },\n  contributeYourInput: {\n    id: 'app.components.ProjectCard.contributeYourInput',\n    defaultMessage: 'Contribute your input',\n  },\n  vote: {\n    id: 'app.components.ProjectCard.vote',\n    defaultMessage: 'Vote',\n  },\n  comment: {\n    id: 'app.components.ProjectCard.comment',\n    defaultMessage: 'Comment',\n  },\n  viewTheIdeas: {\n    id: 'app.components.ProjectCard.viewTheIdeas',\n    defaultMessage: 'View the ideas',\n  },\n  viewTheOptions: {\n    id: 'app.components.ProjectCard.viewTheOptions',\n    defaultMessage: 'View the options',\n  },\n  viewTheProjects: {\n    id: 'app.components.ProjectCard.viewTheProjects',\n    defaultMessage: 'View the projects',\n  },\n  viewTheQuestions: {\n    id: 'app.components.ProjectCard.viewTheQuestions',\n    defaultMessage: 'View the questions',\n  },\n  viewTheIssues: {\n    id: 'app.components.ProjectCard.viewTheIssues',\n    defaultMessage: 'View the issues',\n  },\n  viewTheContributions: {\n    id: 'app.components.ProjectCard.viewTheContributions',\n    defaultMessage: 'View the contributions',\n  },\n  a11y_projectTitle: {\n    id: 'app.components.ProjectCard.a11y_projectTitle',\n    defaultMessage: 'Project title: ',\n  },\n  a11y_projectDescription: {\n    id: 'app.components.ProjectCard.a11y_projectDescription',\n    defaultMessage: 'Project description: ',\n  },\n});\n","import React, { memo, useState } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isEmpty, get, isNumber, round } from 'lodash-es';\nimport moment from 'moment';\nimport Observer from '@researchgate/react-intersection-observer';\nimport bowser from 'bowser';\n\n// router\nimport Link from 'utils/cl-router/Link';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport Image from 'components/UI/Image';\nimport AvatarBubbles from 'components/AvatarBubbles';\n\n// services\nimport { getProjectUrl } from 'services/projects';\nimport { getInputTerm } from 'services/participationContexts';\nimport { getIdeaPostingRules } from 'services/actionTakingRules';\n\n// resources\nimport useProject from 'hooks/useProject';\nimport usePhase from 'hooks/usePhase';\nimport usePhases from 'hooks/usePhases';\nimport useAuthUser from 'hooks/useAuthUser';\nimport useProjectImages from 'hooks/useProjectImages';\n\n// i18n\nimport T from 'components/T';\nimport { InjectedIntlProps } from 'react-intl';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport injectIntl from 'utils/cl-intl/injectIntl';\nimport messages from './messages';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// style\nimport styled, { useTheme } from 'styled-components';\nimport {\n  media,\n  colors,\n  fontSizes,\n  defaultCardStyle,\n  defaultCardHoverStyle,\n  isRtl,\n} from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { rgba, darken } from 'polished';\nimport { getInputTermMessage } from 'utils/i18n';\n\nconst Container = styled(Link)<{ hideDescriptionPreview?: boolean }>`\n  width: calc(33% - 12px);\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n  position: relative;\n  cursor: pointer;\n  ${defaultCardStyle};\n\n  &.large {\n    width: 100%;\n    min-height: 450px;\n    flex-direction: row;\n    align-items: stretch;\n    justify-content: space-between;\n\n    ${isRtl`\n        flex-direction: row-reverse;\n    `}\n\n    ${media.smallerThanMinTablet`\n      width: 100%;\n    `}\n  }\n\n  &.medium {\n    width: calc(50% - 13px);\n    min-height: 580px;\n    padding-left: 30px;\n    padding-right: 30px;\n\n    ${media.smallerThanMinTablet`\n      width: 100%;\n    `}\n  }\n\n  &.small {\n    min-height: 540px;\n\n    &.hideDescriptionPreview {\n      min-height: 490px;\n    }\n\n    &.threecolumns {\n      ${media.smallerThanMaxTablet`\n        width: calc(50% - 13px);\n      `}\n\n      ${media.smallerThanMinTablet`\n        width: 100%;\n        min-height: 460px;\n      `}\n    }\n\n    ${media.smallerThanMinTablet`\n      min-height: 400px;\n    `}\n  }\n\n  &.medium {\n    padding-top: 20px;\n    padding-bottom: 30px;\n  }\n\n  &.small {\n    padding-top: 18px;\n    padding-bottom: 25px;\n  }\n\n  &.desktop {\n    ${defaultCardHoverStyle};\n  }\n\n  ${media.smallerThanMinTablet`\n    width: 100%;\n    min-height: 460px;\n  `}\n`;\n\nconst ProjectImageContainer = styled.div`\n  width: 100%;\n  height: 254px;\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: 254px;\n  display: flex;\n  margin-right: 10px;\n  overflow: hidden;\n  position: relative;\n\n  &.large {\n    width: 50%;\n    height: 100%;\n    flex-basis: 50%;\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  &.small {\n    height: 224px;\n    flex-basis: 224px;\n  }\n`;\n\nconst ProjectImagePlaceholder = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${colors.placeholderBg};\n`;\n\nconst ProjectImagePlaceholderIcon = styled(Icon)`\n  height: 45px;\n  fill: #fff;\n`;\n\nconst ProjectImage = styled(Image)`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst ProjectContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  &.large {\n    padding-top: 18px;\n    padding-bottom: 35px;\n    padding-left: 68px;\n    padding-right: 32px;\n\n    ${media.smallerThanMaxTablet`\n      padding-left: 20px;\n      padding-right: 20px;\n    `}\n  }\n\n  &.small {\n    padding-left: 30px;\n    padding-right: 30px;\n\n    ${media.smallerThanMinTablet`\n      padding-left: 20px;\n      padding-right: 20px;\n    `};\n  }\n\n  ${isRtl`\n    align-items: flex-end;\n\n    &.large {\n        padding-right: 68px;\n        padding-left: 32px;\n    }\n  `}\n`;\n\nconst ContentHeaderHeight = 39;\nconst ContentHeaderBottomMargin = 13;\n\nconst ContentHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  &.noContent {\n    ${media.biggerThanMinTablet`\n      height: ${ContentHeaderHeight + ContentHeaderBottomMargin}px;\n    `}\n  }\n\n  &.hasRightContent.noLeftContent {\n    justify-content: flex-end;\n  }\n\n  &.hasContent {\n    margin-bottom: ${ContentHeaderBottomMargin}px;\n\n    &.large {\n      margin-bottom: 0px;\n      padding-bottom: ${ContentHeaderBottomMargin}px;\n      border-bottom: solid 1px #e0e0e0;\n    }\n  }\n\n  &.small {\n    padding-left: 30px;\n    padding-right: 30px;\n\n    ${media.smallerThanMinTablet`\n      padding-left: 20px;\n      padding-right: 20px;\n    `}\n\n    ${media.smallPhone`\n      padding-left: 10px;\n      padding-right: 10px;\n    `}\n  }\n`;\n\nconst ContentHeaderLeft = styled.div`\n  min-height: ${ContentHeaderHeight}px;\n  flex-grow: 0;\n  flex-shrink: 1;\n  flex-basis: 140px;\n  margin-right: 15px;\n`;\n\nconst ContentHeaderRight = styled.div`\n  min-height: ${ContentHeaderHeight}px;\n`;\n\nconst Countdown = styled.div`\n  margin-top: 4px;\n`;\n\nconst TimeRemaining = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  margin-bottom: 7px;\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  max-width: 130px;\n  height: 5px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  background: #d6dade;\n`;\n\nconst ProgressBarOverlay: any = styled.div`\n  width: 0px;\n  height: 100%;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  background: ${colors.clRed};\n  transition: width 1000ms cubic-bezier(0.19, 1, 0.22, 1);\n  will-change: width;\n\n  &.visible {\n    width: ${(props: any) => props.progress}%;\n  }\n`;\n\nconst ProjectLabel = styled.div`\n  // darkened to have higher chances of solid color contrast\n  color: ${({ theme }) => darken(0.05, theme.colorSecondary)};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  text-align: center;\n  white-space: nowrap;\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  background: ${({ theme }) => rgba(theme.colorSecondary, 0.1)};\n`;\n\nconst ContentBody = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  padding-top: 20px;\n\n  &.large {\n    max-width: 400px;\n    justify-content: center;\n  }\n`;\n\nconst ProjectTitle = styled.h3`\n  line-height: normal;\n  font-weight: 500;\n  font-size: ${fontSizes.xl}px;\n  color: ${({ theme }) => theme.colorText};\n  margin: 0;\n  padding: 0;\n\n  ${isRtl`\n    text-align: right;\n    `}\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ProjectDescription = styled.div`\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  line-height: normal;\n  font-weight: 300;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  margin-top: 15px;\n\n  ${isRtl`\n   text-align: right;\n `}\n`;\n\nconst ContentFooter = styled.div`\n  height: 45px;\n  flex-shrink: 0;\n  flex-grow: 0;\n  flex-basis: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 16px;\n  margin-top: 30px;\n  border-top: solid 1px #e0e0e0;\n\n  &.hidden {\n    border: none;\n\n    &.large {\n      margin-top: 0px;\n    }\n\n    &:not(.large) {\n      ${media.smallerThanMinTablet`\n        height: 20px;\n        flex-basis: 20px;\n        margin: 0px;\n        padding: 0px;\n      `}\n    }\n  }\n`;\n\nconst ContentFooterSection = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nconst ContentFooterLeft = styled(ContentFooterSection)``;\n\nconst ContentFooterRight = styled(ContentFooterSection)``;\n\nconst ContentHeaderLabel = styled.span`\n  height: ${ContentHeaderHeight}px;\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  font-weight: 500;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n`;\n\nconst ProjectMetaItems = styled.div`\n  height: 100%;\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  display: flex;\n`;\n\nconst MetaItem = styled.div`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  cursor: pointer;\n  margin-left: 24px;\n\n  &.first {\n    margin-left: 0px;\n  }\n\n  ${media.smallerThanMinTablet`\n    margin-left: 20px;\n  `};\n`;\n\nconst MetaItemIcon = styled(Icon)`\n  width: 20px;\n  height: 20px;\n  fill: ${({ theme }) => theme.colorMain};\n`;\n\nconst CommentIcon = styled(MetaItemIcon)`\n  width: 23px;\n  height: 23px;\n`;\n\nconst MetaItemText = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: normal;\n  margin-left: 3px;\n`;\n\nexport interface InputProps {\n  projectId: string;\n  size: 'small' | 'medium' | 'large';\n  layout?: 'dynamic' | 'threecolumns' | 'twocolumns';\n  hideDescriptionPreview?: boolean;\n  className?: string;\n}\n\ninterface Props extends InputProps, InjectedIntlProps {}\n\nconst ProjectCard = memo<Props>(\n  ({\n    projectId,\n    size,\n    layout,\n    hideDescriptionPreview,\n    className,\n    intl: { formatMessage },\n  }) => {\n    const project = useProject({ projectId });\n    const authUser = useAuthUser();\n    const projectImages = useProjectImages({ projectId });\n    const currentPhaseId =\n      !isNilOrError(project) && project.relationships.current_phase?.data?.id\n        ? project.relationships.current_phase.data.id\n        : null;\n    const phase = usePhase(currentPhaseId);\n    const phases = usePhases(projectId);\n    const theme: any = useTheme();\n\n    const [visible, setVisible] = useState(false);\n\n    const handleIntersection = (\n      event: IntersectionObserverEntry,\n      unobserve: () => void\n    ) => {\n      if (event.isIntersecting) {\n        setVisible(true);\n        unobserve();\n      }\n    };\n\n    const handleProjectCardOnClick = (projectId: string) => () => {\n      trackEventByName(tracks.clickOnProjectCard, { extra: { projectId } });\n    };\n\n    const handleCTAOnClick = (projectId: string) => () => {\n      trackEventByName(tracks.clickOnProjectCardCTA, { extra: { projectId } });\n    };\n\n    const handleProjectTitleOnClick = (projectId: string) => () => {\n      trackEventByName(tracks.clickOnProjectTitle, { extra: { projectId } });\n    };\n\n    if (!isNilOrError(project)) {\n      const postingPermission = getIdeaPostingRules({\n        project,\n        phase: !isNilOrError(phase) ? phase : null,\n        authUser: !isNilOrError(authUser) ? authUser : null,\n      });\n      const participationMethod = !isNilOrError(phase)\n        ? phase.attributes.participation_method\n        : project.attributes.participation_method;\n      const canPost = !!postingPermission.enabled;\n      const canVote = !!(\n        (!isNilOrError(phase)\n          ? phase.attributes.voting_enabled\n          : project.attributes.voting_enabled) &&\n        get(project, 'attributes.action_descriptor.voting.enabled')\n      );\n      const canComment = !!(\n        (!isNilOrError(phase)\n          ? phase.attributes.commenting_enabled\n          : project.attributes.commenting_enabled) &&\n        get(project, 'attributes.action_descriptor.commenting_idea.enabled')\n      );\n      const imageUrl =\n        !isNilOrError(projectImages) && projectImages.length > 0\n          ? projectImages[0].attributes.versions.medium\n          : null;\n      const projectUrl = getProjectUrl(project);\n      const isFinished = project.attributes.timeline_active === 'past';\n      const isArchived = project.attributes.publication_status === 'archived';\n      const ideasCount = project.attributes.ideas_count;\n      const commentsCount = project.attributes.comments_count;\n      const hasAvatars =\n        project.relationships.avatars &&\n        project.relationships.avatars.data &&\n        project.relationships.avatars.data.length > 0;\n      const showIdeasCount =\n        !(\n          project.attributes.process_type === 'continuous' &&\n          project.attributes.participation_method !== 'ideation'\n        ) && ideasCount > 0;\n      const showCommentsCount = commentsCount > 0;\n      const showFooter = hasAvatars || showIdeasCount || showCommentsCount;\n      const avatarIds =\n        project.relationships.avatars && project.relationships.avatars.data\n          ? project.relationships.avatars.data.map((avatar) => avatar.id)\n          : [];\n      const startAt = get(phase, 'attributes.start_at');\n      const endAt = get(phase, 'attributes.end_at');\n      const timeRemaining = endAt\n        ? moment.duration(moment(endAt).endOf('day').diff(moment())).humanize()\n        : null;\n      let countdown: JSX.Element | null = null;\n      let ctaMessage: JSX.Element | null = null;\n      const processType = project.attributes.process_type;\n      const inputTerm = getInputTerm(processType, project, phases);\n\n      if (isArchived) {\n        countdown = (\n          <ContentHeaderLabel className=\"e2e-project-card-archived-label\">\n            <FormattedMessage {...messages.archived} />\n          </ContentHeaderLabel>\n        );\n      } else if (isFinished) {\n        countdown = (\n          <ContentHeaderLabel>\n            <FormattedMessage {...messages.finished} />\n          </ContentHeaderLabel>\n        );\n      } else if (timeRemaining) {\n        const totalDays = timeRemaining\n          ? moment.duration(moment(endAt).diff(moment(startAt))).asDays()\n          : null;\n        const pastDays = timeRemaining\n          ? moment.duration(moment(moment()).diff(moment(startAt))).asDays()\n          : null;\n        const progress =\n          timeRemaining && isNumber(pastDays) && isNumber(totalDays)\n            ? round((pastDays / totalDays) * 100, 1)\n            : null;\n\n        countdown = (\n          <Countdown className=\"e2e-project-card-time-remaining\">\n            <TimeRemaining className={size}>\n              <FormattedMessage\n                {...messages.remaining}\n                values={{ timeRemaining }}\n              />\n            </TimeRemaining>\n            <Observer onChange={handleIntersection}>\n              <ProgressBar aria-hidden>\n                <ProgressBarOverlay\n                  progress={progress}\n                  className={visible ? 'visible' : ''}\n                />\n              </ProgressBar>\n            </Observer>\n          </Countdown>\n        );\n      }\n\n      if (participationMethod === 'budgeting') {\n        ctaMessage = <FormattedMessage {...messages.allocateYourBudget} />;\n      } else if (participationMethod === 'information') {\n        ctaMessage = <FormattedMessage {...messages.learnMore} />;\n      } else if (participationMethod === 'survey') {\n        ctaMessage = <FormattedMessage {...messages.takeTheSurvey} />;\n      } else if (participationMethod === 'poll') {\n        ctaMessage = <FormattedMessage {...messages.takeThePoll} />;\n      } else if (participationMethod === 'ideation' && canPost) {\n        ctaMessage = (\n          <FormattedMessage\n            {...getInputTermMessage(inputTerm, {\n              idea: messages.submitYourIdea,\n              option: messages.addYourOption,\n              project: messages.submitYourProject,\n              question: messages.joinDiscussion,\n              issue: messages.submitAnIssue,\n              contribution: messages.contributeYourInput,\n            })}\n          />\n        );\n      } else if (participationMethod === 'ideation' && canVote) {\n        ctaMessage = <FormattedMessage {...messages.vote} />;\n      } else if (participationMethod === 'ideation' && canComment) {\n        ctaMessage = <FormattedMessage {...messages.comment} />;\n      } else if (participationMethod === 'ideation') {\n        ctaMessage = (\n          <FormattedMessage\n            {...getInputTermMessage(inputTerm, {\n              idea: messages.viewTheIdeas,\n              option: messages.viewTheOptions,\n              project: messages.viewTheProjects,\n              question: messages.viewTheQuestions,\n              issue: messages.viewTheIssues,\n              contribution: messages.viewTheContributions,\n            })}\n          />\n        );\n      }\n\n      const contentHeader = (\n        <ContentHeader\n          className={`${size} ${\n            !ctaMessage ? 'noRightContent' : 'hasContent hasRightContent'\n          } ${!countdown ? 'noLeftContent' : 'hasContent hasLeftContent'} ${\n            !ctaMessage && !countdown ? 'noContent' : ''\n          }`}\n        >\n          {countdown !== null && (\n            <ContentHeaderLeft className={size}>{countdown}</ContentHeaderLeft>\n          )}\n\n          {ctaMessage !== null && !isFinished && !isArchived && (\n            <ContentHeaderRight\n              className={`${size} ${countdown ? 'hasProgressBar' : ''}`}\n            >\n              <ProjectLabel\n                onClick={handleCTAOnClick(project.id)}\n                className=\"e2e-project-card-cta\"\n              >\n                {ctaMessage}\n              </ProjectLabel>\n            </ContentHeaderRight>\n          )}\n        </ContentHeader>\n      );\n\n      const screenReaderContent = (\n        <ScreenReaderOnly>\n          <ProjectTitle>\n            <FormattedMessage {...messages.a11y_projectTitle} />\n            <T value={project.attributes.title_multiloc} />\n          </ProjectTitle>\n\n          <ProjectDescription>\n            <FormattedMessage {...messages.a11y_projectDescription} />\n            <T value={project.attributes.description_preview_multiloc} />\n          </ProjectDescription>\n        </ScreenReaderOnly>\n      );\n\n      return (\n        <Container\n          className={[\n            className || '',\n            layout,\n            size,\n            'e2e-project-card',\n            'e2e-admin-publication-card',\n            isArchived ? 'archived' : '',\n            !(bowser.mobile || bowser.tablet) ? 'desktop' : 'mobile',\n            hideDescriptionPreview ? 'hideDescriptionPreview' : '',\n          ]\n            .filter((item) => item)\n            .join(' ')}\n          to={projectUrl}\n          onClick={handleProjectCardOnClick(project.id)}\n        >\n          {screenReaderContent}\n          {size !== 'large' && contentHeader}\n\n          <ProjectImageContainer className={size}>\n            <ProjectImagePlaceholder>\n              <ProjectImagePlaceholderIcon name=\"project\" />\n            </ProjectImagePlaceholder>\n\n            {imageUrl && <ProjectImage src={imageUrl} alt=\"\" cover={true} />}\n          </ProjectImageContainer>\n\n          <ProjectContent className={size}>\n            {size === 'large' && contentHeader}\n\n            <ContentBody className={size} aria-hidden>\n              <ProjectTitle\n                className=\"e2e-project-card-project-title\"\n                onClick={handleProjectTitleOnClick(project.id)}\n              >\n                <T value={project.attributes.title_multiloc} />\n              </ProjectTitle>\n\n              {!hideDescriptionPreview && (\n                <T value={project.attributes.description_preview_multiloc}>\n                  {(description) => {\n                    if (!isEmpty(description)) {\n                      return (\n                        <ProjectDescription className=\"e2e-project-card-project-description-preview\">\n                          {description}\n                        </ProjectDescription>\n                      );\n                    }\n\n                    return null;\n                  }}\n                </T>\n              )}\n            </ContentBody>\n\n            <ContentFooter className={`${size} ${!showFooter ? 'hidden' : ''}`}>\n              <ContentFooterLeft>\n                {hasAvatars && (\n                  <AvatarBubbles\n                    size={32}\n                    limit={3}\n                    userCountBgColor={theme.colorMain}\n                    avatarIds={avatarIds}\n                    userCount={project.attributes.participants_count}\n                  />\n                )}\n              </ContentFooterLeft>\n\n              <ContentFooterRight>\n                <ProjectMetaItems>\n                  {showIdeasCount && (\n                    <MetaItem className=\"first\">\n                      <MetaItemIcon ariaHidden name=\"idea\" />\n                      <MetaItemText aria-hidden>{ideasCount}</MetaItemText>\n                      <ScreenReaderOnly>\n                        {formatMessage(\n                          getInputTermMessage(inputTerm, {\n                            idea: messages.xIdeas,\n                            option: messages.xOptions,\n                            contribution: messages.xContributions,\n                            project: messages.xProjects,\n                            issue: messages.xIssues,\n                            question: messages.xQuestions,\n                          }),\n                          { ideasCount }\n                        )}\n                      </ScreenReaderOnly>\n                    </MetaItem>\n                  )}\n\n                  {showCommentsCount && (\n                    <MetaItem>\n                      <CommentIcon ariaHidden name=\"comments\" />\n                      <MetaItemText aria-hidden>{commentsCount}</MetaItemText>\n                      <ScreenReaderOnly>\n                        {formatMessage(messages.xComments, { commentsCount })}\n                      </ScreenReaderOnly>\n                    </MetaItem>\n                  )}\n                </ProjectMetaItems>\n              </ContentFooterRight>\n            </ContentFooter>\n          </ProjectContent>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst ProjectCardWithHoC = injectIntl(ProjectCard);\n\nexport default ProjectCardWithHoC;\n","import {\n  PostingDisabledReason,\n  PollDisabledReason,\n  IProjectData,\n  SurveyDisabledReason,\n} from './projects';\nimport { pastPresentOrFuture } from 'utils/dateUtils';\nimport { GetProjectChildProps } from 'resources/GetProject';\nimport { GetPhaseChildProps } from 'resources/GetPhase';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport { IPhaseData } from './phases';\nimport { isAdmin, isProjectModerator } from 'services/permissions/roles';\nimport { TAuthUser } from 'hooks/useAuthUser';\nimport { TPhase } from 'hooks/usePhase';\n\ninterface ActionPermissionHide {\n  show: false;\n  enabled: null;\n  disabledReason: null;\n  action: null;\n}\ninterface ActionPermissionEnabled {\n  show: true;\n  enabled: true;\n  disabledReason: null;\n  action: null;\n}\ninterface ActionPermissionDisabled<DisabledReasons> {\n  show: true;\n  enabled: false;\n  disabledReason: DisabledReasons;\n  action: null;\n}\ninterface ActionPermissionMaybe {\n  show: true;\n  enabled: 'maybe';\n  disabledReason: null;\n  action: IPreliminaryAction;\n}\n\nexport type ActionPermission<DisabledReasons> =\n  | ActionPermissionHide\n  | ActionPermissionMaybe\n  | ActionPermissionEnabled\n  | ActionPermissionDisabled<DisabledReasons>;\n\n/* ----------- Idea Posting ------------ */\n\n// When disabled, these are the reasons to explain to the user\nexport type IIdeaPostingDisabledReason =\n  | 'notPermitted'\n  | 'postingDisabled'\n  | 'projectInactive'\n  | 'notActivePhase'\n  | 'maybeNotPermitted'\n  | 'futureEnabled';\n\n// When disabled but user might get access, here are the next steps for this user\nexport type IPreliminaryAction =\n  | 'sign_in_up'\n  | 'verify'\n  | 'sign_in_up_and_verify';\n\nconst ideaPostingDisabledReason = (\n  backendReason: PostingDisabledReason | null,\n  signedIn: boolean,\n  futureEnabled: string | null\n): {\n  disabledReason: IIdeaPostingDisabledReason | null;\n  action: IPreliminaryAction | null;\n} => {\n  switch (backendReason) {\n    case 'not_verified':\n      return signedIn\n        ? {\n            disabledReason: null,\n            action: 'verify',\n          }\n        : {\n            disabledReason: null,\n            action: 'sign_in_up_and_verify',\n          };\n    case 'not_signed_in':\n      return {\n        disabledReason: null,\n        action: 'sign_in_up',\n      };\n    case 'project_inactive':\n      return {\n        disabledReason: futureEnabled ? 'futureEnabled' : 'projectInactive',\n        action: null,\n      };\n    case 'posting_disabled':\n      return {\n        disabledReason: 'postingDisabled',\n        action: null,\n      };\n    case 'not_permitted':\n      return {\n        disabledReason: signedIn ? 'notPermitted' : 'maybeNotPermitted',\n        action: null,\n      };\n    default:\n      return {\n        disabledReason: 'notPermitted',\n        action: null,\n      };\n  }\n};\n\n/** Should we show and/or disable the idea posting button in the given context. And with what disabledReason?\n * @param context\n *  project: The project context we are posting to.\n *  phase: The phase context in which the button is rendered. NOT necessarily the active phase. Optional.\n *  authUser: The currently authenticated user\n */\nexport const getIdeaPostingRules = ({\n  project,\n  phase,\n  authUser,\n}: {\n  project: GetProjectChildProps;\n  phase: GetPhaseChildProps | TPhase;\n  authUser: GetAuthUserChildProps | TAuthUser;\n}): ActionPermission<IIdeaPostingDisabledReason> => {\n  const signedIn = !isNilOrError(authUser);\n\n  if (!isNilOrError(project)) {\n    const {\n      disabled_reason,\n      future_enabled,\n      enabled,\n    } = project.attributes.action_descriptor.posting_idea;\n\n    if (\n      !isNilOrError(authUser) &&\n      (isAdmin({ data: authUser }) || isProjectModerator({ data: authUser }))\n    ) {\n      return {\n        show: true,\n        enabled: true,\n        disabledReason: null,\n        action: null,\n      };\n    }\n\n    // timeline\n    if (!isNilOrError(phase)) {\n      // not an enabled ideation phase\n      if (\n        !(\n          phase.attributes.participation_method === 'ideation' &&\n          phase.attributes.posting_enabled &&\n          disabled_reason !== 'not_ideation'\n        )\n      ) {\n        return {\n          show: false,\n          enabled: null,\n          disabledReason: null,\n          action: null,\n        };\n      }\n\n      // if not in current phase\n      if (\n        pastPresentOrFuture([\n          phase.attributes.start_at,\n          phase.attributes.end_at,\n        ]) !== 'present'\n      ) {\n        return {\n          show: true,\n          enabled: false,\n          disabledReason: 'notActivePhase' as IIdeaPostingDisabledReason,\n          action: null,\n        };\n      }\n    }\n\n    // continuous, not an enabled ideation project\n    if (\n      isNilOrError(phase) &&\n      !(\n        project.attributes.participation_method === 'ideation' &&\n        project.attributes.posting_enabled &&\n        disabled_reason !== 'not_ideation'\n      )\n    ) {\n      return {\n        show: false,\n        enabled: null,\n        disabledReason: null,\n        action: null,\n      };\n    }\n\n    if (enabled) {\n      return {\n        show: true,\n        enabled: true,\n        disabledReason: null,\n        action: null,\n      };\n    }\n\n    const { disabledReason, action } = ideaPostingDisabledReason(\n      disabled_reason,\n      signedIn,\n      future_enabled\n    );\n\n    if (action) {\n      return {\n        action,\n        disabledReason: null,\n        show: true,\n        enabled: 'maybe',\n      };\n    }\n\n    return {\n      disabledReason,\n      action: null,\n      show: true,\n      enabled: false,\n    } as ActionPermissionDisabled<IIdeaPostingDisabledReason>;\n    // TODO enforce the validity of this by adding a test to ensure either action or disabledReason is not null\n  }\n  // if !project\n  return {\n    show: true,\n    enabled: true,\n    disabledReason: null,\n    action: null,\n  };\n};\n\n/* ----------- Poll Taking ------------ */\n\nexport type IPollTakingDisabledReason =\n  | 'notPermitted'\n  | 'maybeNotPermitted'\n  | 'projectInactive'\n  | 'notActivePhase'\n  | 'alreadyResponded'\n  | 'notVerified'\n  | 'maybeNotVerified';\n\nconst pollTakingDisabledReason = (\n  backendReason: PollDisabledReason | null,\n  signedIn: boolean\n): IPollTakingDisabledReason => {\n  switch (backendReason) {\n    case 'project_inactive':\n      return 'projectInactive';\n    case 'already_responded':\n      return 'alreadyResponded';\n    case 'not_verified':\n      return signedIn ? 'notVerified' : 'maybeNotVerified';\n    case 'not_permitted':\n      return signedIn ? 'notPermitted' : 'maybeNotPermitted';\n    case 'not_signed_in':\n      return 'maybeNotPermitted';\n    default:\n      return 'notPermitted';\n  }\n};\n\n/** Should we enable taking the poll in the curret context? And if not, with what message?\n * @param context\n *  project: The project context we are posting to.\n *  phaseContext: The phase context in which the button is rendered. NOT necessarily the active phase. Optional.\n *  signedIn: Whether the user is currently authenticated\n */\nexport const getPollTakingRules = ({\n  project,\n  phaseContext,\n  signedIn,\n}: {\n  project: IProjectData;\n  phaseContext?: IPhaseData | null;\n  signedIn: boolean;\n}): ActionPermission<IPollTakingDisabledReason> => {\n  const {\n    enabled,\n    disabled_reason,\n  } = project.attributes.action_descriptor.taking_poll;\n\n  if (phaseContext) {\n    if (\n      phaseContext &&\n      pastPresentOrFuture([\n        phaseContext.attributes.start_at,\n        phaseContext.attributes.end_at,\n      ]) !== 'present'\n    ) {\n      return {\n        enabled: false,\n        disabledReason: 'notActivePhase',\n        show: true,\n        action: null,\n      };\n    }\n  }\n\n  if (enabled) {\n    return {\n      enabled,\n      disabledReason: null,\n      show: true,\n      action: null,\n    };\n  }\n  // if not in phase context\n  return {\n    enabled: false,\n    disabledReason: pollTakingDisabledReason(disabled_reason, !!signedIn),\n    show: true,\n    action: null,\n  };\n};\n\nexport type ISurveyTakingDisabledReason =\n  | 'notPermitted'\n  | 'maybeNotPermitted'\n  | 'maybeNotVerified'\n  | 'projectInactive'\n  | 'notActivePhase'\n  | 'notVerified';\n\nconst surveyTakingDisabledReason = (\n  backendReason: SurveyDisabledReason | null,\n  signedIn: boolean\n): ISurveyTakingDisabledReason => {\n  switch (backendReason) {\n    case 'project_inactive':\n      return 'projectInactive';\n    case 'not_signed_in':\n      return 'maybeNotPermitted';\n    case 'not_verified':\n      return signedIn ? 'notVerified' : 'maybeNotVerified';\n    case 'not_permitted':\n      return signedIn ? 'notPermitted' : 'maybeNotPermitted';\n    default:\n      return 'notPermitted';\n  }\n};\n\n/** Should we show the survey in the given context? And if not, with what message?\n * @param context\n *  project: The project context we are posting to.\n *  phaseContext: The phase context in which the button is rendered. NOT necessarily the active phase. Optional.\n *  signedIn: Whether the user is currently authenticated\n */\nexport const getSurveyTakingRules = ({\n  project,\n  phaseContext,\n  signedIn,\n}: {\n  project: IProjectData;\n  phaseContext?: IPhaseData | null;\n  signedIn: boolean;\n}): ActionPermission<ISurveyTakingDisabledReason> => {\n  if (phaseContext) {\n    const inCurrentPhase =\n      pastPresentOrFuture([\n        phaseContext.attributes.start_at,\n        phaseContext.attributes.end_at,\n      ]) === 'present';\n    const {\n      disabled_reason,\n      enabled,\n    } = project.attributes.action_descriptor.taking_survey;\n\n    if (inCurrentPhase) {\n      return {\n        enabled,\n        disabledReason: enabled\n          ? null\n          : surveyTakingDisabledReason(disabled_reason, !!signedIn),\n        action: null,\n        show: true,\n      } as\n        | ActionPermissionDisabled<ISurveyTakingDisabledReason>\n        | ActionPermissionEnabled;\n    } else {\n      // if not in current phase\n      return {\n        enabled: false,\n        disabledReason: 'notActivePhase',\n        action: null,\n        show: true,\n      };\n    }\n  } else {\n    // if not in phase context\n    const {\n      enabled,\n      disabled_reason,\n    } = project.attributes.action_descriptor.taking_survey;\n    return {\n      enabled,\n      disabledReason: enabled\n        ? null\n        : surveyTakingDisabledReason(disabled_reason, !!signedIn),\n      action: null,\n      show: true,\n    } as\n      | ActionPermissionDisabled<ISurveyTakingDisabledReason>\n      | ActionPermissionEnabled;\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { Observable, of } from 'rxjs';\nimport { IPhase, IPhaseData, phaseStream } from 'services/phases';\n\nexport type TPhase = IPhaseData | undefined | null | Error;\n\nexport default function usePhase(phaseId: string | null) {\n  const [phase, setPhase] = useState<TPhase>(undefined);\n\n  useEffect(() => {\n    setPhase(undefined);\n\n    let observable: Observable<IPhase | null> = of(null);\n\n    if (phaseId) {\n      observable = phaseStream(phaseId).observable;\n    }\n\n    const subscription = observable.subscribe((response) => {\n      const phase = !isNilOrError(response) ? response.data : response;\n      setPhase(phase);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [phaseId]);\n\n  return phase;\n}\n"],"sourceRoot":""}