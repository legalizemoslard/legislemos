{"version":3,"sources":["webpack:///./app/components/admin/TabbedResource/index.tsx","webpack:///./app/components/admin/PageTitle/index.tsx","webpack:///./app/modules/commercial/project_folders/admin/containers/index.tsx","webpack:///./app/modules/commercial/project_folders/resources/GetProjectFolder.tsx","webpack:///./app/components/UI/GoBackButton/messages.ts","webpack:///./app/modules/commercial/project_folders/admin/containers/messages.ts","webpack:///./app/components/UI/GoBackButton/index.tsx"],"names":["ResourceHeader","styled","div","TabbedNav","nav","props","theme","borderRadius","colors","separation","Tab","label","fontSizes","base","adminTextColor","ChildWrapper","adminContentBackground","getRegularExpression","tabUrl","RegExp","TabbedResource","tab","pathname","location","active","url","test","this","children","resource","title","subtitle","publicLink","messages","tabs","className","SectionDescription","buttonStyle","icon","linkTo","FormattedMessage","viewPublicResource","length","map","feature","key","name","activeClassForTab","to","React","PureComponent","withRouter","h1","xxxl","TopContainer","AdminProjectFolderEdition","memo","authUser","projectFolderId","params","formatMessage","intl","projectFolder","localize","tabbedProps","isNilOrError","attributes","title_multiloc","projectFolderProjectsTab","projectFolderSettingsTab","isAdmin","data","concat","projectFolderPermissionsTab","onClick","clHistory","push","id","slug","viewPublicProjectFolder","AdminProjectFolderEditionWithHoCs","injectIntl","Data","adopt","render","inputProps","dataProps","GetProjectFolder","state","undefined","projectFolderSlug","resetOnChange","inputProps$","BehaviorSubject","subscriptions","pipe","distinctUntilChanged","prev","next","tap","setState","switchMap","isString","projectFolderByIdStream","observable","projectFolderBySlugStream","of","subscribe","forEach","subscription","unsubscribe","Component","defineMessages","goBack","defaultMessage","titleSettingsTab","subtitleSettingsTab","titleInputLabel","shortDescriptionInputLabel","shortDescriptionInputLabelTooltip","descriptionInputLabel","headerImageInputLabel","projectFolderHeaderImageLabelTooltip","projectFolderCardImageLabel","projectFolderCardImageTooltip","save","saveSuccess","saveErrorMessage","multilocError","saveSuccessMessage","titleNewFolder","subtitleNewFolder","projectsAlreadyAdded","projectsYouCanAdd","folderEmptyGoBackToAdd","addToFolder","removeFromFolder","deleteFolderLabel","noProjectsToAdd","fileUploadLabel","fileUploadLabelTooltip","statusLabel","publicationStatusTooltip","draftStatus","publishedStatus","archivedStatus","Container","GoBackButton","size","padding","text"],"mappings":"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","file":"109.36cfd2d9f0bc45a8dbb7.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Link from 'utils/cl-router/Link';\n\n// style\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// localisation\nimport { FormattedMessage } from 'utils/cl-intl';\n\n// typings\nimport { Message, ITab } from 'typings';\n\n// components\nimport FeatureFlag from 'components/FeatureFlag';\nimport Button from 'components/UI/Button';\nimport { SectionDescription } from 'components/admin/Section';\nimport Title from 'components/admin/PageTitle';\n\nconst ResourceHeader = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-bottom: 30px;\n\n  @media print {\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin-right: 40px;\n  }\n`;\n\nconst TabbedNav = styled.nav`\n  background: #fcfcfc;\n  border-radius: ${(props: any) => props.theme.borderRadius}\n    ${(props: any) => props.theme.borderRadius} 0 0;\n  padding-left: 44px;\n  display: flex;\n  border: 1px solid ${colors.separation};\n  border-bottom: 1px solid transparent;\n  @media print {\n    border: none;\n    padding: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Tab = styled.div`\n  list-style: none;\n  cursor: pointer;\n  display: flex;\n  margin-bottom: -1px;\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  a {\n    color: ${colors.label};\n    font-size: ${fontSizes.base}px;\n    font-weight: 400;\n    line-height: 1.5rem;\n    padding: 0;\n    padding-top: 1em;\n    padding-bottom: 1em;\n    border-bottom: 3px solid transparent;\n    transition: all 100ms ease-out;\n  }\n\n  &:not(.active):hover a {\n    color: ${colors.adminTextColor};\n    border-color: #ddd;\n  }\n\n  &.active a {\n    color: ${colors.adminTextColor};\n    border-color: ${colors.adminTextColor};\n  }\n`;\n\nconst ChildWrapper = styled.div`\n  margin-bottom: 60px;\n  padding: 42px;\n  border: 1px solid ${colors.separation};\n  background: ${colors.adminContentBackground};\n\n  @media print {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\ntype Props = {\n  resource: {\n    title: string;\n    publicLink?: string;\n    subtitle?: string;\n  };\n  messages?: {\n    viewPublicResource: Message;\n  };\n  tabs?: ITab[];\n};\n\ninterface State {}\n\nfunction getRegularExpression(tabUrl: string) {\n  return new RegExp(`^/([a-zA-Z]{2,3}(-[a-zA-Z]{2,3})?)(${tabUrl})(/)?$`);\n}\n\nclass TabbedResource extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  activeClassForTab = (tab: ITab) => {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    return (\n      typeof tab.active === 'function'\n        ? tab.active(pathname)\n        : tab.active ||\n          (pathname && getRegularExpression(tab.url).test(location.pathname))\n    )\n      ? 'active'\n      : '';\n  };\n\n  render() {\n    const {\n      children,\n      resource: { title, subtitle, publicLink },\n      messages,\n      tabs,\n    } = this.props;\n\n    return (\n      <>\n        <ResourceHeader className=\"e2e-resource-header\">\n          <div>\n            <Title>{title}</Title>\n            {subtitle && <SectionDescription>{subtitle}</SectionDescription>}\n          </div>\n\n          {publicLink && messages && (\n            <Button buttonStyle=\"cl-blue\" icon=\"eye\" linkTo={publicLink}>\n              <FormattedMessage {...messages.viewPublicResource} />\n            </Button>\n          )}\n        </ResourceHeader>\n\n        {tabs && tabs.length > 0 && (\n          <TabbedNav className=\"e2e-resource-tabs\">\n            {tabs.map((tab) => {\n              if (tab.feature) {\n                return (\n                  <FeatureFlag key={tab.url} name={tab.feature}>\n                    <Tab\n                      key={tab.url}\n                      className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                    >\n                      <Link to={tab.url}>{tab.label}</Link>\n                    </Tab>\n                  </FeatureFlag>\n                );\n              } else {\n                return (\n                  <Tab\n                    key={tab.url}\n                    className={`${tab.name} ${this.activeClassForTab(tab)}`}\n                  >\n                    <Link to={tab.url}>{tab.label}</Link>\n                  </Tab>\n                );\n              }\n            })}\n          </TabbedNav>\n        )}\n\n        <ChildWrapper>{children}</ChildWrapper>\n      </>\n    );\n  }\n}\n\nexport default withRouter(TabbedResource);\n","// style\nimport styled from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nexport default styled.h1`\n  font-size: ${fontSizes.xxxl}px;\n  line-height: 40px;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 15px;\n`;\n","// Libraries\nimport React, { memo } from 'react';\nimport clHistory from 'utils/cl-router/history';\nimport { adopt } from 'react-adopt';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// Services\nimport { isAdmin } from 'services/permissions/roles';\n\n// Utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// Components\nimport GoBackButton from 'components/UI/GoBackButton';\nimport TabbedResource from 'components/admin/TabbedResource';\nimport Button from 'components/UI/Button';\n\n// Localisation\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// Resources\nimport GetProjectFolder, {\n  GetProjectFolderChildProps,\n} from '../../resources/GetProjectFolder';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// style\nimport styled from 'styled-components';\n\n// hooks\nimport useLocalize from 'hooks/useLocalize';\n\nconst TopContainer = styled.div`\n  width: 100%;\n  margin-top: -5px;\n  margin-bottom: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n`;\n\nexport interface InputProps {}\n\ninterface DataProps {\n  projectFolder: GetProjectFolderChildProps;\n  authUser: GetAuthUserChildProps;\n}\n\nexport interface Props extends InputProps, DataProps {}\n\nconst AdminProjectFolderEdition = memo<\n  Props & InjectedIntlProps & WithRouterProps\n>(\n  ({\n    authUser,\n    params: { projectFolderId },\n    intl: { formatMessage },\n    projectFolder,\n    children,\n  }) => {\n    const localize = useLocalize();\n    const goBack = () => {\n      clHistory.push('/admin/projects');\n    };\n\n    let tabbedProps = {\n      resource: {\n        title: !isNilOrError(projectFolder)\n          ? localize(projectFolder.attributes.title_multiloc)\n          : '',\n      },\n      tabs: [\n        {\n          label: formatMessage(messages.projectFolderProjectsTab),\n          url: `/admin/projects/folders/${projectFolderId}`,\n          name: 'index',\n        },\n        {\n          label: formatMessage(messages.projectFolderSettingsTab),\n          url: `/admin/projects/folders/${projectFolderId}/settings`,\n          name: 'settings',\n        },\n      ],\n    };\n\n    if (authUser && isAdmin({ data: authUser })) {\n      tabbedProps = {\n        ...tabbedProps,\n        tabs: tabbedProps.tabs.concat({\n          label: formatMessage(messages.projectFolderPermissionsTab),\n          url: `/admin/projects/folders/${projectFolderId}/permissions`,\n          name: 'permissions',\n        }),\n      };\n    }\n\n    return (\n      <>\n        <TopContainer>\n          <GoBackButton onClick={goBack} />\n          {!isNilOrError(projectFolder) && (\n            <Button\n              buttonStyle=\"cl-blue\"\n              icon=\"eye\"\n              id=\"to-projectFolder\"\n              linkTo={`/folders/${projectFolder.attributes.slug}`}\n            >\n              <FormattedMessage {...messages.viewPublicProjectFolder} />\n            </Button>\n          )}\n        </TopContainer>\n        <TabbedResource {...tabbedProps}>{children}</TabbedResource>\n      </>\n    );\n  }\n);\n\nconst AdminProjectFolderEditionWithHoCs = injectIntl(AdminProjectFolderEdition);\n\nconst Data = adopt<DataProps, InputProps & WithRouterProps>({\n  authUser: <GetAuthUser />,\n  projectFolder: ({ params, render }) => (\n    <GetProjectFolder projectFolderId={params.projectFolderId}>\n      {render}\n    </GetProjectFolder>\n  ),\n});\n\nexport default withRouter((inputProps: InputProps & WithRouterProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <AdminProjectFolderEditionWithHoCs {...inputProps} {...dataProps} />\n    )}\n  </Data>\n));\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { Subscription, BehaviorSubject, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { isNilOrError } from 'utils/helperUtils';\nimport shallowCompare from 'utils/shallowCompare';\nimport {\n  projectFolderByIdStream,\n  projectFolderBySlugStream,\n  IProjectFolderData,\n} from '../services/projectFolders';\n\ninterface InputProps {\n  projectFolderId?: string | null;\n  projectFolderSlug?: string | null;\n  resetOnChange?: boolean;\n}\n\ntype children = (renderProps: GetProjectFolderChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  projectFolder: IProjectFolderData | undefined | null | Error;\n}\n\nexport type GetProjectFolderChildProps =\n  | IProjectFolderData\n  | undefined\n  | null\n  | Error;\n\nexport default class GetProjectFolder extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectFolder: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { projectFolderId, projectFolderSlug, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({\n      projectFolderId,\n      projectFolderSlug,\n    });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(\n            () => resetOnChange && this.setState({ projectFolder: undefined })\n          ),\n          switchMap(({ projectFolderId, projectFolderSlug }) => {\n            if (isString(projectFolderId)) {\n              return projectFolderByIdStream(projectFolderId).observable;\n            } else if (isString(projectFolderSlug)) {\n              return projectFolderBySlugStream(projectFolderSlug).observable;\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((projectFolder) => {\n          this.setState({\n            projectFolder: !isNilOrError(projectFolder)\n              ? projectFolder.data\n              : projectFolder,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { projectFolderId, projectFolderSlug } = this.props;\n    this.inputProps$.next({ projectFolderId, projectFolderSlug });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { projectFolder } = this.state;\n    return (children as children)(projectFolder);\n  }\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  goBack: {\n    id: 'app.components.GoBackButton.group.edit.goBack',\n    defaultMessage: 'Go back',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  // edit - index\n  titleSettingsTab: {\n    id: 'app.containers.AdminPage.FoldersEdit.titleSettingsTab',\n    defaultMessage: 'Settings',\n  },\n  subtitleSettingsTab: {\n    id: 'app.containers.AdminPage.FoldersEdit.subtitleSettingsTab',\n    defaultMessage:\n      'Explain why grouped project belong together, define a visual identity, expose shared information.',\n  },\n  viewPublicProjectFolder: {\n    id: 'app.containers.AdminPage.FoldersEdit.viewPublicProjectFolder',\n    defaultMessage: 'View Folder',\n  },\n  projectFolderSettingsTab: {\n    id: 'app.containers.AdminPage.FoldersEdit.projectFolderSettingsTab',\n    defaultMessage: 'Settings',\n  },\n  projectFolderPermissionsTab: {\n    id: 'app.containers.AdminPage.FoldersEdit.projectFolderPermissionsTab',\n    defaultMessage: 'Permissions',\n  },\n  projectFolderProjectsTab: {\n    id: 'app.containers.AdminPage.FoldersEdit.projectFolderProjectsTab',\n    defaultMessage: 'Projects',\n  },\n  titleInputLabel: {\n    id: 'app.containers.AdminPage.FoldersEdit.titleInputLabel',\n    defaultMessage: 'Title',\n  },\n  shortDescriptionInputLabel: {\n    id: 'app.containers.AdminPage.FoldersEdit.shortDescriptionInputLabel',\n    defaultMessage: 'Short description',\n  },\n  shortDescriptionInputLabelTooltip: {\n    id:\n      'app.containers.AdminPage.FoldersEdit.shortDescriptionInputLabelTooltip',\n    defaultMessage: 'shown in the landing page',\n  },\n  descriptionInputLabel: {\n    id: 'app.containers.AdminPage.FoldersEdit.descriptionInputLabel',\n    defaultMessage: 'Description',\n  },\n  headerImageInputLabel: {\n    id: 'app.containers.AdminPage.FoldersEdit.headerImageInputLabel',\n    defaultMessage: 'Header image',\n  },\n  projectFolderHeaderImageLabelTooltip: {\n    id:\n      'app.containers.AdminPage.ProjectEdit.projectFolderHeaderImageLabelTooltip',\n    defaultMessage:\n      'This is the image displayed in the header on the folder page. The ideal dimensions for this image are a width between 1480 and 1280 pixels, and a height of 250 pixels.',\n  },\n  projectFolderCardImageLabel: {\n    id: 'app.containers.AdminPage.FoldersEdit.projectFolderCardImageLabel',\n    defaultMessage: 'Folder card image',\n  },\n  projectFolderCardImageTooltip: {\n    id: 'app.containers.AdminPage.ProjectEdit.projectFolderCardImageTooltip',\n    defaultMessage:\n      'This is the image displayed in the folder card. The ideal dimensions for this image are a width of 1440 pixels and a height between 1440 and 720 pixels.',\n  },\n  save: {\n    id: 'app.containers.AdminPage.FoldersEdit.save',\n    defaultMessage: 'Save',\n  },\n  saveSuccess: {\n    id: 'app.containers.AdminPage.FoldersEdit.saveSuccess',\n    defaultMessage: 'Success!',\n  },\n  saveErrorMessage: {\n    id: 'app.containers.AdminPage.FoldersEdit.saveErrorMessage',\n    defaultMessage: 'Something went wrong, please try again later.',\n  },\n  multilocError: {\n    id: 'app.containers.AdminPage.FoldersEdit.multilocError',\n    defaultMessage: 'All text fields must be fully filled in.',\n  },\n  saveSuccessMessage: {\n    id: 'app.containers.AdminPage.FoldersEdit.saveSuccessMessage',\n    defaultMessage: 'Your changes have been saved.',\n  },\n  titleNewFolder: {\n    id: 'app.containers.AdminPage.FoldersEdit.titleNewFolder',\n    defaultMessage: 'Create a new folder',\n  },\n  subtitleNewFolder: {\n    id: 'app.containers.AdminPage.FoldersEdit.subtitleNewFolder',\n    defaultMessage:\n      'Explain why grouped project belong together, define a visual identity, expose shared information.',\n  },\n  projectsAlreadyAdded: {\n    id: 'app.containers.AdminPage.FoldersEdit.projectsAlreadyAdded',\n    defaultMessage: 'Projects added to this folder',\n  },\n  projectsYouCanAdd: {\n    id: 'app.containers.AdminPage.FoldersEdit.projectsYouCanAdd',\n    defaultMessage: 'Projects you can add to this folder',\n  },\n  folderEmptyGoBackToAdd: {\n    id: 'app.containers.AdminPage.FoldersEdit.folderEmptyGoBackToAdd',\n    defaultMessage:\n      'There are no projects in this folder. Go back to the main Projects tab to create and add projects.',\n  },\n  addToFolder: {\n    id: 'app.containers.AdminPage.FoldersEdit.addToFolder',\n    defaultMessage: 'Add to folder',\n  },\n  removeFromFolder: {\n    id: 'app.containers.AdminPage.FoldersEdit.removeFromFolder',\n    defaultMessage: 'Remove from folder',\n  },\n  deleteFolderLabel: {\n    id: 'app.containers.AdminPage.FoldersEdit.deleteFolderLabel',\n    defaultMessage: 'Delete this folder',\n  },\n  noProjectsToAdd: {\n    id: 'app.containers.AdminPage.FoldersEdit.noProjectsToAdd',\n    defaultMessage: 'There are no projects that you can add to this folder.',\n  },\n  fileUploadLabel: {\n    id: 'app.containers.AdminPage.FoldersEdit.fileUploadLabel',\n    defaultMessage: 'Add files to this folder',\n  },\n  fileUploadLabelTooltip: {\n    id: 'app.containers.AdminPage.FoldersEdit.fileUploadLabelTooltip',\n    defaultMessage:\n      'Files should not be larger than 50Mb. Added files will be shown on the folder page.',\n  },\n  statusLabel: {\n    id: 'app.containers.AdminPage.FoldersEdit.statusLabel',\n    defaultMessage: 'Publication status',\n  },\n  publicationStatusTooltip: {\n    id: 'app.containers.AdminPage.FoldersEdit.publicationStatusTooltip',\n    defaultMessage:\n      'Choose whether this folder is \"draft\", \"published\" or \"archived\".',\n  },\n  draftStatus: {\n    id: 'app.containers.AdminPage.FoldersEdit.draftStatus',\n    defaultMessage: 'Draft',\n  },\n  publishedStatus: {\n    id: 'app.containers.AdminPage.FoldersEdit.publishedStatus',\n    defaultMessage: 'Published',\n  },\n  archivedStatus: {\n    id: 'app.containers.AdminPage.FoldersEdit.archivedStatus',\n    defaultMessage: 'Archived',\n  },\n});\n","import React, { PureComponent, FormEvent } from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/UI/Button';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\nconst Container = styled.div`\n  display: inline-block;\n`;\n\ntype Props = {\n  onClick: (arg: FormEvent) => void;\n  className?: string;\n};\n\ninterface State {}\n\nexport default class GoBackButton extends PureComponent<Props, State> {\n  render() {\n    const { onClick, className } = this.props;\n\n    return (\n      <Container className={className || ''}>\n        <Button\n          onClick={onClick}\n          buttonStyle=\"text\"\n          icon=\"arrow-back\"\n          size=\"2\"\n          padding=\"0px\"\n          text={<FormattedMessage {...messages.goBack} />}\n        />\n      </Container>\n    );\n  }\n}\n"],"sourceRoot":""}