{"version":3,"sources":["webpack:///./app/containers/InitiativesEditPage/index.tsx","webpack:///./app/containers/InitiativesEditPage/InitiativesEditMeta.tsx","webpack:///./app/containers/InitiativesEditPage/messages.ts"],"names":["StyledInitiativesEditFormWrapper","InitiativesEditFormWrapper","media","smallerThanMaxTablet","InitiativesEditPage","authUser","props","isNilOrError","isAdmin","data","isModerator","isSuperAdmin","clHistory","replace","previousPathName","initiative","push","attributes","slug","this","checkPageAccess","prevProps","locale","initiativeImages","initiativeFiles","topics","undefined","isError","initiativeTopics","filter","topic","item","action","context","className","initiativeImage","length","onPublished","React","PureComponent","Data","adopt","exclude_code","params","render","id","initiativeId","resourceId","resourceType","PreviousPathnameContext","Consumer","withRouter","withRouterProps","dataProps","InitiativesNewMeta","memo","intl","tenantLocales","formatMessage","initiativesIndexTitle","messages","metaTitle","initiativesIndexDescription","metaDescription","Helmet","unread_notifications","name","content","property","InitiativesNewMetaWithHoc","injectIntl","inputProps","dataprops","defineMessages","defaultMessage"],"mappings":"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","file":"146.22f41b7049d5d0a716cf.chunk.js","sourcesContent":["import React from 'react';\n\n// libraries\nimport clHistory from 'utils/cl-router/history';\nimport { adopt } from 'react-adopt';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// services\nimport { isAdmin, isSuperAdmin, isModerator } from 'services/permissions/roles';\nimport { ITopicData } from 'services/topics';\n\n// resources\nimport HasPermission from 'components/HasPermission';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetLocale, { GetLocaleChildProps } from 'resources/GetLocale';\nimport GetInitiative, {\n  GetInitiativeChildProps,\n} from 'resources/GetInitiative';\nimport GetInitiativeImages, {\n  GetInitiativeImagesChildProps,\n} from 'resources/GetInitiativeImages';\nimport GetResourceFileObjects, {\n  GetResourceFileObjectsChildProps,\n} from 'resources/GetResourceFileObjects';\nimport { PreviousPathnameContext } from 'context';\nimport GetTopics, { GetTopicsChildProps } from 'resources/GetTopics';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isError } from 'util';\n\n// components\nimport InitiativesEditMeta from './InitiativesEditMeta';\nimport InitiativesEditFormWrapper from './InitiativesEditFormWrapper';\nimport PageLayout from 'components/InitiativeForm/PageLayout';\n\n// style\nimport { media } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\nconst StyledInitiativesEditFormWrapper = styled(InitiativesEditFormWrapper)`\n  width: 100%;\n  min-width: 530px;\n  height: 900px;\n  ${media.smallerThanMaxTablet`\n    min-width: 230px;\n  `}\n`;\n\ninterface DataProps {\n  initiative: GetInitiativeChildProps;\n  initiativeImages: GetInitiativeImagesChildProps;\n  initiativeFiles: GetResourceFileObjectsChildProps;\n  authUser: GetAuthUserChildProps;\n  locale: GetLocaleChildProps;\n  previousPathName: string | null;\n  topics: GetTopicsChildProps;\n}\n\ninterface Props extends DataProps {}\n\nexport class InitiativesEditPage extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.checkPageAccess();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.authUser !== this.props.authUser) {\n      this.checkPageAccess();\n    }\n  }\n\n  checkPageAccess = () => {\n    const { authUser } = this.props;\n    const isPrivilegedUser =\n      !isNilOrError(authUser) &&\n      (isAdmin({ data: authUser }) ||\n        isModerator({ data: authUser }) ||\n        isSuperAdmin({ data: authUser }));\n\n    if (!isPrivilegedUser && authUser === null) {\n      clHistory.replace(this.props.previousPathName || '/sign-up');\n    }\n  };\n\n  onPublished = () => {\n    const { initiative } = this.props;\n    if (!isNilOrError(initiative)) {\n      clHistory.push(`/initiatives/${initiative.attributes.slug}`);\n    }\n  };\n\n  render() {\n    const {\n      authUser,\n      locale,\n      initiative,\n      initiativeImages,\n      initiativeFiles,\n      topics,\n    } = this.props;\n    if (\n      isNilOrError(authUser) ||\n      isNilOrError(locale) ||\n      isNilOrError(initiative) ||\n      initiativeImages === undefined ||\n      initiativeFiles === undefined ||\n      isError(initiativeFiles) ||\n      isNilOrError(topics)\n    ) {\n      return null;\n    }\n\n    const initiativeTopics = topics.filter(\n      (topic) => !isNilOrError(topic)\n    ) as ITopicData[];\n    return (\n      <HasPermission item={initiative} action=\"edit\" context={initiative}>\n        <InitiativesEditMeta />\n        <PageLayout\n          isAdmin={isAdmin({ data: authUser })}\n          className=\"e2e-initiative-edit-page\"\n        >\n          <StyledInitiativesEditFormWrapper\n            locale={locale}\n            initiative={initiative}\n            initiativeImage={\n              isNilOrError(initiativeImages) || initiativeImages.length === 0\n                ? null\n                : initiativeImages[0]\n            }\n            onPublished={this.onPublished}\n            initiativeFiles={initiativeFiles}\n            topics={initiativeTopics}\n          />\n        </PageLayout>\n      </HasPermission>\n    );\n  }\n}\n\nconst Data = adopt<DataProps, WithRouterProps>({\n  authUser: <GetAuthUser />,\n  locale: <GetLocale />,\n  topics: <GetTopics exclude_code={'custom'} />,\n  initiative: ({ params, render }) => (\n    <GetInitiative id={params.initiativeId}>{render}</GetInitiative>\n  ),\n  initiativeImages: ({ params, render }) => (\n    <GetInitiativeImages initiativeId={params.initiativeId}>\n      {render}\n    </GetInitiativeImages>\n  ),\n  initiativeFiles: ({ params, render }) => (\n    <GetResourceFileObjects\n      resourceId={params.initiativeId}\n      resourceType=\"initiative\"\n    >\n      {render}\n    </GetResourceFileObjects>\n  ),\n  previousPathName: ({ render }) => (\n    <PreviousPathnameContext.Consumer>\n      {render as any}\n    </PreviousPathnameContext.Consumer>\n  ),\n});\n\nexport default withRouter((withRouterProps: WithRouterProps) => (\n  <Data {...withRouterProps}>\n    {(dataProps) => <InitiativesEditPage {...dataProps} />}\n  </Data>\n));\n","// libraries\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { adopt } from 'react-adopt';\n\n// i18n\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// resources\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetAppConfigurationLocales, {\n  GetAppConfigurationLocalesChildProps,\n} from 'resources/GetAppConfigurationLocales';\n\n// utils\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\ninterface InputProps {}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  tenantLocales: GetAppConfigurationLocalesChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\nconst InitiativesNewMeta = React.memo<Props & InjectedIntlProps>(\n  ({ intl, authUser, tenantLocales }) => {\n    const { formatMessage } = intl;\n    const initiativesIndexTitle = formatMessage(messages.metaTitle);\n    const initiativesIndexDescription = formatMessage(messages.metaDescription);\n\n    return (\n      <Helmet>\n        <title>\n          {`\n          ${\n            authUser && authUser.attributes.unread_notifications\n              ? `(${authUser.attributes.unread_notifications}) `\n              : ''\n          }\n          ${initiativesIndexTitle}`}\n        </title>\n        {getAlternateLinks(tenantLocales)}\n        {getCanonicalLink()}\n        <meta name=\"title\" content={initiativesIndexTitle} />\n        <meta name=\"description\" content={initiativesIndexDescription} />\n        <meta property=\"og:title\" content={initiativesIndexTitle} />\n        <meta property=\"og:description\" content={initiativesIndexDescription} />\n      </Helmet>\n    );\n  }\n);\n\nconst InitiativesNewMetaWithHoc = injectIntl<Props>(InitiativesNewMeta);\n\nconst Data = adopt<DataProps, InputProps>({\n  tenantLocales: <GetAppConfigurationLocales />,\n  authUser: <GetAuthUser />,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataprops) => (\n      <InitiativesNewMetaWithHoc {...inputProps} {...dataprops} />\n    )}\n  </Data>\n);\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  metaTitle: {\n    id: 'app.containers.InitiativesEditPage.metaTitle',\n    defaultMessage: 'Edit your initiative • {orgName}',\n  },\n  metaDescription: {\n    id: 'app.containers.InitiativesEditPage.metaDescription',\n    defaultMessage:\n      'Edit your initiative. Add more information and make it even better.',\n  },\n});\n"],"sourceRoot":""}