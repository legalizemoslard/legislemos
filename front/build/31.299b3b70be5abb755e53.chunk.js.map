{"version":3,"sources":["webpack:///./app/components/ProjectAndFolderCards/SelectAreas.tsx","webpack:///./app/assets/img/landingpage/no_projects_image.svg","webpack:///./app/components/ProjectAndFolderCards/index.tsx","webpack:///./app/components/ProjectAndFolderCards/tracks.ts","webpack:///./app/components/ProjectAndFolderCards/messages.ts"],"names":["SelectAreas","selectedAreas","props","onChange","areas","localize","isNilOrError","map","area","text","attributes","title_multiloc","value","id","tenant","FormattedMessage","messages","areasTitle","customTerm","settings","core","areas_term","isEmptyMultiloc","this","options","areasOptions","length","title","areasTerm","name","selected","values","handleOnChange","multipleSelectionAllowed","right","mobileLeft","PureComponent","SelectAreasWithHOCs","Data","adopt","inputProps","dataProps","Container","styled","div","Header","media","smallerThanMinTablet","isRtl","Title","h2","theme","colorText","fontSizes","xl","ProjectsList","MockProjectCard","EmptyContainer","defaultCardStyle","EmptyProjectsImage","img","smallerThanMaxTablet","EmptyMessage","EmptyMessageTitle","large","EmptyMessageLine","p","base","Footer","FiltersArea","FilterArea","ShowMoreButton","Button","ProjectAndFolderCards","adminPublications","windowSize","layout","list","initialCount","size","slice","isOdd","number","biggerThanSmallTablet","viewportWidths","smallTablet","biggerThanLargeTablet","largeTablet","cardSizes","_project","index","cardSize","isEqual","state","setState","query","location","isEmpty","isString","trackEventByName","tracks","clickOnProjectsShowMoreButton","onLoadMore","clickOnProjectsAreaFilter","pathname","removeLocale","search","stringify","indices","encode","clHistory","replace","calculateCardsLayout","_prevProps","prevState","getAreasFromQueryParams","onChangeAreas","showTitle","loadingInitial","loadingMore","hasMore","hasPublications","objectFitCoverSupported","window","CSS","supports","customCurrentlyWorkingOn","currently_working_on_text","currentlyWorkingOn","ScreenReaderOnly","handleAreasOnChange","src","EmptyProjectsImageSrc","className","noProjectYet","stayTuned","item","projectOrFolderId","publicationId","projectOrFolderType","publicationType","Fragment","key","projectId","publication","onClick","showMore","buttonStyle","processing","height","icon","iconPos","textColor","bgColor","rgba","bgHoverColor","fontWeight","ProjectAndFolderCardsWithHOCs","withTheme","injectIntl","withRouter","render","pageSize","prefetchProjects","rootLevelOnly","removeNotAllowedParents","defineMessages","defaultMessage","allProjects"],"mappings":"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","file":"31.299b3b70be5abb755e53.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError, isEmptyMultiloc } from 'utils/helperUtils';\n\n// components\nimport FilterSelector from 'components/FilterSelector';\n\n// services\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetAreas, { GetAreasChildProps } from 'resources/GetAreas';\n\n// i18n\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\ninterface InputProps {\n  selectedAreas: string[];\n  onChange: (value: any) => void;\n}\n\ninterface DataProps {\n  areas: GetAreasChildProps;\n  tenant: GetAppConfigurationChildProps;\n}\n\ninterface Props extends InputProps, DataProps, InjectedLocalized {}\n\nclass SelectAreas extends PureComponent<Props> {\n  handleOnChange = (selectedAreas: string[]) => {\n    this.props.onChange(selectedAreas || []);\n  };\n\n  areasOptions = (): { text: string; value: string }[] => {\n    const { areas, localize } = this.props;\n    if (!isNilOrError(areas)) {\n      return areas.map((area) => ({\n        text: localize(area.attributes.title_multiloc),\n        value: area.id,\n      }));\n    } else {\n      return [];\n    }\n  };\n\n  areasTerm = () => {\n    const { tenant, localize } = this.props;\n    if (!isNilOrError(tenant)) {\n      const customTerm = tenant.attributes.settings.core.areas_term;\n      if (customTerm && !isEmptyMultiloc(customTerm)) {\n        return localize(customTerm);\n      } else {\n        return <FormattedMessage {...messages.areasTitle} />;\n      }\n    } else {\n      return <FormattedMessage {...messages.areasTitle} />;\n    }\n  };\n\n  render() {\n    const { selectedAreas } = this.props;\n    const options = this.areasOptions();\n\n    if (options.length === 0) return null;\n\n    const title = this.areasTerm();\n\n    return (\n      <FilterSelector\n        title={title}\n        name=\"areas\"\n        selected={selectedAreas}\n        values={options}\n        onChange={this.handleOnChange}\n        multipleSelectionAllowed={true}\n        right=\"-5px\"\n        mobileLeft=\"-5px\"\n      />\n    );\n  }\n}\n\nconst SelectAreasWithHOCs = injectLocalize<InputProps>(SelectAreas);\n\nconst Data = adopt<DataProps, InputProps>({\n  tenant: <GetAppConfiguration />,\n  areas: <GetAreas />,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <SelectAreasWithHOCs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","export default __webpack_public_path__ + \"7b43378db3ab038ebf08e3b9fe87c64a.svg\";","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { size, isEqual, isEmpty, isString } from 'lodash-es';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { stringify } from 'qs';\n\n// components\nimport ProjectCard from 'components/ProjectCard';\nimport SelectAreas from './SelectAreas';\nimport LoadingBox from './LoadingBox';\nimport Button from 'components/UI/Button';\n\n// resources\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetWindowSize, {\n  GetWindowSizeChildProps,\n} from 'resources/GetWindowSize';\nimport GetAdminPublications, {\n  GetAdminPublicationsChildProps,\n} from 'resources/GetAdminPublications';\n\n// services\nimport {\n  IAdminPublicationContent,\n  InputProps as UseAdminPublicationInputProps,\n} from 'hooks/useAdminPublications';\n\n// routing\nimport { removeLocale } from 'utils/cl-router/updateLocationDescriptor';\nimport clHistory from 'utils/cl-router/history';\n\n// i18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport T from 'components/T';\nimport messages from './messages';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// style\nimport styled, { withTheme } from 'styled-components';\nimport {\n  media,\n  fontSizes,\n  viewportWidths,\n  defaultCardStyle,\n  isRtl,\n} from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\nimport { rgba } from 'polished';\n\n// svg\nimport EmptyProjectsImageSrc from 'assets/img/landingpage/no_projects_image.svg';\nimport Outlet from 'components/Outlet';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 30px;\n  border-bottom: 1px solid #d1d1d1;\n\n  ${media.smallerThanMinTablet`\n    justify-content: center;\n    border: none;\n  `};\n\n  ${isRtl`\n    flex-direction: row-reverse;\n  `}\n`;\n\nconst Title = styled.h2`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.xl}px;\n  font-weight: 500;\n  line-height: normal;\n  display: flex;\n  align-items: center;\n  padding: 0;\n  margin-right: 45px;\n  width: 100%;\n\n  ${media.smallerThanMinTablet`\n    text-align: center;\n    margin: 0;\n  `};\n\n  ${isRtl`\n    margin-right: 0;\n    margin-left: 45px;\n    justify-content: flex-end;\n  `}\n`;\n\nconst ProjectsList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst MockProjectCard = styled.div`\n  height: 1px;\n  background: transparent;\n  width: calc(33% - 12px);\n`;\n\nconst EmptyContainer = styled.div`\n  width: 100%;\n  min-height: 200px;\n  color: ${({ theme }) => theme.colorText};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  margin-bottom: 43px;\n  position: relative;\n  ${defaultCardStyle};\n`;\n\nconst EmptyProjectsImage = styled.img`\n  width: 100%;\n  height: auto;\n\n  ${media.smallerThanMaxTablet`\n    &.objectFitCoverSupported {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n\n    &:not(.objectFitCoverSupported) {\n      width: auto;\n      height: 100%;\n    }\n  `}\n`;\n\nconst EmptyMessage = styled.div`\n  color: ${({ theme }) => theme.colorText};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst EmptyMessageTitle = styled.h2`\n  font-weight: 600;\n  font-size: ${fontSizes.xl}px;\n  white-space: nowrap;\n  margin-bottom: 5px;\n\n  ${media.smallerThanMinTablet`\n    font-size: ${fontSizes.large}px;\n  `};\n`;\n\nconst EmptyMessageLine = styled.p`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: 25px;\n  text-align: center;\n`;\n\nconst Footer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n\n  ${media.smallerThanMinTablet`\n    flex-direction: column;\n    align-items: stretch;\n    margin-top: 0px;\n  `}\n`;\n\nconst FiltersArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  justify-content: flex-end;\n\n  ${media.smallerThanMinTablet`\n    display: none;\n  `};\n\n  ${isRtl`\n    justify-content: flex-start;\n  `}\n`;\n\nconst FilterArea = styled.div`\n  height: 60px;\n  display: flex;\n  align-items: center;\n\n  &.publicationstatus {\n    margin-right: 30px;\n  }\n\n  ${media.smallerThanMinTablet`\n    height: auto;\n  `};\n`;\n\nconst ShowMoreButton = styled(Button)``;\n\ninterface InputProps extends UseAdminPublicationInputProps {\n  showTitle: boolean;\n  layout: 'dynamic' | 'threecolumns' | 'twocolumns';\n}\n\ninterface DataProps {\n  tenant: GetAppConfigurationChildProps;\n  windowSize: GetWindowSizeChildProps;\n  adminPublications: GetAdminPublicationsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {\n  theme: any;\n}\n\ninterface State {\n  cardSizes: ('small' | 'medium' | 'large')[];\n  areas: string[];\n}\n\nclass ProjectAndFolderCards extends PureComponent<\n  Props & InjectedIntlProps & WithRouterProps,\n  State\n> {\n  emptyArray: string[] = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardSizes: [],\n      areas: [],\n    };\n  }\n\n  componentDidMount() {\n    this.calculateCardsLayout();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    this.calculateCardsLayout();\n\n    const areas = this.getAreasFromQueryParams();\n\n    if (!isEqual(this.state.areas, areas)) {\n      this.setState({ areas });\n    }\n\n    const { adminPublications } = this.props;\n    if (\n      !isEqual(prevState.areas, this.state.areas) &&\n      !isNilOrError(adminPublications)\n    ) {\n      adminPublications.onChangeAreas(this.state.areas);\n    }\n  }\n\n  calculateCardsLayout = () => {\n    const { adminPublications, windowSize, layout } = this.props;\n\n    if (\n      !isNilOrError(adminPublications) &&\n      adminPublications.list &&\n      adminPublications.list.length > 0 &&\n      windowSize &&\n      layout === 'dynamic'\n    ) {\n      const initialCount = size(adminPublications.list.slice(0, 6));\n      const isOdd = (number: number) => number % 2 === 1;\n      const biggerThanSmallTablet = windowSize >= viewportWidths.smallTablet;\n      const biggerThanLargeTablet = windowSize >= viewportWidths.largeTablet;\n\n      const cardSizes = adminPublications.list.map((_project, index) => {\n        let cardSize: 'small' | 'medium' | 'large' =\n          biggerThanSmallTablet && !biggerThanLargeTablet ? 'medium' : 'small';\n\n        if (index < 6) {\n          if (biggerThanSmallTablet && !biggerThanLargeTablet) {\n            if (\n              (!isOdd(initialCount) && (index === 0 || index === 1)) ||\n              (isOdd(initialCount) && index === 0)\n            ) {\n              cardSize = 'large';\n            }\n          }\n\n          if (biggerThanLargeTablet) {\n            if (initialCount === 1 && index === 0) {\n              cardSize = 'large';\n            } else if (initialCount === 2) {\n              cardSize = 'medium';\n            } else if (initialCount === 3) {\n              if (index === 0) {\n                cardSize = 'large';\n              } else {\n                cardSize = 'medium';\n              }\n            } else if (initialCount === 4 && index === 0) {\n              cardSize = 'large';\n            } else if (initialCount === 5 && (index === 0 || index === 1)) {\n              cardSize = 'medium';\n            } else if (initialCount === 6) {\n              if (index === 0) {\n                cardSize = 'large';\n              } else if (index === 1 || index === 2) {\n                cardSize = 'medium';\n              }\n            }\n          }\n        }\n\n        return cardSize;\n      });\n\n      if (!isEqual(this.state.cardSizes, cardSizes)) {\n        this.setState({ cardSizes });\n      }\n    }\n  };\n\n  getAreasFromQueryParams = () => {\n    let areas: string[] = [];\n    const { query } = this.props.location;\n\n    if (query.areas && !isEmpty(query.areas)) {\n      areas = isString(query.areas) ? [query.areas] : query.areas;\n    }\n\n    return areas;\n  };\n\n  showMore = () => {\n    trackEventByName(tracks.clickOnProjectsShowMoreButton);\n    this.props.adminPublications.onLoadMore();\n  };\n\n  handleAreasOnChange = (areas: string[]) => {\n    if (!isEqual(this.state.areas, areas)) {\n      trackEventByName(tracks.clickOnProjectsAreaFilter);\n      const { pathname } = removeLocale(this.props.location.pathname);\n      const query = { ...this.props.location.query, areas };\n      const search = `?${stringify(query, { indices: false, encode: false })}`;\n      clHistory.replace({ pathname, search });\n    }\n  };\n\n  render() {\n    const { cardSizes, areas } = this.state;\n    const { tenant, showTitle, layout, theme, adminPublications } = this.props;\n    const { loadingInitial, loadingMore, hasMore, list } = adminPublications;\n    const hasPublications = list && list.length > 0;\n    const objectFitCoverSupported =\n      window['CSS'] && CSS.supports('object-fit: cover');\n\n    if (!isNilOrError(tenant)) {\n      const customCurrentlyWorkingOn =\n        tenant.attributes.settings.core.currently_working_on_text;\n\n      return (\n        <Container id=\"e2e-projects-container\">\n          <Header>\n            {showTitle ? (\n              <Title>\n                {customCurrentlyWorkingOn &&\n                !isEmpty(customCurrentlyWorkingOn) ? (\n                  <T value={customCurrentlyWorkingOn} />\n                ) : (\n                  <FormattedMessage {...messages.currentlyWorkingOn} />\n                )}\n              </Title>\n            ) : (\n              <ScreenReaderOnly>\n                {customCurrentlyWorkingOn &&\n                !isEmpty(customCurrentlyWorkingOn) ? (\n                  <T value={customCurrentlyWorkingOn} />\n                ) : (\n                  <FormattedMessage {...messages.currentlyWorkingOn} />\n                )}\n              </ScreenReaderOnly>\n            )}\n            <FiltersArea>\n              <FilterArea>\n                <SelectAreas\n                  selectedAreas={areas}\n                  onChange={this.handleAreasOnChange}\n                />\n              </FilterArea>\n            </FiltersArea>\n          </Header>\n\n          {loadingInitial && <LoadingBox />}\n\n          {!loadingInitial && !hasPublications && (\n            <EmptyContainer id=\"projects-empty\">\n              <EmptyProjectsImage\n                src={EmptyProjectsImageSrc}\n                className={\n                  objectFitCoverSupported ? 'objectFitCoverSupported' : ''\n                }\n              />\n              <EmptyMessage>\n                <EmptyMessageTitle>\n                  <FormattedMessage {...messages.noProjectYet} />\n                </EmptyMessageTitle>\n                <EmptyMessageLine>\n                  <FormattedMessage {...messages.stayTuned} />\n                </EmptyMessageLine>\n              </EmptyMessage>\n            </EmptyContainer>\n          )}\n\n          {!loadingInitial && hasPublications && list && (\n            <ProjectsList id=\"e2e-projects-list\">\n              {list.map((item: IAdminPublicationContent, index: number) => {\n                const projectOrFolderId = item.publicationId;\n                const projectOrFolderType = item.publicationType;\n                const size =\n                  layout === 'dynamic'\n                    ? cardSizes[index]\n                    : layout === 'threecolumns'\n                    ? 'small'\n                    : 'medium';\n\n                return (\n                  <React.Fragment key={index}>\n                    {projectOrFolderType === 'project' && (\n                      <ProjectCard\n                        projectId={projectOrFolderId}\n                        size={size}\n                        layout={layout}\n                      />\n                    )}\n                    <Outlet\n                      id=\"app.components.ProjectAndFolderCards.card\"\n                      publication={item}\n                      size={size}\n                      layout={layout}\n                    />\n                  </React.Fragment>\n                );\n              })}\n\n              {/*\n              // A bit of a hack (but the most elegant one I could think of) to\n              // make the 3-column layout work for the last row of project cards when\n              // the total amount of projects is not divisible by 3 and therefore doesn't take up the full row width.\n              // Ideally would have been solved with CSS grid, but... IE11\n              */}\n              {!hasMore &&\n                (layout === 'threecolumns' || list.length > 6) &&\n                (list.length + 1) % 3 === 0 && (\n                  <MockProjectCard className={layout} />\n                )}\n\n              {!hasMore &&\n                (layout === 'threecolumns' || list.length > 6) &&\n                (list.length - 1) % 3 === 0 && (\n                  <>\n                    <MockProjectCard className={layout} />\n                    <MockProjectCard className={layout} />\n                  </>\n                )}\n            </ProjectsList>\n          )}\n\n          <Footer>\n            {!loadingInitial && hasPublications && hasMore && (\n              <ShowMoreButton\n                onClick={this.showMore}\n                buttonStyle=\"secondary\"\n                text={<FormattedMessage {...messages.showMore} />}\n                processing={loadingMore}\n                height=\"50px\"\n                icon=\"showMore\"\n                iconPos=\"left\"\n                textColor={theme.colorText}\n                bgColor={rgba(theme.colorText, 0.08)}\n                bgHoverColor={rgba(theme.colorText, 0.12)}\n                fontWeight=\"500\"\n                className={`e2e-project-cards-show-more-button ${\n                  loadingMore ? 'loading' : ''\n                }`}\n              />\n            )}\n          </Footer>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst ProjectAndFolderCardsWithHOCs = withTheme(\n  injectIntl<Props>(withRouter(ProjectAndFolderCards))\n);\n\nconst Data = adopt<DataProps, InputProps>({\n  tenant: <GetAppConfiguration />,\n  windowSize: <GetWindowSize />,\n  adminPublications: ({ render, ...props }) => (\n    <GetAdminPublications\n      pageSize={6}\n      prefetchProjects\n      rootLevelOnly\n      removeNotAllowedParents\n      {...props}\n    >\n      {render}\n    </GetAdminPublications>\n  ),\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <ProjectAndFolderCardsWithHOCs {...inputProps} {...dataProps} />\n    )}\n  </Data>\n);\n","export default {\n  clickOnProjectsAreaFilter: 'Click on projects areas filter dropdown',\n  clickOnProjectsShowMoreButton: 'Click on projects show more button',\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  showMore: {\n    id: 'app.components.ProjectFolderCards.showMore',\n    defaultMessage: 'Show more',\n  },\n  noProjectYet: {\n    id: 'app.components.ProjectFolderCards.noProjectYet',\n    defaultMessage: 'There is no project yet',\n  },\n  stayTuned: {\n    id: 'app.components.ProjectFolderCards.stayTuned',\n    defaultMessage: 'Stay tuned, a project is going to show up pretty soon.',\n  },\n  allProjects: {\n    id: 'app.containers.ProjectFolderCards.allProjects',\n    defaultMessage: 'All projects',\n  },\n  currentlyWorkingOn: {\n    id: 'app.containers.ProjectFolderCards.currentlyWorkingOn',\n    defaultMessage: '{orgName} is currently working on',\n  },\n  areasTitle: {\n    id: 'app.containers.ProjectCards.areasTitle',\n    defaultMessage: 'Areas',\n  },\n});\n"],"sourceRoot":""}