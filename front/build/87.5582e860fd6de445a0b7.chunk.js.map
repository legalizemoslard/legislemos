{"version":3,"sources":["webpack:///./app/containers/UsersEditPage/ProfileForm.tsx","webpack:///./app/containers/UsersEditPage/CampaignsConsentForm/index.tsx","webpack:///./app/containers/UsersEditPage/CampaignsConsentForm/tracks.ts","webpack:///./app/resources/GetLockedFields.tsx","webpack:///./app/containers/UsersEditPage/UsersEditPageMeta.tsx","webpack:///./app/components/FormattedAnchor/index.tsx","webpack:///./app/resources/GetCampaignConsents.tsx","webpack:///./app/containers/UsersEditPage/ProfileDeletion.tsx","webpack:///./app/containers/UsersEditPage/FragmentForm.tsx","webpack:///./app/containers/UsersEditPage/DeletionDialog.tsx","webpack:///./app/containers/UsersEditPage/index.tsx"],"names":["InputContainer","styled","div","StyledIconTooltip","IconTooltip","LabelContainer","StyledFormLabel","FormLabel","StyledPasswordInputIconTooltip","PasswordInputIconTooltip","ProfileForm","props","localeOptions","tenantLocales","map","locale","value","label","appLocalePairs","authUser","isNilOrError","avatarUrl","attributes","avatar","medium","convertUrlToUploadFile","then","fileAvatar","setState","values","formikActions","setSubmitting","resetForm","setErrors","setStatus","newValues","Object","entries","state","extraFormData","reduce","acc","key","extraFormDataConfiguration","formData","updateUser","id","streams","fetchAllWith","apiEndpoint","API_PATH","isCLErrorJSON","apiErrors","json","errors","setFieldValue","setFieldTouched","isSubmitting","submitForm","isValid","status","touched","lockedFields","disableBio","hasPasswordMinimumLengthError","returnValue","lockedFieldsNames","field","name","formatMessage","intl","createChangeHandler","fieldName","endsWith","createBlurHandler","handleAvatarOnRemove","FormSection","className","FormSectionTitle","message","messages","h1","subtitleMessage","h1sub","SectionField","images","imagePreviewRatio","maxImagePreviewWidth","acceptedFileTypes","onAdd","newAvatar","base64","onRemove","imageDropzonePlaceholder","removeIconAriaTitle","a11y_imageDropzoneRemoveIconAriaTitle","borderRadius","htmlFor","labelMessage","firstNames","Input","type","first_name","onChange","onBlur","disabled","includes","content","FormattedMessage","blockedVerified","icon","lastName","last_name","email","bio","noImages","noVideos","limitedTextFormatting","bio_multiloc","localize","placeholder","bio_placeholder","password","tenant","hasPasswordMinimumLength","settings","password_login","undefined","minimum_length","minimumLengthError","language","Select","options","onSubmit","onData","data","isEmpty","some","keys","length","buttonStyle","loading","onClick","forEach","configuration","submit","buttonSave","buttonSuccess","buttonSuccessLabel","messageSuccess","messageError","this","setLocaleOptions","transformAPIAvatar","prevProps","isEqual","Formik","initialValues","mapUserToDiff","handleFormikSubmit","render","formikRender","PureComponent","ProfileFormWithHocs","injectIntl","Data","adopt","inputProps","dataProps","consents","trackEventName","tracks","clickChangeEmailNotificationProfileSettings","GetLockedFields","subscriptions","lockedFieldsStream","observable","subscribe","subscription","unsubscribe","children","React","Component","UsersEditPageMeta","memo","user","location","window","firstName","organizationNameMultiLoc","core","organization_name","tenantName","getLocalized","usersEditPageIndexTitle","metaTitle","usersEditPageDescription","metaDescription","Helmet","unread_notifications","property","href","Anchor","a","FormattedAnchor","mainMessage","mainMessageLinkKey","mainMessageValues","urlMessage","urlMessageValues","linkTextMessage","linkTextMessageValues","target","allValues","GetConsents","authUserStream","pipe","switchMap","of","consentsStream","Row","ProfileDeletion","dialogOpened","deletionSection","deletionSubtitle","openDialog","width","justifyWrapper","deleteMyAccount","opened","close","onCloseDialog","closeDialog","useState","jwt","setJwt","useEffect","getJwt","queryParameters","Container","fontSizes","base","Logo","img","Styledh1","xxl","Styledh2","h2","large","ButtonsContainer","DeletionDialog","signOutAndDeleteAccountPart1","error","processing","tenantLogo","get","logo","src","alt","logoAltText","deleteYourAccount","deleteAccountSubtext","reasonsToStayListTitle","tooManyEmails","privacyReasons","conditionsLink","to","conditionsLinkText","contactUs","feedbackLinkUrl","url","feedbackLinkText","noGoingBack","deleteProfile","cancel","text","deleteProfileError","DeletionDialogWithIntl","main","colors","background","Wrapper","loaded","clHistory","push","ScreenReaderOnly","tagName","invisibleTitleUserSettings"],"mappings":"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","file":"87.5582e860fd6de445a0b7.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { adopt } from 'react-adopt';\nimport { isEqual, isEmpty } from 'lodash-es';\nimport streams from 'utils/streams';\n\n// services\nimport { updateUser, mapUserToDiff } from 'services/users';\nimport GetLockedFields, {\n  GetLockedFieldsChildProps,\n} from 'resources/GetLockedFields';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\n\n// utils\nimport { Formik } from 'formik';\n\n// components\nimport Error from 'components/UI/Error';\nimport PasswordInput, {\n  hasPasswordMinimumLength,\n} from 'components/UI/PasswordInput';\nimport PasswordInputIconTooltip from 'components/UI/PasswordInput/PasswordInputIconTooltip';\nimport ImagesDropzone from 'components/UI/ImagesDropzone';\nimport { convertUrlToUploadFile } from 'utils/fileTools';\nimport { SectionField } from 'components/admin/Section';\nimport {\n  FormSection,\n  FormLabel,\n  FormSectionTitle,\n} from 'components/UI/FormComponents';\n\nimport { Input, Select, IconTooltip } from 'cl2-component-library';\nimport QuillEditor from 'components/UI/QuillEditor';\n\n// i18n\nimport { appLocalePairs, API_PATH } from 'containers/App/constants';\nimport messages from './messages';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport localize, { InjectedLocalized } from 'utils/localize';\n\n// styling\nimport SubmitWrapper from 'components/admin/SubmitWrapper';\nimport styled from 'styled-components';\n\n// typings\nimport { IOption, UploadFile, CLErrorsJSON } from 'typings';\nimport { isCLErrorJSON } from 'utils/errorUtils';\n\nimport Outlet from 'components/Outlet';\nimport GetFeatureFlag, {\n  GetFeatureFlagChildProps,\n} from 'resources/GetFeatureFlag';\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst StyledIconTooltip = styled(IconTooltip)`\n  margin-left: 5px;\n`;\n\nconst LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledFormLabel = styled(FormLabel)`\n  width: max-content;\n  margin-right: 5px;\n`;\n\nconst StyledPasswordInputIconTooltip = styled(PasswordInputIconTooltip)`\n  margin-bottom: 4px;\n`;\n\n// Types\ninterface InputProps {}\n\ninterface DataProps {\n  authUser: GetAuthUserChildProps;\n  tenant: GetAppConfigurationChildProps;\n  lockedFields: GetLockedFieldsChildProps;\n  disableBio: GetFeatureFlagChildProps;\n}\n\nexport type ExtraFormDataKey = 'custom_field_values';\n\nexport interface ExtraFormDataConfiguration {\n  formData?: Record<string, any>;\n  submit?: () => void;\n}\n\ninterface State {\n  avatar: UploadFile[] | null;\n  extraFormData: {\n    [field in ExtraFormDataKey]?: ExtraFormDataConfiguration;\n  };\n  hasPasswordMinimumLengthError: boolean;\n}\n\ntype Props = InputProps & DataProps & InjectedIntlProps & InjectedLocalized;\n\nclass ProfileForm extends PureComponent<Props, State> {\n  localeOptions: IOption[] = [];\n\n  constructor(props: InputProps) {\n    super(props as any);\n    this.state = {\n      avatar: null,\n      extraFormData: {},\n      hasPasswordMinimumLengthError: false,\n    };\n  }\n\n  componentDidMount() {\n    // Create options arrays only once, avoid re-calculating them on each render\n    this.setLocaleOptions();\n\n    this.transformAPIAvatar();\n  }\n\n  setLocaleOptions = () => {\n    this.localeOptions = this.props.tenantLocales.map((locale) => ({\n      value: locale,\n      label: appLocalePairs[locale],\n    }));\n  };\n\n  transformAPIAvatar = () => {\n    const { authUser } = this.props;\n    if (isNilOrError(authUser)) return;\n    const avatarUrl =\n      authUser.attributes.avatar && authUser.attributes.avatar.medium;\n    if (avatarUrl) {\n      convertUrlToUploadFile(avatarUrl, null, null).then((fileAvatar) => {\n        this.setState({ avatar: fileAvatar ? [fileAvatar] : null });\n      });\n    }\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const { tenantLocales, authUser } = this.props;\n\n    // update locale options if tenant locales would change\n    if (!isEqual(tenantLocales, prevProps.tenantLocales)) {\n      this.setLocaleOptions();\n    }\n\n    if (\n      authUser?.attributes.avatar?.medium !==\n      prevProps.authUser?.attributes.avatar?.medium\n    ) {\n      this.transformAPIAvatar();\n    }\n  }\n\n  handleFormikSubmit = async (values, formikActions) => {\n    const { setSubmitting, resetForm, setErrors, setStatus } = formikActions;\n    const { authUser } = this.props;\n\n    if (isNilOrError(authUser)) return;\n\n    const newValues = Object.entries(this.state.extraFormData).reduce(\n      (acc, [key, extraFormDataConfiguration]) => ({\n        ...acc,\n        [key]: extraFormDataConfiguration?.formData,\n      }),\n      values\n    );\n\n    setStatus('');\n\n    try {\n      await updateUser(authUser.id, newValues);\n      streams.fetchAllWith({\n        apiEndpoint: [`${API_PATH}/onboarding_campaigns/current`],\n      });\n      resetForm();\n      setStatus('success');\n    } catch (errorResponse) {\n      if (isCLErrorJSON(errorResponse)) {\n        const apiErrors = (errorResponse as CLErrorsJSON).json.errors;\n        setErrors(apiErrors);\n      } else {\n        setStatus('error');\n      }\n      setSubmitting(false);\n    }\n  };\n\n  formikRender = (props) => {\n    const {\n      values,\n      errors,\n      setFieldValue,\n      setFieldTouched,\n      setStatus,\n      isSubmitting,\n      submitForm,\n      isValid,\n      status,\n      touched,\n    } = props;\n    const { lockedFields, authUser, disableBio } = this.props;\n    const { hasPasswordMinimumLengthError } = this.state;\n\n    // Won't be called with a nil or error user.\n    if (isNilOrError(authUser)) return null;\n\n    const lockedFieldsNames = isNilOrError(lockedFields)\n      ? []\n      : lockedFields.map((field) => field.attributes.name);\n\n    const { formatMessage } = this.props.intl;\n\n    const isExtraFormDataTouched = () =>\n      Object.values(this.state.extraFormData).some(\n        (value) => !isEmpty(value) && Object.keys(value ?? {}).length > 1\n      );\n\n    const getStatus = () => {\n      let returnValue: 'enabled' | 'disabled' | 'error' | 'success' = 'enabled';\n\n      if (isSubmitting) {\n        returnValue = 'disabled';\n      } else if (\n        (!isEmpty(touched) && !isValid && !isExtraFormDataTouched()) ||\n        status === 'error'\n      ) {\n        returnValue = 'error';\n      } else if (isEmpty(touched) && status === 'success') {\n        returnValue = 'success';\n      }\n\n      return returnValue;\n    };\n\n    const handleFormOnChange = () => setStatus('enabled');\n\n    const handleFormOnSubmit = ({\n      key,\n      formData,\n    }: {\n      key: ExtraFormDataKey;\n      formData: Record<string, any>;\n    }) => {\n      this.setState(\n        ({ extraFormData }) => ({\n          extraFormData: {\n            ...extraFormData,\n            [key]: { ...(extraFormData?.[key] ?? {}), formData },\n          },\n        }),\n        () => submitForm()\n      );\n    };\n\n    const handleOnSubmit = () => {\n      const { extraFormData } = this.state;\n      Object.values(extraFormData).forEach((configuration) =>\n        configuration?.submit?.()\n      );\n      submitForm();\n    };\n\n    const handleOutletData = ({\n      key,\n      data,\n    }: {\n      key: ExtraFormDataKey;\n      data: ExtraFormDataConfiguration;\n    }) => {\n      this.setState(({ extraFormData }) => ({\n        extraFormData: { ...extraFormData, [key]: data },\n      }));\n    };\n\n    const createChangeHandler = (fieldName: string) => (value) => {\n      if (fieldName.endsWith('_multiloc')) {\n        setFieldValue(fieldName, { [this.props.locale]: value });\n      } else if (value && value.value) {\n        setFieldValue(fieldName, value.value);\n      } else {\n        setFieldValue(fieldName, value);\n      }\n    };\n\n    const handlePasswordOnChange = (password: string) => {\n      const { tenant } = this.props;\n\n      this.setState({\n        hasPasswordMinimumLengthError: hasPasswordMinimumLength(\n          password,\n          !isNilOrError(tenant)\n            ? tenant.attributes.settings.password_login?.minimum_length\n            : undefined\n        ),\n      });\n      setFieldValue('password', password);\n    };\n\n    const createBlurHandler = (fieldName: string) => () => {\n      setFieldTouched(fieldName);\n    };\n\n    const handleAvatarOnAdd = (newAvatar: UploadFile[]) => {\n      this.setState(() => ({ avatar: [newAvatar[0]] }));\n      setFieldValue('avatar', newAvatar[0].base64);\n      setFieldTouched('avatar');\n    };\n\n    const handleAvatarOnRemove = async () => {\n      this.setState(() => ({ avatar: null }));\n      setFieldValue('avatar', null);\n      setFieldTouched('avatar');\n    };\n\n    return (\n      <FormSection>\n        <form className=\"e2e-profile-edit-form\">\n          <FormSectionTitle\n            message={messages.h1}\n            subtitleMessage={messages.h1sub}\n          />\n\n          <SectionField>\n            <ImagesDropzone\n              id=\"profile-form-avatar-dropzone\"\n              images={this.state.avatar}\n              imagePreviewRatio={1}\n              maxImagePreviewWidth=\"170px\"\n              acceptedFileTypes=\"image/jpg, image/jpeg, image/png, image/gif\"\n              onAdd={handleAvatarOnAdd}\n              onRemove={handleAvatarOnRemove}\n              label={formatMessage(messages.imageDropzonePlaceholder)}\n              removeIconAriaTitle={formatMessage(\n                messages.a11y_imageDropzoneRemoveIconAriaTitle\n              )}\n              borderRadius=\"50%\"\n            />\n            <Error apiErrors={errors.avatar} />\n          </SectionField>\n\n          <SectionField>\n            <FormLabel htmlFor=\"firstName\" labelMessage={messages.firstNames} />\n            <InputContainer>\n              <Input\n                type=\"text\"\n                name=\"first_name\"\n                id=\"firstName\"\n                value={values.first_name}\n                onChange={createChangeHandler('first_name')}\n                onBlur={createBlurHandler('first_name')}\n                disabled={lockedFieldsNames.includes('first_name')}\n              />\n              {lockedFieldsNames.includes('first_name') && (\n                <StyledIconTooltip\n                  content={<FormattedMessage {...messages.blockedVerified} />}\n                  icon=\"lock\"\n                />\n              )}\n            </InputContainer>\n            <Error apiErrors={errors.first_name} />\n          </SectionField>\n\n          <SectionField>\n            <FormLabel htmlFor=\"lastName\" labelMessage={messages.lastName} />\n            <InputContainer id=\"e2e-last-name-input\">\n              <Input\n                type=\"text\"\n                name=\"last_name\"\n                id=\"lastName\"\n                value={values.last_name}\n                onChange={createChangeHandler('last_name')}\n                onBlur={createBlurHandler('last_name')}\n                disabled={lockedFieldsNames.includes('last_name')}\n              />\n              {lockedFieldsNames.includes('last_name') && (\n                <StyledIconTooltip\n                  content={<FormattedMessage {...messages.blockedVerified} />}\n                  icon=\"lock\"\n                />\n              )}\n            </InputContainer>\n            <Error apiErrors={errors.last_name} />\n          </SectionField>\n\n          <SectionField>\n            <FormLabel htmlFor=\"email\" labelMessage={messages.email} />\n            <InputContainer>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                value={values.email}\n                onChange={createChangeHandler('email')}\n                onBlur={createBlurHandler('email')}\n                disabled={lockedFieldsNames.includes('email')}\n              />\n              {lockedFieldsNames.includes('email') && (\n                <StyledIconTooltip\n                  content={<FormattedMessage {...messages.blockedVerified} />}\n                  icon=\"lock\"\n                  className=\"e2e-last-name-lock\"\n                />\n              )}\n            </InputContainer>\n            <Error apiErrors={errors.email} />\n          </SectionField>\n\n          {!disableBio && (\n            <SectionField>\n              <FormLabel labelMessage={messages.bio} id=\"label-bio\" />\n              <QuillEditor\n                id=\"bio_multiloc\"\n                noImages={true}\n                noVideos={true}\n                limitedTextFormatting={true}\n                value={\n                  values.bio_multiloc\n                    ? this.props.localize(values.bio_multiloc)\n                    : ''\n                }\n                placeholder={formatMessage({ ...messages.bio_placeholder })}\n                onChange={createChangeHandler('bio_multiloc')}\n                onBlur={createBlurHandler('bio_multiloc')}\n              />\n              <Error apiErrors={errors.bio_multiloc} />\n            </SectionField>\n          )}\n\n          <SectionField>\n            <LabelContainer>\n              <StyledFormLabel\n                labelMessage={messages.password}\n                htmlFor=\"profile-password-input\"\n              />\n              <StyledPasswordInputIconTooltip />\n            </LabelContainer>\n            <PasswordInput\n              id=\"password\"\n              password={values.password}\n              onChange={handlePasswordOnChange}\n              onBlur={createBlurHandler('password')}\n              errors={{ minimumLengthError: hasPasswordMinimumLengthError }}\n            />\n          </SectionField>\n\n          <SectionField>\n            <FormLabel htmlFor=\"language\" labelMessage={messages.language} />\n            <Select\n              id=\"language\"\n              onChange={createChangeHandler('locale')}\n              onBlur={createBlurHandler('locale')}\n              value={values.locale}\n              options={this.localeOptions}\n            />\n            <Error apiErrors={errors.locale} />\n          </SectionField>\n        </form>\n\n        <Outlet\n          id=\"app.containers.UserEditPage.ProfileForm.forms\"\n          authUser={authUser}\n          onChange={handleFormOnChange}\n          onSubmit={handleFormOnSubmit}\n          onData={handleOutletData}\n        />\n\n        <SubmitWrapper\n          status={getStatus()}\n          buttonStyle=\"primary\"\n          loading={isSubmitting}\n          onClick={handleOnSubmit}\n          messages={{\n            buttonSave: messages.submit,\n            buttonSuccess: messages.buttonSuccessLabel,\n            messageSuccess: messages.messageSuccess,\n            messageError: messages.messageError,\n          }}\n        />\n      </FormSection>\n    );\n  };\n\n  render() {\n    const { authUser } = this.props;\n\n    if (!isNilOrError(authUser)) {\n      return (\n        <Formik\n          initialValues={mapUserToDiff(authUser)}\n          onSubmit={this.handleFormikSubmit}\n          render={this.formikRender as any}\n        />\n      );\n    }\n\n    return null;\n  }\n}\n\nconst ProfileFormWithHocs = injectIntl<InputProps>(localize(ProfileForm));\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  tenant: <GetAppConfiguration />,\n  lockedFields: <GetLockedFields />,\n  disableBio: <GetFeatureFlag name=\"disable_user_bios\" />,\n});\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <ProfileFormWithHocs {...inputProps} {...dataProps} />}\n  </Data>\n);\n","import React from 'react';\nimport tracks from './tracks';\nimport { isNilOrError } from 'utils/helperUtils';\nimport ConsentForm from 'components/ConsentForm';\nimport GetCampaignConsents from 'resources/GetCampaignConsents';\n\nexport default () => (\n  <GetCampaignConsents>\n    {(consents) =>\n      !isNilOrError(consents) ? (\n        <ConsentForm\n          trackEventName={\n            tracks.clickChangeEmailNotificationProfileSettings.name\n          }\n          consents={consents}\n        />\n      ) : null\n    }\n  </GetCampaignConsents>\n);\n","export default {\n  clickChangeEmailNotificationProfileSettings: {\n    name: 'Default email notification settings changed',\n  },\n};\n","import React from 'react';\nimport { Subscription } from 'rxjs';\nimport { ILockedField, lockedFieldsStream } from 'services/auth';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {}\n\ntype children = (renderProps: GetLockedFieldsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  lockedFields: ILockedField[] | undefined | null | Error;\n}\n\nexport type GetLockedFieldsChildProps =\n  | ILockedField[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetLockedFields extends React.Component<Props, State> {\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      lockedFields: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.subscriptions = [\n      lockedFieldsStream().observable.subscribe((lockedFields) =>\n        this.setState({\n          lockedFields: !isNilOrError(lockedFields)\n            ? lockedFields.data\n            : lockedFields,\n        })\n      ),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { lockedFields } = this.state;\n    return (children as children)(lockedFields);\n  }\n}\n","// libraries\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\n// i18n\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\nimport useAppConfigurationLocales from 'hooks/useAppConfigurationLocales';\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport useAuthUser from 'hooks/useAuthUser';\n\n// services\nimport { IUserData } from 'services/users';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\nimport { getLocalized } from 'utils/i18n';\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\ninterface Props {\n  user: IUserData;\n}\n\nconst UsersEditPageMeta = React.memo<Props & InjectedIntlProps>(\n  ({ intl, user }) => {\n    const locale = useLocale();\n    const tenantLocales = useAppConfigurationLocales();\n    const authUser = useAuthUser();\n    const tenant = useAppConfiguration();\n\n    if (\n      !isNilOrError(tenantLocales) &&\n      !isNilOrError(locale) &&\n      !isNilOrError(tenant) &&\n      !isNilOrError(authUser)\n    ) {\n      const { formatMessage } = intl;\n      const { location } = window;\n      const firstName = user.attributes.first_name;\n      const lastName = user.attributes.last_name;\n      const organizationNameMultiLoc =\n        tenant.data.attributes.settings.core.organization_name;\n      const tenantName = getLocalized(\n        organizationNameMultiLoc,\n        locale,\n        tenantLocales\n      );\n\n      const usersEditPageIndexTitle = formatMessage(messages.metaTitle, {\n        firstName,\n        lastName,\n      });\n      const usersEditPageDescription = formatMessage(messages.metaDescription, {\n        firstName,\n        lastName,\n        tenantName,\n      });\n\n      return (\n        <Helmet>\n          <title>\n            {`\n            ${\n              authUser && authUser.attributes.unread_notifications\n                ? `(${authUser.attributes.unread_notifications}) `\n                : ''\n            }\n            ${usersEditPageIndexTitle}`}\n          </title>\n          {getCanonicalLink()}\n          {getAlternateLinks(tenantLocales)}\n          <meta name=\"title\" content={usersEditPageIndexTitle} />\n          <meta name=\"description\" content={usersEditPageDescription} />\n          <meta property=\"og:title\" content={usersEditPageIndexTitle} />\n          <meta property=\"og:description\" content={usersEditPageDescription} />\n          <meta property=\"og:url\" content={location.href} />\n        </Helmet>\n      );\n    }\n\n    return null;\n  }\n);\n\nconst UsersEditPageMetaWithHoc = injectIntl<Props>(UsersEditPageMeta);\n\nexport default UsersEditPageMetaWithHoc;\n","import React, { memo } from 'react';\n// tslint:disable-next-line:no-vanilla-formatted-messages\nimport {\n  Messages,\n  FormattedMessage as OriginalFormattedMessage,\n  InjectedIntlProps,\n  MessageValue,\n} from 'react-intl';\nimport FormattedMessage from 'utils/cl-intl/FormattedMessage';\nimport styled from 'styled-components';\nimport { injectIntl } from 'utils/cl-intl';\n\nconst Anchor = styled.a``;\n\ntype Props = {\n  // root message that contains a mutilingual anchor link\n  mainMessage: Messages['key'];\n  mainMessageLinkKey?: string; // key to be replaced by link, defaults to 'link'\n  // the rest of the values for the keys present in the message\n  mainMessageValues?: OriginalFormattedMessage.Props['values'];\n\n  // message representing the url\n  urlMessage: Messages['key'];\n  urlMessageValues?: { [key: string]: MessageValue };\n\n  // message representing the text inside the link, clickable part.\n  linkTextMessage: Messages['key'];\n  linkTextMessageValues?: OriginalFormattedMessage.Props['values'];\n\n  // handy anchor Props\n  target?: string;\n};\n\nconst FormattedAnchor = memo(\n  ({\n    mainMessage,\n    mainMessageLinkKey,\n    mainMessageValues,\n    urlMessage,\n    urlMessageValues,\n    linkTextMessage,\n    linkTextMessageValues,\n    intl: { formatMessage },\n    target,\n  }: Props & InjectedIntlProps) => {\n    const allValues = mainMessageValues ? { ...mainMessageValues } : {};\n    allValues[mainMessageLinkKey || 'link'] = (\n      <Anchor\n        href={formatMessage(urlMessage, urlMessageValues)}\n        target={target}\n      >\n        <FormattedMessage {...linkTextMessage} values={linkTextMessageValues} />\n      </Anchor>\n    );\n    return <FormattedMessage {...mainMessage} values={allValues} />;\n  }\n);\n\nexport default injectIntl(FormattedAnchor);\n","import React from 'react';\nimport { Subscription, of } from 'rxjs';\nimport {\n  IConsentData,\n  consentsStream,\n  IConsents,\n} from 'services/campaignConsents';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { authUserStream } from 'services/auth';\nimport { switchMap } from 'rxjs/operators';\n\ninterface InputProps {}\n\ntype children = (\n  renderProps: GetCampaignConsentsChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  consents: IConsentData[] | undefined | null | Error;\n}\n\nexport type GetCampaignConsentsChildProps =\n  | IConsentData[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetConsents extends React.Component<Props, State> {\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      consents: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.subscriptions = [\n      authUserStream()\n        .observable.pipe(\n          switchMap((user) => {\n            if (!isNilOrError(user)) {\n              return consentsStream().observable;\n            } else {\n              return of(null);\n            }\n          })\n        )\n        .subscribe((consents: IConsents) => {\n          this.setState({\n            consents: !isNilOrError(consents) ? consents.data : consents,\n          });\n        }),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { consents } = this.state;\n    return (children as children)(consents);\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Styles\nimport styled from 'styled-components';\n\n// components\nimport { FormSection, FormSectionTitle } from 'components/UI/FormComponents';\nimport Button from 'components/UI/Button';\n\n// intl\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// utils\nimport LoadableModal from 'components/Loadable/Modal';\nimport DeletionDialog from './DeletionDialog';\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  > :not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\ninterface Props {}\n\ninterface State {\n  dialogOpened: boolean;\n}\n\nclass ProfileDeletion extends PureComponent<Props & InjectedIntlProps, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogOpened: false,\n    };\n  }\n\n  onCloseDialog = () => {\n    this.setState({ dialogOpened: false });\n  };\n\n  openDialog = () => {\n    this.setState({ dialogOpened: true });\n  };\n\n  render() {\n    const { dialogOpened } = this.state;\n\n    return (\n      <>\n        <FormSection>\n          <FormSectionTitle\n            message={messages.deletionSection}\n            subtitleMessage={messages.deletionSubtitle}\n          />\n          <Row>\n            <Button\n              buttonStyle=\"delete\"\n              id=\"deletion\"\n              onClick={this.openDialog}\n              width=\"auto\"\n              justifyWrapper=\"left\"\n              className=\"e2e-delete-profile\"\n            >\n              <FormattedMessage {...messages.deleteMyAccount} />\n            </Button>\n          </Row>\n        </FormSection>\n        <LoadableModal opened={dialogOpened} close={this.onCloseDialog}>\n          <DeletionDialog closeDialog={this.onCloseDialog} />\n        </LoadableModal>\n      </>\n    );\n  }\n}\n\nexport default injectIntl(ProfileDeletion);\n","import React, { useEffect, useState } from 'react';\nimport { getJwt } from 'utils/auth/jwt';\nimport Fragment from 'components/Fragment';\n\nexport default () => {\n  const [jwt, setJwt] = useState<string | null>(null);\n\n  useEffect(() => {\n    setJwt(getJwt() || null);\n  }, []);\n\n  return (\n    <Fragment\n      name=\"profile-settings-section\"\n      queryParameters={jwt ? { jwt } : undefined}\n    />\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { InjectedIntlProps } from 'react-intl';\nimport { injectIntl, FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport { adopt } from 'react-adopt';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport styled from 'styled-components';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { get } from 'lodash-es';\nimport { fontSizes } from 'utils/styleUtils';\nimport Button from 'components/UI/Button';\nimport Error from 'components/UI/Error';\nimport FormattedAnchor from 'components/FormattedAnchor';\nimport Link from 'utils/cl-router/Link';\nimport { signOutAndDeleteAccountPart1 } from 'services/auth';\n\nconst Container = styled.div`\n  padding: 0px 10px;\n  line-height: 25px;\n  font-size: ${fontSizes.base}px;\n`;\n\nconst Logo = styled.img`\n  max-width: 100%;\n  max-height: 44px;\n  margin: 0;\n  padding: 0px;\n  cursor: pointer;\n`;\n\nconst Styledh1 = styled.h1`\n  font-size: ${fontSizes.xxl}px;\n  font-weight: 500;\n  margin-top: 20px;\n  margin-bottom: 0;\n  line-height: 33px;\n`;\n\nconst Styledh2 = styled.h2`\n  font-size: ${fontSizes.large}px;\n  font-weight: 500;\n  line-height: 24px;\n`;\n\nconst ButtonsContainer = styled.div`\n  margin-top: 50px;\n  margin-bottom: 20px;\n  display: flex;\n`;\n\ninterface InputProps {\n  closeDialog: () => void;\n}\n\ninterface DataProps {\n  tenant: GetAppConfigurationChildProps;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  error: boolean;\n  processing: boolean;\n}\n\nclass DeletionDialog extends PureComponent<Props & InjectedIntlProps, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      processing: false,\n    };\n  }\n\n  deleteProfile = () => {\n    signOutAndDeleteAccountPart1();\n    this.props.closeDialog();\n  };\n\n  render() {\n    const {\n      tenant,\n      intl: { formatMessage },\n    } = this.props;\n    const { processing, error } = this.state;\n    const tenantLogo = !isNilOrError(tenant)\n      ? get(\n          tenant.attributes.logo,\n          'medium',\n          get(tenant.attributes.logo, 'small')\n        )\n      : null;\n\n    return (\n      <Container>\n        {tenantLogo && (\n          <Logo src={tenantLogo} alt={formatMessage(messages.logoAltText)} />\n        )}\n        <Styledh1>\n          <FormattedMessage {...messages.deleteYourAccount} />\n        </Styledh1>\n        <p>\n          <FormattedMessage {...messages.deleteAccountSubtext} />\n        </p>\n        <Styledh2>\n          <FormattedMessage {...messages.reasonsToStayListTitle} />\n        </Styledh2>\n        <ul>\n          <li>\n            <FormattedMessage {...messages.tooManyEmails} />\n          </li>\n          <li>\n            <FormattedMessage\n              {...messages.privacyReasons}\n              values={{\n                conditionsLink: (\n                  <Link to=\"/pages/cookie-policy\" target=\"_blank\">\n                    <FormattedMessage {...messages.conditionsLinkText} />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedAnchor\n              mainMessage={messages.contactUs}\n              mainMessageLinkKey=\"feedbackLink\"\n              urlMessage={messages.feedbackLinkUrl}\n              urlMessageValues={{ url: location.href }}\n              linkTextMessage={messages.feedbackLinkText}\n              target=\"_blank\"\n            />\n          </li>\n          <li>\n            <FormattedMessage {...messages.noGoingBack} />\n          </li>\n        </ul>\n        <ButtonsContainer>\n          <Button\n            buttonStyle=\"delete\"\n            id=\"deletion\"\n            onClick={this.deleteProfile}\n            width=\"auto\"\n            justifyWrapper=\"left\"\n            processing={processing}\n            className=\"e2e-delete-profile-confirm\"\n          >\n            <FormattedMessage {...messages.deleteMyAccount} />\n          </Button>\n          <Button\n            buttonStyle=\"text\"\n            onClick={this.props.closeDialog}\n            width=\"auto\"\n            justifyWrapper=\"left\"\n            processing={processing}\n          >\n            <FormattedMessage {...messages.cancel} />\n          </Button>\n        </ButtonsContainer>\n        {error && (\n          <Error text={<FormattedMessage {...messages.deleteProfileError} />} />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst DeletionDialogWithIntl = injectIntl(DeletionDialog);\n\nconst Data = adopt<DataProps, InputProps>({\n  tenant: <GetAppConfiguration />,\n  authUser: <GetAuthUser />,\n});\n\nconst WrappedDeletionDialog = (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => <DeletionDialogWithIntl {...inputProps} {...dataProps} />}\n  </Data>\n);\n\nexport default WrappedDeletionDialog;\n","// Libraries\nimport React from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// router\nimport clHistory from 'utils/cl-router/history';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// Components\nimport ProfileForm from './ProfileForm';\nimport CampaignsConsentForm from './CampaignsConsentForm';\nimport ProfileDeletion from './ProfileDeletion';\nimport UsersEditPageMeta from './UsersEditPageMeta';\nimport FragmentForm from './FragmentForm';\n\n// Styles\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\nimport { ScreenReaderOnly } from 'utils/a11y';\n\n// Hooks\nimport useAppConfiguration from 'hooks/useAppConfiguration';\nimport useAuthUser from 'hooks/useAuthUser';\nimport Outlet from 'components/Outlet';\n\nconst Container = styled.main`\n  width: 100%;\n  background-color: ${colors.background};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 30px;\n  padding-bottom: 50px;\n  overflow-x: hidden;\n`;\n\n// To have two forms with an equal width,\n// the forms need to be wrapped with a div.\n// https://stackoverflow.com/questions/34993826/flexbox-column-direction-same-width\nconst Wrapper = styled.div``;\n\nexport default () => {\n  const tenant = useAppConfiguration();\n  const authUser = useAuthUser();\n  const loaded = tenant !== undefined && authUser !== undefined;\n\n  if (loaded && !authUser) {\n    clHistory.push('/sign-in');\n  }\n\n  if (loaded && !isNilOrError(tenant) && !isNilOrError(authUser)) {\n    return (\n      <Container id=\"e2e-user-edit-profile-page\">\n        <UsersEditPageMeta user={authUser} />\n        <ScreenReaderOnly>\n          <FormattedMessage\n            tagName=\"h1\"\n            {...messages.invisibleTitleUserSettings}\n          />\n        </ScreenReaderOnly>\n        <Wrapper>\n          <Outlet id=\"app.containers.UserEditPage.content\" />\n          <ProfileForm />\n          <FragmentForm />\n          <ProfileDeletion />\n          <CampaignsConsentForm />\n        </Wrapper>\n      </Container>\n    );\n  }\n\n  return null;\n};\n"],"sourceRoot":""}