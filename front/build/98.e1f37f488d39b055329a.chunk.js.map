{"version":3,"sources":["webpack:///./app/containers/IdeasEditPage/index.tsx","webpack:///./app/containers/IdeasEditPage/IdeasEditMeta.tsx","webpack:///./app/resources/GetResourceFileObjects.tsx","webpack:///./app/containers/IdeasEditPage/IdeasEditButtonBar.tsx","webpack:///./app/components/ButtonBar/index.tsx","webpack:///./app/resources/GetTopics.tsx","webpack:///./app/containers/IdeasEditPage/messages.ts","webpack:///./app/containers/IdeasEditPage/tracks.ts"],"names":["Container","styled","div","colors","background","FormContainer","main","media","smallerThanMaxTablet","Title","h1","label","fontSizes","xxxxl","ButtonBarContainer","IdeaEditPage","props","eventEmitter","emit","ideaFormOutput","ideaId","params","project","authUser","appConfiguration","state","locale","titleMultiloc","descriptionMultiloc","ideaSlug","imageId","imageFile","title","description","selectedTopics","budget","proposedBudget","ideaFiles","ideaFilesToRemove","address","oldImageId","oldImage","length","oldImageBase64","base64","newImage","newImageBase64","imageToAddPromise","addIdeaImage","Promise","resolve","filesToAddPromises","filter","file","remote","map","addIdeaFile","name","filesToRemovePromises","id","deleteIdeaFile","finalAuthorId","authorId","addressDiff","location_point_geojson","location_description","geocode","updateIdeaPromise","updateIdea","proposed_budget","title_multiloc","body_multiloc","topic_ids","author_id","setState","submitError","processing","deleteIdeaImage","all","clHistory","push","apiErrors","json","errors","profanityApiError","base","find","apiError","error","titleProfanityError","blocked_words","some","blockedWord","attribute","descriptionProfanityError","trackEventByName","tracks","projectId","isNilOrError","profaneMessage","location","userId","host","attributes","image","fileOrImageError","loaded","subscriptions","this","locale$","localeStream","observable","currentTenantLocales$","currentAppConfigurationStream","pipe","currentTenant","data","settings","core","locales","idea$","ideaByIdStream","ideaWithRelationships$","combineLatest","switchMap","idea","ideaImages","relationships","idea_images","ideaImageId","ideaImage$","ideaImageStream","first","ideaImage","versions","large","url","convertUrlToUploadFileObservable","of","granted$","hasPermission","item","action","context","subscribe","topics","topic","slug","author","forEach","subscription","unsubscribe","remoteIdeaFiles","phases","inputTerm","getInputTerm","process_type","FormattedMessage","getInputTermMessage","messages","formTitle","option","optionFormTitle","projectFormTitle","question","questionFormTitle","issue","issueFormTitle","contribution","contributionFormTitle","onSubmit","handleIdeaFormOutput","hasTitleProfanityError","hasDescriptionProfanityError","onTitleChange","onDescriptionChange","elementId","form","PureComponent","Data","adopt","render","resourceId","resourceType","IdeaEditPageWithHOCs","inputProps","dataProps","IdeasNewMeta","memo","formatMessage","intl","tenantLocales","localize","postTitle","projectName","ideasIndexTitle","ideasEditMetaTitle","ideasIndexDescription","ideasEditMetaDescription","Helmet","unread_notifications","content","property","injectIntl","GetResourceFileObjects","files","undefined","resetOnChange","inputProps$","BehaviorSubject","distinctUntilChanged","prev","next","tap","isString","streamFn","projectFilesStream","phaseFilesStream","eventFilesStream","pageFilesStream","ideaFilesStream","initiativeFilesStream","children","React","Component","ButtonBarInner","submitErrorMessage","submitApiError","fileUploadError","className","text","editedPostSave","onClick","marginTop","showBackground","showIcon","ButtonBar","classNames","timeout","GetTopics","topicIds","code","exclude_code","sort","isEqual","queryParameters","projectTopicsStream","topicId","topicByIdStream","topicsStream","defineMessages","defaultMessage","save"],"mappings":"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","file":"98.e1f37f488d39b055329a.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\nimport { Subscription, combineLatest, of } from 'rxjs';\nimport { switchMap, map, first } from 'rxjs/operators';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// router\nimport clHistory from 'utils/cl-router/history';\n\n// components\nimport IdeaForm, { IIdeaFormOutput } from 'components/IdeaForm';\nimport IdeasEditButtonBar from './IdeasEditButtonBar';\nimport IdeasEditMeta from './IdeasEditMeta';\n\n// services\nimport { localeStream } from 'services/locale';\nimport { currentAppConfigurationStream } from 'services/appConfiguration';\nimport { ideaByIdStream, IIdeaData, updateIdea } from 'services/ideas';\nimport {\n  ideaImageStream,\n  addIdeaImage,\n  deleteIdeaImage,\n} from 'services/ideaImages';\nimport { hasPermission } from 'services/permissions';\nimport { addIdeaFile, deleteIdeaFile } from 'services/ideaFiles';\nimport { getInputTerm } from 'services/participationContexts';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\nimport injectLocalize, { InjectedLocalized } from 'utils/localize';\nimport { getInputTermMessage } from 'utils/i18n';\n\n// utils\nimport eventEmitter from 'utils/eventEmitter';\nimport { convertUrlToUploadFileObservable } from 'utils/fileTools';\nimport { geocode } from 'utils/locationTools';\n\n// typings\nimport { UploadFile, Multiloc, Locale } from 'typings';\n\n// style\nimport { media, fontSizes, colors } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\n// resource components\nimport GetResourceFileObjects, {\n  GetResourceFileObjectsChildProps,\n} from 'resources/GetResourceFileObjects';\nimport GetProject, { GetProjectChildProps } from 'resources/GetProject';\nimport GetIdea, { GetIdeaChildProps } from 'resources/GetIdea';\nimport GetPhases, { GetPhasesChildProps } from 'resources/GetPhases';\nimport GetAuthUser, { GetAuthUserChildProps } from 'resources/GetAuthUser';\nimport GetAppConfiguration, {\n  GetAppConfigurationChildProps,\n} from 'resources/GetAppConfiguration';\n\n// tracks\nimport tracks from './tracks';\nimport { trackEventByName } from 'utils/analytics';\n\nconst Container = styled.div`\n  background: ${colors.background};\n`;\n\nconst FormContainer = styled.main`\n  width: 100%;\n  max-width: 700px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding-bottom: 100px;\n  padding-right: 30px;\n  padding-left: 30px;\n  margin-left: auto;\n  margin-right: auto;\n\n  ${media.smallerThanMaxTablet`\n    padding-bottom: 80px;\n  `}\n`;\n\nconst Title = styled.h1`\n  width: 100%;\n  color: ${colors.label};\n  font-size: ${fontSizes.xxxxl}px;\n  line-height: 42px;\n  font-weight: 500;\n  text-align: center;\n  padding-top: 40px;\n  margin-bottom: 40px;\n`;\n\nconst ButtonBarContainer = styled.div`\n  width: 100%;\n  height: 68px;\n  position: absolute;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: #fff;\n  border-top: solid 1px #ddd;\n`;\n\ninterface InputProps {\n  params: {\n    ideaId: string;\n  };\n}\n\ninterface DataProps {\n  remoteIdeaFiles: GetResourceFileObjectsChildProps;\n  project: GetProjectChildProps;\n  idea: GetIdeaChildProps;\n  appConfiguration: GetAppConfigurationChildProps;\n  phases: GetPhasesChildProps;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  locale: Locale;\n  ideaSlug: string | null;\n  titleMultiloc: Multiloc | null;\n  descriptionMultiloc: Multiloc | null;\n  selectedTopics: string[];\n  budget: number | null;\n  proposedBudget: number | null;\n  address: string | null;\n  imageFile: UploadFile[];\n  imageId: string | null;\n  loaded: boolean;\n  submitError: boolean;\n  titleProfanityError: boolean;\n  descriptionProfanityError: boolean;\n  fileOrImageError: boolean;\n  processing: boolean;\n  authorId: string | null;\n}\n\nclass IdeaEditPage extends PureComponent<Props & InjectedLocalized, State> {\n  subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props as any);\n    this.state = {\n      locale: 'en',\n      ideaSlug: null,\n      titleMultiloc: null,\n      descriptionMultiloc: null,\n      selectedTopics: [],\n      budget: null,\n      proposedBudget: null,\n      address: null,\n      imageFile: [],\n      imageId: null,\n      loaded: false,\n      submitError: false,\n      titleProfanityError: false,\n      descriptionProfanityError: false,\n      fileOrImageError: false,\n      processing: false,\n      authorId: null,\n    };\n    this.subscriptions = [];\n  }\n\n  componentDidMount() {\n    const { ideaId } = this.props.params;\n    const locale$ = localeStream().observable;\n    const currentTenantLocales$ = currentAppConfigurationStream().observable.pipe(\n      map(\n        (currentTenant) => currentTenant.data.attributes.settings.core.locales\n      )\n    );\n    const idea$ = ideaByIdStream(ideaId).observable;\n    const ideaWithRelationships$ = combineLatest(\n      locale$,\n      currentTenantLocales$,\n      idea$\n    ).pipe(\n      switchMap(([_locale, _currentTenantLocales, idea]) => {\n        const ideaId = idea.data.id;\n        const ideaImages = idea.data.relationships.idea_images.data;\n        const ideaImageId =\n          ideaImages && ideaImages.length > 0 ? ideaImages[0].id : null;\n        const ideaImage$ = ideaImageId\n          ? ideaImageStream(ideaId, ideaImageId).observable.pipe(\n              first(),\n              switchMap((ideaImage) => {\n                if (\n                  ideaImage &&\n                  ideaImage.data &&\n                  ideaImage.data.attributes.versions.large\n                ) {\n                  const url = ideaImage.data.attributes.versions.large;\n                  const id = ideaImage.data.id;\n                  return convertUrlToUploadFileObservable(url, id, null);\n                }\n\n                return of(null);\n              })\n            )\n          : of(null);\n\n        const granted$ = hasPermission({\n          item: idea.data,\n          action: 'edit',\n          context: idea.data,\n        });\n\n        return combineLatest(locale$, idea$, ideaImage$, granted$);\n      })\n    );\n\n    this.subscriptions = [\n      ideaWithRelationships$.subscribe(([locale, idea, ideaImage, granted]) => {\n        if (granted) {\n          this.setState({\n            locale,\n            selectedTopics:\n              idea.data.relationships.topics?.data.map((topic) => topic.id) ||\n              [],\n            loaded: true,\n            ideaSlug: idea.data.attributes.slug,\n            titleMultiloc: idea.data.attributes.title_multiloc,\n            descriptionMultiloc: idea.data.attributes.body_multiloc,\n            address: idea.data.attributes.location_description,\n            budget: idea.data.attributes.budget,\n            authorId: idea.data.relationships.author.data?.id || null,\n            proposedBudget: idea.data.attributes.proposed_budget,\n            imageFile: ideaImage ? [ideaImage] : [],\n            imageId: ideaImage && ideaImage.id ? ideaImage.id : null,\n          });\n        } else {\n          clHistory.push('/');\n        }\n      }),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  handleOnSaveButtonClick = () => {\n    eventEmitter.emit('IdeaFormSubmitEvent');\n  };\n\n  handleIdeaFormOutput = async (ideaFormOutput: IIdeaFormOutput) => {\n    const { ideaId } = this.props.params;\n    const { project, authUser, appConfiguration } = this.props;\n    const {\n      locale,\n      titleMultiloc,\n      descriptionMultiloc,\n      ideaSlug,\n      imageId,\n      imageFile,\n    } = this.state;\n    const {\n      title,\n      description,\n      selectedTopics,\n      budget,\n      proposedBudget,\n      ideaFiles,\n      ideaFilesToRemove,\n      address,\n    } = ideaFormOutput;\n    const oldImageId = imageId;\n    const oldImage = imageFile && imageFile.length > 0 ? imageFile[0] : null;\n    const oldImageBase64 = oldImage ? oldImage.base64 : null;\n    const newImage =\n      ideaFormOutput.imageFile && ideaFormOutput.imageFile.length > 0\n        ? ideaFormOutput.imageFile[0]\n        : null;\n    const newImageBase64 = newImage ? newImage.base64 : null;\n    const imageToAddPromise =\n      newImageBase64 && oldImageBase64 !== newImageBase64\n        ? addIdeaImage(ideaId, newImageBase64, 0)\n        : Promise.resolve(null);\n    const filesToAddPromises = ideaFiles\n      .filter((file) => !file.remote)\n      .map((file) => addIdeaFile(ideaId, file.base64, file.name));\n    const filesToRemovePromises = ideaFilesToRemove\n      .filter((file) => !!(file.remote && file.id))\n      .map((file) => deleteIdeaFile(ideaId, file.id as string));\n    const finalAuthorId = ideaFormOutput?.authorId || this.state.authorId;\n    const addressDiff: Partial<IIdeaData['attributes']> = {\n      location_point_geojson: null,\n      location_description: null,\n    };\n\n    if (address && address.length > 0) {\n      addressDiff.location_point_geojson = await geocode(address);\n      addressDiff.location_description = address;\n    }\n\n    const updateIdeaPromise = updateIdea(ideaId, {\n      budget,\n      proposed_budget: proposedBudget,\n      title_multiloc: {\n        ...titleMultiloc,\n        [locale]: title,\n      },\n      body_multiloc: {\n        ...descriptionMultiloc,\n        [locale]: description,\n      },\n      topic_ids: selectedTopics,\n      author_id: finalAuthorId,\n      ...addressDiff,\n    });\n\n    this.setState({ submitError: false, processing: true });\n\n    try {\n      if (oldImageId && oldImageBase64 !== newImageBase64) {\n        await deleteIdeaImage(ideaId, oldImageId);\n      }\n\n      await Promise.all([\n        updateIdeaPromise,\n        imageToAddPromise,\n        ...filesToAddPromises,\n        ...filesToRemovePromises,\n      ] as Promise<any>[]);\n\n      clHistory.push(`/ideas/${ideaSlug}`);\n    } catch (error) {\n      const apiErrors = error.json.errors;\n      const profanityApiError = apiErrors.base.find(\n        (apiError) => apiError.error === 'includes_banned_words'\n      );\n\n      if (profanityApiError) {\n        const titleProfanityError = profanityApiError.blocked_words.some(\n          (blockedWord) => blockedWord.attribute === 'title_multiloc'\n        );\n        const descriptionProfanityError = profanityApiError.blocked_words.some(\n          (blockedWord) => blockedWord.attribute === 'body_multiloc'\n        );\n\n        if (titleProfanityError) {\n          trackEventByName(tracks.titleProfanityError.name, {\n            ideaId,\n            locale,\n            projectId: !isNilOrError(project) ? project.id : null,\n            profaneMessage: title,\n            location: 'IdeasEditPage (citizen side)',\n            userId: !isNilOrError(authUser) ? authUser.id : null,\n            host: !isNilOrError(appConfiguration)\n              ? appConfiguration.attributes.host\n              : null,\n          });\n\n          this.setState({\n            titleProfanityError,\n          });\n        }\n\n        if (descriptionProfanityError) {\n          trackEventByName(tracks.descriptionProfanityError.name, {\n            ideaId,\n            locale,\n            projectId: !isNilOrError(project) ? project.id : null,\n            profaneMessage: title,\n            location: 'IdeasEditPage (citizen side)',\n          });\n\n          this.setState({\n            descriptionProfanityError,\n          });\n        }\n      }\n\n      if (apiErrors && (apiErrors.image || apiErrors.file)) {\n        this.setState({\n          fileOrImageError: true,\n        });\n      }\n\n      this.setState({ submitError: true });\n    }\n\n    this.setState({ processing: false });\n  };\n\n  onTitleChange = (title: string) => {\n    const { locale } = this.props;\n    const titleMultiloc = { ...this.state.titleMultiloc, [locale]: title };\n\n    this.setState({ titleMultiloc, titleProfanityError: false });\n  };\n\n  onDescriptionChange = (description: string) => {\n    const { locale } = this.props;\n    const descriptionMultiloc = {\n      ...this.state.descriptionMultiloc,\n      [locale]: description,\n    };\n\n    this.setState({ descriptionMultiloc, descriptionProfanityError: false });\n  };\n\n  render() {\n    if (this.state && this.state.loaded) {\n      const { remoteIdeaFiles, project, idea, phases } = this.props;\n      const {\n        locale,\n        titleMultiloc,\n        descriptionMultiloc,\n        selectedTopics,\n        address,\n        imageFile,\n        budget,\n        proposedBudget,\n        titleProfanityError,\n        descriptionProfanityError,\n        submitError,\n        fileOrImageError,\n        processing,\n        authorId,\n      } = this.state;\n\n      const title = locale && titleMultiloc ? titleMultiloc[locale] || '' : '';\n      const description =\n        locale && descriptionMultiloc\n          ? descriptionMultiloc[locale] || ''\n          : null;\n\n      if (!isNilOrError(project) && !isNilOrError(idea)) {\n        const projectId = project.id;\n        const ideaId = idea.id;\n        const inputTerm = getInputTerm(\n          project.attributes.process_type,\n          project,\n          phases\n        );\n\n        return (\n          <Container id=\"e2e-idea-edit-page\">\n            <IdeasEditMeta ideaId={ideaId} projectId={projectId} />\n            <FormContainer>\n              <Title>\n                <FormattedMessage\n                  {...getInputTermMessage(inputTerm, {\n                    idea: messages.formTitle,\n                    option: messages.optionFormTitle,\n                    project: messages.projectFormTitle,\n                    question: messages.questionFormTitle,\n                    issue: messages.issueFormTitle,\n                    contribution: messages.contributionFormTitle,\n                  })}\n                />\n              </Title>\n\n              <IdeaForm\n                authorId={authorId}\n                projectId={projectId}\n                title={title}\n                description={description}\n                selectedTopics={selectedTopics}\n                budget={budget}\n                proposedBudget={proposedBudget}\n                address={address || ''}\n                imageFile={imageFile}\n                onSubmit={this.handleIdeaFormOutput}\n                remoteIdeaFiles={\n                  !isNilOrError(remoteIdeaFiles) ? remoteIdeaFiles : null\n                }\n                hasTitleProfanityError={titleProfanityError}\n                hasDescriptionProfanityError={descriptionProfanityError}\n                onTitleChange={this.onTitleChange}\n                onDescriptionChange={this.onDescriptionChange}\n              />\n\n              <ButtonBarContainer>\n                <IdeasEditButtonBar\n                  elementId=\"e2e-idea-edit-save-button\"\n                  form=\"idea-form\"\n                  submitError={submitError}\n                  processing={processing}\n                  fileOrImageError={fileOrImageError}\n                />\n              </ButtonBarContainer>\n            </FormContainer>\n          </Container>\n        );\n      }\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  authUser: <GetAuthUser />,\n  appConfiguration: <GetAppConfiguration />,\n  remoteIdeaFiles: ({ params: { ideaId }, render }) => (\n    <GetResourceFileObjects resourceId={ideaId} resourceType=\"idea\">\n      {render}\n    </GetResourceFileObjects>\n  ),\n  idea: ({ params: { ideaId }, render }) => {\n    return <GetIdea ideaId={ideaId}>{render}</GetIdea>;\n  },\n  project: ({ idea, render }) => {\n    return (\n      <GetProject\n        projectId={\n          !isNilOrError(idea) ? idea.relationships.project.data.id : null\n        }\n      >\n        {render}\n      </GetProject>\n    );\n  },\n  phases: ({ project, render }) => {\n    return (\n      <GetPhases projectId={!isNilOrError(project) ? project.id : null}>\n        {render}\n      </GetPhases>\n    );\n  },\n});\nconst IdeaEditPageWithHOCs = injectLocalize<Props>(IdeaEditPage);\n\nexport default (inputProps: InputProps) => {\n  return (\n    <Data {...inputProps}>\n      {(dataProps) => <IdeaEditPageWithHOCs {...inputProps} {...dataProps} />}\n    </Data>\n  );\n};\n","// libraries\nimport React, { memo } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// i18n\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// hooks\nimport useAuthUser from 'hooks/useAuthUser';\nimport useAppConfigurationLocales from 'hooks/useAppConfigurationLocales';\nimport useIdea from 'hooks/useIdea';\nimport useProject from 'hooks/useProject';\nimport useLocalize from 'hooks/useLocalize';\n\n// utils\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\ninterface Props {\n  ideaId: string;\n  projectId: string;\n}\n\nconst IdeasNewMeta = memo(\n  ({\n    intl: { formatMessage },\n    ideaId,\n    projectId,\n  }: Props & InjectedIntlProps) => {\n    const tenantLocales = useAppConfigurationLocales();\n    const authUser = useAuthUser();\n    const idea = useIdea({ ideaId });\n    const project = useProject({ projectId });\n    const localize = useLocalize();\n\n    if (!isNilOrError(idea) && !isNilOrError(project)) {\n      const postTitle = localize(idea.attributes.title_multiloc);\n      const projectName = localize(project.attributes.title_multiloc);\n\n      const ideasIndexTitle = formatMessage(messages.ideasEditMetaTitle, {\n        postTitle,\n        projectName,\n      });\n      const ideasIndexDescription = formatMessage(\n        messages.ideasEditMetaDescription\n      );\n\n      return (\n        <Helmet>\n          <title>\n            {`\n            ${\n              !isNilOrError(authUser) &&\n              authUser.attributes.unread_notifications\n                ? `(${authUser.attributes.unread_notifications}) `\n                : ''\n            }\n            ${ideasIndexTitle}\n          `}\n          </title>\n          {getAlternateLinks(tenantLocales)}\n          {getCanonicalLink()}\n          <meta name=\"title\" content={ideasIndexTitle} />\n          <meta name=\"description\" content={ideasIndexDescription} />\n          <meta property=\"og:title\" content={ideasIndexTitle} />\n          <meta property=\"og:description\" content={ideasIndexDescription} />\n        </Helmet>\n      );\n    }\n\n    return null;\n  }\n);\n\nexport default injectIntl(IdeasNewMeta);\n","import React from 'react';\nimport { isString } from 'lodash-es';\nimport { isNilOrError } from 'utils/helperUtils';\nimport {\n  Subscription,\n  BehaviorSubject,\n  combineLatest,\n  of,\n  Observable,\n} from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap, filter } from 'rxjs/operators';\nimport shallowCompare from 'utils/shallowCompare';\nimport { projectFilesStream, IProjectFiles } from 'services/projectFiles';\nimport { phaseFilesStream, IPhaseFiles } from 'services/phaseFiles';\nimport { pageFilesStream, IPageFiles } from 'services/pageFiles';\nimport { eventFilesStream, IEventFiles } from 'services/eventFiles';\nimport { ideaFilesStream, IIdeaFiles } from 'services/ideaFiles';\nimport {\n  initiativeFilesStream,\n  IInitiativeFiles,\n} from 'services/initiativeFiles';\nimport { convertUrlToUploadFileObservable } from 'utils/fileTools';\nimport { UploadFile } from 'typings';\n\n// Converted file objects (to JS objects of type File).\n// Useful when you combining local files and remote files,\n// so you don't have to convert (file uploader)\n\ninterface InputProps {\n  resetOnChange?: boolean;\n  resourceType: 'project' | 'phase' | 'event' | 'page' | 'idea' | 'initiative';\n  resourceId: string | null;\n}\n\ntype Children = (\n  renderProps: GetResourceFileObjectsChildProps\n) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: Children;\n}\n\ninterface State {\n  files: UploadFile[] | undefined | null | Error;\n}\n\nexport type GetResourceFileObjectsChildProps = State['files'];\n\nexport default class GetResourceFileObjects extends React.Component<\n  Props,\n  State\n> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  public static defaultProps = {\n    resetOnChange: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      files: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({ resourceId, resourceType });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => shallowCompare(prev, next)),\n          tap(() => resetOnChange && this.setState({ files: undefined })),\n          filter(({ resourceId }) => isString(resourceId)),\n          switchMap(\n            ({\n              resourceId,\n              resourceType,\n            }: {\n              resourceId: string;\n              resourceType: InputProps['resourceType'];\n            }) => {\n              let streamFn;\n              if (resourceType === 'project') {\n                streamFn = projectFilesStream;\n              }\n              if (resourceType === 'phase') {\n                streamFn = phaseFilesStream;\n              }\n              if (resourceType === 'event') {\n                streamFn = eventFilesStream;\n              }\n              if (resourceType === 'page') {\n                streamFn = pageFilesStream;\n              }\n              if (resourceType === 'idea') {\n                streamFn = ideaFilesStream;\n              }\n              if (resourceType === 'initiative') {\n                streamFn = initiativeFilesStream;\n              }\n\n              return streamFn(resourceId).observable as Observable<\n                | IProjectFiles\n                | IPhaseFiles\n                | IEventFiles\n                | IPageFiles\n                | IIdeaFiles\n                | IInitiativeFiles\n                | null\n              >;\n            }\n          ),\n          switchMap((files) => {\n            if (files && files.data && files.data.length > 0) {\n              return combineLatest(\n                files.data.map((file) =>\n                  convertUrlToUploadFileObservable(\n                    file.attributes.file.url,\n                    file.id,\n                    file.attributes.name\n                  )\n                )\n              );\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe((files) => {\n          this.setState({\n            files: files\n              ? (files.filter((file) => !isNilOrError(file)) as UploadFile[])\n              : null,\n          });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { resourceId, resourceType, resetOnChange } = this.props;\n    this.inputProps$.next({ resourceId, resourceType, resetOnChange });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { files } = this.state;\n    return (children as Children)(files);\n  }\n}\n","import React, { memo } from 'react';\n\n// components\nimport Button from 'components/UI/Button';\nimport Error from 'components/UI/Error';\nimport ButtonBar from 'components/ButtonBar';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// utils\nimport eventEmitter from 'utils/eventEmitter';\n\n// style\nimport styled from 'styled-components';\n\nconst ButtonBarInner = styled.div`\n  width: 100%;\n  max-width: 700px;\n  display: flex;\n  align-items: center;\n  padding-right: 30px;\n  padding-left: 30px;\n\n  .Button {\n    margin-right: 10px;\n  }\n\n  .Error {\n    flex: 1;\n  }\n`;\n\ninterface Props {\n  form?: string;\n  elementId?: string;\n  submitError: boolean;\n  processing: boolean;\n  fileOrImageError: boolean;\n}\n\nconst IdeasEditButtonBar = memo(\n  ({\n    elementId,\n    form = '',\n    processing,\n    fileOrImageError,\n    submitError,\n  }: Props) => {\n    const handleOnSubmitButtonClick = () => {\n      eventEmitter.emit('IdeaFormSubmitEvent');\n    };\n\n    const getSubmitErrorMessage = () => {\n      if (submitError) {\n        return <FormattedMessage {...messages.submitApiError} />;\n      } else if (fileOrImageError) {\n        return <FormattedMessage {...messages.fileUploadError} />;\n      }\n\n      return null;\n    };\n\n    const submitErrorMessage = getSubmitErrorMessage();\n\n    return (\n      <ButtonBar>\n        <ButtonBarInner>\n          <Button\n            id={elementId}\n            form={form}\n            className=\"e2e-submit-idea-form\"\n            processing={processing}\n            text={<FormattedMessage {...messages.editedPostSave} />}\n            onClick={handleOnSubmitButtonClick}\n          />\n          {submitErrorMessage && (\n            <Error\n              text={submitErrorMessage}\n              marginTop=\"0px\"\n              showBackground={false}\n              showIcon={true}\n            />\n          )}\n        </ButtonBarInner>\n      </ButtonBar>\n    );\n  }\n);\n\nexport default IdeasEditButtonBar;\n","import React from 'react';\n\n// style\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport styled from 'styled-components';\n\nconst transitionDuration = 600;\n\nconst ButtonBarContainer = styled.div`\n  width: 100%;\n  height: 68px;\n  position: fixed;\n  z-index: 2;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #fff;\n  border-top: solid 1px #ddd;\n\n  &.buttonbar-enter {\n    transform: translateY(64px);\n\n    &.buttonbar-enter-active {\n      transform: translateY(0);\n      transition: transform ${transitionDuration}ms\n        cubic-bezier(0.165, 0.84, 0.44, 1);\n    }\n  }\n\n  &.buttonbar-exit {\n    transform: translateY(0);\n\n    &.buttonbar-exit-active {\n      transform: translateY(64px);\n      transition: transform ${transitionDuration}ms\n        cubic-bezier(0.165, 0.84, 0.44, 1);\n    }\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface Props {\n  children: JSX.Element;\n}\n\ninterface GlobalState {\n  submitError: boolean;\n  processing: boolean;\n}\n\ninterface State extends GlobalState {}\n\nexport default class ButtonBar extends React.PureComponent<Props, State> {\n  render() {\n    return (\n      <CSSTransition classNames=\"buttonbar\" timeout={transitionDuration}>\n        <ButtonBarContainer>\n          <Container>{this.props.children}</Container>\n        </ButtonBarContainer>\n      </CSSTransition>\n    );\n  }\n}\n","import React from 'react';\nimport { isEqual } from 'lodash-es';\nimport { Subscription, BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, map } from 'rxjs/operators';\nimport {\n  ITopicData,\n  topicByIdStream,\n  topicsStream,\n  Code,\n} from 'services/topics';\nimport { projectTopicsStream } from 'services/projectTopics';\nimport { isNilOrError } from 'utils/helperUtils';\n\ninterface InputProps {\n  // Don't use projectId, ids or the query parameters (code, exclude_code, sort) together\n  // Only one of the three at a time.\n  projectId?: string;\n  topicIds?: string[];\n  code?: Code;\n  exclude_code?: Code;\n  sort?: 'new' | 'custom';\n}\n\ntype children = (renderProps: GetTopicsChildProps) => JSX.Element | null;\n\ninterface Props extends InputProps {\n  children?: children;\n}\n\ninterface State {\n  topics: (ITopicData | Error)[] | undefined | null | Error;\n}\n\nexport type GetTopicsChildProps =\n  | (ITopicData | Error)[]\n  | undefined\n  | null\n  | Error;\n\nexport default class GetTopics extends React.Component<Props, State> {\n  private inputProps$: BehaviorSubject<InputProps>;\n  private subscriptions: Subscription[];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      topics: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n\n    this.inputProps$ = new BehaviorSubject({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n\n    this.subscriptions = [\n      this.inputProps$\n        .pipe(\n          distinctUntilChanged((prev, next) => isEqual(prev, next)),\n          switchMap(({ topicIds, code, exclude_code, sort, projectId }) => {\n            const queryParameters = { code, exclude_code, sort };\n\n            if (projectId) {\n              return projectTopicsStream(projectId).observable.pipe(\n                map((topics) =>\n                  topics.data\n                    .filter((topic) => topic)\n                    .map((topic) => topic.relationships.topic.data.id)\n                ),\n                switchMap((topicIds) => {\n                  return combineLatest(\n                    topicIds.map((topicId) =>\n                      topicByIdStream(topicId).observable.pipe(\n                        map((topic) =>\n                          !isNilOrError(topic) ? topic.data : topic\n                        )\n                      )\n                    )\n                  );\n                })\n              );\n            } else if (topicIds) {\n              if (topicIds.length > 0) {\n                return combineLatest(\n                  topicIds.map((id) => {\n                    return topicByIdStream(id).observable.pipe(\n                      map((topic) =>\n                        !isNilOrError(topic) ? topic.data : topic\n                      )\n                    );\n                  })\n                );\n              }\n\n              return of(null);\n            } else {\n              return topicsStream({ queryParameters }).observable.pipe(\n                map((topics) => topics.data)\n              );\n            }\n          })\n        )\n        .subscribe((topics) => {\n          this.setState({ topics });\n        }),\n    ];\n  }\n\n  componentDidUpdate() {\n    const { topicIds, code, exclude_code, sort, projectId } = this.props;\n    this.inputProps$.next({\n      topicIds,\n      code,\n      exclude_code,\n      sort,\n      projectId,\n    });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  render() {\n    const { children } = this.props;\n    const { topics } = this.state;\n    return (children as children)(topics);\n  }\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  formTitle: {\n    id: 'app.containers.IdeasEditPage.formTitle',\n    defaultMessage: 'Edit idea',\n  },\n  optionFormTitle: {\n    id: 'app.containers.IdeasEditPage.optionFormTitle',\n    defaultMessage: 'Edit option',\n  },\n  projectFormTitle: {\n    id: 'app.containers.IdeasEditPage.projectFormTitle',\n    defaultMessage: 'Edit project',\n  },\n  questionFormTitle: {\n    id: 'app.containers.IdeasEditPage.questionFormTitle',\n    defaultMessage: 'Edit question',\n  },\n  issueFormTitle: {\n    id: 'app.containers.IdeasEditPage.issueFormTitle',\n    defaultMessage: 'Edit issue',\n  },\n  contributionFormTitle: {\n    id: 'app.containers.IdeasEditPage.contributionFormTitle',\n    defaultMessage: 'Edit contribution',\n  },\n  save: {\n    id: 'app.containers.IdeasEditPage.save',\n    defaultMessage: 'Save',\n  },\n  submitApiError: {\n    id: 'app.containers.IdeasEditPage.submitApiError',\n    defaultMessage:\n      'There was an issue submitting the form. Please check for any errors and try again.',\n  },\n  editedPostSave: {\n    id: 'app.containers.IdeasEditPage.editedPostSave',\n    defaultMessage: 'Save',\n  },\n  fileUploadError: {\n    id: 'app.containers.IdeasEditPage.fileUploadError',\n    defaultMessage:\n      'One or more files failed to upload. Please check the file size and format and try again.',\n  },\n  ideasEditMetaTitle: {\n    id: 'app.containers.IdeasEditPage.ideasEditMetaTitle',\n    defaultMessage: 'Edit {postTitle} | {projectName}',\n  },\n  ideasEditMetaDescription: {\n    id: 'app.containers.IdeasEditPage.ideasEditMetaDescription',\n    defaultMessage: 'Edit your post. Add new and change old information.',\n  },\n});\n","export default {\n  titleProfanityError: {\n    name: 'Profane idea title blocked',\n  },\n  descriptionProfanityError: {\n    name: 'Profane idea description blocked',\n  },\n};\n"],"sourceRoot":""}