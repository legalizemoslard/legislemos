{"version":3,"sources":["webpack:///./app/modules/commercial/insights/admin/components/Tag/index.tsx","webpack:///./app/modules/commercial/insights/admin/containers/Insights/messages.ts","webpack:///./app/modules/commercial/insights/admin/components/TopBar/ProjectButton.tsx","webpack:///./app/modules/commercial/insights/services/insightsCategories.ts","webpack:///./app/modules/commercial/insights/hooks/useInsightsView.ts","webpack:///./app/modules/commercial/insights/admin/components/TopBar/RenameInsightsView.tsx","webpack:///./app/modules/commercial/insights/admin/components/TopBar/index.tsx","webpack:///./app/modules/commercial/insights/services/insightsViews.ts","webpack:///./app/modules/commercial/insights/admin/components/TopBar/messages.ts"],"names":["IconContainer","styled","div","PlusIcon","Icon","colors","clGreen","CloseIcon","Count","StyledTag","Box","variant","onClick","theme","size","css","borderRadius","fontSizes","small","label","border","darken","TagContent","StyledSpinner","Spinner","onIconClick","count","className","loading","rest","as","tabIndex","undefined","thickness","color","e","stopPropagation","preventDefault","onKeyPress","key","role","name","defineMessages","emptyStateTitle","id","defaultMessage","emptyStateAccentText","emptyStateCreate","emptyStateDiscover","title","description","link","supportLinkUrl","listTitle","listDescription","listCreate","listManage","listDelete","listDuplicate","listDeleteConfirmation","createModalTitle","createModalDescription","createModalNameLabel","createModalProjectScopeLabel","createModalSaveView","createModalCancel","inputsDone","inputsTableInputs","inputsTableCategories","inputsTableAlsoIn","inputsTableEmpty","inputsTableNoResults","inputsTableNoResultsDescription","inputsTableCategoryTitle","inputsTableCategoryDescription","inputsTableNotCategorized","inputsTableRecentlyPosted","inputsTableRecentlyPostedInfoBox","categories","detectCategories","resetCategories","resetCategoriesConfimation","addCategory","categoryInfoBoxBold","categoryInfoBox","allInput","allInputTooltip","notCategorized","notCategorizedTooltip","recentlyPosted","recentlyPostedTooltip","editCategoryName","deleteCategory","deleteCategoryConfirmation","renameCategoryModalTitle","renameCategoryModalNameLabel","renameCategoryModalSave","renameCategoryModalCancel","addCategoryLabel","addCategoryPlaceholder","createCategoryPrompt","bulkAssignCategory","assignCategoriesButton","bulkUnassign","bulkApprove","deleteFromCategories","editCategories","categoriesTitle","categoriesTitleTooltip","categoriesSeeAll","categoriesSeeLess","categoriesEmptyTitle","categoriesEmptyDescription","categoriesEmptyButton","categoriesEmptyScanTitle","categoriesEmptyScanDescription","categoriesEmptyScanButton","inputsLoadMore","inputsReadMore","inputsEmptyTitle","inputsEmptyDescription","detectCategoriesTitle","detectCategoriesSectionTitle","detectCategoriesDescription","detectCategoriesAddCategory","detectCategoriesAddCategories","detectCategoriesCancel","detectCategoriesGoBack","detectCategoriesEmpty","ProjectButtonContent","span","projectId","project","isNilOrError","buttonStyle","fontSize","padding","linkTo","attributes","slug","value","title_multiloc","insightsViewId","streamParams","streams","get","apiEndpoint","API_PATH","getInsightsCategoriesEndpoint","insightsCategoryId","response","add","category","fetchAllWith","partialApiEndpoint","update","delete","viewId","useState","insightsView","setInsightsView","useEffect","subscription","insightsViewStream","observable","subscribe","data","unsubscribe","Container","adminTextColor","Title","h1","xxl","Form","form","ButtonContainer","injectIntl","closeRenameModal","originalViewName","formatMessage","intl","locale","setLoading","errors","setErrors","setName","handleSubmit","updateInsightsView","result","json","messages","renameModalTitle","Input","type","onChange","renameModalNameLabel","apiErrors","fieldName","Button","processing","disabled","bgColor","renameModalSaveView","renameModalCancel","TitleContainer","xl","DropdownWrapper","withRouter","params","renameModalOpened","setRenameModalOpened","isDropdownOpened","setDropdownOpened","view","relationships","scope","handleDeleteClick","deleteMessage","deleteConfirmation","window","confirm","deleteInsightsView","clHistory","push","options","icon","iconColor","iconHoverColor","boxShadow","boxShadowHover","bgHoverColor","Dropdown","opened","onClickOutside","content","DropdownListItem","editName","close","insightsViewsEndpoint","object","duplicate"],"mappings":"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","file":"16.98b5bfdfa232450e3b71.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { Icon, Spinner, Box, BoxMarginProps } from 'cl2-component-library';\nimport { darken } from 'polished';\n\n// TODO: Add Tag to component library once we remove tagging\n\ntype Variant = 'primary' | 'default';\ntype Size = 'small' | 'large';\n\nexport type TagProps = {\n  label: string;\n  onIconClick?: () => void;\n  variant: Variant;\n  count?: number;\n  className?: string;\n  onClick?: () => void;\n  loading?: boolean;\n  size?: Size;\n} & BoxMarginProps;\n\nconst IconContainer = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  // Increases the clickable surface area\n  padding: 4px 8px 4px 0px;\n  margin: -4px -8px -4px 0px;\n`;\n\nconst PlusIcon = styled(Icon)`\n  margin-left: 8px;\n  height: 14px;\n  fill: ${colors.clGreen};\n`;\n\nconst CloseIcon = styled(Icon)`\n  margin-left: 8px;\n  height: 10px;\n  fill: #fff;\n`;\n\nconst Count = styled.div`\n  margin-left: 8px;\n`;\n\nconst StyledTag = styled(Box)<{ variant: Variant; size: Size }>`\n  ${({ variant, onClick, theme, size }) => css`\n    border-radius: ${theme.borderRadius};\n    cursor: default;\n    font-size: ${fontSizes.small}px;\n    font-weight: normal;\n    display: inline-block;\n    padding: 4px 12px;\n    ${\n      size === 'small' &&\n      css`\n        padding: 4px 12px;\n      `\n    }\n    ${\n      size === 'large' &&\n      css`\n        padding: 10px 16px;\n      `\n    }\n    ${\n      variant === 'primary' &&\n      css`\n        background-color: ${colors.clGreen};\n        border: 1px solid ${colors.clGreen};\n        color: #fff;\n      `\n    }\n    ${\n      variant === 'default' &&\n      css`\n        background-color: #fff;\n        color: ${colors.label};\n        border: 1px solid ${colors.border};\n      `\n    }\n    ${\n      onClick &&\n      css`\n        cursor: pointer;\n        &:hover,\n        &:focus {\n          background-color: ${darken(\n            0.1,\n            variant === 'primary' ? colors.clGreen : '#fff'\n          )};\n        }\n      `\n    }\n  `}\n`;\n\nconst TagContent = styled.div`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n`;\n\nconst StyledSpinner = styled(Spinner)`\n  margin-left: 8px;\n`;\n\nconst Tag = ({\n  label,\n  onIconClick,\n  variant,\n  count,\n  className,\n  onClick,\n  loading,\n  size = 'small',\n  ...rest\n}: TagProps) => {\n  const handleIconClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onIconClick && onIconClick();\n  };\n\n  const handleEnterPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      e.preventDefault();\n      onIconClick && onIconClick();\n    }\n  };\n  return (\n    <StyledTag\n      variant={variant}\n      size={size}\n      data-testid=\"insightsTag\"\n      className={className}\n      onClick={onClick}\n      as=\"button\"\n      tabIndex={onClick ? 0 : -1}\n      {...rest}\n    >\n      <TagContent data-testid={`insightsTagContent-${variant}`}>\n        {label}\n        {count !== undefined && <Count>{count}</Count>}\n        {onIconClick && (\n          <>\n            {loading ? (\n              <div data-testid=\"insightsTagSpinner\">\n                <StyledSpinner\n                  size=\"10px\"\n                  thickness=\"1px\"\n                  color={variant === 'primary' ? '#fff' : colors.clGreen}\n                />\n              </div>\n            ) : (\n              <IconContainer\n                onClick={handleIconClick}\n                onKeyPress={handleEnterPress}\n                role=\"button\"\n                data-testid=\"insightsTagIconContainer\"\n                tabIndex={0}\n              >\n                {variant === 'primary' && (\n                  <CloseIcon name=\"close\" className=\"insightsTagCloseIcon\" />\n                )}\n                {variant === 'default' && (\n                  <PlusIcon\n                    name=\"plus-circle\"\n                    className=\"insightsTagPlusIcon\"\n                  />\n                )}\n              </IconContainer>\n            )}\n          </>\n        )}\n      </TagContent>\n    </StyledTag>\n  );\n};\n\nexport default Tag;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  emptyStateTitle: {\n    id: 'app.containers.Admin.Insights.emptyStateTitle',\n    defaultMessage: 'Easily understand what participants are { accentText }',\n  },\n  emptyStateAccentText: {\n    id: 'app.containers.Admin.Insights.emptyStateAccentText',\n    defaultMessage: 'talking about',\n  },\n  emptyStateCreate: {\n    id: 'app.containers.Admin.Insights.emptyStateCreate',\n    defaultMessage: 'Create my first insights',\n  },\n  emptyStateDiscover: {\n    id: 'app.containers.Admin.Insights.discover',\n    defaultMessage: 'Discover how it works',\n  },\n  title: {\n    id: 'app.containers.Admin.Insights.title',\n    defaultMessage: 'Insights',\n  },\n  description: {\n    id: 'app.containers.Admin.Insights.description',\n    defaultMessage:\n      'Efficiently analyse the textual input on your platform. Group individual contributions that belong together. Understand what participants are really saying.',\n  },\n  link: {\n    id: 'app.containers.Admin.Insights.link',\n    defaultMessage: 'Read our support guide',\n  },\n  supportLinkUrl: {\n    id: 'app.containers.Admin.Insights.supportLinkUrl',\n    defaultMessage:\n      'https://support.citizenlab.co/en/articles/5525933-create-insights-to-understand-what-participants-are-talking-about',\n  },\n  listTitle: {\n    id: 'app.containers.Admin.Insights.listTitle',\n    defaultMessage: 'Insights',\n  },\n  listDescription: {\n    id: 'app.containers.Admin.Insights.listDescription',\n    defaultMessage:\n      'An insight is a textual or visual summary of the input. It is a starting point to formulate conclusions and a building block for reports. Actions taken here don’t impact the rest of the platform and are not visible to participants.',\n  },\n  listCreate: {\n    id: 'app.containers.Admin.Insights.listCreate',\n    defaultMessage: 'Create insights',\n  },\n  listManage: {\n    id: 'app.containers.Admin.Insights.listManage',\n    defaultMessage: 'Manage',\n  },\n  listDelete: {\n    id: 'app.containers.Admin.Insights.listDelete',\n    defaultMessage: 'Delete',\n  },\n  listDuplicate: {\n    id: 'app.containers.Admin.Insights.listDuplicate',\n    defaultMessage: 'Duplicate',\n  },\n  listDeleteConfirmation: {\n    id: 'app.containers.Admin.Insights.listDeleteConfirmation',\n    defaultMessage: 'Are you sure you want to delete this view?',\n  },\n  createModalTitle: {\n    id: 'app.containers.Admin.Insights.createModalTitle',\n    defaultMessage: 'Start analyzing your inputs',\n  },\n  createModalDescription: {\n    id: 'app.containers.Admin.Insights.createModalDescription',\n    defaultMessage:\n      'You’re about to have your first insights on what participants are talking about. These insights will be saved so you can continue working on them later.',\n  },\n  createModalNameLabel: {\n    id: 'app.containers.Admin.Insights.createModalNameLabel',\n    defaultMessage: 'Name',\n  },\n  createModalProjectScopeLabel: {\n    id: 'app.containers.Admin.Insights.createModalProjectScopeLabel',\n    defaultMessage: 'Project',\n  },\n  createModalSaveView: {\n    id: 'app.containers.Admin.Insights.createModalSaveView',\n    defaultMessage: 'Create my insights',\n  },\n  createModalCancel: {\n    id: 'app.containers.Admin.Insights.createModalCancel',\n    defaultMessage: 'Cancel',\n  },\n  inputsDone: {\n    id: 'app.containers.Admin.Insights.Edit.inputsDone',\n    defaultMessage: 'Done',\n  },\n  inputsTableInputs: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableInputs',\n    defaultMessage: 'Inputs',\n  },\n  inputsTableCategories: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableCategories',\n    defaultMessage: 'Categories',\n  },\n  inputsTableAlsoIn: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableAlsoIn',\n    defaultMessage: 'Also in',\n  },\n  inputsTableEmpty: {\n    id: 'app.containers.Admin.Insights.Edit.inputsEmptyState',\n    defaultMessage: \"This project doesn't seem to contain any input.\",\n  },\n  inputsTableNoResults: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableNoResults',\n    defaultMessage: 'No results found',\n  },\n  inputsTableNoResultsDescription: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableNoResultsDescription',\n    defaultMessage: 'Please try a different filter or search term.',\n  },\n  inputsTableCategoryTitle: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableCategoryTitle',\n    defaultMessage: 'You have no input assigned to this category yet',\n  },\n  inputsTableCategoryDescription: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableCategoryDescription',\n    defaultMessage: 'Start moving input here to grow your category.',\n  },\n  inputsTableNotCategorized: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableNotCategorized',\n    defaultMessage: 'There is no input without a category',\n  },\n  inputsTableRecentlyPosted: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableRecentlyPosted',\n    defaultMessage:\n      'There is no recent input. All input has been taken into consideration.',\n  },\n  inputsTableRecentlyPostedInfoBox: {\n    id: 'app.containers.Admin.Insights.Edit.inputsTableRecentlyPostedInfoBox',\n    defaultMessage:\n      'The input below was recently added and has not yet been categorized. ',\n  },\n  categories: {\n    id: 'app.containers.Admin.Insights.Edit.categories',\n    defaultMessage: 'Categories',\n  },\n  detectCategories: {\n    id: 'app.containers.Admin.Insights.Edit.detectCategories',\n    defaultMessage: 'Detect new categories',\n  },\n  resetCategories: {\n    id: 'app.containers.Admin.Insights.Edit.resetCategories',\n    defaultMessage: 'Reset categories',\n  },\n  resetCategoriesConfimation: {\n    id: 'app.containers.Admin.Insights.Edit.resetCategoriesConfimation',\n    defaultMessage: 'Are you sure you want to reset all categories?',\n  },\n  addCategory: {\n    id: 'app.containers.Admin.Insights.Edit.addCategory',\n    defaultMessage: 'Add category',\n  },\n  categoryInfoBoxBold: {\n    id: 'app.containers.Admin.Insights.Edit.categoryInfoBoxBold',\n    defaultMessage: 'Add your first category',\n  },\n  categoryInfoBox: {\n    id: 'app.containers.Admin.Insights.Edit.categoryInfoBox',\n    defaultMessage: '{bold} to organize and analyze input',\n  },\n  allInput: {\n    id: 'app.containers.Admin.Insights.Edit.allInput',\n    defaultMessage: 'All input',\n  },\n  allInputTooltip: {\n    id: 'app.containers.Admin.Insights.Edit.allInputTooltip',\n    defaultMessage:\n      'This lists all previously processed input regardless of assigned categories. Recently added input is NOT shown here.',\n  },\n  notCategorized: {\n    id: 'app.containers.Admin.Insights.Edit.notCategorized',\n    defaultMessage: 'Not categorized',\n  },\n  notCategorizedTooltip: {\n    id: 'app.containers.Admin.Insights.Edit.notCategorizedTooltip',\n    defaultMessage:\n      \"This lists all previously processed input that hasn't been assigned a category. Recently added input is NOT shown here.\",\n  },\n  recentlyPosted: {\n    id: 'app.containers.Admin.Insights.Edit.recentlyPosted',\n    defaultMessage: 'Recently posted',\n  },\n  recentlyPostedTooltip: {\n    id: 'app.containers.Admin.Insights.Edit.recentlyPostedTooltip',\n    defaultMessage:\n      'This lists all recently added input, and has not yet been processed for categorization.',\n  },\n  editCategoryName: {\n    id: 'app.containers.Admin.Insights.Edit.editCategoryName',\n    defaultMessage: 'Edit category name',\n  },\n  deleteCategory: {\n    id: 'app.containers.Admin.Insights.Edit.deleteCategory',\n    defaultMessage: 'Delete category',\n  },\n  deleteCategoryConfirmation: {\n    id: 'app.containers.Admin.Insights.Edit.deleteCategoryConfirmation',\n    defaultMessage: 'Are you sure you want to delete this category?',\n  },\n  renameCategoryModalTitle: {\n    id: 'app.containers.Admin.Insights.Edit.renameCategoryModalTitle',\n    defaultMessage: 'Edit the name of this category',\n  },\n  renameCategoryModalNameLabel: {\n    id: 'app.containers.Admin.Insights.Edit.renameCategoryModalNameLabel',\n    defaultMessage: 'Name',\n  },\n  renameCategoryModalSave: {\n    id: 'app.containers.Admin.Insights.Edit.renameCategoryModalSave',\n    defaultMessage: 'Save',\n  },\n  renameCategoryModalCancel: {\n    id: 'app.containers.Admin.Insights.Edit.renameCategoryModalCancel',\n    defaultMessage: 'Cancel',\n  },\n  addCategoryLabel: {\n    id: 'app.containers.Admin.Insights.Edit.Details.addCategoryLabel',\n    defaultMessage: 'Add a category',\n  },\n  addCategoryPlaceholder: {\n    id: 'app.containers.Admin.Insights.Edit.Details.addCategoryPlaceholder',\n    defaultMessage: 'Type a category name...',\n  },\n  createCategoryPrompt: {\n    id: 'app.containers.Admin.Insights.Edit.Details.createCategoryPrompt',\n    defaultMessage: 'Create',\n  },\n  bulkAssignCategory: {\n    id: 'app.containers.Admin.Insights.Edit.bulkAssignCategory',\n    defaultMessage: 'Add categories to selected inputs',\n  },\n  assignCategoriesButton: {\n    id: 'app.containers.Admin.Insights.Edit.assignCategoriesButton',\n    defaultMessage: 'Add',\n  },\n  bulkUnassign: {\n    id: 'app.containers.Admin.Insights.Edit.bulkUnassign',\n    defaultMessage: 'Remove',\n  },\n  bulkApprove: {\n    id: 'app.containers.Admin.Insights.Edit.bulkApprove',\n    defaultMessage: 'Approve',\n  },\n  deleteFromCategories: {\n    id: 'app.containers.Admin.Insights.Edit.deleteFromCategories',\n    defaultMessage:\n      'Are you sure you can to remove {selectedCount} inputs from {categoryName}?',\n  },\n  editCategories: {\n    id: 'app.containers.Admin.Insights.Details.editCategories',\n    defaultMessage: 'Edit categories',\n  },\n  categoriesTitle: {\n    id: 'app.containers.Admin.Insights.Details.categoriesTitle',\n    defaultMessage: 'Categories',\n  },\n  categoriesTitleTooltip: {\n    id: 'app.containers.Admin.Insights.Details.categoriesTitleTooltip',\n    defaultMessage:\n      'Categories help structure your input. You can edit your categories at any time or use them as filter on the visualisation below.',\n  },\n  categoriesSeeAll: {\n    id: 'app.containers.Admin.Insights.Details.categoriesSeeAll',\n    defaultMessage: 'See all',\n  },\n  categoriesSeeLess: {\n    id: 'app.containers.Admin.Insights.Details.categoriesSeeLess',\n    defaultMessage: 'See less',\n  },\n  categoriesEmptyTitle: {\n    id: 'app.containers.Admin.Insights.Details.categoriesEmptyTitle',\n    defaultMessage: \"Organize the input you've received\",\n  },\n  categoriesEmptyDescription: {\n    id: 'app.containers.Admin.Insights.Details.categoriesEmptyDescription',\n    defaultMessage: 'Define the categories you want to group your input into.',\n  },\n  categoriesEmptyButton: {\n    id: 'app.containers.Admin.Insights.Details.categoriesEmptyButton',\n    defaultMessage: 'Create categories',\n  },\n  categoriesEmptyScanTitle: {\n    id: 'app.containers.Admin.Insights.Details.categoriesEmptyScanTitle',\n    defaultMessage:\n      'Do you want to scan for input that belongs in this category?',\n  },\n  categoriesEmptyScanDescription: {\n    id: 'app.containers.Admin.Insights.Details.categoriesEmptyScanDescription',\n    defaultMessage:\n      'This automated process may take a few minutes. You can leave the page and come back.',\n  },\n  categoriesEmptyScanButton: {\n    id: 'app.containers.Admin.Insights.Details.categoriesEmptyScanButton',\n    defaultMessage: 'Scan for suggestions',\n  },\n  inputsLoadMore: {\n    id: 'app.containers.Admin.Insights.Details.inputsLoadMore',\n    defaultMessage: 'Load more',\n  },\n  inputsReadMore: {\n    id: 'app.containers.Admin.Insights.Details.inputsReadMore',\n    defaultMessage: 'Read more',\n  },\n  inputsEmptyTitle: {\n    id: 'app.containers.Admin.Insights.Details.inputsEmptyTitle',\n    defaultMessage: 'No results found',\n  },\n  inputsEmptyDescription: {\n    id: 'app.containers.Admin.Insights.Details.inputsEmptyDescription',\n    defaultMessage: 'Please try a different filter or search term.',\n  },\n  detectCategoriesTitle: {\n    id: 'app.containers.Admin.Insights.Detect.pageTitle',\n    defaultMessage: 'Detect new categories',\n  },\n  detectCategoriesSectionTitle: {\n    id: 'app.containers.Admin.Insights.Detect.sectionTitle',\n    defaultMessage: 'Detected categories',\n  },\n  detectCategoriesDescription: {\n    id: 'app.containers.Admin.Insights.Detect.sectionDescription',\n    defaultMessage:\n      'These auto-detected categories are the most common topics discussed on your platform.',\n  },\n  detectCategoriesAddCategory: {\n    id: 'app.containers.Admin.Insights.Detect.addCategory',\n    defaultMessage: 'Add category',\n  },\n  detectCategoriesAddCategories: {\n    id: 'app.containers.Admin.Insights.Detect.addCategories',\n    defaultMessage: 'Add categories',\n  },\n  detectCategoriesCancel: {\n    id: 'app.containers.Admin.Insights.Detect.cancel',\n    defaultMessage: 'Cancel',\n  },\n  detectCategoriesGoBack: {\n    id: 'app.containers.Admin.Insights.Detect.goBack',\n    defaultMessage: 'Go back',\n  },\n  detectCategoriesEmpty: {\n    id: 'app.containers.Admin.Insights.Detect.empty',\n    defaultMessage:\n      'No categories detected. Please go back to define your own.',\n  },\n});\n","import React from 'react';\n\n// styles\nimport { fontSizes } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\n// components\nimport { Icon } from 'cl2-component-library';\nimport Button from 'components/UI/Button';\nimport T from 'components/T';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// hooks\nimport useProject from 'hooks/useProject';\n\ninterface ProjectButtonProps {\n  projectId: string;\n}\n\nconst ProjectButtonContent = styled.span`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  .linkIcon {\n    width: 20px;\n    margin-left: 8px;\n  }\n`;\n\nconst ProjectButton = ({ projectId }: ProjectButtonProps) => {\n  const project = useProject({\n    projectId,\n  });\n\n  if (isNilOrError(project)) {\n    return null;\n  }\n\n  return (\n    <div data-testid=\"insightsProjectButton\">\n      <Button\n        buttonStyle=\"secondary-outlined\"\n        fontSize={`${fontSizes.small}px`}\n        padding=\"4px 6px\"\n        linkTo={`/projects/${project.attributes.slug}`}\n      >\n        <ProjectButtonContent>\n          <T value={project.attributes.title_multiloc} />\n          <Icon name=\"link\" className=\"linkIcon\" />\n        </ProjectButtonContent>\n      </Button>\n    </div>\n  );\n};\n\nexport default ProjectButton;\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { IRelationship } from 'typings';\n\nexport interface IInsightsCategoryData {\n  id: string;\n  type: string;\n  attributes: {\n    name: string;\n    inputs_count: number;\n  };\n  relationships?: {\n    view: {\n      data: IRelationship;\n    };\n  };\n}\n\nexport interface IInsightsCategory {\n  data: IInsightsCategoryData;\n}\n\nexport interface IInsightsCategories {\n  data: IInsightsCategoryData[];\n}\n\nconst getInsightsCategoriesEndpoint = (viewId: string) =>\n  `insights/views/${viewId}/categories`;\n\nexport function insightsCategoriesStream(\n  insightsViewId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInsightsCategories>({\n    apiEndpoint: `${API_PATH}/${getInsightsCategoriesEndpoint(insightsViewId)}`,\n    ...streamParams,\n  });\n}\n\nexport function insightsCategoryStream(\n  insightsViewId: string,\n  insightsCategoryId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInsightsCategory>({\n    apiEndpoint: `${API_PATH}/${getInsightsCategoriesEndpoint(\n      insightsViewId\n    )}/${insightsCategoryId}`,\n    ...streamParams,\n  });\n}\n\nexport function addInsightsCategory(insightsViewId: string, name: string) {\n  const response = streams.add<IInsightsCategory>(\n    `${API_PATH}/${getInsightsCategoriesEndpoint(insightsViewId)}`,\n    {\n      category: { name },\n    }\n  );\n  streams.fetchAllWith({\n    partialApiEndpoint: [\n      `insights/views/${insightsViewId}/inputs`,\n      `insights/views/${insightsViewId}/categories`,\n    ],\n  });\n  return response;\n}\n\nexport function updateInsightsCategory(\n  insightsViewId: string,\n  insightsCategoryId: string,\n  name: string\n) {\n  return streams.update<IInsightsCategories>(\n    `${API_PATH}/${getInsightsCategoriesEndpoint(\n      insightsViewId\n    )}/${insightsCategoryId}`,\n    insightsCategoryId,\n    { category: { name } }\n  );\n}\n\nexport async function deleteInsightsCategories(insightsViewId: string) {\n  const response = await streams.delete(\n    `${API_PATH}/${getInsightsCategoriesEndpoint(insightsViewId)}`,\n    ''\n  );\n\n  streams.fetchAllWith({\n    partialApiEndpoint: [\n      `insights/views/${insightsViewId}/inputs`,\n      `insights/views/${insightsViewId}/categories`,\n      `insights/views/${insightsViewId}/stats/inputs_count`,\n    ],\n  });\n\n  return response;\n}\n\nexport function deleteInsightsCategory(\n  insightsViewId: string,\n  insightsCategoryId: string\n) {\n  return streams.delete(\n    `${API_PATH}/${getInsightsCategoriesEndpoint(\n      insightsViewId\n    )}/${insightsCategoryId}`,\n    insightsCategoryId\n  );\n}\n","import { useState, useEffect } from 'react';\nimport {\n  insightsViewStream,\n  IInsightsViewData,\n} from '../services/insightsViews';\n\nconst useInsightsView = (id: string) => {\n  const [insightsView, setInsightsView] = useState<\n    IInsightsViewData | undefined | null | Error\n  >(undefined);\n\n  useEffect(() => {\n    const subscription = insightsViewStream(id).observable.subscribe(\n      (insightsView) => {\n        setInsightsView(insightsView.data);\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, [id]);\n\n  return insightsView;\n};\n\nexport default useInsightsView;\n","import React, { useState } from 'react';\n\n// styles\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\n\n// intl\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\nimport { injectIntl } from 'utils/cl-intl';\n\n// components\nimport { Button, Input } from 'cl2-component-library';\nimport Error from 'components/UI/Error';\n\n// services\nimport { updateInsightsView } from 'modules/commercial/insights/services/insightsViews';\n\n// hooks\nimport useLocale from 'hooks/useLocale';\n\n// utils\nimport { isNilOrError } from 'utils/helperUtils';\n\n// types\nimport { CLErrors } from 'typings';\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 350px;\n  margin: 40px auto;\n  color: ${colors.adminTextColor};\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  font-size: ${fontSizes.xxl}px;\n`;\n\nconst Form = styled.form`\n  margin-top: 40px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n\n  > :not(:first-child) {\n    margin-left: 5px;\n  }\n`;\n\ninterface RenameInsightsViewProps {\n  closeRenameModal: () => void;\n  insightsViewId: string;\n  originalViewName: string;\n}\n\nconst RenameInsightsView = ({\n  closeRenameModal,\n  insightsViewId,\n  originalViewName,\n  intl: { formatMessage },\n}: RenameInsightsViewProps & InjectedIntlProps) => {\n  const locale = useLocale();\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<CLErrors | undefined>();\n\n  const [name, setName] = useState<string>(originalViewName);\n  const onChangeName = (value: string) => {\n    setName(value);\n    setErrors(undefined);\n  };\n\n  const handleSubmit = async () => {\n    if (name) {\n      setLoading(true);\n      try {\n        const result = await updateInsightsView(insightsViewId, name);\n        if (!isNilOrError(result)) {\n          closeRenameModal();\n        }\n      } catch (errors) {\n        setErrors(errors.json.errors);\n        setLoading(false);\n      }\n    }\n  };\n\n  if (isNilOrError(locale)) return null;\n\n  return (\n    <Container data-testid=\"insights\">\n      <Title>{formatMessage(messages.renameModalTitle)}</Title>\n      <Form>\n        <Input\n          type=\"text\"\n          value={name}\n          onChange={onChangeName}\n          label={formatMessage(messages.renameModalNameLabel)}\n        />\n        {errors && <Error apiErrors={errors['name']} fieldName=\"view_name\" />}\n\n        <ButtonContainer>\n          <Button\n            processing={loading}\n            disabled={!name}\n            locale={locale}\n            onClick={handleSubmit}\n            bgColor={colors.adminTextColor}\n          >\n            {formatMessage(messages.renameModalSaveView)}\n          </Button>\n          <Button\n            locale={locale}\n            onClick={closeRenameModal}\n            buttonStyle=\"secondary\"\n          >\n            {formatMessage(messages.renameModalCancel)}\n          </Button>\n        </ButtonContainer>\n      </Form>\n    </Container>\n  );\n};\n\nexport default injectIntl<RenameInsightsViewProps>(RenameInsightsView);\n","import React, { useState } from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\n\n// styles\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport styled from 'styled-components';\n\n// components\nimport { Dropdown, DropdownListItem, Button } from 'cl2-component-library';\nimport Modal from 'components/UI/Modal';\nimport RenameInsightsView from './RenameInsightsView';\nimport ProjectButton from './ProjectButton';\n\n// intl\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// utils\nimport clHistory from 'utils/cl-router/history';\nimport { injectIntl } from 'utils/cl-intl';\nimport { isNilOrError } from 'utils/helperUtils';\n\n// services\nimport { deleteInsightsView } from '../../../services/insightsViews';\n\n// hooks\nimport useInsightsView from '../../../hooks/useInsightsView';\nimport useLocale from 'hooks/useLocale';\n\nexport const topBarHeight = 60;\n\nconst Container = styled.div`\n  display: flex;\n  height: ${topBarHeight}px;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 40px;\n  position: relative;\n  z-index: 1;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 10%);\n  // TODO : set bg color in component library\n  background: #fbfbfb;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  h1 {\n    margin: 0;\n    margin-right: 30px;\n    font-size: ${fontSizes.xl}px;\n  }\n`;\n\nconst DropdownWrapper = styled.div`\n  display: flex;\n  color: ${colors.label};\n  align-items: center;\n  position: relative;\n  .dropdown {\n    right: 10px;\n    top: 40px;\n  }\n`;\n\nconst TopBar = ({\n  params,\n  intl: { formatMessage },\n}: WithRouterProps & InjectedIntlProps) => {\n  const [renameModalOpened, setRenameModalOpened] = useState(false);\n  const [isDropdownOpened, setDropdownOpened] = useState(false);\n  const locale = useLocale();\n  const viewId = params.viewId;\n  const view = useInsightsView(viewId);\n\n  if (isNilOrError(view) || isNilOrError(locale)) {\n    return null;\n  }\n  const projectId = view.relationships?.scope.data.id;\n  const toggleDropdown = () => {\n    setDropdownOpened(!isDropdownOpened);\n  };\n\n  const closeDropdown = () => {\n    setDropdownOpened(false);\n  };\n\n  const closeRenameModal = () => setRenameModalOpened(false);\n  const openRenameModal = () => setRenameModalOpened(true);\n\n  const handleDeleteClick = async () => {\n    const deleteMessage = formatMessage(messages.deleteConfirmation);\n\n    if (window.confirm(deleteMessage)) {\n      await deleteInsightsView(viewId);\n      clHistory.push('/admin/insights');\n    }\n  };\n\n  return (\n    <Container data-testid=\"insightsTopBar\">\n      <TitleContainer>\n        <h1>{view.attributes.name}</h1>\n        {projectId && <ProjectButton projectId={projectId} />}\n      </TitleContainer>\n      <DropdownWrapper>\n        {formatMessage(messages.options)}\n        <Button\n          locale={locale}\n          icon=\"more-options\"\n          iconColor={colors.label}\n          iconHoverColor={colors.label}\n          boxShadow=\"none\"\n          boxShadowHover=\"none\"\n          bgColor=\"transparent\"\n          bgHoverColor=\"transparent\"\n          onClick={toggleDropdown}\n        />\n        <Dropdown\n          opened={isDropdownOpened}\n          onClickOutside={closeDropdown}\n          className=\"dropdown\"\n          content={\n            <>\n              <DropdownListItem onClick={openRenameModal}>\n                {formatMessage(messages.editName)}\n              </DropdownListItem>\n              <DropdownListItem onClick={handleDeleteClick}>\n                {formatMessage(messages.delete)}\n              </DropdownListItem>\n              {/* <DropdownListItem>\n                {formatMessage(messages.duplicate)}\n              </DropdownListItem> */}\n            </>\n          }\n        />\n      </DropdownWrapper>\n      <Modal opened={renameModalOpened} close={closeRenameModal}>\n        <RenameInsightsView\n          closeRenameModal={closeRenameModal}\n          insightsViewId={viewId}\n          originalViewName={view.attributes.name}\n        />\n      </Modal>\n    </Container>\n  );\n};\n\nexport default withRouter(injectIntl(TopBar));\n","import { API_PATH } from 'containers/App/constants';\nimport streams, { IStreamParams } from 'utils/streams';\nimport { IRelationship } from 'typings';\n\nexport interface IInsightsViewData {\n  id: string;\n  type: string;\n  attributes: {\n    name: string;\n    updated_at: string;\n  };\n  relationships?: {\n    scope: {\n      data: IRelationship;\n    };\n  };\n}\n\nexport interface IInsightsView {\n  data: IInsightsViewData;\n}\n\nexport interface IInsightsViews {\n  data: IInsightsViewData[];\n}\n\ninterface IInsightsViewObject {\n  scope_id: string;\n  name: string;\n}\n\nconst insightsViewsEndpoint = 'insights/views';\n\nexport function insightsViewsStream(streamParams: IStreamParams | null = null) {\n  return streams.get<IInsightsViews>({\n    apiEndpoint: `${API_PATH}/${insightsViewsEndpoint}`,\n    ...streamParams,\n  });\n}\n\nexport function insightsViewStream(\n  insightsViewId: string,\n  streamParams: IStreamParams | null = null\n) {\n  return streams.get<IInsightsView>({\n    apiEndpoint: `${API_PATH}/${insightsViewsEndpoint}/${insightsViewId}`,\n    ...streamParams,\n  });\n}\n\nexport async function addInsightsView(object: IInsightsViewObject) {\n  const response = await streams.add<IInsightsView>(\n    `${API_PATH}/${insightsViewsEndpoint}`,\n    {\n      view: object,\n    }\n  );\n  await streams.fetchAllWith({\n    apiEndpoint: [`${API_PATH}/${insightsViewsEndpoint}`],\n  });\n  return response;\n}\n\nexport function updateInsightsView(insightsViewId: string, name: string) {\n  return streams.update<IInsightsView>(\n    `${API_PATH}/${insightsViewsEndpoint}/${insightsViewId}`,\n    insightsViewId,\n    { view: { name } }\n  );\n}\n\nexport function deleteInsightsView(insightsViewId: string) {\n  return streams.delete(\n    `${API_PATH}/${insightsViewsEndpoint}/${insightsViewId}`,\n    insightsViewId\n  );\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  options: {\n    id: 'app.containers.Admin.Insights.components.TopBar.options',\n    defaultMessage: 'Options',\n  },\n  editName: {\n    id: 'app.containers.Admin.Insights.components.TopBar.editName',\n    defaultMessage: 'Edit name',\n  },\n  delete: {\n    id: 'app.containers.Admin.Insights.components.TopBar.delete',\n    defaultMessage: 'Delete',\n  },\n  duplicate: {\n    id: 'app.containers.Admin.Insights.components.TopBar.duplicate',\n    defaultMessage: 'Duplicate',\n  },\n  deleteConfirmation: {\n    id: 'app.containers.Admin.Insights.components.TopBar.deleteConfirmation',\n    defaultMessage: 'Are you sure?',\n  },\n  renameModalTitle: {\n    id: 'app.containers.Admin.Insights.components.TopBar.renameModalTitle',\n    defaultMessage: 'Edit the name of this view',\n  },\n  renameModalNameLabel: {\n    id: 'app.containers.Admin.Insights.components.TopBar.renameModalNameLabel',\n    defaultMessage: 'Name',\n  },\n  renameModalSaveView: {\n    id: 'app.containers.Admin.Insights.components.TopBar.renameModalSaveView',\n    defaultMessage: 'Save',\n  },\n  renameModalCancel: {\n    id: 'app.containers.Admin.Insights.components.TopBar.renameModalCancel',\n    defaultMessage: 'Cancel',\n  },\n});\n"],"sourceRoot":""}