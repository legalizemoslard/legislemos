{"version":3,"sources":["webpack:///./app/containers/Admin/users/UsersHeader.tsx","webpack:///./app/containers/Admin/users/NoUsers.tsx","webpack:///./app/containers/Admin/users/UserTable.tsx","webpack:///./app/containers/Admin/users/UserManager.tsx","webpack:///./app/containers/Admin/users/UserTableActions.tsx","webpack:///./app/components/Pagination/index.tsx","webpack:///./app/containers/Admin/users/events.ts","webpack:///./app/components/UI/Table/SortableTableHeaderCell.tsx","webpack:///./app/containers/Admin/users/UserTableRow.tsx","webpack:///./app/components/UI/Table/index.tsx"],"names":["TitleWrapper","styled","div","colors","adminSecondaryTextColor","fontSizes","base","FirstRow","OnlyRow","Spacer","TextAndButtons","Buttons","StyledSearchInput","SearchInput","EditGroupButton","Button","DeleteGroupButton","memo","title","groupType","onEdit","onDelete","onSearch","handleSearchChange","newValue","id","type","as","value","iconTitle","FormattedMessage","messages","editGroup","hiddenText","padding","icon","buttonStyle","onClick","deleteGroup","onChange","tagName","allUsers","usersSubtitle","NoUsersPage","xl","clIconAccent","SFormattedMessage","darken","noSuchSearchResult","Icon","name","noUserMatchesYourSearch","emptyGroup","goToAllUsers","values","allUsersLink","to","Container","StyledTable","Table","background","StyledPagination","Pagination","UsersTable","user","isAdmin","data","newRoles","props","authUser","trackAdminToggle","eventEmitter","emit","events","userRoleChangeFailed","youCantUnadminYourself","attributes","roles","filter","role","get","updateUser","sortAttribute","trackSortChange","extra","onChangeSorting","pageNumber","trackPagination","onChangePage","userId","trackToggleOneUser","handleSelect","this","usersList","sortDirection","currentPage","lastPage","selectedUsers","usersCount","isArray","length","className","handleSortingOnChange","sorted","email","since","admin","options","map","key","selected","includes","toggleSelect","handleUserToggle","toggleAdmin","handleAdminRoleOnChange","totalPages","loadPage","handlePaginationClick","PureComponent","injectTracks","tracks","pagination","toggleOneUser","adminToggle","sortChange","initialState","errors","UserManager","errorName","errorElement","setState","state","setTimeout","err","allUsersIds","newSelectedUsers","userIds","item","prevProps","groupId","subscriptions","observeEvent","userDeletionFailed","subscribe","eventName","eventValue","handleError","membershipDeleteFailed","membershipAddFailed","forEach","subscription","unsubscribe","users","search","toggleSelectAll","toggleAllUsers","unselectAll","unselectAllUsers","deleteUsersFromGroup","text","handleUserSelectedOnChange","inputProps","pageSize","TableOptions","adminTextColor","UserCount","span","label","small","SelectAllCheckbox","Checkbox","theme","borderRadius","rgba","SelectAllCheckboxLabel","ActionButtons","StyledIcon","ActionButtonWrapper","DropdownListItemText","DropdownList","DropdownListItem","button","clDropdownHoverBackground","DropdownFooterButton","UserTableActions","trackEventByName","event","preventDefault","intl","formatDate","formatMessage","usersIds","apiPath","API_PATH","group","queryParameters","omitBy","isNil","requestBlob","blob","saveAs","userExportFileName","Date","now","groupsList","title_multiloc","stopPropagation","selectedGroupIds","dropdownOpened","selectedGroupId","promises","timeout","ms","Promise","res","success","membershipAdd","groupsIds","processing","failed","addUsersToGroup","push","addGroupMembership","all","streams","fetchAllWith","apiEndpoint","addedRedundantUserToGroup","errorResponse","isCLErrorJSON","json","val","error","Array","selectedCount","manualGroups","exportType","select","checked","indeterminate","isNilOrError","toggleDropdown","moveUsersTableAction","Dropdown","width","top","left","opened","onClickOutside","content","toggleGroup","footer","addUsersToGroups","fullWidth","whiteSpace","disabled","moveUsersButton","handleGroupsDeleteClick","membershipDelete","exportUsers","UserTableActionsWithHocs","injectIntl","membershipType","ContainerInner","ChevronIcon","NavigateButton","Next","Back","Pages","Item","useColorsTheme","colorText","lightGreyishBlue","colorMain","page","l","last","right","range","rangeWithDots","i","pageItems","calculateMenuItems","onMouseDown","removeFocus","goTo","handleItemClick","toString","UsersEvents","SortableTableHeaderCell","isString","React","StyledCheckbox","MoreOptionsWrapper","MoreOptionsIcon","MoreOptionsButton","CreatedAt","td","DropdownListButton","adminLightText","lighten","adminMenuBackground","IconWrapper","UserTableRow","deleteMessage","userDeletionConfirmation","window","confirm","youCantDeleteYourself","deleteUser","catch","slug","clHistory","createdAt","created_at","format","size","first_name","last_name","Toggle","placement","interactive","trigger","duration","goToUserProfile","seeProfile","handleDeleteClick","nextProps","_prevState","table","clBlue","children","cellSpacing","cellPadding"],"mappings":"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","file":"22.3b6e6b29962c36c28fe1.chunk.js","sourcesContent":["// Libraries\nimport React, { memo } from 'react';\nimport { Multiloc } from 'typings';\n\n// Components\nimport Button from 'components/UI/Button';\nimport T from 'components/T';\nimport SearchInput from 'components/UI/SearchInput';\n\n// i18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// Styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport Outlet from 'components/Outlet';\nimport { MembershipType } from 'services/groups';\n\nconst TitleWrapper = styled.div`\n  min-height: 105px;\n\n  h2 {\n    padding: 0;\n    margin: 10px;\n    margin-top: 20px;\n    margin-bottom: 30px;\n    color: ${colors.adminSecondaryTextColor};\n    font-size: ${fontSizes.base}px;\n    font-weight: 400;\n  }\n`;\n\nconst FirstRow = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  margin-left: 10px;\n`;\n\nconst OnlyRow = styled(FirstRow)`\n  min-height: 105px;\n  margin-bottom: 30px;\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n`;\n\nconst TextAndButtons = styled.div`\n  h1 {\n    display: inline;\n    padding: 0;\n    margin: 0;\n    margin-right: 10px;\n    font-weight: 600;\n  }\n`;\n\nconst Buttons = styled.div`\n  display: inline-flex;\n  align-items: center;\n  margin-top: 5px;\n  transform: scale(0.9);\n`;\n\nconst StyledSearchInput = styled(SearchInput)`\n  flex: 0 0 250px;\n  width: 250px;\n`;\n\nconst EditGroupButton = styled(Button)``;\nconst DeleteGroupButton = styled(Button)``;\n\ninterface Props {\n  title?: Multiloc;\n  groupType?: MembershipType;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onSearch: (newValue: string) => void;\n}\n\nconst UsersHeader = memo(\n  ({ title, groupType, onEdit, onDelete, onSearch }: Props) => {\n    const handleSearchChange = (newValue: string) => {\n      onSearch(newValue);\n    };\n\n    if (title) {\n      return (\n        <OnlyRow>\n          {groupType && (\n            <Outlet\n              id=\"app.containers.Admin.users.UsersHeader.icon\"\n              type={groupType}\n            />\n          )}\n          <TextAndButtons>\n            <T as=\"h1\" value={title} />\n            <Buttons>\n              <EditGroupButton\n                iconTitle={<FormattedMessage {...messages.editGroup} />}\n                hiddenText={<FormattedMessage {...messages.editGroup} />}\n                padding=\".65em\"\n                icon=\"edit\"\n                buttonStyle=\"secondary\"\n                onClick={onEdit}\n              />\n              <DeleteGroupButton\n                iconTitle={<FormattedMessage {...messages.deleteGroup} />}\n                hiddenText={<FormattedMessage {...messages.deleteGroup} />}\n                padding=\".65em\"\n                icon=\"delete\"\n                buttonStyle=\"text\"\n                onClick={onDelete}\n              />\n            </Buttons>\n          </TextAndButtons>\n          <Spacer />\n          <StyledSearchInput onChange={handleSearchChange} />\n        </OnlyRow>\n      );\n    }\n\n    return (\n      <TitleWrapper>\n        <FirstRow>\n          <TextAndButtons>\n            <FormattedMessage tagName=\"h1\" {...messages.allUsers} />\n          </TextAndButtons>\n          <Spacer />\n          <StyledSearchInput onChange={handleSearchChange} />\n        </FirstRow>\n        <FormattedMessage tagName=\"h2\" {...messages.usersSubtitle} />\n      </TitleWrapper>\n    );\n  }\n);\n\nexport default UsersHeader;\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport Link from 'utils/cl-router/Link';\n\nimport messages from './messages';\nimport { FormattedMessage } from 'utils/cl-intl';\nimport { Icon } from 'cl2-component-library';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { darken } from 'polished';\nimport { MembershipType } from 'services/groups';\n\nconst NoUsersPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: ${fontSizes.xl}px;\n  font-weight: bold;\n  line-height: 25px;\n  padding-top: 80px;\n  svg {\n    margin-bottom: 20px;\n    height: 70px;\n    fill: ${colors.clIconAccent};\n  }\n`;\n\nconst SFormattedMessage = styled.div`\n  color: ${colors.adminSecondaryTextColor};\n  font-weight: 400;\n  font-size: ${fontSizes.base}px;\n\n  a {\n    color: ${colors.adminSecondaryTextColor};\n    font-weight: bold;\n    text-decoration: underline;\n\n    &:hover {\n      color: ${darken(0.2, colors.adminSecondaryTextColor)};\n    }\n  }\n`;\n\ninterface Props {\n  groupType?: MembershipType;\n  noSuchSearchResult?: boolean;\n}\n\nconst NoUsers = memo(({ groupType, noSuchSearchResult }: Props) => {\n  if (noSuchSearchResult) {\n    return (\n      <NoUsersPage>\n        <Icon name=\"search\" />\n        <FormattedMessage {...messages.noUserMatchesYourSearch} />\n      </NoUsersPage>\n    );\n  }\n\n  return (\n    <NoUsersPage>\n      <Icon name=\"blankPage\" />\n      <FormattedMessage {...messages.emptyGroup} />\n      {groupType === 'manual' && (\n        <SFormattedMessage>\n          <FormattedMessage\n            {...messages.goToAllUsers}\n            values={{\n              allUsersLink: (\n                <Link to=\"/admin/users/\">\n                  <FormattedMessage {...messages.allUsers} />\n                </Link>\n              ),\n            }}\n          />\n        </SFormattedMessage>\n      )}\n    </NoUsersPage>\n  );\n});\n\nexport default NoUsers;\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport { isAdmin } from 'services/permissions/roles';\nimport { includes, get, isArray } from 'lodash-es';\n\n// Components\nimport Table from 'components/UI/Table';\nimport SortableTableHeaderCell from 'components/UI/Table/SortableTableHeaderCell';\nimport Pagination from 'components/Pagination';\nimport UserTableRow from './UserTableRow';\n\n// Services\nimport { IUserData, IRole, updateUser } from 'services/users';\n\n// Resources\nimport { GetUsersChildProps, SortAttribute } from 'resources/GetUsers';\nimport { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// Events --- For error handling\nimport eventEmitter from 'utils/eventEmitter';\nimport events from './events';\n\n// tracking\nimport { injectTracks } from 'utils/analytics';\nimport tracks from './tracks';\n\n// I18n\nimport { FormattedMessage } from 'utils/cl-intl';\nimport messages from './messages';\n\n// Styles\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n`;\n\nconst StyledTable = styled(Table)`\n  margin-top: 20px;\n\n  tbody tr td {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  tbody tr.selected {\n    background: ${colors.background};\n  }\n\n  th,\n  td {\n    padding-left: 5px;\n    padding-right: 5px;\n    overflow-wrap: break-word;\n  }\n\n  thead tr th,\n  tbody tr {\n    border: none;\n  }\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 12px;\n`;\n\ninterface InputProps {\n  selectedUsers: string[] | 'none' | 'all';\n  handleSelect: (userId: string) => void;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface Props extends InputProps, GetUsersChildProps {}\n\ninterface State {}\n\ninterface Tracks {\n  trackPagination: () => void;\n  trackToggleOneUser: () => void;\n  trackAdminToggle: () => void;\n  trackSortChange: ({ extra: { sortAttribute: SortAttribute } }) => void;\n}\n\nclass UsersTable extends PureComponent<Props & Tracks, State> {\n  isUserAdmin = (user: IUserData) => {\n    return isAdmin({ data: user });\n  };\n\n  handleAdminRoleOnChange = (user: IUserData) => () => {\n    let newRoles: IRole[] = [];\n    const { authUser, trackAdminToggle } = this.props;\n\n    trackAdminToggle();\n\n    if (authUser && authUser.id === user.id) {\n      eventEmitter.emit<JSX.Element>(\n        events.userRoleChangeFailed,\n        <FormattedMessage {...messages.youCantUnadminYourself} />\n      );\n    } else {\n      if (user.attributes.roles && isAdmin({ data: user })) {\n        newRoles = user.attributes.roles.filter(\n          (role) => role.type !== 'admin'\n        );\n      } else {\n        newRoles = [...get(user, 'attributes.roles', []), { type: 'admin' }];\n      }\n\n      updateUser(user.id, { roles: newRoles });\n    }\n  };\n\n  handleSortingOnChange = (sortAttribute: SortAttribute) => () => {\n    this.props.trackSortChange({\n      extra: {\n        sortAttribute,\n      },\n    });\n    this.props.onChangeSorting(sortAttribute);\n  };\n\n  handlePaginationClick = (pageNumber: number) => {\n    this.props.trackPagination();\n    this.props.onChangePage(pageNumber);\n  };\n\n  handleUserToggle = (userId) => () => {\n    this.props.trackToggleOneUser();\n    this.props.handleSelect(userId);\n  };\n\n  render() {\n    const {\n      usersList,\n      sortAttribute,\n      sortDirection,\n      currentPage,\n      lastPage,\n      selectedUsers,\n    } = this.props;\n    const usersCount = isArray(usersList) && usersList.length;\n\n    if (isArray(usersList) && usersCount && usersCount > 0) {\n      return (\n        <Container className=\"e2e-user-table\">\n          <StyledTable>\n            <thead>\n              <tr>\n                <th />\n                <th />\n                <th>\n                  <SortableTableHeaderCell\n                    value={<FormattedMessage {...messages.name} />}\n                    onClick={this.handleSortingOnChange('last_name')}\n                    sorted={\n                      sortAttribute === 'last_name' ? sortDirection : null\n                    }\n                  />\n                </th>\n                <th>\n                  <SortableTableHeaderCell\n                    value={<FormattedMessage {...messages.email} />}\n                    onClick={this.handleSortingOnChange('email')}\n                    sorted={sortAttribute === 'email' ? sortDirection : null}\n                  />\n                </th>\n                <th>\n                  <SortableTableHeaderCell\n                    value={<FormattedMessage {...messages.since} />}\n                    onClick={this.handleSortingOnChange('created_at')}\n                    sorted={\n                      sortAttribute === 'created_at' ? sortDirection : null\n                    }\n                  />\n                </th>\n                <th>\n                  <SortableTableHeaderCell\n                    value={<FormattedMessage {...messages.admin} />}\n                    onClick={this.handleSortingOnChange('role')}\n                    sorted={sortAttribute === 'role' ? sortDirection : null}\n                  />\n                </th>\n                <th>\n                  <FormattedMessage tagName=\"div\" {...messages.options} />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {usersList.map((user) => (\n                <UserTableRow\n                  key={user.id}\n                  user={user}\n                  selected={\n                    selectedUsers === 'all' || includes(selectedUsers, user.id)\n                  }\n                  toggleSelect={this.handleUserToggle(user.id)}\n                  toggleAdmin={this.handleAdminRoleOnChange(user)}\n                  authUser={this.props.authUser}\n                />\n              ))}\n            </tbody>\n          </StyledTable>\n\n          <StyledPagination\n            currentPage={currentPage || 1}\n            totalPages={lastPage || 1}\n            loadPage={this.handlePaginationClick}\n          />\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default injectTracks<Props>({\n  trackPagination: tracks.pagination,\n  trackToggleOneUser: tracks.toggleOneUser,\n  trackAdminToggle: tracks.adminToggle,\n  trackSortChange: tracks.sortChange,\n})(UsersTable);\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport { isArray, includes } from 'lodash-es';\nimport { Subscription } from 'rxjs';\n\n// Components\nimport UserTable from './UserTable';\nimport UserTableActions from './UserTableActions';\nimport Error from 'components/UI/Error';\nimport NoUsers from './NoUsers';\n\n// Events\nimport eventEmitter from 'utils/eventEmitter';\nimport events from './events';\n\n// Resources\nimport GetUsers, { GetUsersChildProps } from 'resources/GetUsers';\nimport GetAuthUser from 'resources/GetAuthUser';\n\n// Services\nimport { MembershipType } from 'services/groups';\n\n// Typings\ninterface InputProps {\n  search: string | undefined;\n  groupId?: string;\n  groupType?: MembershipType;\n  deleteUsersFromGroup?: (userIds: string[]) => void;\n}\n\ninterface DataProps {\n  users: GetUsersChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ntype error = {\n  errorName: string;\n  errorElement: JSX.Element;\n};\n\ntype selectedUsersType = string[] | 'none' | 'all';\n\nexport interface State {\n  selectedUsers: selectedUsersType;\n  errors: error[];\n}\n\nconst initialState: State = {\n  selectedUsers: 'none',\n  errors: [],\n};\n\nexport class UserManager extends PureComponent<Props, State> {\n  subscriptions: Subscription[] = [];\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  // When changing group, the user changes views and expects to have a clean state\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.groupId !== prevProps.groupId) {\n      this.setState(initialState);\n    }\n  }\n\n  // Listening to events coming from the different actions to print messages in case of errors\n  componentDidMount() {\n    this.subscriptions = [\n      eventEmitter\n        .observeEvent<JSX.Element>(events.userDeletionFailed)\n        .subscribe(({ eventName, eventValue }) => {\n          this.handleError(eventName, eventValue);\n        }),\n      eventEmitter\n        .observeEvent<JSX.Element>(events.membershipDeleteFailed)\n        .subscribe(({ eventName, eventValue }) => {\n          this.handleError(eventName, eventValue);\n        }),\n      eventEmitter\n        .observeEvent<JSX.Element>(events.membershipAddFailed)\n        .subscribe(({ eventName, eventValue }) => {\n          this.handleError(eventName, eventValue);\n        }),\n      eventEmitter\n        .observeEvent<JSX.Element>(events.userRoleChangeFailed)\n        .subscribe(({ eventName, eventValue }) => {\n          this.handleError(eventName, eventValue);\n        }),\n    ];\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  // When an error occurs, print it for 4 seconds then remove the message from the component state\n  handleError = (errorName, errorElement) => {\n    this.setState({\n      errors: [...this.state.errors, { errorName, errorElement }],\n    });\n    setTimeout(\n      () =>\n        this.setState({\n          errors: this.state.errors.filter(\n            (err) => err.errorName !== errorName\n          ),\n        }),\n      4000\n    );\n  };\n\n  toggleAllUsers = () => {\n    this.setState((state) => ({\n      selectedUsers: state.selectedUsers === 'all' ? 'none' : 'all',\n    }));\n  };\n\n  unselectAllUsers = () => {\n    this.setState({ selectedUsers: 'none' });\n  };\n\n  handleUserSelectedOnChange = (allUsersIds: string[]) => (userId: string) => {\n    this.setState((state) => {\n      let newSelectedUsers: string[] | 'none' | 'all' = 'none';\n\n      if (isArray(state.selectedUsers)) {\n        if (includes(state.selectedUsers, userId)) {\n          const userIds = state.selectedUsers.filter((item) => item !== userId);\n          newSelectedUsers = userIds.length > 0 ? userIds : 'none';\n        } else {\n          newSelectedUsers = [...state.selectedUsers, userId];\n        }\n      } else if (state.selectedUsers === 'none') {\n        newSelectedUsers = [userId];\n      } else if (isArray(allUsersIds)) {\n        newSelectedUsers = allUsersIds\n          .filter((user) => user !== userId)\n          .map((user) => user);\n      }\n\n      return { selectedUsers: newSelectedUsers };\n    });\n  };\n\n  render() {\n    const { users, groupType, groupId, search } = this.props;\n    const { selectedUsers, errors } = this.state;\n\n    if (isArray(users.usersList) && users.usersList.length === 0) {\n      return search ? (\n        <NoUsers noSuchSearchResult={true} />\n      ) : (\n        <NoUsers groupType={groupType} />\n      );\n    }\n\n    if (isArray(users.usersList) && users.usersList.length > 0) {\n      const allUsersIds = users.usersList.map((user) => user.id);\n\n      return (\n        <>\n          <UserTableActions\n            groupType={groupType}\n            groupId={groupId}\n            selectedUsers={selectedUsers}\n            allUsersIds={allUsersIds}\n            toggleSelectAll={this.toggleAllUsers}\n            unselectAll={this.unselectAllUsers}\n            deleteUsersFromGroup={this.props.deleteUsersFromGroup}\n          />\n\n          {errors &&\n            errors.length > 0 &&\n            errors.map((err) => (\n              <Error text={err.errorElement} key={err.errorName} />\n            ))}\n\n          <GetAuthUser>\n            {(authUser) => (\n              <UserTable\n                selectedUsers={selectedUsers}\n                handleSelect={this.handleUserSelectedOnChange(allUsersIds)}\n                authUser={authUser}\n                {...users}\n              />\n            )}\n          </GetAuthUser>\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default (inputProps: InputProps) => (\n  <GetUsers pageSize={20} {...inputProps}>\n    {(users) => <UserManager {...inputProps} users={users} />}\n  </GetUsers>\n);\n","// Libraries\nimport React, { PureComponent, FormEvent } from 'react';\nimport { isNilOrError } from 'utils/helperUtils';\nimport { isArray, isNil, omitBy, includes } from 'lodash-es';\nimport { saveAs } from 'file-saver';\n\n// Components\nimport Checkbox from 'components/UI/Checkbox';\nimport { Icon, Dropdown } from 'cl2-component-library';\nimport T from 'components/T';\nimport Button from 'components/UI/Button';\n\n// Services\nimport { IGroupData } from 'services/groups';\nimport {\n  addGroupMembership,\n  IGroupMembership,\n} from 'services/groupMemberships';\n\n// Utils\nimport { requestBlob } from 'utils/request';\nimport { API_PATH } from 'containers/App/constants';\nimport streams from 'utils/streams';\n\n// Events\nimport eventEmitter from 'utils/eventEmitter';\nimport events, { MembershipAdd } from './events';\n\n// tracking\nimport { trackEventByName } from 'utils/analytics';\nimport tracks from './tracks';\n\n// Resources\nimport GetGroups, {\n  GetGroupsChildProps,\n  MembershipType,\n} from 'resources/GetGroups';\n\n// I18n\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport messages from './messages';\n\n// Styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { rgba } from 'polished';\n\nconst TableOptions = styled.div`\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  padding-bottom: 15px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-bottom: 10px;\n  border-bottom: solid 1px ${colors.adminTextColor};\n  user-select: none;\n`;\n\nconst UserCount = styled.span`\n  color: ${colors.label};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  white-space: nowrap;\n  margin-left: 5px;\n`;\n\nconst SelectAllCheckbox = styled(Checkbox)`\n  flex: 0 1 auto;\n  position: relative;\n  padding-left: 4px;\n  padding-right: 4px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background: ${rgba(colors.adminTextColor, 0.1)};\n    color: ${colors.adminTextColor};\n    outline: none;\n  }\n`;\n\nconst SelectAllCheckboxLabel = styled.span`\n  flex: 0 1 auto;\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  padding-left: 0px;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 30px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  flex: 0 0 22px;\n  height: 22px;\n  margin-right: 10px;\n`;\n\nconst ActionButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  position: relative;\n`;\n\nconst DropdownListItemText = styled.div`\n  width: 80%;\n  flex: 1 1 auto;\n  color: ${colors.label};\n  font-size: ${fontSizes.base}px;\n  font-weight: 400;\n  line-height: normal;\n  text-align: left;\n  margin-right: 10px;\n`;\n\nconst DropdownList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nconst DropdownListItem = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0px;\n  margin-bottom: 4px;\n  padding: 10px;\n  background: #fff;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  outline: none;\n  cursor: pointer;\n  transition: all 80ms ease-out;\n\n  &.last {\n    margin-bottom: 0px;\n  }\n\n  &:hover,\n  &:focus,\n  &.selected {\n    background: ${colors.clDropdownHoverBackground};\n\n    ${DropdownListItemText} {\n      color: #000;\n    }\n  }\n`;\n\nconst DropdownFooterButton = styled(Button)`\n  .Button {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n`;\n\n// Typings\nimport { CLErrorsJSON } from 'typings';\nimport { isCLErrorJSON } from 'utils/errorUtils';\nimport { InjectedIntlProps } from 'react-intl';\n\ninterface InputProps {\n  groupType?: MembershipType;\n  selectedUsers: string[] | 'none' | 'all';\n  toggleSelectAll: () => void;\n  unselectAll: () => void;\n  allUsersIds: string[];\n  groupId?: string;\n  deleteUsersFromGroup?: (userIds: string[]) => void;\n}\n\ninterface DataProps {\n  manualGroups: GetGroupsChildProps;\n}\n\ninterface Props extends InputProps, DataProps {}\n\ninterface State {\n  dropdownOpened: boolean;\n  selectedGroupIds: string[];\n  processing: boolean;\n}\n\nclass UserTableActions extends PureComponent<Props & InjectedIntlProps, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpened: false,\n      selectedGroupIds: [],\n      processing: false,\n    };\n  }\n\n  toggleAllUsers = () => {\n    trackEventByName(tracks.toggleAllUsers.name);\n    this.props.toggleSelectAll();\n  };\n\n  exportUsers = async (event: FormEvent) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line no-useless-catch\n    try {\n      const {\n        allUsersIds,\n        selectedUsers,\n        groupId,\n        intl: { formatDate, formatMessage },\n      } = this.props;\n      const usersIds = selectedUsers === 'all' ? allUsersIds : selectedUsers;\n      const apiPath = `${API_PATH}/users/as_xlsx`;\n      const fileType =\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n      const group = groupId;\n      const users = isArray(usersIds) ? usersIds : null;\n      const queryParameters = omitBy({ group, users }, isNil);\n      const blob = await requestBlob(apiPath, fileType, queryParameters);\n      saveAs(\n        blob,\n        `${formatMessage(messages.userExportFileName)}_${formatDate(\n          Date.now()\n        )}.xlsx`\n      );\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  getchoices = (groupsList: IGroupData[]) => {\n    return groupsList.map((group) => ({\n      text: group.attributes.title_multiloc,\n      id: group.id,\n    }));\n  };\n\n  toggleDropdown = (event: React.FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.setState(({ dropdownOpened }) => ({\n      selectedGroupIds: [],\n      dropdownOpened: !dropdownOpened,\n    }));\n  };\n\n  toggleGroup = (groupId: string) => (\n    event: React.ChangeEvent | React.MouseEvent\n  ) => {\n    event.preventDefault();\n\n    const { selectedGroupIds } = this.state;\n\n    if (!includes(selectedGroupIds, groupId)) {\n      this.setState({\n        selectedGroupIds: [...this.state.selectedGroupIds, groupId],\n      });\n    } else {\n      this.setState({\n        selectedGroupIds: selectedGroupIds.filter(\n          (selectedGroupId) => selectedGroupId !== groupId\n        ),\n      });\n    }\n  };\n\n  addUsersToGroups = async () => {\n    const { selectedGroupIds } = this.state;\n\n    if (selectedGroupIds && selectedGroupIds.length > 0) {\n      const { allUsersIds, selectedUsers } = this.props;\n      const usersIds = selectedUsers === 'all' ? allUsersIds : selectedUsers;\n      const promises: Promise<IGroupMembership | CLErrorsJSON>[] = [];\n      const timeout = (ms) => new Promise((res) => setTimeout(res, ms));\n      const success = () => {\n        eventEmitter.emit<MembershipAdd>(events.membershipAdd, {\n          groupsIds: selectedGroupIds,\n        });\n        this.props.unselectAll();\n        this.setState({\n          selectedGroupIds: [],\n          processing: false,\n          dropdownOpened: false,\n        });\n      };\n      const failed = () => {\n        eventEmitter.emit<JSX.Element>(\n          events.membershipAddFailed,\n          <FormattedMessage {...messages.membershipAddFailed} />\n        );\n        this.setState({ processing: false });\n      };\n\n      trackEventByName(tracks.addUsersToGroup.name, {\n        extra: {\n          usersIds,\n          selectedGroupIds,\n        },\n      });\n\n      if (isArray(usersIds)) {\n        selectedGroupIds.forEach((groupId) => {\n          usersIds.forEach((userId) => {\n            promises.push(addGroupMembership(groupId, userId));\n          });\n        });\n      }\n\n      try {\n        this.setState({ processing: true });\n        await Promise.all(promises);\n        await timeout(1000);\n        await streams.fetchAllWith({ apiEndpoint: [`${API_PATH}/groups`] });\n        success();\n        return true;\n      } catch (error) {\n        trackEventByName(tracks.addedRedundantUserToGroup.name, {\n          extra: {\n            errorResponse: error,\n          },\n        });\n\n        // if error because users already part of group(s)\n        if (\n          isCLErrorJSON(error) &&\n          error.json.errors.user.filter((val) => val.error !== 'taken')\n            .length === 0 &&\n          !error.json.errors.group\n        ) {\n          await streams.fetchAllWith({ apiEndpoint: [`${API_PATH}/groups`] });\n          success();\n          return true;\n        } else {\n          failed();\n          throw error;\n        }\n      }\n    }\n\n    return;\n  };\n\n  handleGroupsDeleteClick = () => {\n    const { deleteUsersFromGroup, selectedUsers, allUsersIds } = this.props;\n    const usersIds = selectedUsers === 'all' ? allUsersIds : selectedUsers;\n\n    if (Array.isArray(usersIds) && deleteUsersFromGroup) {\n      deleteUsersFromGroup(usersIds);\n    }\n  };\n\n  render() {\n    const { selectedUsers, groupType, groupId, allUsersIds } = this.props;\n    const { dropdownOpened, selectedGroupIds, processing } = this.state;\n    const { groupsList } = this.props.manualGroups;\n\n    let selectedCount;\n\n    if (selectedUsers === 'all') {\n      selectedCount = allUsersIds.length;\n    } else if (selectedUsers === 'none') {\n      selectedCount = 0;\n    } else {\n      selectedCount = selectedUsers.length;\n    }\n\n    const exportType =\n      selectedUsers === 'none' && !groupId\n        ? 'exportAllUsers'\n        : selectedUsers === 'none' && groupId\n        ? 'exportGroup'\n        : 'exportSelectedUsers';\n\n    return (\n      <TableOptions>\n        <SelectAllCheckbox\n          label={\n            <SelectAllCheckboxLabel>\n              <FormattedMessage {...messages.select} />\n              {selectedCount > 0 && (\n                <UserCount className=\"e2e-selected-count\">\n                  ({selectedCount})\n                </UserCount>\n              )}\n            </SelectAllCheckboxLabel>\n          }\n          checked={selectedUsers === 'all'}\n          indeterminate={isArray(selectedUsers) && selectedUsers.length > 0}\n          onChange={this.toggleAllUsers}\n        />\n        <ActionButtons>\n          {selectedUsers !== 'none' && !isNilOrError(groupsList) && (\n            <ActionButtonWrapper>\n              <Button\n                className=\"e2e-move-users\"\n                onClick={this.toggleDropdown}\n                buttonStyle=\"admin-dark-text\"\n              >\n                <StyledIcon name=\"moveFolder\" />\n                <FormattedMessage {...messages.moveUsersTableAction} />\n              </Button>\n\n              <Dropdown\n                width=\"300px\"\n                top=\"45px\"\n                left=\"0px\"\n                opened={dropdownOpened}\n                onClickOutside={this.toggleDropdown}\n                content={\n                  <DropdownList>\n                    {groupsList.map((group) => (\n                      <DropdownListItem\n                        key={group.id}\n                        onClick={this.toggleGroup(group.id)}\n                        className=\"e2e-dropdown-item\"\n                      >\n                        <DropdownListItemText>\n                          <T value={group.attributes.title_multiloc} />\n                        </DropdownListItemText>\n                        <Checkbox\n                          checked={includes(selectedGroupIds, group.id)}\n                          onChange={this.toggleGroup(group.id)}\n                        />\n                      </DropdownListItem>\n                    ))}\n                  </DropdownList>\n                }\n                footer={\n                  <DropdownFooterButton\n                    className=\"e2e-dropdown-submit\"\n                    buttonStyle=\"cl-blue\"\n                    onClick={this.addUsersToGroups}\n                    processing={processing}\n                    fullWidth={true}\n                    padding=\"12px\"\n                    whiteSpace=\"normal\"\n                    disabled={\n                      !selectedGroupIds || selectedGroupIds.length === 0\n                    }\n                  >\n                    <FormattedMessage {...messages.moveUsersButton} />\n                  </DropdownFooterButton>\n                }\n              />\n            </ActionButtonWrapper>\n          )}\n\n          {groupType === 'manual' && selectedUsers !== 'none' && (\n            <Button\n              onClick={this.handleGroupsDeleteClick}\n              className=\"hasLeftMargin\"\n              buttonStyle=\"admin-dark-text\"\n            >\n              <StyledIcon name=\"trash\" />\n              <FormattedMessage {...messages.membershipDelete} />\n            </Button>\n          )}\n\n          <Button\n            onClick={this.exportUsers}\n            className={`export e2e-${exportType} hasLeftMargin`}\n            buttonStyle=\"admin-dark-text\"\n          >\n            <StyledIcon name=\"userExport\" />\n            <FormattedMessage {...messages[exportType]} />\n          </Button>\n        </ActionButtons>\n      </TableOptions>\n    );\n  }\n}\n\nconst UserTableActionsWithHocs = injectIntl(UserTableActions);\n\nexport default (inputProps: InputProps) => (\n  <GetGroups membershipType=\"manual\">\n    {(manualGroups) => (\n      <UserTableActionsWithHocs {...inputProps} manualGroups={manualGroups} />\n    )}\n  </GetGroups>\n);\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'cl2-component-library';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { rgba } from 'polished';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ContainerInner = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ChevronIcon = styled(Icon)`\n  height: 12px;\n  fill: ${colors.adminTextColor};\n`;\n\nconst NavigateButton = styled.button`\n  width: 38px;\n  height: 38px;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  &.disabled {\n    color: #bbb;\n    cursor: not-allowed;\n\n    ${ChevronIcon} {\n      fill: #bbb;\n    }\n  }\n\n  &:not(.disabled) {\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      ${ChevronIcon} {\n        fill: ${colors.clIconAccent};\n      }\n    }\n  }\n`;\n\nconst Next = styled(NavigateButton)``;\n\nconst Back = styled(NavigateButton)`\n  ${ChevronIcon} {\n    transform: rotate(180deg);\n  }\n`;\n\nconst Pages = styled.div`\n  margin-left: 14px;\n  margin-right: 14px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.button<{ useColorsTheme?: boolean }>`\n  min-width: 38px;\n  height: 38px;\n  color: ${({ useColorsTheme, theme }) =>\n    useColorsTheme ? theme.colorText : colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin-left: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  transition: all 80ms ease-out;\n\n  &:first-child {\n    margin-left: 0px;\n  }\n\n  &:not(.disabled) {\n    border-radius: ${(props: any) => props.theme.borderRadius};\n    background: ${colors.lightGreyishBlue};\n    cursor: pointer;\n\n    &.active {\n      color: #fff;\n      background: ${({ useColorsTheme, theme }) =>\n        useColorsTheme ? theme.colorMain : colors.adminTextColor};\n    }\n\n    &:not(.active) {\n      &:hover,\n      &:focus {\n        background: ${({ useColorsTheme, theme }) =>\n          rgba(useColorsTheme ? theme.colorMain : colors.adminTextColor, 0.2)};\n      }\n    }\n  }\n`;\n\nexport interface Props {\n  currentPage: number;\n  totalPages: number;\n  loadPage: (page: number) => void;\n  className?: string;\n  useColorsTheme?: boolean;\n}\n\nclass Pagination extends PureComponent<Props> {\n  calculateMenuItems(currentPage: number, totalPages: number) {\n    const current = currentPage;\n    const last = totalPages;\n    const delta = 2;\n    const left = current - delta;\n    const right = current + delta + 1;\n    const range: number[] = [];\n    const rangeWithDots: number[] = [];\n    let l: number;\n\n    for (let i = 1; i <= last; i += 1) {\n      if (i === 1 || i === last || (i >= left && i < right)) {\n        range.push(i);\n      }\n    }\n\n    range.forEach((i) => {\n      if (l) {\n        if (i - l === 2) {\n          rangeWithDots.push(l + 1);\n        } else if (i - l !== 1) {\n          rangeWithDots.push(-i);\n        }\n      }\n\n      rangeWithDots.push(i);\n\n      l = i;\n    });\n\n    return rangeWithDots;\n  }\n\n  handleItemClick = (item: number) => () => {\n    this.props.loadPage(item);\n  };\n\n  goTo = (page: number) => () => {\n    if (page > 0 && page <= this.props.totalPages) {\n      this.props.loadPage(page);\n    }\n  };\n\n  removeFocus = (event: React.MouseEvent) => {\n    event.preventDefault();\n  };\n\n  render() {\n    const { currentPage, totalPages, className, useColorsTheme } = this.props;\n    const pageItems = this.calculateMenuItems(currentPage, totalPages);\n\n    if (totalPages > 1) {\n      return (\n        <Container className={className} data-testid=\"pagination\">\n          <ContainerInner>\n            <Back\n              onMouseDown={this.removeFocus}\n              onClick={this.goTo(currentPage - 1)}\n              disabled={currentPage === 1}\n              className={currentPage === 1 ? 'disabled' : ''}\n            >\n              <ChevronIcon name=\"chevron-right\" />\n            </Back>\n\n            <Pages>\n              {pageItems.map((item) => (\n                <Item\n                  key={item}\n                  className={`${item === currentPage ? 'active' : ''} ${\n                    item < 0 ? 'disabled' : ''\n                  }`}\n                  onMouseDown={this.removeFocus}\n                  onClick={this.handleItemClick(item)}\n                  disabled={item < 0}\n                  useColorsTheme={useColorsTheme}\n                >\n                  <span>{item < 0 ? '...' : item.toString()}</span>\n                </Item>\n              ))}\n            </Pages>\n\n            <Next\n              onMouseDown={this.removeFocus}\n              onClick={this.goTo(currentPage + 1)}\n              disabled={currentPage === totalPages}\n              className={currentPage === totalPages ? 'disabled' : ''}\n            >\n              <ChevronIcon name=\"chevron-right\" />\n            </Next>\n          </ContainerInner>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Pagination;\n","import { IGroupData } from 'services/groups';\n\nenum UsersEvents {\n  membershipAdd = 'UserAddedToGroup',\n  membershipAddFailed = 'UserAddedToGroupFailed',\n  userDeletionFailed = 'UserDeleteFailed',\n  membershipDeleteFailed = 'UserDeletedFromGroupFailed',\n  userRoleChangeFailed = 'UserRoleChangedFailed',\n}\n\nexport interface MembershipAdd {\n  groupsIds: IGroupData['id'][];\n}\n\nexport default UsersEvents;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from 'utils/styleUtils';\nimport { Icon } from 'cl2-component-library';\nimport { isString } from 'lodash-es';\n\nconst StyledIcon = styled(Icon)`\n  height: 7px;\n  width: 10px;\n  margin-left: 5px;\n  margin-top: -2px;\n\n  &.ascending {\n    transform: rotate(180deg);\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  user-select: none;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.clIconAccent};\n  }\n`;\n\ninterface Props {\n  value: string | JSX.Element;\n  sorted: 'ascending' | 'descending' | null;\n  onClick: () => void;\n  className?: string;\n}\n\ninterface State {}\n\nexport default class SortableTableHeaderCell extends React.PureComponent<\n  Props,\n  State\n> {\n  onClick = (event: React.MouseEvent) => {\n    event.preventDefault();\n    this.props.onClick();\n  };\n\n  render() {\n    const { value, sorted, className } = this.props;\n\n    return (\n      <Container\n        className={`${className ? className : ''} ${sorted ? 'active' : ''}`}\n        onClick={this.onClick}\n      >\n        {isString(value) ? <span>{value}</span> : value}\n        {sorted && <StyledIcon name=\"dropdown\" className={sorted} />}\n      </Container>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent, FormEvent } from 'react';\nimport { isAdmin } from 'services/permissions/roles';\nimport moment from 'moment';\nimport clHistory from 'utils/cl-router/history';\n\n// Components\nimport Avatar from 'components/Avatar';\nimport { Toggle, Icon } from 'cl2-component-library';\nimport Checkbox from 'components/UI/Checkbox';\nimport Tippy from '@tippyjs/react';\n\n// Translation\nimport { FormattedMessage, injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\n// Events --- For error handling\nimport eventEmitter from 'utils/eventEmitter';\nimport events from './events';\n\n// Services\nimport { IUserData, deleteUser } from 'services/users';\n\n// Typings\nimport { GetAuthUserChildProps } from 'resources/GetAuthUser';\n\n// Styling\nimport styled from 'styled-components';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { lighten } from 'polished';\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin-left: 5px;\n`;\n\nconst MoreOptionsWrapper = styled.div`\n  width: 20px;\n  position: relative;\n`;\n\nconst MoreOptionsIcon = styled(Icon)`\n  width: 20px;\n  height: 20px;\n  fill: ${colors.adminSecondaryTextColor};\n`;\n\nconst MoreOptionsButton = styled.button`\n  width: 25px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n\n  &:hover ${MoreOptionsIcon} {\n    fill: #000;\n  }\n`;\n\nconst CreatedAt = styled.td`\n  white-space: nowrap;\n`;\n\nconst DropdownList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nconst DropdownListButton = styled.button`\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${colors.adminLightText};\n  font-size: ${fontSizes.small}px;\n  font-weight: 400;\n  white-space: nowrap;\n  padding: 10px;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n  cursor: pointer;\n  white-space: nowrap;\n\n  &:hover,\n  &:focus {\n    outline: none;\n    color: white;\n    background: ${lighten(0.1, colors.adminMenuBackground)};\n  }\n`;\n\nconst IconWrapper = styled.div`\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 10px;\n\n  .cl-icon {\n    height: 100%;\n  }\n\n  .cl-icon-primary,\n  .cl-icon-secondary,\n  .cl-icon-accent {\n    fill: currentColor;\n  }\n`;\n\ninterface Props {\n  user: IUserData;\n  selected: boolean;\n  toggleSelect: () => void;\n  toggleAdmin: () => void;\n  authUser: GetAuthUserChildProps;\n}\n\ninterface State {\n  isAdmin: boolean;\n  createdAt: string;\n}\n\nclass UserTableRow extends PureComponent<Props & InjectedIntlProps, State> {\n  constructor(props: Props & InjectedIntlProps) {\n    super(props);\n    this.state = {\n      isAdmin: isAdmin({ data: this.props.user }),\n      createdAt: moment(this.props.user.attributes.created_at).format('LL'),\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, _prevState: State) {\n    return {\n      isAdmin: isAdmin({ data: nextProps.user }),\n      createdAt: moment(nextProps.user.attributes.created_at).format('LL'),\n    };\n  }\n\n  isUserAdmin = () => {\n    return isAdmin({ data: this.props.user });\n  };\n\n  handleUserSelectedOnChange = () => {\n    this.props.toggleSelect();\n  };\n\n  handleAdminRoleOnChange = () => {\n    this.props.toggleAdmin();\n  };\n\n  handleDeleteClick = (event: FormEvent) => {\n    const { authUser, user } = this.props;\n    const deleteMessage = this.props.intl.formatMessage(\n      messages.userDeletionConfirmation\n    );\n\n    event.preventDefault();\n\n    if (window.confirm(deleteMessage)) {\n      if (authUser && authUser.id === user.id) {\n        eventEmitter.emit<JSX.Element>(\n          events.userDeletionFailed,\n          <FormattedMessage {...messages.youCantDeleteYourself} />\n        );\n      } else {\n        deleteUser(user.id).catch(() => {\n          eventEmitter.emit<JSX.Element>(\n            events.userDeletionFailed,\n            <FormattedMessage {...messages.userDeletionFailed} />\n          );\n        });\n      }\n    }\n  };\n\n  goToUserProfile = (slug: string) => (event: FormEvent) => {\n    event.preventDefault();\n    clHistory.push(`/profile/${slug}`);\n  };\n\n  removeFocus = (event: React.MouseEvent) => {\n    event.preventDefault();\n  };\n\n  render() {\n    const { user, selected } = this.props;\n    const { isAdmin } = this.state;\n\n    return (\n      <tr\n        key={user.id}\n        className={`e2e-user-table-row ${selected ? 'selected' : ''}`}\n      >\n        <td>\n          <StyledCheckbox\n            checked={selected}\n            onChange={this.handleUserSelectedOnChange}\n          />\n        </td>\n        <td>\n          <Avatar userId={user.id} size={30} />\n        </td>\n        <td>\n          {user.attributes.first_name} {user.attributes.last_name}\n        </td>\n        <td>{user.attributes.email}</td>\n        <CreatedAt>{this.state.createdAt}</CreatedAt>\n        <td>\n          <Toggle checked={isAdmin} onChange={this.handleAdminRoleOnChange} />\n        </td>\n        <td>\n          <MoreOptionsWrapper>\n            <Tippy\n              placement=\"bottom-end\"\n              interactive={true}\n              trigger=\"click\"\n              duration={[200, 0]}\n              content={\n                <DropdownList>\n                  <DropdownListButton\n                    onClick={this.goToUserProfile(\n                      this.props.user.attributes.slug\n                    )}\n                  >\n                    <FormattedMessage {...messages.seeProfile} />\n                    <IconWrapper>\n                      <Icon name=\"eye\" />\n                    </IconWrapper>\n                  </DropdownListButton>\n                  <DropdownListButton onClick={this.handleDeleteClick}>\n                    <FormattedMessage {...messages.deleteUser} />\n                    <IconWrapper>\n                      <Icon name=\"trash\" />\n                    </IconWrapper>\n                  </DropdownListButton>\n                </DropdownList>\n              }\n            >\n              <MoreOptionsButton onMouseDown={this.removeFocus}>\n                <MoreOptionsIcon name=\"more-options\" />\n              </MoreOptionsButton>\n            </Tippy>\n          </MoreOptionsWrapper>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default injectIntl(UserTableRow);\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { fontSizes, colors } from 'utils/styleUtils';\nimport { darken } from 'polished';\n\nconst StyledTable = styled.table`\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-spacing: 0;\n  border-collapse: collapse;\n  table-layout: auto;\n\n  th,\n  td {\n    padding: 0;\n    margin: 0;\n  }\n\n  thead {\n    tr {\n      th {\n        fill: ${colors.text};\n        color: ${colors.adminTextColor};\n        font-size: ${fontSizes.small}px;\n        font-weight: 600;\n        text-align: left;\n        text-transform: uppercase;\n        line-height: normal;\n        padding-top: 0px;\n        padding-bottom: 15px;\n        border-bottom: solid 1px #ddd;\n\n        div {\n          display: flex;\n          align-items: center;\n        }\n      }\n    }\n  }\n\n  tbody {\n    tr {\n      border-radius: ${(props: any) => props.theme.borderRadius};\n      border-bottom: solid 1px #ccc;\n\n      td {\n        color: ${colors.adminTextColor};\n        font-size: ${fontSizes.small}px;\n        font-weight: 400;\n        line-height: normal;\n        text-align: left;\n        padding-top: 15px;\n        padding-bottom: 15px;\n\n        &.center {\n          justify-content: center;\n        }\n\n        a {\n          color: ${colors.clBlue};\n          text-decoration: underline;\n\n          &:hover {\n            color: ${darken(0.2, colors.clBlue)};\n            text-decoration: underline;\n          }\n        }\n      }\n    }\n  }\n\n  tfoot {\n    display: flex;\n\n    tr {\n      display: flex;\n\n      td {\n        display: flex;\n      }\n    }\n  }\n`;\n\ninterface Props {\n  className?: string;\n}\n\ninterface State {}\n\nexport default class Table extends PureComponent<Props, State> {\n  render() {\n    const { children, className } = this.props;\n\n    return (\n      <StyledTable cellSpacing=\"0\" cellPadding=\"0\" className={className}>\n        {children}\n      </StyledTable>\n    );\n  }\n}\n"],"sourceRoot":""}