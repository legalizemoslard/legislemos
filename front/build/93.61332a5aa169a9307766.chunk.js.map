{"version":3,"sources":["webpack:///./app/containers/EventsPage/index.tsx","webpack:///./app/containers/EventsPage/PastEvents.tsx","webpack:///./app/components/Pagination/index.tsx","webpack:///./app/containers/EventsPage/EventsPageMeta.tsx","webpack:///./app/containers/EventsPage/EventsViewer/index.tsx","webpack:///./app/components/PageMeta/index.tsx","webpack:///./app/components/ProjectFilterDropdown/index.tsx","webpack:///./app/containers/EventsPage/EventsViewer/TopBar.tsx","webpack:///./app/containers/EventsPage/UpcomingEvents.tsx","webpack:///./app/components/SectionContainer/index.tsx"],"names":["StyledContentContainer","ContentContainer","props","theme","maxPageWidth","injectIntl","intl","title","formatMessage","messages","pastEvents","fallbackMessage","noPastEvents","eventsTime","Container","styled","div","ContainerInner","ChevronIcon","Icon","colors","adminTextColor","NavigateButton","button","fontSizes","base","borderRadius","clIconAccent","Next","Back","Pages","Item","useColorsTheme","colorText","lightGreyishBlue","colorMain","rgba","item","loadPage","page","totalPages","event","preventDefault","currentPage","l","last","left","right","range","rangeWithDots","i","push","forEach","this","className","pageItems","calculateMenuItems","onMouseDown","removeFocus","onClick","goTo","disabled","name","map","key","handleItemClick","toString","PureComponent","titleMessage","eventsPageTitle","descriptionMessage","eventsPageDescription","StyledEventCard","EventCard","StyledPagination","Pagination","memo","projectPublicationStatuses","futureOnly","pastOnly","sort","events","lastPage","onProjectIdsChange","onCurrentPageChange","eventsLoading","isNil","eventsError","isError","setProjectIds","message","errorWhenFetchingEvents","isNilOrError","length","showProjectTitle","onClickTitleGoToProjectAndScrollToEvent","showLocation","showDescription","showAttachments","id","PageMeta","React","authUser","tenantLocales","location","window","ideasIndexTitle","ideasIndexDescription","Helmet","attributes","unread_notifications","content","property","href","ProjectFilterDropdown","selectedValues","setState","onChange","state","projects","localize","textColor","projectsList","options","project","text","title_multiloc","value","selected","values","handleOnChange","multipleSelectionAllowed","mobileLeft","Data","adopt","publicationStatuses","ProjectFilterDropdownWithLocalize","inputProps","dataProps","Title","h1","xxl","ProjectFilterDropdownPositioner","FilterIcon","TopBar","useTheme","filterDropdownTitle","StyledEventsViewer","EventsViewer","upcomingEvents","noUpcomingEvents","section","media","smallerThanMinTablet"],"mappings":"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","file":"93.61332a5aa169a9307766.chunk.js","sourcesContent":["import React from 'react';\n\n// components\nimport EventsPageMeta from './EventsPageMeta';\nimport SectionContainer from 'components/SectionContainer';\nimport ContentContainer from 'components/ContentContainer';\nimport UpcomingEvents from './UpcomingEvents';\nimport PastEvents from './PastEvents';\n\n// styling\nimport styled from 'styled-components';\n\nconst StyledContentContainer = styled(ContentContainer)`\n  max-width: calc(${(props) => props.theme.maxPageWidth}px - 100px);\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport default () => (\n  <>\n    <EventsPageMeta />\n\n    <SectionContainer>\n      <StyledContentContainer>\n        <UpcomingEvents />\n        <PastEvents />\n      </StyledContentContainer>\n    </SectionContainer>\n  </>\n);\n","import React from 'react';\nimport EventsViewer from './EventsViewer';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\nexport default injectIntl<InjectedIntlProps>(({ intl }) => (\n  <EventsViewer\n    title={intl.formatMessage(messages.pastEvents)}\n    fallbackMessage={messages.noPastEvents}\n    eventsTime=\"past\"\n  />\n));\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'cl2-component-library';\nimport { colors, fontSizes } from 'utils/styleUtils';\nimport { rgba } from 'polished';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ContainerInner = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ChevronIcon = styled(Icon)`\n  height: 12px;\n  fill: ${colors.adminTextColor};\n`;\n\nconst NavigateButton = styled.button`\n  width: 38px;\n  height: 38px;\n  color: ${colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${(props: any) => props.theme.borderRadius};\n\n  &.disabled {\n    color: #bbb;\n    cursor: not-allowed;\n\n    ${ChevronIcon} {\n      fill: #bbb;\n    }\n  }\n\n  &:not(.disabled) {\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      ${ChevronIcon} {\n        fill: ${colors.clIconAccent};\n      }\n    }\n  }\n`;\n\nconst Next = styled(NavigateButton)``;\n\nconst Back = styled(NavigateButton)`\n  ${ChevronIcon} {\n    transform: rotate(180deg);\n  }\n`;\n\nconst Pages = styled.div`\n  margin-left: 14px;\n  margin-right: 14px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.button<{ useColorsTheme?: boolean }>`\n  min-width: 38px;\n  height: 38px;\n  color: ${({ useColorsTheme, theme }) =>\n    useColorsTheme ? theme.colorText : colors.adminTextColor};\n  font-size: ${fontSizes.base}px;\n  font-weight: 500;\n  margin-left: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  transition: all 80ms ease-out;\n\n  &:first-child {\n    margin-left: 0px;\n  }\n\n  &:not(.disabled) {\n    border-radius: ${(props: any) => props.theme.borderRadius};\n    background: ${colors.lightGreyishBlue};\n    cursor: pointer;\n\n    &.active {\n      color: #fff;\n      background: ${({ useColorsTheme, theme }) =>\n        useColorsTheme ? theme.colorMain : colors.adminTextColor};\n    }\n\n    &:not(.active) {\n      &:hover,\n      &:focus {\n        background: ${({ useColorsTheme, theme }) =>\n          rgba(useColorsTheme ? theme.colorMain : colors.adminTextColor, 0.2)};\n      }\n    }\n  }\n`;\n\nexport interface Props {\n  currentPage: number;\n  totalPages: number;\n  loadPage: (page: number) => void;\n  className?: string;\n  useColorsTheme?: boolean;\n}\n\nclass Pagination extends PureComponent<Props> {\n  calculateMenuItems(currentPage: number, totalPages: number) {\n    const current = currentPage;\n    const last = totalPages;\n    const delta = 2;\n    const left = current - delta;\n    const right = current + delta + 1;\n    const range: number[] = [];\n    const rangeWithDots: number[] = [];\n    let l: number;\n\n    for (let i = 1; i <= last; i += 1) {\n      if (i === 1 || i === last || (i >= left && i < right)) {\n        range.push(i);\n      }\n    }\n\n    range.forEach((i) => {\n      if (l) {\n        if (i - l === 2) {\n          rangeWithDots.push(l + 1);\n        } else if (i - l !== 1) {\n          rangeWithDots.push(-i);\n        }\n      }\n\n      rangeWithDots.push(i);\n\n      l = i;\n    });\n\n    return rangeWithDots;\n  }\n\n  handleItemClick = (item: number) => () => {\n    this.props.loadPage(item);\n  };\n\n  goTo = (page: number) => () => {\n    if (page > 0 && page <= this.props.totalPages) {\n      this.props.loadPage(page);\n    }\n  };\n\n  removeFocus = (event: React.MouseEvent) => {\n    event.preventDefault();\n  };\n\n  render() {\n    const { currentPage, totalPages, className, useColorsTheme } = this.props;\n    const pageItems = this.calculateMenuItems(currentPage, totalPages);\n\n    if (totalPages > 1) {\n      return (\n        <Container className={className} data-testid=\"pagination\">\n          <ContainerInner>\n            <Back\n              onMouseDown={this.removeFocus}\n              onClick={this.goTo(currentPage - 1)}\n              disabled={currentPage === 1}\n              className={currentPage === 1 ? 'disabled' : ''}\n            >\n              <ChevronIcon name=\"chevron-right\" />\n            </Back>\n\n            <Pages>\n              {pageItems.map((item) => (\n                <Item\n                  key={item}\n                  className={`${item === currentPage ? 'active' : ''} ${\n                    item < 0 ? 'disabled' : ''\n                  }`}\n                  onMouseDown={this.removeFocus}\n                  onClick={this.handleItemClick(item)}\n                  disabled={item < 0}\n                  useColorsTheme={useColorsTheme}\n                >\n                  <span>{item < 0 ? '...' : item.toString()}</span>\n                </Item>\n              ))}\n            </Pages>\n\n            <Next\n              onMouseDown={this.removeFocus}\n              onClick={this.goTo(currentPage + 1)}\n              disabled={currentPage === totalPages}\n              className={currentPage === totalPages ? 'disabled' : ''}\n            >\n              <ChevronIcon name=\"chevron-right\" />\n            </Next>\n          </ContainerInner>\n        </Container>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Pagination;\n","import React from 'react';\nimport PageMeta from 'components/PageMeta';\nimport messages from './messages';\n\nexport default () => (\n  <PageMeta\n    titleMessage={messages.eventsPageTitle}\n    descriptionMessage={messages.eventsPageDescription}\n  />\n);\n","import React, { memo } from 'react';\n\n// components\nimport TopBar from './TopBar';\nimport EventsMessage from './EventsMessage';\nimport EventsSpinner from './EventsSpinner';\nimport EventCard from 'components/EventCard';\nimport Pagination from 'components/Pagination';\n\n// i18n\nimport messages from '../messages';\nimport { MessageDescriptor } from 'utils/cl-intl';\n\n// hooks\nimport useEvents from 'hooks/useEvents';\n\n// styling\nimport styled from 'styled-components';\n\n// other\nimport { isNilOrError, isNil, isError } from 'utils/helperUtils';\n\ninterface IStyledEventCard {\n  last: boolean;\n}\n\nconst StyledEventCard = styled(EventCard)<IStyledEventCard>`\n  margin-bottom: ${({ last }) => (last ? 0 : 39)}px;\n`;\n\nconst StyledPagination = styled(Pagination)`\n  justify-content: center;\n  margin: 36px auto 0px;\n`;\n\ninterface Props {\n  title: string;\n  fallbackMessage: MessageDescriptor;\n  eventsTime: 'past' | 'future';\n  className?: string;\n}\n\nconst EventsViewer = memo<Props>(\n  ({ title, fallbackMessage, eventsTime, className }) => {\n    const {\n      events,\n      currentPage,\n      lastPage,\n      onProjectIdsChange,\n      onCurrentPageChange,\n    } = useEvents({\n      projectPublicationStatuses: ['published'],\n      futureOnly: eventsTime === 'future',\n      pastOnly: eventsTime === 'past',\n      sort: eventsTime === 'past' ? 'newest' : 'oldest',\n    });\n\n    const eventsLoading = isNil(events);\n    const eventsError = isError(events);\n\n    return (\n      <div className={className}>\n        <TopBar title={title} setProjectIds={onProjectIdsChange} />\n\n        {eventsError && (\n          <EventsMessage message={messages.errorWhenFetchingEvents} />\n        )}\n        {eventsLoading && <EventsSpinner />}\n\n        {!isNilOrError(events) && (\n          <>\n            {events.length > 0 &&\n              events.map((event, i) => (\n                <StyledEventCard\n                  event={event}\n                  showProjectTitle\n                  onClickTitleGoToProjectAndScrollToEvent\n                  showLocation\n                  showDescription\n                  showAttachments\n                  last={events.length - 1 === i}\n                  key={event.id}\n                />\n              ))}\n\n            {events.length === 0 && <EventsMessage message={fallbackMessage} />}\n\n            <StyledPagination\n              currentPage={currentPage}\n              totalPages={lastPage}\n              loadPage={onCurrentPageChange}\n              useColorsTheme\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default EventsViewer;\n","// libraries\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { isError } from 'lodash-es';\n\n// i18n\nimport { injectIntl, MessageDescriptor } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\n\n// hooks\nimport useAuthUser from 'hooks/useAuthUser';\nimport useAppConfigurationLocales from 'hooks/useAppConfigurationLocales';\n\n// utils\nimport getAlternateLinks from 'utils/cl-router/getAlternateLinks';\nimport getCanonicalLink from 'utils/cl-router/getCanonicalLink';\n\ninterface Props {\n  titleMessage: MessageDescriptor;\n  descriptionMessage: MessageDescriptor;\n}\n\nconst PageMeta = React.memo<Props & InjectedIntlProps>(\n  ({ intl, titleMessage, descriptionMessage }) => {\n    const authUser = useAuthUser();\n    const tenantLocales = useAppConfigurationLocales();\n\n    const { formatMessage } = intl;\n    const { location } = window;\n    const ideasIndexTitle = formatMessage(titleMessage);\n    const ideasIndexDescription = formatMessage(descriptionMessage);\n\n    return (\n      <Helmet>\n        <title>\n          {`\n          ${\n            authUser &&\n            !isError(authUser) &&\n            authUser.attributes.unread_notifications\n              ? `(${authUser.attributes.unread_notifications}) `\n              : ''\n          }\n          ${ideasIndexTitle}`}\n        </title>\n        {getAlternateLinks(tenantLocales)}\n        {getCanonicalLink()}\n        <meta name=\"title\" content={ideasIndexTitle} />\n        <meta name=\"description\" content={ideasIndexDescription} />\n        <meta property=\"og:title\" content={ideasIndexTitle} />\n        <meta property=\"og:description\" content={ideasIndexDescription} />\n        <meta property=\"og:url\" content={location.href} />\n      </Helmet>\n    );\n  }\n);\n\nexport default injectIntl(PageMeta);\n","import React, { PureComponent } from 'react';\nimport { adopt } from 'react-adopt';\n\n// components\nimport FilterSelector from 'components/FilterSelector';\n\n// resources\nimport GetProjects, { GetProjectsChildProps } from 'resources/GetProjects';\n\n// i18n\nimport localize, { InjectedLocalized } from 'utils/localize';\n\ntype DataProps = {\n  projects: GetProjectsChildProps;\n};\n\ntype InputProps = {\n  title: string | JSX.Element;\n  onChange: (projectIds: string[]) => void;\n  className?: string;\n  textColor?: string;\n};\n\ntype Props = InputProps & DataProps;\n\ntype State = {\n  selectedValues: string[];\n};\n\nclass ProjectFilterDropdown extends PureComponent<\n  Props & InjectedLocalized,\n  State\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedValues: [],\n    };\n  }\n\n  handleOnChange = (selectedValues) => {\n    this.setState({ selectedValues });\n    this.props.onChange(selectedValues);\n  };\n\n  render() {\n    const { selectedValues } = this.state;\n    const { projects, localize, title, className, textColor } = this.props;\n    const projectsList = projects.projectsList;\n\n    if (projectsList && projectsList.length > 0) {\n      const options = projectsList.map((project) => {\n        return {\n          text: localize(project.attributes.title_multiloc),\n          value: project.id,\n        };\n      });\n\n      if (options && options.length > 0) {\n        return (\n          <FilterSelector\n            id=\"e2e-project-filter-selector\"\n            className={className}\n            title={title}\n            name=\"projects\"\n            selected={selectedValues}\n            values={options}\n            onChange={this.handleOnChange}\n            multipleSelectionAllowed={true}\n            right=\"-10px\"\n            mobileLeft=\"-5px\"\n            textColor={textColor}\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n}\n\nconst Data = adopt<DataProps, InputProps>({\n  projects: <GetProjects publicationStatuses={['published']} sort=\"new\" />,\n});\n\nconst ProjectFilterDropdownWithLocalize = localize(ProjectFilterDropdown);\n\nexport default (inputProps: InputProps) => (\n  <Data {...inputProps}>\n    {(dataProps) => (\n      <ProjectFilterDropdownWithLocalize {...dataProps} {...inputProps} />\n    )}\n  </Data>\n);\n","import React, { memo } from 'react';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from '../messages';\n\n// components\nimport ProjectFilterDropdown from 'components/ProjectFilterDropdown';\nimport { Icon } from 'cl2-component-library';\n\n// styling\nimport styled, { useTheme } from 'styled-components';\nimport { fontSizes } from 'utils/styleUtils';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 14px;\n  border-bottom: solid 1px #ccc;\n  margin-bottom: 29px;\n`;\n\nconst Title = styled.h1`\n  color: ${({ theme }) => theme.colorText};\n  font-size: ${fontSizes.xxl}px;\n  line-height: normal;\n  font-weight: 600;\n  text-align: left;\n  margin: 0;\n  padding: 0;\n  padding-top: 0px;\n`;\n\nconst ProjectFilterDropdownPositioner = styled.div`\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n`;\n\nconst FilterIcon = styled(Icon)`\n  width: 12px;\n  height: 12px;\n  fill: ${({ theme }) => theme.colorText};\n  margin-right: 3px;\n`;\n\ninterface Props {\n  title: string;\n  setProjectIds: (projectIds: string[]) => void;\n}\n\nconst TopBar = memo<Props & InjectedIntlProps>(\n  ({ title, setProjectIds, intl }) => {\n    const theme: any = useTheme();\n\n    return (\n      <Container>\n        <Title>{title}</Title>\n\n        <ProjectFilterDropdownPositioner>\n          <FilterIcon name=\"filter-funnel\" />\n          <ProjectFilterDropdown\n            title={intl.formatMessage(messages.filterDropdownTitle)}\n            onChange={setProjectIds}\n            textColor={theme.colorText}\n          />\n        </ProjectFilterDropdownPositioner>\n      </Container>\n    );\n  }\n);\n\nexport default injectIntl(TopBar);\n","import React from 'react';\nimport EventsViewer from './EventsViewer';\nimport styled from 'styled-components';\n\n// i18n\nimport { injectIntl } from 'utils/cl-intl';\nimport { InjectedIntlProps } from 'react-intl';\nimport messages from './messages';\n\nconst StyledEventsViewer = styled(EventsViewer)`\n  margin-bottom: 135px;\n`;\n\nexport default injectIntl<InjectedIntlProps>(({ intl }) => (\n  <StyledEventsViewer\n    title={intl.formatMessage(messages.upcomingEvents)}\n    fallbackMessage={messages.noUpcomingEvents}\n    eventsTime=\"future\"\n  />\n));\n","import styled from 'styled-components';\nimport { media } from 'utils/styleUtils';\n\nexport default styled.section`\n  padding-top: 60px;\n  padding-bottom: 80px;\n\n  ${media.smallerThanMinTablet`\n    padding-top: 45px;\n    padding-bottom: 45px;\n  `}\n`;\n"],"sourceRoot":""}